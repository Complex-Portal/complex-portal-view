{"version":3,"file":"src_app_basket_basket_module_ts-es2015.js","mappings":"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","sources":["./src/app/basket/basket.component.ts","./src/app/basket/basket.module.ts","./src/app/basket/basket.component.html"],"sourcesContent":["import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {BasketService} from '../shared/basket/service/basket.service';\nimport {BasketItem} from '../shared/basket/model/basketItem';\nimport {ProgressBarComponent} from '../shared/loading-indicators/progress-bar/progress-bar.component';\nimport {Title} from '@angular/platform-browser';\nimport {ComplexPortalService} from '../complex/shared/service/complex-portal.service';\nimport {ComplexSearchResult} from '../complex/shared/model/complex-results/complex-search.model';\nimport {Interactor} from '../complex/shared/model/complex-results/interactor.model';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {\n  COMPLEX_NAVIGATOR_VIEW,\n  LIST_VIEW\n} from '../complex/complex-results/complex-navigator/complex-list-display-buttons/complex-list-display-buttons.component';\n\n@Component({\n  selector: 'cp-basket',\n  templateUrl: './basket.component.html',\n  styleUrls: ['./basket.component.css']\n})\nexport class BasketComponent implements OnInit, AfterViewInit {\n  private _complexBasket: { [name: string]: BasketItem };\n  complexSearchBasket: ComplexSearchResult = null;\n  allInteractorsInComplexSearchBasket: Interactor[] = [];\n  DisplayType: string;\n\n  constructor(private _basketService: BasketService,\n              private titleService: Title,\n              private complexPortalService: ComplexPortalService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this._complexBasket = this._basketService.complexBasket;\n  }\n\n  ngOnInit() {\n    this.titleService.setTitle('Complex Portal - Basket');\n    this.complexNavigatorLoading();\n    this.route.fragment.subscribe(fragment => {\n      if (fragment === COMPLEX_NAVIGATOR_VIEW) {\n        this.DisplayType = COMPLEX_NAVIGATOR_VIEW;\n      } else {\n        this.DisplayType = LIST_VIEW;\n      }\n    });\n  }\n\n  onDisplayTypeChange(displayType: string) {\n    if (this.DisplayType !== displayType) {\n      this.DisplayType = displayType;\n      this.router.navigate([], {\n        fragment: this.DisplayType\n      });\n    }\n  }\n\n  isDisplayComplexNavigatorView(): boolean {\n    return this.DisplayType === COMPLEX_NAVIGATOR_VIEW;\n  }\n\n  ngAfterViewInit(): void {\n    ProgressBarComponent.hide();\n  }\n\n  deleteFromBasket(key: string): void {\n    this._basketService.deleteFromBasket(key);\n    this.complexNavigatorLoading();\n  }\n\n  deleteComplexFromBasket(complexAc: string): void {\n    for (const key of this.getKeys(this.complexBasket)) {\n      if (this.complexBasket[key].id === complexAc) {\n        this._basketService.deleteFromBasket(key);\n      }\n    }\n    this.complexNavigatorLoading();\n  }\n\n  get complexBasket(): { [name: string]: BasketItem } {\n    return this._complexBasket;\n  }\n\n  set complexBasket(value: { [name: string]: BasketItem }) {\n    this._complexBasket = value;\n  }\n\n  public isComplexBasketEmpty(): boolean {\n    return this.getKeys(this._complexBasket).length === 0;\n\n  }\n\n  // Candidate for Util\n  public getKeys(object: any) {\n    return Object.keys(object);\n  }\n\n  private createQuery(object: any): string {\n    return 'complex_id:(' + Object.values(object).map((v: BasketItem) => '\"' + v.id + '\"').join(',') + ')';\n  }\n\n  private requestComplexesForNavigator() {\n    const pageSize = Object.values(this._complexBasket).length;\n    this.complexPortalService.findComplexNoFilters(this.createQuery(this._complexBasket), 1, pageSize)\n      .subscribe(complexSearch => {\n        this.complexSearchBasket = complexSearch;\n        if (this.complexSearchBasket.totalNumberOfResults !== 0) {\n          for (let i = 0; i < complexSearch.elements.length; i++) {\n            for (const component of complexSearch.elements[i].interactors) {\n              if (!this.allInteractorsInComplexSearchBasket.some(interactor => interactor.identifier === component.identifier)) {\n                this.allInteractorsInComplexSearchBasket.push(component);\n              }\n            }\n          }\n        }\n      });\n  }\n\n  complexNavigatorLoading() {\n    this.complexSearchBasket = null;\n    this.allInteractorsInComplexSearchBasket = [];\n    this.requestComplexesForNavigator();\n  }\n\n  deleteAllComplexes() {\n    Object.values(this._complexBasket).map((v: BasketItem) => this.deleteComplexFromBasket(v.id));\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {BasketComponent} from './basket.component';\nimport {ComplexNavigatorModule} from '../complex/complex-results/complex-navigator/complex-navigator.module';\nimport {ProgressSpinnerModule} from '../shared/loading-indicators/progress-spinner/progress-spinner.module';\n\n@NgModule({\n  imports: [RouterModule.forChild([\n    {path: '', component: BasketComponent}\n  ]),\n    CommonModule,\n    ComplexNavigatorModule,\n    ProgressSpinnerModule\n  ],\n  declarations: [BasketComponent]\n})\nexport class BasketModule {\n}\n","export default \"<div class=\\\"margin-top-large margin-bottom-large\\\">\\n  <div *ngIf=\\\"!isComplexBasketEmpty()\\\" class=\\\"columns medium-12\\\">\\n    <h2>Personal collection of favourite complexes\\n\\n      <a class=\\\"button primary columns medium-2 deleteAllButton float-right\\\"\\n         (click)=\\\"deleteAllComplexes()\\\">\\n        <i class=\\\"icon icon-common\\\" data-icon=\\\"ï‡¸\\\"></i>\\n        Remove all complexes\\n      </a>\\n    </h2>\\n    <h4>{{ getKeys(complexBasket).length }} complexes in your basket</h4>\\n    <div class=\\\"row\\\">\\n      <cp-complex-list-display-buttons\\n        [displayType]=\\\"DisplayType\\\"\\n        (displayTypeChange)=\\\"onDisplayTypeChange($event)\\\">\\n      </cp-complex-list-display-buttons>\\n    </div>\\n    <table class=\\\"hover\\\" *ngIf=\\\"!this.isDisplayComplexNavigatorView()\\\">\\n      <thead>\\n      <tr>\\n        <th>Name</th>\\n        <th>ID</th>\\n        <th>Organism</th>\\n        <th></th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr *ngFor=\\\"let key of getKeys(complexBasket)\\\" [class.predicted]=\\\"complexBasket[key].predicted\\\">\\n        <td>\\n          <a [routerLink]=\\\"['/complex', complexBasket[key].id]\\\">{{ complexBasket[key].name }}</a>\\n          Â· <b class=\\\"tag\\\">{{ !complexBasket[key].predicted ? 'Curated' : 'Predicted'}} complex</b>\\n        </td>\\n        <td>\\n          {{ complexBasket[key].id }}\\n        </td>\\n        <td>\\n          {{ complexBasket[key].organism }}\\n        </td>\\n        <td>\\n          <!--          <a class=\\\"button primary columns medium-12\\\" (click)=\\\"deleteFromBasket(key)\\\"> <span-->\\n          <!--            class=\\\"icon icon-functional\\\" data-icon=\\\"d\\\"></span></a>-->\\n          <a class=\\\"button primary columns medium-12\\\" (click)=\\\"deleteFromBasket(key)\\\">\\n            <i class=\\\"icon icon-common\\\" data-icon=\\\"ï‡¸\\\"></i>\\n\\n          </a>\\n        </td>\\n      </tr>\\n      </tbody>\\n    </table>\\n    <div *ngIf=\\\"isDisplayComplexNavigatorView()\\\" class=\\\"columns medium-12\\\">\\n      <ng-container *ngIf=\\\"complexSearchBasket;else loadingSpinner\\\">\\n        <div class=\\\"ComplexNavigator\\\"\\n             [ngClass]=\\\"complexSearchBasket.totalNumberOfResults <=6 ? 'smallCN' : ''\\\">\\n          <cp-complex-navigator\\n            [complexSearch]=\\\"complexSearchBasket\\\"\\n            [interactors]=\\\"allInteractorsInComplexSearchBasket\\\"\\n            [canAddComplexesToBasket]=\\\"false\\\"\\n            [canRemoveComplexesFromBasket]=\\\"true\\\"\\n            (onComplexRemovedFromBasket)=\\\"deleteComplexFromBasket($event)\\\">\\n          </cp-complex-navigator>\\n        </div>\\n      </ng-container>\\n      <ng-template #loadingSpinner>\\n        <cp-progress-spinner></cp-progress-spinner>\\n      </ng-template>\\n    </div>\\n\\n  </div>\\n  <div *ngIf=\\\"isComplexBasketEmpty()\\\" class=\\\"columns medium-12\\\">\\n    <div class=\\\"callout\\\">\\n      <h3>Your basket is currently empty. :'(</h3>\\n      <h5>Search for a complex and click on <i class=\\\"icon icon-common\\\" data-icon=\\\"ïˆ—\\\"></i> symbol to create your own\\n        collection of favorite complexes.</h5>\\n    </div>\\n  </div>\\n</div>\\n\";"],"names":[],"sourceRoot":"webpack:///"}