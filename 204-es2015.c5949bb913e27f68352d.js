"use strict";(self.webpackChunkcomplex_portal_view=self.webpackChunkcomplex_portal_view||[]).push([[204],{42204:function(e,t,n){n.r(t),n.d(t,{BasketModule:function(){return k}});var s=n(33018),a=n(38583),o=n(18947),l=n(40819),i=n(69510),r=n(83747),c=n(39075),p=n(20658),m=n(23186);let h=class{constructor(e,t,n,s,a){this._basketService=e,this.titleService=t,this.complexPortalService=n,this.route=s,this.router=a,this.complexSearchBasket=null,this.allInteractorsInComplexSearchBasket=[],this._complexBasket=this._basketService.complexBasket}ngOnInit(){this.titleService.setTitle("Complex Portal - Basket"),this.complexNavigatorLoading(),this.route.fragment.subscribe(e=>{e===m.aA?this.DisplayType=m.aA:this.DisplayType=m.aM})}onDisplayTypeChange(e){this.DisplayType!==e&&(this.DisplayType=e,this.router.navigate([],{fragment:this.DisplayType}))}isDisplayComplexNavigatorView(){return this.DisplayType===m.aA}ngAfterViewInit(){r.R.hide()}deleteFromBasket(e){this._basketService.deleteFromBasket(e),this.complexNavigatorLoading()}deleteComplexFromBasket(e){for(const t of this.getKeys(this.complexBasket))this.complexBasket[t].id===e&&this._basketService.deleteFromBasket(t);this.complexNavigatorLoading()}get complexBasket(){return this._complexBasket}set complexBasket(e){this._complexBasket=e}isComplexBasketEmpty(){return 0===this.getKeys(this._complexBasket).length}getKeys(e){return Object.keys(e)}createQuery(e){return"complex_id:("+Object.values(e).map(e=>'"'+e.id+'"').join(",")+")"}requestComplexesForNavigator(){const e=Object.values(this._complexBasket).length;this.complexPortalService.findComplexNoFilters(this.createQuery(this._complexBasket),1,e).subscribe(e=>{if(this.complexSearchBasket=e,0!==this.complexSearchBasket.totalNumberOfResults)for(let t=0;t<e.elements.length;t++)for(const n of e.elements[t].interactors)this.allInteractorsInComplexSearchBasket.some(e=>e.identifier===n.identifier)||this.allInteractorsInComplexSearchBasket.push(n)})}complexNavigatorLoading(){this.complexSearchBasket=null,this.allInteractorsInComplexSearchBasket=[],this.requestComplexesForNavigator()}deleteAllComplexes(){Object.values(this._complexBasket).map(e=>this.deleteComplexFromBasket(e.id))}};h.ctorParameters=()=>[{type:i.v},{type:c.Dx},{type:p.H},{type:o.gz},{type:o.F0}],h=function(e,t,n,s){var a,o=arguments.length,l=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,t,n,s);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(l=(o<3?a(l):o>3?a(t,n,l):a(t,n))||l);return o>3&&l&&Object.defineProperty(t,n,l),l}([(0,s.wA2)({selector:"cp-basket",template:'<div class="margin-top-large margin-bottom-large">\n  <div *ngIf="!isComplexBasketEmpty()" class="columns medium-12">\n    <h2>Personal collection of favourite complexes\n\n      <a class="button primary columns medium-2 deleteAllButton float-right"\n         (click)="deleteAllComplexes()">\n        <i class="icon icon-common" data-icon="\uf1f8"></i>\n        Remove all complexes\n      </a>\n    </h2>\n    <h4>{{ getKeys(complexBasket).length }} complexes in your basket</h4>\n    <div class="row">\n      <cp-complex-list-display-buttons\n        [displayType]="DisplayType"\n        (displayTypeChange)="onDisplayTypeChange($event)">\n      </cp-complex-list-display-buttons>\n    </div>\n    <table class="hover" *ngIf="!this.isDisplayComplexNavigatorView()">\n      <thead>\n      <tr>\n        <th>Name</th>\n        <th>ID</th>\n        <th>Organism</th>\n        <th></th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor="let key of getKeys(complexBasket)" [class.predicted]="complexBasket[key].predicted">\n        <td>\n          <a [routerLink]="[\'/complex\', complexBasket[key].id]">{{ complexBasket[key].name }}</a>\n        </td>\n        <td>\n          {{ complexBasket[key].id }}\n        </td>\n        <td>\n          {{ complexBasket[key].organism }}\n        </td>\n        <td>\n          \x3c!--          <a class="button primary columns medium-12" (click)="deleteFromBasket(key)"> <span--\x3e\n          \x3c!--            class="icon icon-functional" data-icon="d"></span></a>--\x3e\n          <a class="button primary columns medium-12" (click)="deleteFromBasket(key)">\n            <i class="icon icon-common" data-icon="\uf1f8"></i>\n\n          </a>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n    <div *ngIf="isDisplayComplexNavigatorView()" class="columns medium-12">\n      <ng-container *ngIf="complexSearchBasket;else loadingSpinner">\n        <div class="ComplexNavigator"\n             [ngClass]="complexSearchBasket.totalNumberOfResults <=6 ? \'smallCN\' : \'\'">\n          <cp-complex-navigator\n            [complexSearch]="complexSearchBasket"\n            [interactors]="allInteractorsInComplexSearchBasket"\n            [canAddComplexesToBasket]="false"\n            [canRemoveComplexesFromBasket]="true"\n            (onComplexRemovedFromBasket)="deleteComplexFromBasket($event)">\n          </cp-complex-navigator>\n        </div>\n      </ng-container>\n      <ng-template #loadingSpinner>\n        <cp-progress-spinner></cp-progress-spinner>\n      </ng-template>\n    </div>\n\n  </div>\n  <div *ngIf="isComplexBasketEmpty()" class="columns medium-12">\n    <div class="callout">\n      <h3>Your basket is currently empty. :\'(</h3>\n      <h5>Search for a complex and click on <i class="icon icon-common" data-icon="\uf217"></i> symbol to create your own\n        collection of favorite complexes.</h5>\n    </div>\n  </div>\n</div>\n',styles:[l]})],h);var d=n(32696),x=n(64356);let k=class{};k=function(e,t,n,s){var a,o=arguments.length,l=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,t,n,s);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(l=(o<3?a(l):o>3?a(t,n,l):a(t,n))||l);return o>3&&l&&Object.defineProperty(t,n,l),l}([(0,s.LVF)({imports:[o.Bz.forChild([{path:"",component:h}]),a.ez,d.r,x.L],declarations:[h]})],k)},40819:function(e){e.exports=".ComplexNavigator, .hover {\n  width: 70%;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.basket-icons {\n  margin-left: 5px;\n  margin-bottom: 5px;\n}\n\n.deleteAllButton {\n  width: 225px;\n}\n\nh2 {\n  line-height: 1;\n}\n"}}]);