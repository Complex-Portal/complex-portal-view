!function(){"use strict";function e(e){return function(e){if(Array.isArray(e))return i(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||t(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function n(e,n){var i="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!i){if(Array.isArray(e)||(i=t(e))||n&&e&&"number"==typeof e.length){i&&(e=i);var r=0,a=function(){};return{s:a,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,s=!0,c=!1;return{s:function(){i=i.call(e)},n:function(){var e=i.next();return s=e.done,e},e:function(e){c=!0,o=e},f:function(){try{s||null==i.return||i.return()}finally{if(c)throw o}}}}function t(e,n){if(e){if("string"==typeof e)return i(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?i(e,n):void 0}}function i(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,i=new Array(n);t<n;t++)i[t]=e[t];return i}function r(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function a(e,n){for(var t=0;t<n.length;t++){var i=n[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,(r=i.key,a=void 0,"symbol"==typeof(a=function(e,n){if("object"!=typeof e||null===e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var i=t.call(e,n||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===n?String:Number)(e)}(r,"string"))?a:String(a)),i)}var r,a}function o(e,n,t){return n&&a(e.prototype,n),t&&a(e,t),Object.defineProperty(e,"prototype",{writable:!1}),e}(self.webpackChunkcomplex_portal_view=self.webpackChunkcomplex_portal_view||[]).push([[136],{75136:function(t,i,a){a.r(i),a.d(i,{ComplexResultsModule:function(){return ie}});var s=a(10639),c=a(38583),l=a(50473),p=a(35076),d=a(20658),u=a(83747),h=a(39075),f=a(8991),g=function(){function e(n,t,i,a,o,s){r(this,e),this._identifier=n,this._identifierLink=t,this._name=i,this._description=a,this._interactorType=o,this._organismName=s}return o(e,[{key:"identifier",get:function(){return this._identifier}},{key:"identifierLink",get:function(){return this._identifierLink}},{key:"name",get:function(){return this._name}},{key:"description",get:function(){return this._description}},{key:"interactorType",get:function(){return this._interactorType}},{key:"organismName",get:function(){return this._organismName}}]),e}(),m=a(30048),y=function(){function e(n,t,i,a,o,s){r(this,e),this.route=n,this.router=t,this.complexPortalService=i,this.titleService=a,this.googleAnalyticsService=o,this.notificationService=s,this.LIST_VIEW="view_list",this.COMPLEX_NAVIGATOR_VIEW="view_complex_navigator",this._allInteractorsInComplexSearch=[],this._listPageSize=15,this._navigatorPageSize=20}return o(e,[{key:"ngOnInit",value:function(){var e=this;this.titleService.setTitle("Complex Portal - Results"),this._allInteractorsInComplexSearch=[],this.route.fragment.subscribe(function(n){n===e.COMPLEX_NAVIGATOR_VIEW?e.DisplayType=e.COMPLEX_NAVIGATOR_VIEW:n===e.LIST_VIEW&&(e.DisplayType=e.LIST_VIEW),e.route.queryParams.subscribe(function(n){e._query=n.query,e._spicesFilter=n.species?n.species.split("+"):[],e._bioRoleFilter=n.bioRole?n.bioRole.split("+"):[],e._interactorTypeFilter=n.interactorType?n.interactorType.split("+"):[],e.currentPageIndex=n.page?Number(n.page):1,e.requestComplexResults(),document.body.scrollTop=0})})}},{key:"ngAfterViewInit",value:function(){}},{key:"requestComplexResults",value:function(){var e=this;this.complexPortalService.findComplex(this.query,this.spicesFilter,this.bioRoleFilter,this.interactorTypeFilter,this.currentPageIndex,this.pageSize).subscribe(function(t){if(e.complexSearch=t,e._allInteractorsInComplexSearch=[],0!==e.complexSearch.totalNumberOfResults){e.lastPageIndex=Math.ceil(t.totalNumberOfResults/e.pageSize);for(var i=0;i<t.elements.length;i++){var r,a=n(t.elements[i].interactors);try{var o=function(){var n=r.value;e._allInteractorsInComplexSearch.some(function(e){return e.identifier===n.identifier})||e._allInteractorsInComplexSearch.push(new g(n.identifier,n.identifierLink,n.name,n.description,n.interactorType,n.organismName))};for(a.s();!(r=a.n()).done;)o()}catch(s){a.e(s)}finally{a.f()}}}u.R.hide()})}},{key:"reloadPage",value:function(){var e={};e.query=this._query,e.page=this.currentPageIndex,void 0!==this._spicesFilter&&0!==this._spicesFilter.length&&(e.species=this.prepareFiltersForParams(this.spicesFilter)),void 0!==this._bioRoleFilter&&0!==this._bioRoleFilter.length&&(e.bioRole=this.prepareFiltersForParams(this._bioRoleFilter)),void 0!==this._interactorTypeFilter&&0!==this._interactorTypeFilter.length&&(e.interactorType=this.prepareFiltersForParams(this._interactorTypeFilter)),this.router.navigate([],{queryParams:e,fragment:this.DisplayType}),u.R.hide();var n=this.getFilterCount();1<n&&this.googleAnalyticsService.fireMultiFilterEvent(n.toString())}},{key:"prepareFiltersForParams",value:function(e){return e.toString().replace(/,/g,"+")}},{key:"getFilterCount",value:function(){return this._spicesFilter.length+this._interactorTypeFilter.length+this._bioRoleFilter.length}},{key:"onPageChange",value:function(e){this.currentPageIndex=e,this.reloadPage()}},{key:"onResetAllFilters",value:function(){this.spicesFilter=[],this.bioRoleFilter=[],this.interactorTypeFilter=[],this.currentPageIndex=1,this.reloadPage()}},{key:"onSpicesFilterChanged",value:function(e){this.spicesFilter=e,this.currentPageIndex=1,this.reloadPage()}},{key:"onBiologicalRoleFilterChanged",value:function(e){this.bioRoleFilter=e,this.currentPageIndex=1,this.reloadPage()}},{key:"onInteractorTypeFilterChanged",value:function(e){this.interactorTypeFilter=e,this.currentPageIndex=1,this.reloadPage()}},{key:"query",get:function(){return this._query},set:function(e){this._query=e}},{key:"currentPageIndex",get:function(){return this.DisplayType===this.COMPLEX_NAVIGATOR_VIEW?this._navigatorCurrentPage:this._listCurrentPage},set:function(e){this.DisplayType===this.COMPLEX_NAVIGATOR_VIEW?this._navigatorCurrentPage=e:this._listCurrentPage=e}},{key:"complexSearch",get:function(){return this._complexSearch},set:function(e){this._complexSearch=e,this.setFirstDisplayType()}},{key:"lastPageIndex",get:function(){return this.DisplayType===this.COMPLEX_NAVIGATOR_VIEW?this._navigatorLastPageIndex:this._listLastPageIndex},set:function(e){this.DisplayType===this.COMPLEX_NAVIGATOR_VIEW?this._navigatorLastPageIndex=e:this._listLastPageIndex=e}},{key:"pageSize",get:function(){return this.DisplayType===this.COMPLEX_NAVIGATOR_VIEW?this._navigatorPageSize:this._listPageSize}},{key:"spicesFilter",get:function(){return this._spicesFilter},set:function(e){this._spicesFilter=e}},{key:"bioRoleFilter",get:function(){return this._bioRoleFilter},set:function(e){this._bioRoleFilter=e}},{key:"interactorTypeFilter",get:function(){return this._interactorTypeFilter},set:function(e){this._interactorTypeFilter=e}},{key:"allInteractorsInComplexSearch",get:function(){return this._allInteractorsInComplexSearch}},{key:"setListView",value:function(){this.DisplayType=this.LIST_VIEW,this.toast=this.notificationService.complexNavigatorAnnouncement(),this.reloadPage()}},{key:"setComplexNavigatorView",value:function(){this.DisplayType=this.COMPLEX_NAVIGATOR_VIEW,this.reloadPage(),this.toast&&(this.notificationService.closeAnnouncement(this.toast.toastId),this.toast=null)}},{key:"setFirstDisplayType",value:function(){if(!this.DisplayType)if(1===this._complexSearch.totalNumberOfResults){var e=this._complexSearch.elements[0].complexAC;e&&(this.router.routeReuseStrategy.shouldReuseRoute=function(){return!1},this.router.navigate(["/complex",e]))}else this._complexSearch.totalNumberOfResults<=this._navigatorPageSize?this.setComplexNavigatorView():this.setListView()}}]),e}();y.ctorParameters=function(){return[{type:p.gz},{type:p.F0},{type:d.H},{type:h.Dx},{type:f.y},{type:m.g}]},y=function(e,n,t,i){var r,a=arguments.length,o=a<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(o=(a<3?r(o):a>3?r(n,t,o):r(n,t))||o);return a>3&&o&&Object.defineProperty(n,t,o),o}([(0,s.wA2)({selector:"cp-complex-results",template:'<div class="margin-top-large margin-bottom-large row">\n  <ng-container *ngIf="complexSearch;else loadingSpinner">\n    <div class="columns medium-12" *ngIf="complexSearch.totalNumberOfResults !== 0">\n      <h2 class="padding-left-large leftAligned">Total number of\n        results: {{ complexSearch.totalNumberOfResults }} </h2>\n      <div class="row">\n        <cp-complex-navigator-rating *ngIf="DisplayType=== COMPLEX_NAVIGATOR_VIEW">\n        </cp-complex-navigator-rating>\n        <div class="displayButton columns medium-8" style="text-align: center; padding-left: 10px">\n          <button type="submit" name="submit" class="button view-button"\n                  (click)="setListView()" [ngClass]="{\'selected\': DisplayType === LIST_VIEW}">\n            View list\n          </button>\n          <button type="submit" name="submit" class="button view-button cnButton"\n                  (click)="setComplexNavigatorView()" [ngClass]="{\'selected\': DisplayType === COMPLEX_NAVIGATOR_VIEW}">\n            View Complex Navigator\n            <span class="new-tag" [ngClass]="{\'new-tag-selected\': DisplayType === COMPLEX_NAVIGATOR_VIEW}">NEW!</span>\n          </button>\n        </div>\n      </div>\n      <div class="columns medium-4 filterColumn leftAligned">\n        <cp-complex-filter *ngIf="spicesFilter && bioRoleFilter && interactorTypeFilter"\n                           [spicesFilter]="spicesFilter"\n                           [bioRoleFilter]="bioRoleFilter"\n                           [interactorTypeFilter]="interactorTypeFilter" [facets]="complexSearch.facets"\n                           (onResetAllFilters)="onResetAllFilters()"\n                           (onSpicesFilterChanged)="onSpicesFilterChanged($event)"\n                           (onBiologicalRoleFilterChanged)="onBiologicalRoleFilterChanged($event)"\n                           (onInteractorTypeFilterChanged)="onInteractorTypeFilterChanged($event)">\n        </cp-complex-filter>\n      </div>\n      <div class="columns medium-8">\n        <cp-complex-paginator [currentPageIndex]="currentPageIndex"\n                              [lastPageIndex]="lastPageIndex"\n                              (onPageChange)="onPageChange($event)">\n        </cp-complex-paginator>\n        <cp-complex-list class="listOfResults" *ngIf="DisplayType===LIST_VIEW"\n                         [complexSearch]="complexSearch">\n        </cp-complex-list>\n        <cp-complex-navigator class="Complex-navigator" *ngIf="DisplayType===COMPLEX_NAVIGATOR_VIEW"\n                              [complexSearch]="complexSearch"\n                              [interactors]="allInteractorsInComplexSearch">\n        </cp-complex-navigator>\n        <cp-complex-paginator [currentPageIndex]="currentPageIndex"\n                              [lastPageIndex]="lastPageIndex"\n                              (onPageChange)="onPageChange($event)"></cp-complex-paginator>\n      </div>\n    </div>\n\n    <div class="columns medium-12 callout alert" *ngIf="complexSearch.totalNumberOfResults === 0">\n      <h2>No Complex Portal results found</h2>\n      <h3>We\'re sorry but we couldn\'t find anything that matched your search for: <b>{{ query }}</b></h3>\n      <h4>Please consider refining your terms:</h4>\n      <ul>\n        <li>Make sure all words are spelled correctly</li>\n        <li>Try different keywords</li>\n        <li>Be more precise: use gene or protein IDs, e.g. Ndc80 or Q04571</li>\n        <li>Remove quotes around phrases to search for each word individually. bike shed will often show more results\n          than\n          "bike shed"\n        </li>\n      </ul>\n    </div>\n  </ng-container>\n  <ng-template #loadingSpinner>\n    <cp-progress-spinner [query]="query"></cp-progress-spinner>\n  </ng-template>\n</div>\n',styles:[l]})],y);var x=a(39606),I=function(){function e(){r(this,e),this.onPageChange=new s.vpe}return o(e,[{key:"ngOnInit",value:function(){this.updatePaginatior()}},{key:"ngOnChanges",value:function(e){this.updatePaginatior()}},{key:"updatePaginatior",value:function(){var e,n;for(this.pagination=[],this._lastPageIndex<5?(e=1,n=this._lastPageIndex):1===this._currentPageIndex||2===this._currentPageIndex?(e=1,n=5):this._currentPageIndex===this._lastPageIndex||this._currentPageIndex===this._lastPageIndex-1?(e=this._lastPageIndex-4,n=this._lastPageIndex):(e=this._currentPageIndex-2,n=this._currentPageIndex+2);e<=n;)e===this._currentPageIndex?this._pagination.push([[this._currentPageIndex],[!0]]):this._pagination.push([[e],[!1]]),e++}},{key:"getFirstPage",value:function(){this.onPageChange.emit(1)}},{key:"getLastPage",value:function(){this.onPageChange.emit(this.lastPageIndex)}},{key:"getPage",value:function(e){this.onPageChange.emit(e)}},{key:"getPreviousPage",value:function(){this.onPageChange.emit(this.currentPageIndex-1)}},{key:"getNextPage",value:function(){this.onPageChange.emit(this.currentPageIndex+1)}},{key:"lastPageIndex",get:function(){return this._lastPageIndex},set:function(e){this._lastPageIndex=e}},{key:"currentPageIndex",get:function(){return this._currentPageIndex},set:function(e){this._currentPageIndex=e}},{key:"pagination",get:function(){return this._pagination},set:function(e){this._pagination=e}}]),e}();I.ctorParameters=function(){return[]},I.propDecorators={onPageChange:[{type:s.r_U}],lastPageIndex:[{type:s.IIB}],currentPageIndex:[{type:s.IIB}]},I=function(e,n,t,i){var r,a=arguments.length,o=a<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(o=(a<3?r(o):a>3?r(n,t,o):r(n,t))||o);return a>3&&o&&Object.defineProperty(n,t,o),o}([(0,s.wA2)({selector:"cp-complex-paginator",template:'<div>\n  <h5 class="text-center">{{ currentPageIndex }} of {{ lastPageIndex }}</h5>\n  <ul class="pagination text-center" role="navigation" aria-label="Pagination">\n    <li class="arrow unavailable" *ngIf="currentPageIndex != 1" aria-disabled="true"><a\n      (click)="getFirstPage()">&Lang; First</a></li>\n    <li class="arrow unavailable" *ngIf="currentPageIndex != 1" aria-disabled="true"><a\n      (click)="getPreviousPage()">&lang; Previous</a></li>\n    <ng-container *ngFor="let index of pagination">\n      <li *ngIf="index[1] == \'true\'" class="current"><span class="show-for-sr">You\'re on page</span>{{ index[0] }}</li>\n      <li *ngIf="index[1] == \'false\'"><a (click)="getPage(index[0])">{{ index[0] }}</a></li>\n    </ng-container>\n    <li class="arrow" *ngIf="currentPageIndex != lastPageIndex"><a (click)="getNextPage()">Next &rang;</a></li>\n    <li class="arrow" *ngIf="currentPageIndex != lastPageIndex"><a (click)="getLastPage()">Last &Rang;</a></li>\n  </ul>\n</div>\n',styles:[x]})],I);var v=a(26531);function b(e){switch(e){case"small molecule":return"icon icon-conceptual icon-chemical";case"protein":case"peptide":return"icon icon-conceptual icon-structures-3d";case"stable complex":return"icon icon-conceptual icon-systems";case"molecule set":return"icon icon-generic icon-math";case"single stranded deoxyribonucleic acid":case"double stranded deoxyribonucleic acid":case"small nuclear rna":case"small nucleolar rna":case"ribosomal rna":case"messenger rna":case"transfer rna":case"signal recognition particle rna":case"ribonucleic acid":case"nucleic acid":case"long non-coding ribonucleic acid":return"icon icon-conceptual icon-dna"}}function C(e){switch(function(e){if(e&&e.includes(";")){var n=e.indexOf(";");return e.substring(0,n)}return e}(e)){case"Homo sapiens":case"Homo sapiens; 9606":return"icon icon-species icon-human";case"Mus musculus":case"Mus musculus; 10090":return"icon icon-species icon-mouse";case"Saccharomyces cerevisiae (strain ATCC 204508 / S288c)":case"Schizosaccharomyces pombe (strain 972 / ATCC 24843)":case"Saccharomyces cerevisiae; 559292":return"icon icon-species icon-yeast";case"Escherichia coli (strain K12)":case"Escherichia coli":case"Escherichia coli (strain K12); 83333":case"Escherichia coli; 562":case"Pseudomonas aeruginosa (strain ATCC 15692 / DSM 22644 / CIP 104116 / JCM 14847 / LMG 12228 / 1C / PRS 101 / PAO1)":case"Pseudomonas aeruginosa (strain ATCC 15692 / PAO1 / 1C / PRS 101 / LMG 12228); 208964":return"icon icon-species icon-ecoli";case"Rattus norvegicus":case"Rattus norvegicus (Rat)":case"Rattus norvegicus (Rat); 10116":return"icon icon-species icon-rat";case"Caenorhabditis elegans":case"Caenorhabditis elegans; 6239":return"icon icon-species icon-c-elegans";case"Gallus gallus":case"Gallus gallus (Chicken); 9031":return"icon icon-species icon-chicken";case"Drosophila melanogaster":case"Drosophila melanogaster (Fruit fly); 7227":return"icon icon-species icon-fly";case"Bos taurus":case"Bos taurus (Bovine); 9913":return"icon icon-species icon-cow";case"Oryctolagus cuniculus":case"Oryctolagus cuniculus (Rabbit); 9986":return"icon icon-species icon-rabbit";case"Ovis aries":case"Ovis aries (Sheep); 9940":return"icon icon-species icon-sheep";case"Xenopus laevis":case"Xenopus laevis (African clawed frog); 8355":return"icon icon-species icon-frog";case"Canis lupus familiaris":case"Canis familiaris (dog); 9615":return"icon icon-species icon-dog";case"Vibrio cholerae serotype O1 (strain ATCC 39315 / El Tor Inaba N16961)":case"Vibrio cholerae; 243277":return"assets/images/EMBL_Species_Vibrio_cholerae.svg";case"Crotalus durissus terrificus":case"Crotalus durissus terrificus; 8732":return"assets/images/EMBL_Species_RattleSnake.svg";case"Sus scrofa":case"Sus scrofa (Pig); 9823":return"icon icon-species icon-pig";case"Torpedo marmorata":case"Tetronarce californica":case"Torpedo marmorata; 7788":case"Torpedo californica (Pacific electric ray); 7787":return"icon icon-species icon-ray";case"Lymnaea stagnalis":case"Lymnaea stagnalis; 6523":return"icon icon-species icon-snail";case"Arabidopsis thaliana":case"Arabidopsis thaliana (Mouse-ear cress); 3702":return"icon icon-species icon-brassica";case"Danio rerio":case"Danio rerio (Zebrafish); 7955":return"icon icon-species icon-zebrafish";case"Severe acute respiratory syndrome coronavirus":case"Human SARS coronavirus; 694009":case"SARS-CoV-2; 2697049":case"Severe acute respiratory syndrome coronavirus 2":case"Middle East respiratory syndrome-related coronavirus (isolate United Kingdom/H123990006/2012)":case"Middle East respiratory syndrome-related coronavirus (isolate United Kingdom/H123990006/2012) (Betacoronavirus England 1); 1263720":case"Human betacoronavirus 2c EMC/2012":case"Human betacoronavirus 2c EMC/2012; 1235996":return"icon icon-species icon-virus"}return" "}var w=function(){function e(n){r(this,e),this.googleAnalyticsService=n,this.onSpicesFilterChanged=new s.vpe,this.onBiologicalRoleFilterChanged=new s.vpe,this.onInteractorTypeFilterChanged=new s.vpe,this.onResetAllFilters=new s.vpe}return o(e,[{key:"ngOnInit",value:function(){}},{key:"changeSpeciesFilter",value:function(e,n){n?(this.spicesFilter.push(e),this.googleAnalyticsService.fireAddedFilterEvent(e)):(this.spicesFilter.splice(this.spicesFilter.indexOf(e),1),this.googleAnalyticsService.fireRemovedFilterEvent(e)),this.onSpicesFilterChanged.emit(this.spicesFilter)}},{key:"changeBiologicalRoleFilter",value:function(e,n){n?(this.bioRoleFilter.push(e),this.googleAnalyticsService.fireAddedFilterEvent(e)):(this.bioRoleFilter.splice(this.bioRoleFilter.indexOf(e),1),this.googleAnalyticsService.fireRemovedFilterEvent(e)),this.onBiologicalRoleFilterChanged.emit(this.bioRoleFilter)}},{key:"changeInteractorTypeFilter",value:function(e,n){n?(this.interactorTypeFilter.push(e),this.googleAnalyticsService.fireAddedFilterEvent(e)):(this.interactorTypeFilter.splice(this.interactorTypeFilter.indexOf(e),1),this.googleAnalyticsService.fireRemovedFilterEvent(e)),this.onInteractorTypeFilterChanged.emit(this.interactorTypeFilter)}},{key:"resetAllFilters",value:function(){this.onResetAllFilters.emit(!0)}},{key:"anyFiltersSelected",value:function(){return 0!==this._spicesFilter.length||0!==this._bioRoleFilter.length||0!==this._interactorTypeFilter.length}},{key:"isSelected",value:function(e,n){return-1!==n.indexOf(e)}},{key:"facets",get:function(){return this._facets},set:function(e){this._facets=e}},{key:"spicesFilter",get:function(){return this._spicesFilter},set:function(e){this._spicesFilter=e}},{key:"bioRoleFilter",get:function(){return this._bioRoleFilter},set:function(e){this._bioRoleFilter=e}},{key:"interactorTypeFilter",get:function(){return this._interactorTypeFilter},set:function(e){this._interactorTypeFilter=e}},{key:"facetTypeIcon",value:function(e){return b(e.name)}},{key:"facetOrganismIcon",value:function(e){return C(e)}}]),e}();w.ctorParameters=function(){return[{type:f.y}]},w.propDecorators={onSpicesFilterChanged:[{type:s.r_U}],onBiologicalRoleFilterChanged:[{type:s.r_U}],onInteractorTypeFilterChanged:[{type:s.r_U}],onResetAllFilters:[{type:s.r_U}],facets:[{type:s.IIB}],spicesFilter:[{type:s.IIB}],bioRoleFilter:[{type:s.IIB}],interactorTypeFilter:[{type:s.IIB}]},w=function(e,n,t,i){var r,a=arguments.length,o=a<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(o=(a<3?r(o):a>3?r(n,t,o):r(n,t))||o);return a>3&&o&&Object.defineProperty(n,t,o),o}([(0,s.wA2)({selector:"cp-complex-filter",template:'<div class="filters row">\n  <div class="columns medium-6"><h3>Filters</h3></div>\n  <div class="columns medium-6">\n    <div *ngIf="anyFiltersSelected()">\n      <a class="button" (click)="resetAllFilters()"><i class="icon icon-functional" data-icon="d"></i> Reset filters</a>\n    </div>\n  </div>\n  <div class="columns medium-12">\n    <div *ngIf="facets.species_f">\n      <b>Species</b>\n      <ul class="no-bullet">\n        <li *ngFor="let facet of facets.species_f">\n          <div [ngSwitch]="isSelected(facet.name, spicesFilter)">\n            <div *ngSwitchCase="true">\n              <input type="checkbox" #filter value="{{facet.name}}"\n                     (change)="changeSpeciesFilter(filter.value, filter.checked)" checked>\n              {{ facet.name }}\n              ({{ facet.count }})\n              <i class="{{ facetOrganismIcon(facet.name) }}"\n                 style="font-size: large;"></i>\n            </div>\n            <div *ngSwitchDefault>\n              <input type="checkbox" #filter value="{{facet.name}}"\n                     (change)="changeSpeciesFilter(filter.value, filter.checked)"> {{ facet.name }} ({{ facet.count }})\n\n              <i class="{{ facetOrganismIcon(facet.name) }}"\n                 style="font-size: large;"></i>\n            </div>\n          </div>\n        </li>\n      </ul>\n    </div>\n\n    <div *ngIf="facets.pbiorole_f">\n      <b>Biological Role</b>\n      <ul class="no-bullet">\n        <li *ngFor="let facet of facets.pbiorole_f">\n          <div [ngSwitch]="isSelected(facet.name, bioRoleFilter)">\n            <div *ngSwitchCase="true">\n              <input type="checkbox" #filter value="{{facet.name}}"\n                     (change)="changeBiologicalRoleFilter(filter.value, filter.checked)" checked> {{ facet.name }}\n              ({{ facet.count }})\n            </div>\n            <div *ngSwitchDefault>\n              <input type="checkbox" #filter value="{{facet.name}}"\n                     (change)="changeBiologicalRoleFilter(filter.value, filter.checked)"> {{ facet.name }}\n              ({{ facet.count }})\n            </div>\n          </div>\n        </li>\n      </ul>\n    </div>\n\n\n    <div *ngIf="facets.ptype_f">\n      <b>Interactor Type</b>\n      <ul class="no-bullet">\n        <li *ngFor="let facet of facets.ptype_f">\n          <div [ngSwitch]="isSelected(facet.name, interactorTypeFilter)">\n            <div *ngSwitchCase="true">\n              <input type="checkbox" #filter value="{{facet.name}}"\n                     (change)="changeInteractorTypeFilter(filter.value, filter.checked)" checked> {{ facet.name }}\n              ({{ facet.count }})\n              <i class="{{ facetTypeIcon(facet) }}"\n                 style="font-size: large;"></i>\n            </div>\n            <div *ngSwitchDefault>\n              <input type="checkbox" #filter value="{{facet.name}}"\n                     (change)="changeInteractorTypeFilter(filter.value, filter.checked)"> {{ facet.name }}\n              ({{ facet.count }})\n              <i class="{{ facetTypeIcon(facet) }}"\n                 style="font-size: large;"></i>\n            </div>\n          </div>\n        </li>\n      </ul>\n    </div>\n    <div *ngIf="!facets.species_f && !facets.pbiorole_f && !facets.ptype_f">\n      <h6>No filters available</h6>\n    </div>\n  </div>\n</div>\n',styles:[v]})],w);var S=a(82328),k=function(){function e(){r(this,e)}return o(e,[{key:"ngOnInit",value:function(){}}]),e}();k.ctorParameters=function(){return[]},k.propDecorators={complexSearch:[{type:s.IIB}]},k=function(e,n,t,i){var r,a=arguments.length,o=a<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(o=(a<3?r(o):a>3?r(n,t,o):r(n,t))||o);return a>3&&o&&Object.defineProperty(n,t,o),o}([(0,s.wA2)({selector:"cp-complex-list",template:'<ul class="no-bullet">\n  <li *ngFor="let complex of complexSearch.elements">\n    <h3><a [routerLink]="[\'/complex\', complex.complexAC]">{{ complex.complexName }}</a></h3>\n    <div class="description" style="background-color: white">\n      <b>Complex AC:</b> {{ complex.complexAC }} / <b>Organism:</b> ({{ complex.organismName }})<br>\n      <b>Description:</b>\n      <div *ngIf="complex.description.length <= 250">\n        {{ complex.description }}<a [routerLink]="[\'/complex\', complex.complexAC]">...</a>\n      </div>\n      <div *ngIf="complex.description.length > 250">\n        {{ complex.description.substr(0, 250) }}<a [routerLink]="[\'/complex\', complex.complexAC]">...</a>\n      </div>\n    </div>\n  </li>\n</ul>\n',styles:[S]})],k);var D=a(64356),T=a(64152),O=o(function e(){r(this,e),this.interactorsSorting="Occurrence",this.organismIconDisplay=!0,this.interactorTypeDisplay=!0,this.IDDisplay=!0});O.propDecorators={complexSearch:[{type:s.IIB}],interactors:[{type:s.IIB}]},O=function(e,n,t,i){var r,a=arguments.length,o=a<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(o=(a<3?r(o):a>3?r(n,t,o):r(n,t))||o);return a>3&&o&&Object.defineProperty(n,t,o),o}([(0,s.wA2)({selector:"cp-complex-navigator",template:'<div class="ComplexNavigator">\n  <div class="Buttons">\n    <cp-complex-navigator-buttons\n      [(interactorsSorting)]="interactorsSorting"\n      [(organismIconDisplay)]="organismIconDisplay"\n      [(interactorTypeDisplay)]="interactorTypeDisplay"\n      [(IDDisplay)]="IDDisplay">\n    </cp-complex-navigator-buttons>\n  </div>\n  <cp-table-structure [complexSearch]="complexSearch"\n                      [interactors]="interactors"\n                      [interactorsSorting]="interactorsSorting"\n                      [organismIconDisplay]="organismIconDisplay"\n                      [interactorTypeDisplay]="interactorTypeDisplay"\n                      [IDDisplay]="IDDisplay">\n  </cp-table-structure>\n</div>\n\n',styles:[T]})],O);var P=a(65170),R=function(){function t(){r(this,t),this.sortedComplexes=[]}return o(t,[{key:"ngOnChanges",value:function(){this.classifyComplexesSize(),this.sortedComplexes=this.classifyComplexesSimilarities(this.complexSearch.elements)}},{key:"classifyComplexesSize",value:function(){var t,i=e(this.complexSearch.elements),r=[],a=n(i);try{for(a.s();!(t=a.n()).done;){var o,s=t.value,c=s.interactors.length,l=n(s.interactors);try{var p=function(){var e=o.value;if("stable complex"===e.interactorType){var n=i.find(function(n){return n.complexAC===e.identifier});n&&(c+=n.interactors.length)}};for(l.s();!(o=l.n()).done;)p()}catch(u){l.e(u)}finally{l.f()}r.push([s,c])}}catch(u){a.e(u)}finally{a.f()}r.sort(function(e,n){return n[1]-e[1]});for(var d=0;d<i.length;d++)this.complexSearch.elements[d]=r[d][0]}},{key:"calculateSimilarity",value:function(e,t){var i,r=this,a=0,o=n(e.interactors);try{var s=function(){var e=i.value;if("stable complex"===e.interactorType)if(t.complexAC===e.identifier)a+=t.interactors.length;else{var o=r.complexSearch.elements.find(function(n){return n.complexAC===e.identifier});if(o)if(t.interactors.find(function(n){return n.identifier===e.identifier}))a+=o.interactors.length;else{var s,c=n(o.interactors);try{for(c.s();!(s=c.n()).done;){var l,p=s.value,d=n(t.interactors);try{for(d.s();!(l=d.n()).done;){var u=l.value;p.identifier===u.identifier&&a++}}catch(m){d.e(m)}finally{d.f()}}}catch(m){c.e(m)}finally{c.f()}}}else{var h,f=n(t.interactors);try{var g=function(){var t=h.value;if("stable complex"===t.interactorType){var i=r.complexSearch.elements.find(function(e){return e.complexAC===t.identifier});if(i){var o,s=n(i.interactors);try{for(s.s();!(o=s.n()).done;){o.value.identifier===e.identifier&&a++}}catch(m){s.e(m)}finally{s.f()}}}else e.identifier===t.identifier&&a++};for(f.s();!(h=f.n()).done;)g()}catch(m){f.e(m)}finally{f.f()}}};for(o.s();!(i=o.n()).done;)s()}catch(c){o.e(c)}finally{o.f()}return a}},{key:"classifyComplexesSimilarities",value:function(e){var t,i=[],r=n(e);try{for(r.s();!(t=r.n()).done;){var a,o=t.value,s=!1,c=n(i);try{for(c.s();!(a=c.n()).done;){var l=a.value,p=l[0];this.calculateSimilarity(o,p)>=1&&(l.push(o),s=!0)}}catch(y){c.e(y)}finally{c.f()}s||i.push([o])}}catch(y){r.e(y)}finally{r.f()}for(var d=[],u=0,h=i;u<h.length;u++){var f,g=n(h[u]);try{for(g.s();!(f=g.n()).done;){var m=f.value;d.includes(m)||d.push(m)}}catch(y){g.e(y)}finally{g.f()}}return d}}]),t}();R.propDecorators={complexSearch:[{type:s.IIB}],interactors:[{type:s.IIB}],interactorsSorting:[{type:s.IIB}],organismIconDisplay:[{type:s.IIB}],interactorTypeDisplay:[{type:s.IIB}],IDDisplay:[{type:s.IIB}]},R=function(e,n,t,i){var r,a=arguments.length,o=a<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(o=(a<3?r(o):a>3?r(n,t,o):r(n,t))||o);return a>3&&o&&Object.defineProperty(n,t,o),o}([(0,s.wA2)({selector:"cp-table-structure",template:'<div class="complexNavigatorTable">\n  <div class="header"\n       (scroll)="body.scrollLeft = header.scrollLeft" #header>\n\n    <cp-table-header [complexes]="sortedComplexes"\n                     [interactorsSorting]="interactorsSorting">\n    </cp-table-header>\n  </div>\n  <div class="interactors"\n       (scroll)="header.scrollLeft = body.scrollLeft" #body>\n    <cp-table-interactor-column\n      [complexes]="sortedComplexes"\n      [interactors]="interactors"\n      [interactorsSorting]="interactorsSorting"\n      [organismIconDisplay]="organismIconDisplay"\n      [interactorTypeDisplay]="interactorTypeDisplay"\n      [IDDisplay]="IDDisplay">\n    </cp-table-interactor-column>\n  </div>\n  <div class="spaceHolder"></div>\n</div>\n\n',styles:[P]})],R);var _=a(95260),F=function(){function e(){r(this,e)}return o(e,[{key:"isInteractorSortingSet",value:function(){return"Type"===this.interactorsSorting||"Organism"===this.interactorsSorting}},{key:"iconOrganism",value:function(e){return C(e)}}]),e}();F.propDecorators={complexes:[{type:s.IIB}],interactorsSorting:[{type:s.IIB}]},F=function(e,n,t,i){var r,a=arguments.length,o=a<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(o=(a<3?r(o):a>3?r(n,t,o):r(n,t))||o);return a>3&&o&&Object.defineProperty(n,t,o),o}([(0,s.wA2)({selector:"cp-table-header",template:'<div class="Complex-navigator">\n  <table class="table CN-table">\n    \x3c!-- When table is not overflowing --\x3e\n    <thead class="tableHead" *ngIf="complexes.length<=6">\n    <tr>\n      <th *ngIf="isInteractorSortingSet()" class="spaceHolderSorting"></th>\n      <th class="interactorsHeader horizontal">\n        Interactor\n      </th>\n      <th class="horizontal" *ngFor="let complex of complexes">\n        <a [routerLink]="[\'/complex\', complex.complexAC]"\n           title="{{complex.complexAC}}"\n           target="_blank">\n          <div>\n            <span title="{{ complex.complexName }} - {{ complex.complexAC}}">\n              <div class="line"></div>\n                <div class="horizontal-label">\n                  <i class="{{iconOrganism(complex.organismName)}}"></i>\n                  <i class="icon icon-generic small" data-icon="x"></i>\n                  {{ complex.complexName }}\n                </div>\n            </span>\n          </div>\n        </a>\n      </th>\n    </tr>\n    </thead>\n    \x3c!-- When table is overflowing --\x3e\n    <thead class="tableHeadOverflow" *ngIf="complexes.length>6">\n    <tr [style.--cols]="complexes.length"\n        [style.--intHeader]="isInteractorSortingSet() ? \'156px\':\'\'"\n        [style.--sizeSpaceHolder]="complexes.length>15 ? \'185px\':\'\'">\n      <th class="spaceHolderHeaderOverflow"\n          [style]="isInteractorSortingSet() ? \'min-width: 156px; max-width: 156px;\':\'\'">\n      </th>\n      <th class="rotate" *ngFor="let complex of complexes"\n          title="{{ complex.complexName }} - {{ complex.complexAC}}"\n          [style.--cols]="complexes.length">\n        <a [routerLink]="[\'/complex\', complex.complexAC]"\n           title="{{ complex.complexName }} - {{ complex.complexAC}}"\n           target="_blank">\n          <div>\n            <span>\n              <div class="tilted-label" title="{{ complex.complexName }} - {{ complex.complexAC}}">\n                <i class="icon icon-generic small" data-icon="x"\n                   title="{{ complex.complexName }} - {{ complex.complexAC}}"></i>\n                {{ complex.complexName }}\n              </div>\n            </span>\n          </div>\n        </a>\n      </th>\n      <div class="spaceHolder" [style]="complexes.length<15 ? \'max-width: inherit;min-width: inherit\':\'\'"></div>\n    </tr>\n    \x3c!-- icons row --\x3e\n    <tr [style.--cols]="complexes.length"\n        [style.--intHeader]="isInteractorSortingSet() ? \'156px\':\'\'"\n        [style.--sizeSpaceHolder]="complexes.length>15 ? \'185px\':\'\'">\n      <th class="interactorsHeader overflow"\n          [style]="isInteractorSortingSet() ? \'min-width: 156px; max-width: 156px;\':\'\'">\n        Interactors\n      </th>\n      <ng-container *ngFor=" let complex of complexes;">\n        <th class="iconOrganism"><i class="{{iconOrganism(complex.organismName)}}" title="{{complex.organismName}}"></i>\n        </th>\n      </ng-container>\n      <div class="spaceHolder" [style]="complexes.length<15 ? \'max-width: inherit;min-width: inherit\':\'\'"></div>\n    </tr>\n    </thead>\n  </table>\n</div>\n\n\n',styles:[_]})],F);var L=a(90303),A=a(25917),V=a(88002);function E(e,n,t){var i=N(e.interactors,n,t);return i?{identifier:i.identifier,stochiometryValue:i.stochiometryValue,stochiometryText:j(i.stochiometryValue),stochiometryValueFormatted:z(i.stochiometryValue)}:null}function N(e,t,i){var r,a=!1,o=null,s=n(e);try{for(s.s();!(r=s.n()).done;){var c=B(r.value,t,i);c&&(a=!0,c.stochiometryValue&&(o=o?[o[0]+c.stochiometryValue[0],o[1]+c.stochiometryValue[1]]:[c.stochiometryValue[0],c.stochiometryValue[1]]))}}catch(l){s.e(l)}finally{s.f()}return a?{identifier:t,stochiometryValue:o}:null}function B(e,n,t){var i=function(e){if(e){var n=function(e){return e.match("minValue: ([0-9+]), maxValue: ([0-9+])")}(e);if(n){var t=parseInt(n[1],10),i=parseInt(n[2],10);if(!isNaN(t)&&!isNaN(i))return[t,i]}}return null}(e.stochiometry);if(e.identifier===n)return{identifier:n,stochiometryValue:i};if("stable complex"===e.interactorType){var r=t.find(function(n){return n.interactor.identifier===e.identifier});if(r&&r.subComponents){var a=N(r.subComponents,n,t);if(a)return a.stochiometryValue?i?{identifier:n,stochiometryValue:[i[0]*a.stochiometryValue[0],i[1]*a.stochiometryValue[1]]}:{identifier:n,stochiometryValue:a.stochiometryValue}:{identifier:n,stochiometryValue:i}}}return null}function z(e){if(e){var n=e[0],t=e[1];return n===t?n.toString():"".concat(n,"-").concat(t)}return" "}function j(e){return e?"Stoichiometry values: minValue: "+e[0]+", maxValue: "+e[1]:"No stoichiometry data available"}var M=function(){function e(n){r(this,e),this.complexPortalService=n}return o(e,[{key:"ngOnChanges",value:function(e){e.interactors&&this.enrichInteractors(),this.classifyInteractors(),this.calculateAllStartAndEndIndexes()}},{key:"classifyInteractors",value:function(){this.interactorsSorting&&this.enrichedInteractors&&this.enrichedInteractors.length>0&&("Type"===this.interactorsSorting?this.classifyInteractorsByType():"Organism"===this.interactorsSorting?this.classifyInteractorsByOrganism():this.classifyInteractorsByOccurrence())}},{key:"enrichInteractors",value:function(){var e=this;this.enrichedInteractors=[];var t,i=n(this.interactors);try{var r=function(){var n=t.value,i="stable complex"===n.interactorType,r={interactor:n,hidden:!1,isSubComplex:i,expanded:!1,subComponents:null,partOfComplex:[],timesAppearing:0};i&&e.loadSubInteractors(r).subscribe(function(e){return r.subComponents=e}),e.enrichedInteractors.push(r)};for(i.s();!(t=i.n()).done;)r()}catch(a){i.e(a)}finally{i.f()}}},{key:"toggleSubcomplexExpandable",value:function(e){if(this.enrichedInteractors[e].expanded=!this.enrichedInteractors[e].expanded,this.enrichedInteractors[e].expanded){for(var n=0;n<this.enrichedInteractors.length;n++)e!==n&&(this.enrichedInteractors[n].expanded=!1);if(this.enrichedInteractors[e].subComponents)for(var t=this.enrichedInteractors[e].subComponents.map(function(e){return e.identifier}),i=0;i<this.enrichedInteractors.length;i++)e!==i&&(this.enrichedInteractors[i].hidden=!!t.includes(this.enrichedInteractors[i].interactor.identifier))}else for(var r=0;r<this.enrichedInteractors.length;r++)this.enrichedInteractors[r].hidden=!1;this.classifyInteractors(),this.calculateAllStartAndEndIndexes(),console.log("Done")}},{key:"loadSubInteractors",value:function(e){var n=this.complexes.find(function(n){return n.complexAC===e.interactor.identifier});return n?(0,A.of)(n.interactors):this.complexPortalService.getSimplifiedComplex(e.interactor.identifier).pipe((0,V.U)(function(e){return null==e?void 0:e.interactors}))}},{key:"calculateAllStartAndEndIndexes",value:function(){this.enrichedComplexes=[];var e,t=n(this.complexes);try{for(t.s();!(e=t.n()).done;){var i=e.value;this.enrichedComplexes.push(this.calculateStartAndEndIndexes(i))}}catch(r){t.e(r)}finally{t.f()}}},{key:"getMinValue",value:function(e,n){return null===n?e:null===e?n:Math.min(e,n)}},{key:"getMaxValue",value:function(e,n){return null===n?e:null===e?n:Math.max(e,n)}},{key:"calculateStartAndEndIndexes",value:function(e){for(var n={complex:e,startInteractorIndex:null,endInteractorIndex:null,startSubComponentIndex:null,endSubComponentIndex:null,startInteractorIncludedWhenExpanded:!0},t=0;t<this.enrichedInteractors.length;t++)if(!this.enrichedInteractors[t].hidden)if(E(e,this.enrichedInteractors[t].interactor.identifier,this.enrichedInteractors))n.startInteractorIndex=this.getMinValue(n.startInteractorIndex,t),n.startInteractorIndex===t&&(n.startInteractorIncludedWhenExpanded=!0),n.endInteractorIndex=this.getMaxValue(n.endInteractorIndex,t),this.enrichedInteractors[t].isSubComplex&&this.enrichedInteractors[t].subComponents&&this.enrichedInteractors[t].expanded&&(n.startSubComponentIndex=-1,n.endSubComponentIndex=this.enrichedInteractors[t].subComponents.length-1);else if(this.enrichedInteractors[t].isSubComplex&&this.enrichedInteractors[t].subComponents&&this.enrichedInteractors[t].expanded)for(var i=0;i<this.enrichedInteractors[t].subComponents.length;i++)E(e,this.enrichedInteractors[t].subComponents[i].identifier,this.enrichedInteractors)&&(n.startInteractorIndex=this.getMinValue(n.startInteractorIndex,t),n.startInteractorIndex===t&&(n.startInteractorIncludedWhenExpanded=!1),n.endInteractorIndex=this.getMaxValue(n.endInteractorIndex,t),n.startSubComponentIndex=this.getMinValue(n.startSubComponentIndex,i),n.endSubComponentIndex=this.getMaxValue(n.endSubComponentIndex,i));return n}},{key:"classifyInteractorsByOrganism",value:function(){this.enrichedInteractors.sort(function(e,n){return n.interactor.organismName.localeCompare(e.interactor.organismName)}),this.rangeOfInteractorOrganism()}},{key:"classifyInteractorsByType",value:function(){this.enrichedInteractors.sort(function(e,n){return n.interactor.interactorType.localeCompare(e.interactor.interactorType)}),this.rangeOfInteractorType()}},{key:"classifyInteractorsByOccurrence",value:function(){var e,t=n(this.enrichedInteractors);try{for(t.s();!(e=t.n()).done;){var i,r=e.value,a=n(this.complexes);try{for(a.s();!(i=a.n()).done;){var o=E(i.value,r.interactor.identifier,this.enrichedInteractors);o&&(o.stochiometryValue?r.timesAppearing+=o.stochiometryValue[0]:r.timesAppearing+=1)}}catch(s){a.e(s)}finally{a.f()}}}catch(s){t.e(s)}finally{t.f()}this.enrichedInteractors.sort(function(e,n){return n.timesAppearing-e.timesAppearing}),this.ranges=[]}},{key:"rangeOfInteractorType",value:function(){for(var e=[],n=0,t=null,i=0;i<this.enrichedInteractors.length;i++){var r=[];this.enrichedInteractors[i].hidden||(n+=1,null===t&&(t=i)),(!this.enrichedInteractors[i+1]||this.enrichedInteractors[i].isSubComplex&&this.enrichedInteractors[i].expanded||this.enrichedInteractors[i].interactor.interactorType!==this.enrichedInteractors[i+1].interactor.interactorType)&&(null!==t&&(r.push(this.enrichedInteractors[i].interactor.interactorType,n,t),e.push(r),t=null),n=0)}this.ranges=e}},{key:"rangeOfInteractorOrganism",value:function(){for(var e=[],n=0,t=null,i=0;i<this.enrichedInteractors.length;i++){var r=[];this.enrichedInteractors[i].hidden||(n+=1,null===t&&(t=i)),(!this.enrichedInteractors[i+1]||this.enrichedInteractors[i].isSubComplex&&this.enrichedInteractors[i].expanded||this.enrichedInteractors[i].interactor.organismName!==this.enrichedInteractors[i+1].interactor.organismName)&&(null!==t&&(r.push(this.enrichedInteractors[i].interactor.organismName,n,t),e.push(r),t=null),n=0)}this.ranges=e}},{key:"isInteractorSortingSet",value:function(){return"Type"===this.interactorsSorting||"Organism"===this.interactorsSorting}},{key:"getExpandedRowClass",value:function(e,n){return 0===e?1===n?"singleExpandedRow":"firstExpandedRow":e===n-1?"lastExpandedRow":null}}]),e}();M.ctorParameters=function(){return[{type:d.H}]},M.propDecorators={complexes:[{type:s.IIB}],interactorsSorting:[{type:s.IIB}],interactors:[{type:s.IIB}],organismIconDisplay:[{type:s.IIB}],interactorTypeDisplay:[{type:s.IIB}],IDDisplay:[{type:s.IIB}]},M=function(e,n,t,i){var r,a=arguments.length,o=a<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(o=(a<3?r(o):a>3?r(n,t,o):r(n,t))||o);return a>3&&o&&Object.defineProperty(n,t,o),o}([(0,s.wA2)({selector:"cp-table-interactor-column",template:'<div class="Complex-navigator">\n  <table class="interactors-table"\n         [style.--cols]="complexes.length">\n    \x3c!--         [style]="complexes.length>8 ? \'width: calc(130px + 70px * var(&#45;&#45;cols) + 183px)\':\'\'">--\x3e\n    <ng-container *ngFor=" let interactor of enrichedInteractors; let i=index">\n      <tr *ngIf="!interactor.hidden">\n        <ng-container *ngFor="let oneType of ranges" class="interactorsOrdering">\n          <td *ngIf="oneType[2]===i" [attr.rowspan]="oneType[1]" class="interactorSeparation"\n              title="{{oneType[0]}}">\n            <div class="interactorNameContainer" [style.--rowspanSize]="oneType[1]">\n              {{ oneType[0] }}\n            </div>\n          </td>\n        </ng-container>\n        <td class="interactorsColumn"\n            [ngClass]="complexes.length<=6 ? \'horizontalHeader\' : \'interactorsColumnFixedWidth\'"\n            [style]="ranges.length!=0 ? \'left:3ch\':\'\'">\n          <cp-table-interactor-name\n            [interactorName]="interactor.interactor.name"\n            [interactorType]="interactor.interactor.interactorType"\n            [interactorId]="interactor.interactor.identifier"\n            [interactorOrganism]="interactor.interactor.organismName"\n            [identifierLink]="interactor.interactor.identifierLink"\n            [organismIconDisplay]="organismIconDisplay"\n            [interactorTypeDisplay]="interactorTypeDisplay"\n            [IDDisplay]="IDDisplay"\n          ></cp-table-interactor-name>\n          \x3c!-- Icon for the expandable --\x3e\n          <div class="container" *ngIf="interactor.isSubComplex">\n            <a title="{{ interactor.interactor.name }} interactors" (click)="toggleSubcomplexExpandable(i)">\n              Interactors\n              <i class="icon icon-common" data-icon="&#xf078;"\n                 style="font-size:small;\n                "></i>\n            </a>\n          </div>\n        </td>\n        \x3c!-- Interactors\' stoichiometry --\x3e\n        <ng-container *ngFor="let complex of enrichedComplexes">\n          <td class="intStoich" [ngClass]="{\'intStoichFixedWidth\': complexes.length > 6}">\n            <cp-table-main-interactor\n              [complex]="complex"\n              [i]="i"\n              [enrichedInteractors]="enrichedInteractors"\n            ></cp-table-main-interactor>\n          </td>\n        </ng-container>\n        <div class="spaceHolder" *ngIf="complexes.length>6"\n             [ngClass]="isInteractorSortingSet() ? \'spaceHolderWithSorting\' : \'spaceHolder\'"></div>\n      </tr>\n      \x3c!-- Expandable menu for subcomplexes --\x3e\n      <ng-container *ngIf="interactor.expanded">\n        <ng-container *ngIf="!!interactor.subComponents">\n          <tr *ngFor="let el of interactor.subComponents; let j=index"\n              class="expandedRows"\n              [ngClass]="getExpandedRowClass(j, interactor.subComponents.length)">\n            <td [attr.rowspan]="interactor.subComponents.length" class="interactorSeparation"\n                title="{{interactor.interactor.name}} interactors"\n                *ngIf="j === 0 && (interactorsSorting === \'Type\' || interactorsSorting === \'Organism\')">\n              <div class="interactorSeparationName"\n                   [style.--rowspanSize]="interactor.subComponents.length"> {{ interactor.interactor.name }} interactors\n              </div>\n            </td>\n            <td class="subComponentColumn"\n                [ngClass]="complexes.length<=6 ? \'horizontalHeader\' : \'interactorsColumnFixedWidth\'">\n              <div>\n                <cp-table-interactor-name\n                  [interactorName]="el.name"\n                  [interactorType]="el.interactorType"\n                  [interactorId]="el.identifier"\n                  [interactorOrganism]="interactor.interactor.organismName"\n                  [identifierLink]="el.identifierLink"\n                  [organismIconDisplay]="organismIconDisplay"\n                  [interactorTypeDisplay]="interactorTypeDisplay"\n                  [IDDisplay]="IDDisplay"\n                ></cp-table-interactor-name>\n              </div>\n            </td>\n            <ng-container *ngFor="let complex of enrichedComplexes">\n              <td class="intStoich" [ngClass]="{\'intStoichFixedWidth\': complexes.length > 6}">\n                <cp-table-subcomponent-interactor\n                  [complex]="complex"\n                  [i]="i"\n                  [j]="j"\n                  [enrichedInteractors]="enrichedInteractors"\n                ></cp-table-subcomponent-interactor>\n              </td>\n            </ng-container>\n            <div class="spaceHolder" *ngIf="enrichedComplexes.length > 6"></div>\n          </tr>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  </table>\n</div>\n',styles:[L]})],M);var H=a(87690),W=function(){function e(){r(this,e)}return o(e,[{key:"ngOnInit",value:function(){this.interactorTypeIcon=b(this.interactorType),this.interactorOrganismIcon=C(this.interactorOrganism)}},{key:"externalLinkVisibleHandler",value:function(e){this.externalLinkVisible=e}}]),e}();W.propDecorators={interactorName:[{type:s.IIB}],interactorType:[{type:s.IIB}],interactorId:[{type:s.IIB}],interactorOrganism:[{type:s.IIB}],identifierLink:[{type:s.IIB}],organismIconDisplay:[{type:s.IIB}],interactorTypeDisplay:[{type:s.IIB}],IDDisplay:[{type:s.IIB}],isMainInteractor:[{type:s.IIB}]},W=function(e,n,t,i){var r,a=arguments.length,o=a<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(o=(a<3?r(o):a>3?r(n,t,o):r(n,t))||o);return a>3&&o&&Object.defineProperty(n,t,o),o}([(0,s.wA2)({selector:"cp-table-interactor-name",template:'<div class="container">\n  <div class="nameAndIcons" [ngClass]="{inlineDisplay: interactorType===\'stable complex\'}">\n    <i *ngIf="organismIconDisplay"\n       class="{{interactorOrganismIcon}}"\n       title="{{interactorOrganism}}"></i>\n\n    <i *ngIf="interactorTypeDisplay"\n       class="{{interactorTypeIcon}}"\n       title="{{interactorType}}"></i>\n\n    <div class="name" title="{{interactorId}}" *ngIf="IDDisplay"> {{ interactorName }}\n    </div>\n    <a *ngIf="IDDisplay"\n       [routerLink]="[\'/complex/search\']"\n       [queryParams]="{query: interactorId, page: 1}"\n       target="_blank">\n      <i class="icon icon-functional small" data-icon="1"\n         title="More complexes containing {{interactorName}}"></i>\n    </a>\n\n    <div class="nameCompact" *ngIf="!IDDisplay">\n      <div class="name" title="More complexes containing {{interactorName}}" *ngIf="!IDDisplay">\n        <a *ngIf="!IDDisplay"\n           [routerLink]="[\'/complex/search\']"\n           [queryParams]="{query: interactorId, page: 1}"\n           target="_blank">\n          {{ interactorName }}\n        </a>\n      </div>\n      <cp-table-interactor-external-link\n        *ngIf="!IDDisplay"\n        [interactorId]="interactorId"\n        [identifierLink]="identifierLink"\n        [interactorType]="interactorType"\n        [isMainInteractor]="isMainInteractor"\n        [IDDisplay]="IDDisplay"\n        (externalLinkVisible)="externalLinkVisibleHandler($event)">\n      </cp-table-interactor-external-link>\n    </div>\n  </div>\n\n  <cp-table-interactor-external-link\n    *ngIf="IDDisplay"\n    [interactorId]="interactorId"\n    [identifierLink]="identifierLink"\n    [interactorType]="interactorType"\n    [isMainInteractor]="isMainInteractor"\n    [IDDisplay]="IDDisplay"\n    (externalLinkVisible)="externalLinkVisibleHandler($event)">\n  </cp-table-interactor-external-link>\n</div>\n',styles:[H]})],W);var q=a(89817),G=function(){function e(){r(this,e),this.externalLinkVisible=new s.vpe}return o(e,[{key:"ngOnInit",value:function(){this.showExternalLink()}},{key:"showExternalLink",value:function(){return this.isMainInteractor&&"stable complex"===this.interactorType?(this.externalLinkVisible.emit(!1),!1):(this.externalLinkVisible.emit(!!this.identifierLink),!!this.identifierLink)}}]),e}();G.propDecorators={interactorId:[{type:s.IIB}],identifierLink:[{type:s.IIB}],interactorType:[{type:s.IIB}],isMainInteractor:[{type:s.IIB}],IDDisplay:[{type:s.IIB}],externalLinkVisible:[{type:s.r_U}]},G=function(e,n,t,i){var r,a=arguments.length,o=a<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(o=(a<3?r(o):a>3?r(n,t,o):r(n,t))||o);return a>3&&o&&Object.defineProperty(n,t,o),o}([(0,s.wA2)({selector:"cp-table-interactor-external-link",template:'<div class="externalLinkContainer" title="More information about {{interactorId}}">\n  <a *ngIf="externalLinkVisible" href="{{identifierLink}}" target="_blank" class="externalLinkContainer">\n    <span *ngIf="IDDisplay">{{ interactorId }}</span>\n    <i class="icon icon-generic small" data-icon="x" title="More information about {{ interactorId }}"></i>\n  </a>\n</div>\n',styles:[q]})],G);var X=a(51551),U=o(function e(){r(this,e)});U.propDecorators={stoichiometryText:[{type:s.IIB}],stoichiometryValue:[{type:s.IIB}]},U=function(e,n,t,i){var r,a=arguments.length,o=a<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(o=(a<3?r(o):a>3?r(n,t,o):r(n,t))||o);return a>3&&o&&Object.defineProperty(n,t,o),o}([(0,s.wA2)({selector:"cp-table-interactor-stoichiometry",template:'<ng-container>\n  <div class="stoichNum" title="{{ stoichiometryText }}">\n    {{ stoichiometryValue }}\n  </div>\n</ng-container>\n',styles:[X]})],U);var $=a(91954),K=function(){function e(){r(this,e)}return o(e,[{key:"ngOnChanges",value:function(){this.interactorComponent=E(this.complex.complex,this.interactor.interactor.identifier,this.enrichedInteractors),this.topLineClass=this.displayTopLineClass(this.complex,this.i),this.bottomLineClass=this.displayBottomLineClass(this.complex,this.i)}},{key:"interactor",get:function(){return this.enrichedInteractors[this.i]}},{key:"displayTopLineClass",value:function(e,n){return this.doesLineCrossInteractorCell(e,n)||this.doesLineEndOnInteractorCell(e,n)&&!this.doesLineStartOnInteractorCell(e,n)?"verticalLine":"transparentVerticalLine"}},{key:"displayBottomLineClass",value:function(e,n){return this.doesLineCrossInteractorCell(e,n)||this.doesLineStartOnInteractorCell(e,n)&&!this.doesLineEndOnInteractorCell(e,n)?"verticalLine":"transparentVerticalLine"}},{key:"doesLineCrossInteractorCell",value:function(e,n){return!(null==e.startInteractorIndex||null==e.endInteractorIndex||!(e.startInteractorIndex<n&&e.endInteractorIndex>n||e.startInteractorIndex<n&&e.endInteractorIndex===n&&this.enrichedInteractors[n].isSubComplex&&this.enrichedInteractors[n].expanded&&null!=e.startSubComponentIndex&&null!=e.endSubComponentIndex))}},{key:"doesLineStartOnInteractorCell",value:function(e,n){return!(null==e.startInteractorIndex||e.startInteractorIndex!==n||this.enrichedInteractors[n].isSubComplex&&!e.startInteractorIncludedWhenExpanded)}},{key:"doesLineEndOnInteractorCell",value:function(e,n){return null!=e.endInteractorIndex&&e.endInteractorIndex===n&&!(this.enrichedInteractors[n].isSubComplex&&this.enrichedInteractors[n].expanded&&null!=e.startSubComponentIndex&&null!=e.endSubComponentIndex)}}]),e}();K.propDecorators={complex:[{type:s.IIB}],i:[{type:s.IIB}],enrichedInteractors:[{type:s.IIB}]},K=function(e,n,t,i){var r,a=arguments.length,o=a<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(o=(a<3?r(o):a>3?r(n,t,o):r(n,t))||o);return a>3&&o&&Object.defineProperty(n,t,o),o}([(0,s.wA2)({selector:"cp-table-main-interactor",template:'<div [ngClass]="topLineClass"></div>\n<cp-table-interactor-stoichiometry\n  *ngIf="!!interactorComponent"\n  [stoichiometryText]="interactorComponent.stochiometryText"\n  [stoichiometryValue]="interactorComponent.stochiometryValueFormatted"\n></cp-table-interactor-stoichiometry>\n<div [ngClass]="bottomLineClass"></div>\n',styles:[$]})],K);var J=a(47840),Q=function(){function e(){r(this,e)}return o(e,[{key:"ngOnChanges",value:function(){this.interactorComponent=E(this.complex.complex,this.el.identifier,this.enrichedInteractors),this.displayTopLineClass=this.displayTopLineClassExpanded(this.complex,this.i,this.j),this.displayBottomLineClass=this.displayBottomLineClassExpanded(this.complex,this.i,this.j)}},{key:"interactor",get:function(){return this.enrichedInteractors[this.i]}},{key:"el",get:function(){return this.enrichedInteractors[this.i].subComponents[this.j]}},{key:"displayTopLineClassExpanded",value:function(e,n,t){return this.doesLineCrossSubcomponentCell(e,n,t)||this.doesLineEndOnSubcomponentCell(e,n,t)&&!this.doesLineStartOnSubcomponentCell(e,n,t)?"verticalLine":"transparentVerticalLine"}},{key:"displayBottomLineClassExpanded",value:function(e,n,t){return this.doesLineCrossSubcomponentCell(e,n,t)||this.doesLineStartOnSubcomponentCell(e,n,t)&&!this.doesLineEndOnSubcomponentCell(e,n,t)?"verticalLine":"transparentVerticalLine"}},{key:"doesLineCrossSubcomponentCell",value:function(e,n,t){return null!=e.startInteractorIndex&&null!=e.endInteractorIndex&&(e.startInteractorIndex<n&&e.endInteractorIndex>n||null!=e.startSubComponentIndex&&null!=e.endSubComponentIndex&&(e.startSubComponentIndex<t&&e.endSubComponentIndex>t||e.startInteractorIndex<n&&e.endSubComponentIndex>t||e.startSubComponentIndex<t&&e.endInteractorIndex>n))}},{key:"doesLineStartOnSubcomponentCell",value:function(e,n,t){var i=this;return null!=e.startInteractorIndex&&e.startInteractorIndex===n&&null!=e.startSubComponentIndex&&e.startSubComponentIndex===t&&!e.complex.interactors.some(function(e){return i.enrichedInteractors[n].interactor.identifier===e.identifier})}},{key:"doesLineEndOnSubcomponentCell",value:function(e,n,t){return null!=e.endInteractorIndex&&e.endInteractorIndex===n&&null!=e.endSubComponentIndex&&e.endSubComponentIndex===t}}]),e}();Q.propDecorators={complex:[{type:s.IIB}],i:[{type:s.IIB}],j:[{type:s.IIB}],enrichedInteractors:[{type:s.IIB}]},Q=function(e,n,t,i){var r,a=arguments.length,o=a<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(o=(a<3?r(o):a>3?r(n,t,o):r(n,t))||o);return a>3&&o&&Object.defineProperty(n,t,o),o}([(0,s.wA2)({selector:"cp-table-subcomponent-interactor",template:'<div [ngClass]="displayTopLineClass"></div>\n<cp-table-interactor-stoichiometry\n  *ngIf="!!interactorComponent"\n  [stoichiometryText]="interactorComponent.stochiometryText"\n  [stoichiometryValue]="interactorComponent.stochiometryValueFormatted"\n></cp-table-interactor-stoichiometry>\n<div [ngClass]="displayBottomLineClass"></div>\n',styles:[J]})],Q);var Y=a(52741),Z=function(){function e(){r(this,e),this.interactorsSortingChange=new s.vpe,this.organismIconDisplayChange=new s.vpe,this.interactorTypeDisplayChange=new s.vpe,this.IDDisplayChange=new s.vpe}return o(e,[{key:"ngOnInit",value:function(){this.updateDisplay()}},{key:"InteractorsSortingChanges",value:function(e){this.interactorsSortingChange.emit(e),"detailed"===this.typeOfDisplay&&("Type"===e?(this.interactorTypeDisplay=!1,this.organismIconDisplay=!0):"Organism"===e&&(this.organismIconDisplay=!1,this.interactorTypeDisplay=!0),this.updateDisplay())}},{key:"DisplayingOrganism",value:function(){this.organismIconDisplay=!this.organismIconDisplay,this.updateDisplay()}},{key:"DisplayingType",value:function(){this.interactorTypeDisplay=!this.interactorTypeDisplay,this.updateDisplay()}},{key:"DisplayingID",value:function(){this.IDDisplay=!this.IDDisplay,this.updateDisplay()}},{key:"setDisplayType",value:function(e){"compact"===e?this.compactDisplay():"detailed"===e&&this.detailedDisplay()}},{key:"compactDisplay",value:function(){this.organismIconDisplay=!1,this.interactorTypeDisplay=!1,this.IDDisplay=!1,this.typeOfDisplay="compact",this.changesEmitter()}},{key:"detailedDisplay",value:function(){this.organismIconDisplay=!0,this.interactorTypeDisplay=!0,this.IDDisplay=!0,this.typeOfDisplay="detailed",this.changesEmitter()}},{key:"updateDisplay",value:function(){this.organismIconDisplay||this.interactorTypeDisplay||this.IDDisplay?this.typeOfDisplay="detailed":this.typeOfDisplay="compact",this.changesEmitter()}},{key:"changesEmitter",value:function(){this.organismIconDisplayChange.emit(this.organismIconDisplay),this.interactorTypeDisplayChange.emit(this.interactorTypeDisplay),this.IDDisplayChange.emit(this.IDDisplay)}}]),e}();Z.propDecorators={interactorsSortingChange:[{type:s.r_U}],organismIconDisplayChange:[{type:s.r_U}],interactorTypeDisplayChange:[{type:s.r_U}],IDDisplayChange:[{type:s.r_U}],interactorsSorting:[{type:s.IIB}],organismIconDisplay:[{type:s.IIB}],interactorTypeDisplay:[{type:s.IIB}],IDDisplay:[{type:s.IIB}]},Z=function(e,n,t,i){var r,a=arguments.length,o=a<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(o=(a<3?r(o):a>3?r(n,t,o):r(n,t))||o);return a>3&&o&&Object.defineProperty(n,t,o),o}([(0,s.wA2)({selector:"cp-complex-navigator-buttons",template:'<div class="filters">\n  <div class="sortingInteractors">\n    <input type="submit" name="classificationButton" value="Sort interactors" class="button">\n    <div class="typeOfSorting">\n      <input type="submit" name="occurrenceClassification" value="Occurrence" class="button"\n             (click)="InteractorsSortingChanges(\'Occurrence\')">\n      <input type="submit" name="typeClassification" value="Type" class="button"\n             (click)="InteractorsSortingChanges(\'Type\')">\n      <input type="submit" name="organismClassification" value="Organism" class="button"\n             (click)="InteractorsSortingChanges(\'Organism\')">\n      \x3c!--      <input type="submit" name="geneClassification" value="Orthology (Not available yet)" class="button"--\x3e\n      \x3c!--             (click)="InteractorsSortingChanges(\'Orthology\')">--\x3e\n    </div>\n  </div>\n\n  <div class="dropdown">\n    <input type="submit" name="classificationButton" value="Display Options" class="button">\n    <ul class="displaySize">\n      <li>\n        <input type="radio" name="displayType" value="Compact" class="checkbox compact"\n               (click)="setDisplayType(\'compact\')" [checked]="typeOfDisplay === \'compact\'">\n        Compact display\n      </li>\n      <li class="detailedDisplay">\n        <input type="radio" name="displayType" value="Detailed" class="checkbox detailed"\n               (click)="setDisplayType(\'detailed\')" [checked]="typeOfDisplay === \'detailed\'">\n        Detailed display\n        <ul class="detailedDisplayOptions">\n          <li>\n            <input type="checkbox" name="organism" value="organism" class="checkbox" [checked]="organismIconDisplay"\n                   (change)="DisplayingOrganism()">\n            Organism\n          </li>\n          <li>\n            <input type="checkbox" name="type" value="type" class="checkbox" [checked]="interactorTypeDisplay"\n                   (change)="DisplayingType()">\n            Type\n          </li>\n          <li>\n            <input type="checkbox" name="id" value="id" class="checkbox" [checked]="IDDisplay"\n                   (change)="DisplayingID()">\n            Interactor ID\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </div>\n</div>\n',styles:[Y]})],Z);var ee=a(72987),ne=a(82868),te=function(){function e(n){r(this,e),this.analyticsService=n,this.visible=!0}return o(e,[{key:"selectRating",value:function(e){this.selectedRating=e,this.analyticsService.rateComplexNavigator(this.selectedRating),this.ratingVisibility()}},{key:"ratingVisibility",value:function(){this.visible=!1}}]),e}();te.ctorParameters=function(){return[{type:f.y}]},te=function(e,n,t,i){var r,a=arguments.length,o=a<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(o=(a<3?r(o):a>3?r(n,t,o):r(n,t))||o);return a>3&&o&&Object.defineProperty(n,t,o),o}([(0,s.wA2)({selector:"cp-complex-navigator-rating",template:'<div class="ratingComponent" *ngIf="visible===true">\n  <div class="buttonContainer">\n    <button class="close" id="closePopup" (click)="ratingVisibility()">&times;</button>\n  </div>\n  <div class="text">\n    <p>Tell us about your experience with the Complex Navigator!</p>\n  </div>\n  <div class="ratingComponentStars">\n    <span class="star" [ngClass]="{\'selected\': selectedRating >= 1}" (click)="selectRating(1)"> &#9733; </span>\n    <span class="star" [ngClass]="{\'selected\': selectedRating >= 2}" (click)="selectRating(2)"> &#9733; </span>\n    <span class="star" [ngClass]="{\'selected\': selectedRating >= 3}" (click)="selectRating(3)"> &#9733; </span>\n    <span class="star" [ngClass]="{\'selected\': selectedRating >= 4}" (click)="selectRating(4)"> &#9733; </span>\n    <span class="star" [ngClass]="{\'selected\': selectedRating >= 5}" (click)="selectRating(5)"> &#9733; </span>\n  </div>\n</div>\n',styles:[ne]})],te);var ie=o(function e(){r(this,e)});ie=function(e,n,t,i){var r,a=arguments.length,o=a<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(o=(a<3?r(o):a>3?r(n,t,o):r(n,t))||o);return a>3&&o&&Object.defineProperty(n,t,o),o}([(0,s.LVF)({imports:[p.Bz.forChild([{path:"",component:y}]),c.ez,D.L,ee.JP],exports:[R],declarations:[y,k,w,I,O,R,F,M,W,G,U,K,Q,Z,te]})],ie)},26531:function(e){e.exports=""},82328:function(e){e.exports=".description {\n  width: 100%;\n  text-align: justify;\n}\n"},52741:function(e){e.exports=".typeOfSorting {\n  display: none;\n}\n\n.sortingInteractors:hover .typeOfSorting {\n  display: flex;\n  margin-top: -15px;\n  flex-direction: row;\n  position: absolute;\n  z-index: 5;\n}\n\n.typeOfSorting .button {\n  border-right: 1px solid white;\n  font-size: 14px;\n}\n\n.filters {\n  width: 120.5%;\n  display: flex;\n  justify-content: center;\n  grid-gap: 10px;\n  height: 67px;\n  z-index: 5;\n  text-align: center;\n}\n\n.displaySize {\n  display: none;\n}\n\n.detailedDisplayOptions {\n  display: none;\n}\n\n.dropdown:hover .displaySize {\n  display: flex;\n  list-style: none;\n  width: 300px;\n  background-color: #007c82;\n  color: white;\n  margin-top: -15px;\n  flex-direction: row;\n  position: absolute;\n  height: 40px;\n  align-content: center;\n  z-index: 5;\n}\n\n.dropdown:hover .displaySize li {\n  width: 200px;\n  background-color: #007c82;\n  margin-left: -21px;\n  text-align: left;\n  padding-left: 6px;\n  z-index: 5;\n}\n\nli {\n  text-align: center;\n  align-items: center;\n  font-size: 14px;\n  border-left: 1px solid white;\n  padding-top: 10px;\n  max-width: 171px;\n}\n\n.detailedDisplay:hover .detailedDisplayOptions {\n  display: flex;\n  list-style: none;\n  align-content: baseline;\n  flex-direction: column;\n  position: absolute;\n  z-index: 5;\n  margin-left: 14px;\n}\n\n.detailedDisplayOptions li {\n  text-align: left;\n  z-index: 5;\n}\n"},82868:function(e){e.exports=".star {\n  font-size: 1.5em;\n  cursor: pointer;\n  color: white;\n}\n\n.star.selected {\n  color: gold;\n}\n\n.ratingComponent {\n  background-color: #007c82;\n  padding: 5px;\n  width: 20%;\n  text-align: center;\n  margin-left: 92%;\n  margin-top: -5%;\n  position: fixed;\n  z-index: 5;\n  top: 20em;\n  left: -13%;\n  border: 1px solid white;\n  animation-name: ratingComponentMove;\n  animation-duration: 1s;\n}\n\n.ratingComponent input {\n  background-color: white;\n  color: #007c82;\n}\n\n.text {\n  display: -webkit-box;\n  color: white;\n  width: 96%;\n  text-align: -webkit-center;\n  padding-left: 10px;\n  margin-bottom: -15px;\n}\n\n@keyframes ratingComponentMove {\n  from {\n    left: 10%;\n  }\n  to {\n    left: -13%;\n  }\n}\n\n.buttonContainer {\n  width: 100%;\n  height: 1ch;\n  text-align: end;\n  padding-right: 5px;\n}\n\n.close {\n  color: white;\n}\n\n.ratingComponentStars {\n  padding-bottom: 5px;\n}\n"},64152:function(e){e.exports=".ComplexNavigator {\n  width: calc(100rem * 0.71); /* the px value corresponds to the width of the facets column + the margin */\n  margin-left: calc(-100rem * 0.17)\n}\n\n"},95260:function(e){e.exports=".CN-table {\n  transform: rotateX(180deg); /* rotate the header's content to make it it the right sense (when removes, it is upside down) */\n}\n\nthead {\n  border: 0;\n  background-color: white;\n  border-right: 0 solid white;\n  overflow: scroll;\n\n}\n\n.CN-table {\n  -webkit-clip-path: fill-box;\n          clip-path: fill-box;\n  overflow: scroll;\n}\n\n.spaceHolderSorting {\n  width: 3ch;\n  border-bottom: 3px solid #007c82;\n}\n\n/* Rotated complexes names */\n\n.spaceHolderHeaderOverflow {\n  min-width: 130px;\n  max-width: 130px;\n  position: sticky;\n  left: 0;\n  z-index: 4;\n  color: #007c82;\n  background-color: white;\n  padding-top: 173px;\n  text-align: right;\n}\n\n.iconOrganism {\n  position: sticky;\n  text-align: center;\n  background-color: #007c82;\n  color: white;\n  border-left: 1px solid white;\n  font-size: medium;\n  height: 35px;\n}\n\n.tilted-label {\n  text-overflow: ellipsis;\n  width: 28ch;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n.CN-table .tableHeadOverflow tr {\n  --cols: 1;\n  --intHeader: 130px;\n  --parentWidth: 100%;\n  --sizeSpaceHolder: calc(var(--parentWidth) - 70px * var(--cols) - var(--intHeader));\n  display: grid;\n  grid-template-columns: var(--intHeader) repeat(auto-fit, 70px);\n  width: calc(var(--intHeader) + 70px * var(--cols) + var(--sizeSpaceHolder));\n  overflow: hidden;\n}\n\n.CN-table .tableHeadOverflow th.rotate {\n  position: relative;\n  width: 350px;\n  height: 51px !important;\n  color: white;\n  font-size: 14px;\n  text-align: left;\n  border: 1px solid white;\n  top: 70px;\n  left: -52px;\n  display: flex;\n  align-items: center;\n  align-content: center;\n  padding: 0;\n  transform: rotate(-45deg);\n  border-collapse: collapse;\n}\n\n.CN-table .tableHeadOverflow th.rotate a {\n  width: 100%;\n  height: 100%;\n  align-content: center;\n  background-color: #007c82;\n  padding: 0 0 0 70px;\n  border: none;\n}\n\n.spaceHolder {\n  width: 1000px;\n  background-color: #007c82;\n  border-left: 1px solid white;\n}\n\n.interactorsHeader.overflow {\n  min-width: 130px;\n  max-width: 130px;\n  width: 130px;\n  position: sticky;\n  left: 0;\n  z-index: 4;\n  background-color: white;\n  border-bottom: 3px solid #007c82;\n  height: 35px;\n  text-align: right;\n  color: #007c82;\n}\n\n/* Horizontal complexes name */\n\n.CN-table th.horizontal.interactorsHeader {\n  padding: 5px;\n  min-width: 130px;\n  max-width: 130px;\n  font-size: medium;\n  border-left: none;\n  text-align: right;\n  color: #007c82;\n  background-color: white;\n  border-bottom: 3px solid #007c82;\n}\n\n.horizontal-label {\n  text-align: center;\n  text-overflow: ellipsis;\n  width: 90%;\n  white-space: nowrap;\n  overflow: hidden;\n  margin: auto;\n}\n\n.CN-table th.horizontal {\n  color: white;\n  background-color: #007c82;\n  border-left: 1px solid white;\n  min-width: 80px;\n  max-width: 80px;\n  height: 35px;\n  font-size: 15px;\n}\n\na:visited {\n  color: white;\n}\n\na {\n  color: white;\n}\n\n"},90303:function(e){e.exports="table {\n  --cols: 1;\n  height: 1px;\n  width: calc(var(130px) + 70px * var(--cols) + 183px);\n  overflow: scroll;\n}\n\n/* interactors column */\n\n.interactorsColumn {\n  position: sticky;\n  left: 0;\n  z-index: 5;\n  max-height: 45px;\n  min-height: 45px;\n  min-width: 130px;\n  max-width: 130px;\n  padding: 5px;\n  text-align: end;\n  color: #0e6f76;\n  font-weight: bold;\n  background: inherit;\n}\n\n.interactorsColumnFixedWidth {\n  width: 130px;\n}\n\n.interactorsColumn a {\n  font-weight: normal;\n}\n\n.intStoich {\n  height: 45px;\n  max-width: 70px;\n  min-width: 70px;\n  font-size: medium;\n  text-align: end;\n  z-index: 1;\n}\n\n.intStoichFixedWidth {\n  width: 70px;\n}\n\ni:not(.small) {\n  font-size: large;\n}\n\ntr:nth-child(even) {\n  background-color: #dfeced;\n}\n\ntr:nth-child(odd) {\n  background-color: #f7f9fa;\n}\n\na, a:visited {\n  color: #0e6f76;\n}\n\n.spaceHolder {\n  width: 183px;\n}\n\n.subComponentColumn {\n  left: 0;\n  z-index: 30;\n  max-height: 45px;\n  min-height: 45px;\n  min-width: 130px;\n  max-width: 130px;\n  padding: 5px;\n  text-align: end;\n  color: #0e6f76;\n  font-weight: bold;\n  background: inherit;\n  position: sticky\n}\n\n.expandedRows {\n  color: #0e6f76;\n  position: relative;\n}\n\n.firstExpandedRow:after {\n  z-index: 40;\n  content: '';\n  position: absolute;\n  inset: -2px -1px -2px -1px;\n  pointer-events: none;\n  background: linear-gradient(180deg, #0e6f7696 0px, transparent 10px);\n}\n\n.lastExpandedRow:after {\n  z-index: 40;\n  content: '';\n  position: absolute;\n  inset: -2px -1px -2px -1px;\n  pointer-events: none;\n  background: linear-gradient(0deg, #0e6f7696 0px, transparent 10px);\n}\n\n.singleExpandedRow:after {\n  z-index: 40;\n  content: '';\n  position: absolute;\n  inset: -2px -1px -2px -1px;\n  pointer-events: none;\n  background: linear-gradient(180deg, #0e6f7696 0px, transparent 10px), linear-gradient(0deg, #0e6f7696 0px, transparent 10px);\n}\n\n/* Interactors sorting label*/\n\n.interactorSeparation {\n  max-width: 3ch;\n  min-width: 3ch;\n  background-color: #0e6f76;\n  border: 1px solid white;\n  overflow: hidden;\n  width: 1%;\n  text-align: -webkit-center;\n  position: sticky;\n  z-index: 4;\n  left: 0;\n}\n\n.interactorNameContainer,\n.interactorSeparationName {\n  --rowspanSize: 1;\n  writing-mode: vertical-rl;\n  transform: rotate(-180deg);\n  font-size: small;\n  color: white;\n  line-height: 0.8;\n  text-align: center;\n\n\n  text-overflow: ellipsis;\n  height: calc(var(--rowspanSize) * 48px);\n  white-space: nowrap;\n  overflow: hidden;\n\n}\n\n.container {\n  font-size: 14px;\n}\n\n.horizontalHeader {\n  min-width: 114px;\n  max-width: 114px;\n}\n\n"},89817:function(e){e.exports="a {\n  font-weight: normal;\n}\n\na, a:visited {\n  color: #0e6f76;\n}\n\ni:not(.small) {\n  font-size: large;\n}\n\n.externalLinkContainer {\n  justify-content: end;\n  grid-gap: 5px;\n  font-size: 14px;\n  line-break: anywhere;\n  word-break: break-word;\n}\n"},87690:function(e){e.exports="a {\n  font-weight: bold;\n}\n\na, a:visited {\n  color: #0e6f76;\n}\n\ni:not(.small) {\n  font-size: medium;\n}\n\n.nameAndIcons {\n  font-size: 14px;\n  display: flex;\n  width: inherit;\n  justify-content: end;\n}\n\n.inlineDisplay {\n  display: flex;\n  justify-content: end;\n}\n\n.name {\n  width: inherit;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-wrap: nowrap;\n  text-align: end;\n  padding-right: 5px;\n  /*display: inline;*/\n}\n\n.nameCompact {\n  display: inline-flex;\n  width: -webkit-fill-available;\n}\n"},51551:function(e){e.exports="\n.stoichNum {\n  width: 4ch;\n  height: 4ch;\n  border-radius: 4ch;\n  background-color: #0e6f76;\n  text-align: center;\n  padding-top: 0.5ch;\n  color: white;\n  font-size: small;\n  margin-left: auto;\n  margin-right: auto;\n}\n"},91954:function(e){e.exports=".verticalLine, .transparentVerticalLine {\n  margin-left: auto;\n  margin-right: auto;\n  min-width: 1%;\n  max-width: 1%;\n  max-height: 80%;\n  min-height: 80%;\n  z-index: 0;\n}\n\n.verticalLine {\n  border-right: 3px solid #0e6f76;\n}\n\n.transparentVerticalLine {\n  border-right: 0;\n}\n"},47840:function(e){e.exports=".verticalLine, .transparentVerticalLine {\n  margin-left: auto;\n  margin-right: auto;\n  min-width: 1%;\n  max-width: 1%;\n  max-height: 50%;\n  min-height: 50%;\n  z-index: 0;\n}\n\n.verticalLine {\n  border-right: 3px solid #0e6f76;\n}\n\n.transparentVerticalLine {\n  border-right: 0;\n}\n"},65170:function(e){e.exports=".complexNavigatorTable {\n  border-collapse: separate;\n  height: 100%;\n  width: 120%;\n}\n\n.header {\n  position: sticky;\n  top: 20px;\n  z-index: 2;\n  overflow-x: auto;\n  overflow-y: hidden;\n  transform: rotateX(180deg);\n}\n\n.interactors {\n  z-index: 1;\n  position: relative;\n  overflow-y: hidden;\n}\n"},39606:function(e){e.exports=""},50473:function(e){e.exports=".displayButton {\n  float: right;\n}\n\n.view-button {\n  float: unset;\n  width: 225px;\n  margin-right: 5px;\n  background-color: white;\n  color: #555;\n  border: 1px dotted #007c82;\n}\n\n.view-button:hover {\n  color: #007c82;\n  background-color: rgb(234, 234, 234);\n  border: transparent;\n  border-bottom: 1px dotted #007c82;\n}\n\n.selected,\n.selected:hover {\n  background-color: #007c82;\n  color: white;\n  opacity: 100%;\n}\n\n.new-tag {\n  color: red;\n  font-weight: bold;\n  font-size: x-small;\n}\n\n.new-tag-selected {\n  color: yellow;\n}\n\n.filterColumn {\n  width: calc(100rem * 0.22);\n}\n\n.leftAligned {\n  --global-margin: calc((100vw - 80rem) / -2);\n  --min-margin-left: calc(-100rem * 0.17);\n  margin-left: max(var(--global-margin), var(--min-margin-left));\n}\n\n.cnButton {\n  outline-offset: 0;\n  outline: rgba(0, 124, 130, 0.75) solid 1px;\n  animation: animateOutline 4s ease infinite;\n}\n\n@keyframes animateOutline {\n  0% {\n    outline-width: 1px;\n    outline-offset: 0;\n    outline-color: rgba(0, 124, 130, 0);\n  }\n\n  10% {\n    outline-color: rgba(0, 124, 130, 0.75);\n  }\n\n  50% {\n    outline-width: 6px;\n    outline-offset: 4px;\n    outline-color: rgba(0, 124, 130, 0);\n  }\n\n  100% {\n    outline-width: 6px;\n    outline-offset: 4px;\n    outline-color: rgba(102, 102, 102, 0);\n  }\n}\n\n.cnButton.selected {\n  animation: none;\n}\n"}}])}();