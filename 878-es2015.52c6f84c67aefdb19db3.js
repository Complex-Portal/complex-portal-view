"use strict";(self.webpackChunkcomplex_portal_view=self.webpackChunkcomplex_portal_view||[]).push([[878],{7878:function(e,t,n){n.r(t),n.d(t,{ComplexResultsModule:function(){return T}});var i=n(10639),r=n(38583),a=n(50473),l=n(35076),s=n(20658),o=n(83747),c=n(39075),p=n(8991),g=n(45178),h=n(30048),d=n(23186);let u=class{constructor(e,t,n,i,r,a){this.route=e,this.router=t,this.complexPortalService=n,this.titleService=i,this.googleAnalyticsService=r,this.notificationService=a,this._allInteractorsInComplexSearch=[],this._listPageSize=15,this._navigatorPageSize=20}ngOnInit(){this.titleService.setTitle("Complex Portal - Results"),this._allInteractorsInComplexSearch=[],this.route.fragment.subscribe(e=>{e===d.aA?this.DisplayType=d.aA:e===d.aM&&(this.DisplayType=d.aM),this.route.queryParams.subscribe(e=>{this._query=e.query,this._spicesFilter=e.species?e.species.split("+"):[],this._bioRoleFilter=e.bioRole?e.bioRole.split("+"):[],this._interactorTypeFilter=e.interactorType?e.interactorType.split("+"):[],this.currentPageIndex=e.page?Number(e.page):1,this.requestComplexResults(),document.body.scrollTop=0})})}ngAfterViewInit(){}requestComplexResults(){this.complexPortalService.findComplex(this.query,this.spicesFilter,this.bioRoleFilter,this.interactorTypeFilter,this.currentPageIndex,this.pageSize).subscribe(e=>{if(this.complexSearch=e,this._allInteractorsInComplexSearch=[],0!==this.complexSearch.totalNumberOfResults){this.lastPageIndex=Math.ceil(e.totalNumberOfResults/this.pageSize);for(let t=0;t<e.elements.length;t++)for(const n of e.elements[t].interactors)this._allInteractorsInComplexSearch.some(e=>e.identifier===n.identifier)||this._allInteractorsInComplexSearch.push(new g.Q(n.identifier,n.identifierLink,n.name,n.description,n.interactorType,n.organismName))}o.R.hide()})}reloadPage(){const e={};e.query=this._query,e.page=this.currentPageIndex,void 0!==this._spicesFilter&&0!==this._spicesFilter.length&&(e.species=this.prepareFiltersForParams(this.spicesFilter)),void 0!==this._bioRoleFilter&&0!==this._bioRoleFilter.length&&(e.bioRole=this.prepareFiltersForParams(this._bioRoleFilter)),void 0!==this._interactorTypeFilter&&0!==this._interactorTypeFilter.length&&(e.interactorType=this.prepareFiltersForParams(this._interactorTypeFilter)),this.router.navigate([],{queryParams:e,fragment:this.DisplayType}),o.R.hide();const t=this.getFilterCount();1<t&&this.googleAnalyticsService.fireMultiFilterEvent(t.toString())}prepareFiltersForParams(e){return e.toString().replace(/,/g,"+")}getFilterCount(){return this._spicesFilter.length+this._interactorTypeFilter.length+this._bioRoleFilter.length}onPageChange(e){this.currentPageIndex=e,this.reloadPage()}onResetAllFilters(){this.spicesFilter=[],this.bioRoleFilter=[],this.interactorTypeFilter=[],this.currentPageIndex=1,this.reloadPage()}onSpicesFilterChanged(e){this.spicesFilter=e,this.currentPageIndex=1,this.reloadPage()}onBiologicalRoleFilterChanged(e){this.bioRoleFilter=e,this.currentPageIndex=1,this.reloadPage()}onInteractorTypeFilterChanged(e){this.interactorTypeFilter=e,this.currentPageIndex=1,this.reloadPage()}get query(){return this._query}set query(e){this._query=e}get currentPageIndex(){return this.DisplayType===d.aA?this._navigatorCurrentPage:this._listCurrentPage}set currentPageIndex(e){this.DisplayType===d.aA?this._navigatorCurrentPage=e:this._listCurrentPage=e}get complexSearch(){return this._complexSearch}set complexSearch(e){this._complexSearch=e,this.redirectToComplexDetailsPageIfOneResult(),this.setFirstDisplayType()}get lastPageIndex(){return this.DisplayType===d.aA?this._navigatorLastPageIndex:this._listLastPageIndex}set lastPageIndex(e){this.DisplayType===d.aA?this._navigatorLastPageIndex=e:this._listLastPageIndex=e}get pageSize(){return this.DisplayType===d.aA?this._navigatorPageSize:this._listPageSize}get spicesFilter(){return this._spicesFilter}set spicesFilter(e){this._spicesFilter=e}get bioRoleFilter(){return this._bioRoleFilter}set bioRoleFilter(e){this._bioRoleFilter=e}get interactorTypeFilter(){return this._interactorTypeFilter}set interactorTypeFilter(e){this._interactorTypeFilter=e}get allInteractorsInComplexSearch(){return this._allInteractorsInComplexSearch}onDisplayTypeChange(e){this.DisplayType!==e&&(this.DisplayType=e,e===d.aM?this.setListView():e===d.aA&&this.setComplexNavigatorView())}isDisplayComplexNavigatorView(){return this.DisplayType===d.aA}setListView(){this.toast=this.notificationService.complexNavigatorAnnouncement(),this.reloadPage()}setComplexNavigatorView(){this.toast&&(this.notificationService.closeAnnouncement(this.toast.toastId),this.toast=null),this.reloadPage()}redirectToComplexDetailsPageIfOneResult(){if(0===this.getFilterCount()&&1===this._complexSearch.totalNumberOfResults){const e=this._complexSearch.elements[0].complexAC;e&&(this.router.routeReuseStrategy.shouldReuseRoute=function(){return!1},this.router.navigate(["/complex",e]))}}setFirstDisplayType(){this.DisplayType||(this._complexSearch.totalNumberOfResults<=this._navigatorPageSize?this.setComplexNavigatorView():this.setListView())}};u.ctorParameters=()=>[{type:l.gz},{type:l.F0},{type:s.H},{type:c.Dx},{type:p.y},{type:h.g}],u=function(e,t,n,i){var r,a=arguments.length,l=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(l=(a<3?r(l):a>3?r(t,n,l):r(t,n))||l);return a>3&&l&&Object.defineProperty(t,n,l),l}([(0,i.wA2)({selector:"cp-complex-results",template:'<div class="margin-top-large margin-bottom-large row">\n  <ng-container *ngIf="complexSearch;else loadingSpinner">\n    <div class="columns medium-12" *ngIf="complexSearch.totalNumberOfResults !== 0">\n      <h2 class="padding-left-large leftAligned">Total number of\n        results: {{ complexSearch.totalNumberOfResults }} </h2>\n      <div class="row">\n        <cp-complex-navigator-rating *ngIf="isDisplayComplexNavigatorView()">\n        </cp-complex-navigator-rating>\n        <cp-complex-list-display-buttons\n          [displayType]="DisplayType"\n          (displayTypeChange)="onDisplayTypeChange($event)">\n        </cp-complex-list-display-buttons>\n      </div>\n      <div class="columns medium-4 filterColumn leftAligned">\n        <cp-complex-filter *ngIf="spicesFilter && bioRoleFilter && interactorTypeFilter"\n                           [spicesFilter]="spicesFilter"\n                           [bioRoleFilter]="bioRoleFilter"\n                           [interactorTypeFilter]="interactorTypeFilter" [facets]="complexSearch.facets"\n                           (onResetAllFilters)="onResetAllFilters()"\n                           (onSpicesFilterChanged)="onSpicesFilterChanged($event)"\n                           (onBiologicalRoleFilterChanged)="onBiologicalRoleFilterChanged($event)"\n                           (onInteractorTypeFilterChanged)="onInteractorTypeFilterChanged($event)">\n        </cp-complex-filter>\n      </div>\n      <div class="columns medium-8">\n        <cp-complex-paginator class="paginator"\n                              [currentPageIndex]="currentPageIndex"\n                              [lastPageIndex]="lastPageIndex"\n                              (onPageChange)="onPageChange($event)">\n        </cp-complex-paginator>\n        <div class="listOfResults">\n          <cp-complex-list *ngIf="!isDisplayComplexNavigatorView()"\n                           [complexSearch]="complexSearch">\n          </cp-complex-list>\n        </div>\n        <div class="ComplexNavigator" *ngIf="isDisplayComplexNavigatorView()"\n             [ngClass]="complexSearch.totalNumberOfResults <=6 ? \'smallCN\' : \'largeCN\'">\n          <cp-complex-navigator class="Complex-navigator"\n                                [complexSearch]="complexSearch"\n                                [interactors]="allInteractorsInComplexSearch"\n                                [canAddComplexesToBasket]="true"\n                                [canRemoveComplexesFromBasket]="false">\n          </cp-complex-navigator>\n        </div>\n        <cp-complex-paginator class="paginator"\n                              [currentPageIndex]="currentPageIndex"\n                              [lastPageIndex]="lastPageIndex"\n                              (onPageChange)="onPageChange($event)"></cp-complex-paginator>\n      </div>\n    </div>\n\n    <div class="columns medium-12 callout alert" *ngIf="complexSearch.totalNumberOfResults === 0">\n      <h2>No Complex Portal results found</h2>\n      <h3>We\'re sorry but we couldn\'t find anything that matched your search for: <b>{{ query }}</b></h3>\n      <h4>Please consider refining your terms:</h4>\n      <ul>\n        <li>Make sure all words are spelled correctly</li>\n        <li>Try different keywords</li>\n        <li>Be more precise: use gene or protein IDs, e.g. Ndc80 or Q04571</li>\n        <li>Remove quotes around phrases to search for each word individually. bike shed will often show more results\n          than\n          "bike shed"\n        </li>\n      </ul>\n    </div>\n  </ng-container>\n  <ng-template #loadingSpinner>\n    <cp-progress-spinner [query]="query"></cp-progress-spinner>\n  </ng-template>\n</div>\n',styles:[a]})],u);var f=n(39606);let m=class{constructor(){this.onPageChange=new i.vpe}ngOnInit(){this.updatePaginatior()}ngOnChanges(e){this.updatePaginatior()}updatePaginatior(){let e,t;for(this.pagination=[],this._lastPageIndex<5?(e=1,t=this._lastPageIndex):1===this._currentPageIndex||2===this._currentPageIndex?(e=1,t=5):this._currentPageIndex===this._lastPageIndex||this._currentPageIndex===this._lastPageIndex-1?(e=this._lastPageIndex-4,t=this._lastPageIndex):(e=this._currentPageIndex-2,t=this._currentPageIndex+2);e<=t;)e===this._currentPageIndex?this._pagination.push([[this._currentPageIndex],[!0]]):this._pagination.push([[e],[!1]]),e++}getFirstPage(){this.onPageChange.emit(1)}getLastPage(){this.onPageChange.emit(this.lastPageIndex)}getPage(e){this.onPageChange.emit(e)}getPreviousPage(){this.onPageChange.emit(this.currentPageIndex-1)}getNextPage(){this.onPageChange.emit(this.currentPageIndex+1)}get lastPageIndex(){return this._lastPageIndex}set lastPageIndex(e){this._lastPageIndex=e}get currentPageIndex(){return this._currentPageIndex}set currentPageIndex(e){this._currentPageIndex=e}get pagination(){return this._pagination}set pagination(e){this._pagination=e}};m.ctorParameters=()=>[],m.propDecorators={onPageChange:[{type:i.r_U}],lastPageIndex:[{type:i.IIB}],currentPageIndex:[{type:i.IIB}]},m=function(e,t,n,i){var r,a=arguments.length,l=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(l=(a<3?r(l):a>3?r(t,n,l):r(t,n))||l);return a>3&&l&&Object.defineProperty(t,n,l),l}([(0,i.wA2)({selector:"cp-complex-paginator",template:'<div>\n  <h5 class="text-center">{{ currentPageIndex }} of {{ lastPageIndex }}</h5>\n  <ul class="pagination text-center" role="navigation" aria-label="Pagination">\n    <li class="arrow unavailable" *ngIf="currentPageIndex != 1" aria-disabled="true"><a\n      (click)="getFirstPage()">&Lang; First</a></li>\n    <li class="arrow unavailable" *ngIf="currentPageIndex != 1" aria-disabled="true"><a\n      (click)="getPreviousPage()">&lang; Previous</a></li>\n    <ng-container *ngFor="let index of pagination">\n      <li *ngIf="index[1] == \'true\'" class="current"><span class="show-for-sr">You\'re on page</span>{{ index[0] }}</li>\n      <li *ngIf="index[1] == \'false\'"><a (click)="getPage(index[0])">{{ index[0] }}</a></li>\n    </ng-container>\n    <li class="arrow" *ngIf="currentPageIndex != lastPageIndex"><a (click)="getNextPage()">Next &rang;</a></li>\n    <li class="arrow" *ngIf="currentPageIndex != lastPageIndex"><a (click)="getLastPage()">Last &Rang;</a></li>\n  </ul>\n</div>\n',styles:[f]})],m);var x=n(26531),v=n(82682);let y=class{constructor(e){this.googleAnalyticsService=e,this.onSpicesFilterChanged=new i.vpe,this.onBiologicalRoleFilterChanged=new i.vpe,this.onInteractorTypeFilterChanged=new i.vpe,this.onResetAllFilters=new i.vpe}ngOnInit(){}changeSpeciesFilter(e,t){t?(this.spicesFilter.push(e),this.googleAnalyticsService.fireAddedFilterEvent(e)):(this.spicesFilter.splice(this.spicesFilter.indexOf(e),1),this.googleAnalyticsService.fireRemovedFilterEvent(e)),this.onSpicesFilterChanged.emit(this.spicesFilter)}changeBiologicalRoleFilter(e,t){t?(this.bioRoleFilter.push(e),this.googleAnalyticsService.fireAddedFilterEvent(e)):(this.bioRoleFilter.splice(this.bioRoleFilter.indexOf(e),1),this.googleAnalyticsService.fireRemovedFilterEvent(e)),this.onBiologicalRoleFilterChanged.emit(this.bioRoleFilter)}changeInteractorTypeFilter(e,t){t?(this.interactorTypeFilter.push(e),this.googleAnalyticsService.fireAddedFilterEvent(e)):(this.interactorTypeFilter.splice(this.interactorTypeFilter.indexOf(e),1),this.googleAnalyticsService.fireRemovedFilterEvent(e)),this.onInteractorTypeFilterChanged.emit(this.interactorTypeFilter)}resetAllFilters(){this.onResetAllFilters.emit(!0)}anyFiltersSelected(){return 0!==this._spicesFilter.length||0!==this._bioRoleFilter.length||0!==this._interactorTypeFilter.length}isSelected(e,t){return-1!==t.indexOf(e)}get facets(){return this._facets}set facets(e){this._facets=e}get spicesFilter(){return this._spicesFilter}set spicesFilter(e){this._spicesFilter=e}get bioRoleFilter(){return this._bioRoleFilter}set bioRoleFilter(e){this._bioRoleFilter=e}get interactorTypeFilter(){return this._interactorTypeFilter}set interactorTypeFilter(e){this._interactorTypeFilter=e}facetTypeIcon(e){return(0,v.p)(e.name)}facetOrganismIcon(e){return(0,v.N)(e)}};y.ctorParameters=()=>[{type:p.y}],y.propDecorators={onSpicesFilterChanged:[{type:i.r_U}],onBiologicalRoleFilterChanged:[{type:i.r_U}],onInteractorTypeFilterChanged:[{type:i.r_U}],onResetAllFilters:[{type:i.r_U}],facets:[{type:i.IIB}],spicesFilter:[{type:i.IIB}],bioRoleFilter:[{type:i.IIB}],interactorTypeFilter:[{type:i.IIB}]},y=function(e,t,n,i){var r,a=arguments.length,l=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(l=(a<3?r(l):a>3?r(t,n,l):r(t,n))||l);return a>3&&l&&Object.defineProperty(t,n,l),l}([(0,i.wA2)({selector:"cp-complex-filter",template:'<div class="filters row">\n  <div class="columns medium-6"><h3>Filters</h3></div>\n  <div class="columns medium-6">\n    <div *ngIf="anyFiltersSelected()">\n      <a class="button" (click)="resetAllFilters()"><i class="icon icon-functional" data-icon="d"></i> Reset filters</a>\n    </div>\n  </div>\n  <div class="columns medium-12">\n    <div *ngIf="facets.species_f">\n      <b>Species</b>\n      <ul class="no-bullet">\n        <li *ngFor="let facet of facets.species_f">\n          <div [ngSwitch]="isSelected(facet.name, spicesFilter)">\n            <div *ngSwitchCase="true">\n              <input type="checkbox" #filter value="{{facet.name}}"\n                     (change)="changeSpeciesFilter(filter.value, filter.checked)" checked>\n              {{ facet.name }}\n              ({{ facet.count }})\n              <i class="{{ facetOrganismIcon(facet.name) }}"\n                 style="font-size: large;"></i>\n            </div>\n            <div *ngSwitchDefault>\n              <input type="checkbox" #filter value="{{facet.name}}"\n                     (change)="changeSpeciesFilter(filter.value, filter.checked)"> {{ facet.name }} ({{ facet.count }})\n\n              <i class="{{ facetOrganismIcon(facet.name) }}"\n                 style="font-size: large;"></i>\n            </div>\n          </div>\n        </li>\n      </ul>\n    </div>\n\n    <div *ngIf="facets.pbiorole_f">\n      <b>Biological Role</b>\n      <ul class="no-bullet">\n        <li *ngFor="let facet of facets.pbiorole_f">\n          <div [ngSwitch]="isSelected(facet.name, bioRoleFilter)">\n            <div *ngSwitchCase="true">\n              <input type="checkbox" #filter value="{{facet.name}}"\n                     (change)="changeBiologicalRoleFilter(filter.value, filter.checked)" checked> {{ facet.name }}\n              ({{ facet.count }})\n            </div>\n            <div *ngSwitchDefault>\n              <input type="checkbox" #filter value="{{facet.name}}"\n                     (change)="changeBiologicalRoleFilter(filter.value, filter.checked)"> {{ facet.name }}\n              ({{ facet.count }})\n            </div>\n          </div>\n        </li>\n      </ul>\n    </div>\n\n\n    <div *ngIf="facets.ptype_f">\n      <b>Component Type</b>\n      <ul class="no-bullet">\n        <li *ngFor="let facet of facets.ptype_f">\n          <div [ngSwitch]="isSelected(facet.name, interactorTypeFilter)">\n            <div *ngSwitchCase="true">\n              <input type="checkbox" #filter value="{{facet.name}}"\n                     (change)="changeInteractorTypeFilter(filter.value, filter.checked)" checked> {{ facet.name }}\n              ({{ facet.count }})\n              <i class="{{ facetTypeIcon(facet) }}"\n                 style="font-size: large;"></i>\n            </div>\n            <div *ngSwitchDefault>\n              <input type="checkbox" #filter value="{{facet.name}}"\n                     (change)="changeInteractorTypeFilter(filter.value, filter.checked)"> {{ facet.name }}\n              ({{ facet.count }})\n              <i class="{{ facetTypeIcon(facet) }}"\n                 style="font-size: large;"></i>\n            </div>\n          </div>\n        </li>\n      </ul>\n    </div>\n    <div *ngIf="!facets.species_f && !facets.pbiorole_f && !facets.ptype_f">\n      <h6>No filters available</h6>\n    </div>\n  </div>\n</div>\n',styles:[x]})],y);var F=n(82328),I=n(65787);let b=class{constructor(e){this.basketService=e}ngOnInit(){}saveComplex(e,t,n){this.basketService.saveInBasket(e,t,n)}isInBasket(e){return this.basketService.isInBasket(e)}};b.ctorParameters=()=>[{type:I.v}],b.propDecorators={complexSearch:[{type:i.IIB}]},b=function(e,t,n,i){var r,a=arguments.length,l=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(l=(a<3?r(l):a>3?r(t,n,l):r(t,n))||l);return a>3&&l&&Object.defineProperty(t,n,l),l}([(0,i.wA2)({selector:"cp-complex-list",template:'<ul class="no-bullet">\n  <li *ngFor="let complex of complexSearch.elements">\n    <div class="container">\n      <div class="basketButton">\n        <a class="button"\n           (click)="saveComplex(complex.complexName,complex.complexAC,complex.organismName)"\n           [ngClass]="{\'disabled\': isInBasket(complex.complexAC)}"><span class="icon icon-generic medium "\n                                                                         data-icon="b"></span></a>\n      </div>\n      <div class="complexesAndDescription">\n        <h3>\n          <a [routerLink]="[\'/complex\', complex.complexAC]">{{ complex.complexName }}</a></h3>\n        <div class="description" style="background-color: white">\n          <b>Complex AC:</b> {{ complex.complexAC }} / <b>Organism:</b> ({{ complex.organismName }})<br>\n          <b>Description:</b>\n          <div *ngIf="complex.description.length <= 250">\n            {{ complex.description }}<a [routerLink]="[\'/complex\', complex.complexAC]">...</a>\n          </div>\n          <div *ngIf="complex.description.length > 250">\n            {{ complex.description.substr(0, 250) }}<a [routerLink]="[\'/complex\', complex.complexAC]">...</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </li>\n</ul>\n',styles:[F]})],b);var P=n(64356),C=n(72987),R=n(32696),_=n(82868);const S="already_rated";let w=class{constructor(e){this.analyticsService=e,this.hidden=!1}ngOnInit(){this.hidden="true"===localStorage.getItem(S)||!1}selectRating(e){this.selectedRating=e,this.analyticsService.rateComplexNavigator(this.selectedRating),localStorage.setItem(S,"true"),setTimeout(()=>this.hidden=!0,2e3)}};w.ctorParameters=()=>[{type:p.y}],w=function(e,t,n,i){var r,a=arguments.length,l=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(l=(a<3?r(l):a>3?r(t,n,l):r(t,n))||l);return a>3&&l&&Object.defineProperty(t,n,l),l}([(0,i.wA2)({selector:"cp-complex-navigator-rating",template:'<div class="ratingComponent" *ngIf="!hidden">\n  <div class="buttonContainer">\n    <button class="close" id="closePopup" (click)="hidden = true">&times;</button>\n  </div>\n  <div class="text">\n    <p>Tell us about your experience with the Complex Navigator!</p>\n  </div>\n  <div class="ratingComponentStars">\n    <span class="star" [ngClass]="{\'selected\': selectedRating >= 1}" (click)="selectRating(1)"> &#9733; </span>\n    <span class="star" [ngClass]="{\'selected\': selectedRating >= 2}" (click)="selectRating(2)"> &#9733; </span>\n    <span class="star" [ngClass]="{\'selected\': selectedRating >= 3}" (click)="selectRating(3)"> &#9733; </span>\n    <span class="star" [ngClass]="{\'selected\': selectedRating >= 4}" (click)="selectRating(4)"> &#9733; </span>\n    <span class="star" [ngClass]="{\'selected\': selectedRating >= 5}" (click)="selectRating(5)"> &#9733; </span>\n  </div>\n</div>\n',styles:[_]})],w);let T=class{};T=function(e,t,n,i){var r,a=arguments.length,l=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(l=(a<3?r(l):a>3?r(t,n,l):r(t,n))||l);return a>3&&l&&Object.defineProperty(t,n,l),l}([(0,i.LVF)({imports:[l.Bz.forChild([{path:"",component:u}]),r.ez,P.L,C.JP,R.r],exports:[],declarations:[u,b,y,m,w]})],T)},26531:function(e){e.exports=""},82328:function(e){e.exports=".description {\n  width: 100%;\n  text-align: justify;\n}\n\n.container {\n  display: inline-flex;\n}\n\n.basketButton {\n  padding-top: 10px;\n}\n\n.complexesAndDescription {\n  padding: 10px\n}\n"},82868:function(e){e.exports=".star {\n  font-size: 1.5em;\n  cursor: pointer;\n  color: white;\n}\n\n.star.selected {\n  color: gold;\n}\n\n.ratingComponent {\n  background-color: #007c82;\n  padding: 5px;\n  width: 350px;\n  text-align: center;\n  position: fixed;\n  z-index: 5;\n  top: 54vh;\n  right: -350px;\n  border: 1px solid white;\n  visibility: hidden;\n  animation: ratingComponentMove 1s forwards 7s;\n}\n\n.ratingComponent input {\n  background-color: white;\n  color: #007c82;\n}\n\n.text {\n  display: -webkit-box;\n  color: white;\n  width: 96%;\n  text-align: -webkit-center;\n  padding-left: 10px;\n  margin-bottom: -15px;\n}\n\n@keyframes ratingComponentMove {\n  from {\n    right: -10vw;\n    visibility: visible;\n  }\n  to {\n    right: 4vw;\n    visibility: visible;\n  }\n}\n\n.buttonContainer {\n  width: 100%;\n  height: 1ch;\n  text-align: end;\n  padding-right: 5px;\n}\n\n.close {\n  color: white;\n}\n\n.ratingComponentStars {\n  padding-bottom: 5px;\n}\n"},39606:function(e){e.exports=""},50473:function(e){e.exports=".filterColumn {\n  width: 15vw;\n}\n\n.leftAligned {\n  --global-margin: calc((100vw - 80rem) / -2);\n  --min-margin-left: calc(-100rem * 0.3);\n  margin-left: max(var(--global-margin), var(--min-margin-left));\n}\n\n.smallCN {\n  width: 55vw !important;\n}\n\n.largeCN {\n  width: 67vw !important;\n}\n\n.ComplexNavigator {\n  float: left;\n  margin-right: -2vw;\n  margin-left: auto;\n}\n\n.paginator {\n  float: left;\n  width: 75vw;\n  margin-right: -2vw;\n}\n\n.column:last-child:not(:first-child),\n.columns:last-child:not(:first-child) {\n  float: left !important;\n}\n\n.listOfResults {\n  width: 40vw;\n  margin-left: 17vw;\n  text-justify: distribute;\n}\n"}}]);