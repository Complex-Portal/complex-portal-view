import{a as $I}from"./chunk-UXQDEOE3.js";import{a as DI}from"./chunk-CFGCRJR4.js";import{o as nh,p as kI}from"./chunk-XRPTPPZZ.js";import{F as AI,g as EI}from"./chunk-Q5V7UDJA.js";import{a as RI}from"./chunk-EN46Q3VM.js";import{Fa as _e,Ha as St,Ia as Er,Jb as TI,La as vI,e as pr,f as co,g as np,h as et,i as B,ia as Zs,ib as Qo,ja as Et,s as II,ub as NI,v as SI,za as ba}from"./chunk-EWXTXBCX.js";var iS=pr((p7,sS)=>{sS.exports=ye;var uo=null;try{uo=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function ye(r,t,e){this.low=r|0,this.high=t|0,this.unsigned=!!e}ye.prototype.__isLong__;Object.defineProperty(ye.prototype,"__isLong__",{value:!0});function Br(r){return(r&&r.__isLong__)===!0}ye.isLong=Br;var YI={},ZI={};function La(r,t){var e,o,n;return t?(r>>>=0,(n=0<=r&&r<256)&&(o=ZI[r],o)?o:(e=be(r,(r|0)<0?-1:0,!0),n&&(ZI[r]=e),e)):(r|=0,(n=-128<=r&&r<128)&&(o=YI[r],o)?o:(e=be(r,r<0?-1:0,!1),n&&(YI[r]=e),e))}ye.fromInt=La;function po(r,t){if(isNaN(r))return t?Oa:mo;if(t){if(r<0)return Oa;if(r>=eS)return nS}else{if(r<=-QI)return zr;if(r+1>=QI)return oS}return r<0?po(-r,t).neg():be(r%Nc|0,r/Nc|0,t)}ye.fromNumber=po;function be(r,t,e){return new ye(r,t,e)}ye.fromBits=be;var Dh=Math.pow;function hb(r,t,e){if(r.length===0)throw Error("empty string");if(r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return mo;if(typeof t=="number"?(e=t,t=!1):t=!!t,e=e||10,e<2||36<e)throw RangeError("radix");var o;if((o=r.indexOf("-"))>0)throw Error("interior hyphen");if(o===0)return hb(r.substring(1),t,e).neg();for(var n=po(Dh(e,8)),s=mo,i=0;i<r.length;i+=8){var a=Math.min(8,r.length-i),l=parseInt(r.substring(i,i+a),e);if(a<8){var c=po(Dh(e,a));s=s.mul(c).add(po(l))}else s=s.mul(n),s=s.add(po(l))}return s.unsigned=t,s}ye.fromString=hb;function Oo(r,t){return typeof r=="number"?po(r,t):typeof r=="string"?hb(r,t):be(r.low,r.high,typeof t=="boolean"?t:r.unsigned)}ye.fromValue=Oo;var JI=65536,QL=1<<24,Nc=JI*JI,eS=Nc*Nc,QI=eS/2,tS=La(QL),mo=La(0);ye.ZERO=mo;var Oa=La(0,!0);ye.UZERO=Oa;var vc=La(1);ye.ONE=vc;var rS=La(1,!0);ye.UONE=rS;var fb=La(-1);ye.NEG_ONE=fb;var oS=be(-1,2147483647,!1);ye.MAX_VALUE=oS;var nS=be(-1,-1,!0);ye.MAX_UNSIGNED_VALUE=nS;var zr=be(0,-2147483648,!1);ye.MIN_VALUE=zr;var ct=ye.prototype;ct.toInt=function(){return this.unsigned?this.low>>>0:this.low};ct.toNumber=function(){return this.unsigned?(this.high>>>0)*Nc+(this.low>>>0):this.high*Nc+(this.low>>>0)};ct.toString=function(t){if(t=t||10,t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(zr)){var e=po(t),o=this.div(e),n=o.mul(e).sub(this);return o.toString(t)+n.toInt().toString(t)}else return"-"+this.neg().toString(t);for(var s=po(Dh(t,6),this.unsigned),i=this,a="";;){var l=i.div(s),c=i.sub(l.mul(s)).toInt()>>>0,u=c.toString(t);if(i=l,i.isZero())return u+a;for(;u.length<6;)u="0"+u;a=""+u+a}};ct.getHighBits=function(){return this.high};ct.getHighBitsUnsigned=function(){return this.high>>>0};ct.getLowBits=function(){return this.low};ct.getLowBitsUnsigned=function(){return this.low>>>0};ct.getNumBitsAbs=function(){if(this.isNegative())return this.eq(zr)?64:this.neg().getNumBitsAbs();for(var t=this.high!=0?this.high:this.low,e=31;e>0&&!(t&1<<e);e--);return this.high!=0?e+33:e+1};ct.isZero=function(){return this.high===0&&this.low===0};ct.eqz=ct.isZero;ct.isNegative=function(){return!this.unsigned&&this.high<0};ct.isPositive=function(){return this.unsigned||this.high>=0};ct.isOdd=function(){return(this.low&1)===1};ct.isEven=function(){return(this.low&1)===0};ct.equals=function(t){return Br(t)||(t=Oo(t)),this.unsigned!==t.unsigned&&this.high>>>31===1&&t.high>>>31===1?!1:this.high===t.high&&this.low===t.low};ct.eq=ct.equals;ct.notEquals=function(t){return!this.eq(t)};ct.neq=ct.notEquals;ct.ne=ct.notEquals;ct.lessThan=function(t){return this.comp(t)<0};ct.lt=ct.lessThan;ct.lessThanOrEqual=function(t){return this.comp(t)<=0};ct.lte=ct.lessThanOrEqual;ct.le=ct.lessThanOrEqual;ct.greaterThan=function(t){return this.comp(t)>0};ct.gt=ct.greaterThan;ct.greaterThanOrEqual=function(t){return this.comp(t)>=0};ct.gte=ct.greaterThanOrEqual;ct.ge=ct.greaterThanOrEqual;ct.compare=function(t){if(Br(t)||(t=Oo(t)),this.eq(t))return 0;var e=this.isNegative(),o=t.isNegative();return e&&!o?-1:!e&&o?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1};ct.comp=ct.compare;ct.negate=function(){return!this.unsigned&&this.eq(zr)?zr:this.not().add(vc)};ct.neg=ct.negate;ct.add=function(t){Br(t)||(t=Oo(t));var e=this.high>>>16,o=this.high&65535,n=this.low>>>16,s=this.low&65535,i=t.high>>>16,a=t.high&65535,l=t.low>>>16,c=t.low&65535,u=0,p=0,m=0,f=0;return f+=s+c,m+=f>>>16,f&=65535,m+=n+l,p+=m>>>16,m&=65535,p+=o+a,u+=p>>>16,p&=65535,u+=e+i,u&=65535,be(m<<16|f,u<<16|p,this.unsigned)};ct.subtract=function(t){return Br(t)||(t=Oo(t)),this.add(t.neg())};ct.sub=ct.subtract;ct.multiply=function(t){if(this.isZero())return mo;if(Br(t)||(t=Oo(t)),uo){var e=uo.mul(this.low,this.high,t.low,t.high);return be(e,uo.get_high(),this.unsigned)}if(t.isZero())return mo;if(this.eq(zr))return t.isOdd()?zr:mo;if(t.eq(zr))return this.isOdd()?zr:mo;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(tS)&&t.lt(tS))return po(this.toNumber()*t.toNumber(),this.unsigned);var o=this.high>>>16,n=this.high&65535,s=this.low>>>16,i=this.low&65535,a=t.high>>>16,l=t.high&65535,c=t.low>>>16,u=t.low&65535,p=0,m=0,f=0,h=0;return h+=i*u,f+=h>>>16,h&=65535,f+=s*u,m+=f>>>16,f&=65535,f+=i*c,m+=f>>>16,f&=65535,m+=n*u,p+=m>>>16,m&=65535,m+=s*c,p+=m>>>16,m&=65535,m+=i*l,p+=m>>>16,m&=65535,p+=o*u+n*c+s*l+i*a,p&=65535,be(f<<16|h,p<<16|m,this.unsigned)};ct.mul=ct.multiply;ct.divide=function(t){if(Br(t)||(t=Oo(t)),t.isZero())throw Error("division by zero");if(uo){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;var e=(this.unsigned?uo.div_u:uo.div_s)(this.low,this.high,t.low,t.high);return be(e,uo.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Oa:mo;var o,n,s;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return Oa;if(t.gt(this.shru(1)))return rS;s=Oa}else{if(this.eq(zr)){if(t.eq(vc)||t.eq(fb))return zr;if(t.eq(zr))return vc;var i=this.shr(1);return o=i.div(t).shl(1),o.eq(mo)?t.isNegative()?vc:fb:(n=this.sub(t.mul(o)),s=o.add(n.div(t)),s)}else if(t.eq(zr))return this.unsigned?Oa:mo;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();s=mo}for(n=this;n.gte(t);){o=Math.max(1,Math.floor(n.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(o)/Math.LN2),l=a<=48?1:Dh(2,a-48),c=po(o),u=c.mul(t);u.isNegative()||u.gt(n);)o-=l,c=po(o,this.unsigned),u=c.mul(t);c.isZero()&&(c=vc),s=s.add(c),n=n.sub(u)}return s};ct.div=ct.divide;ct.modulo=function(t){if(Br(t)||(t=Oo(t)),uo){var e=(this.unsigned?uo.rem_u:uo.rem_s)(this.low,this.high,t.low,t.high);return be(e,uo.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))};ct.mod=ct.modulo;ct.rem=ct.modulo;ct.not=function(){return be(~this.low,~this.high,this.unsigned)};ct.and=function(t){return Br(t)||(t=Oo(t)),be(this.low&t.low,this.high&t.high,this.unsigned)};ct.or=function(t){return Br(t)||(t=Oo(t)),be(this.low|t.low,this.high|t.high,this.unsigned)};ct.xor=function(t){return Br(t)||(t=Oo(t)),be(this.low^t.low,this.high^t.high,this.unsigned)};ct.shiftLeft=function(t){return Br(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?be(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):be(0,this.low<<t-32,this.unsigned)};ct.shl=ct.shiftLeft;ct.shiftRight=function(t){return Br(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?be(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):be(this.high>>t-32,this.high>=0?0:-1,this.unsigned)};ct.shr=ct.shiftRight;ct.shiftRightUnsigned=function(t){if(Br(t)&&(t=t.toInt()),t&=63,t===0)return this;var e=this.high;if(t<32){var o=this.low;return be(o>>>t|e<<32-t,e>>>t,this.unsigned)}else return t===32?be(e,0,this.unsigned):be(e>>>t-32,0,this.unsigned)};ct.shru=ct.shiftRightUnsigned;ct.shr_u=ct.shiftRightUnsigned;ct.toSigned=function(){return this.unsigned?be(this.low,this.high,!1):this};ct.toUnsigned=function(){return this.unsigned?this:be(this.low,this.high,!0)};ct.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()};ct.toBytesLE=function(){var t=this.high,e=this.low;return[e&255,e>>>8&255,e>>>16&255,e>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]};ct.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,e>>>24,e>>>16&255,e>>>8&255,e&255]};ye.fromBytes=function(t,e,o){return o?ye.fromBytesLE(t,e):ye.fromBytesBE(t,e)};ye.fromBytesLE=function(t,e){return new ye(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)};ye.fromBytesBE=function(t,e){return new ye(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)}});var HS=pr((Fc,WS)=>{"use strict";var MP=function(){if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof global<"u")return global;throw new Error("unable to locate global object")},Ua=MP();WS.exports=Fc=Ua.fetch;Ua.fetch&&(Fc.default=Ua.fetch.bind(Ua));Fc.Headers=Ua.Headers;Fc.Request=Ua.Request;Fc.Response=Ua.Response});var qS=pr(()=>{});var dv=pr((hv,d0)=>{(function(r,t,e){function o(a){var l=this,c=i();l.next=function(){var u=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=u-(l.c=u|0)},l.c=1,l.s0=c(" "),l.s1=c(" "),l.s2=c(" "),l.s0-=c(a),l.s0<0&&(l.s0+=1),l.s1-=c(a),l.s1<0&&(l.s1+=1),l.s2-=c(a),l.s2<0&&(l.s2+=1),c=null}function n(a,l){return l.c=a.c,l.s0=a.s0,l.s1=a.s1,l.s2=a.s2,l}function s(a,l){var c=new o(a),u=l&&l.state,p=c.next;return p.int32=function(){return c.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,u&&(typeof u=="object"&&n(u,c),p.state=function(){return n(c,{})}),p}function i(){var a=4022871197,l=function(c){c=String(c);for(var u=0;u<c.length;u++){a+=c.charCodeAt(u);var p=.02519603282416938*a;a=p>>>0,p-=a,p*=a,a=p>>>0,p-=a,a+=p*4294967296}return(a>>>0)*23283064365386963e-26};return l}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.alea=s})(hv,typeof d0=="object"&&d0,typeof define=="function"&&define)});var xv=pr((gv,g0)=>{(function(r,t,e){function o(i){var a=this,l="";a.x=0,a.y=0,a.z=0,a.w=0,a.next=function(){var u=a.x^a.x<<11;return a.x=a.y,a.y=a.z,a.z=a.w,a.w^=a.w>>>19^u^u>>>8},i===(i|0)?a.x=i:l+=i;for(var c=0;c<l.length+64;c++)a.x^=l.charCodeAt(c)|0,a.next()}function n(i,a){return a.x=i.x,a.y=i.y,a.z=i.z,a.w=i.w,a}function s(i,a){var l=new o(i),c=a&&a.state,u=function(){return(l.next()>>>0)/4294967296};return u.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},u.int32=l.next,u.quick=u,c&&(typeof c=="object"&&n(c,l),u.state=function(){return n(l,{})}),u}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xor128=s})(gv,typeof g0=="object"&&g0,typeof define=="function"&&define)});var bv=pr((yv,x0)=>{(function(r,t,e){function o(i){var a=this,l="";a.next=function(){var u=a.x^a.x>>>2;return a.x=a.y,a.y=a.z,a.z=a.w,a.w=a.v,(a.d=a.d+362437|0)+(a.v=a.v^a.v<<4^(u^u<<1))|0},a.x=0,a.y=0,a.z=0,a.w=0,a.v=0,i===(i|0)?a.x=i:l+=i;for(var c=0;c<l.length+64;c++)a.x^=l.charCodeAt(c)|0,c==l.length&&(a.d=a.x<<10^a.x>>>4),a.next()}function n(i,a){return a.x=i.x,a.y=i.y,a.z=i.z,a.w=i.w,a.v=i.v,a.d=i.d,a}function s(i,a){var l=new o(i),c=a&&a.state,u=function(){return(l.next()>>>0)/4294967296};return u.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},u.int32=l.next,u.quick=u,c&&(typeof c=="object"&&n(c,l),u.state=function(){return n(l,{})}),u}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xorwow=s})(yv,typeof x0=="object"&&x0,typeof define=="function"&&define)});var Cv=pr((wv,y0)=>{(function(r,t,e){function o(i){var a=this;a.next=function(){var c=a.x,u=a.i,p,m,f;return p=c[u],p^=p>>>7,m=p^p<<24,p=c[u+1&7],m^=p^p>>>10,p=c[u+3&7],m^=p^p>>>3,p=c[u+4&7],m^=p^p<<7,p=c[u+7&7],p=p^p<<13,m^=p^p<<9,c[u]=m,a.i=u+1&7,m};function l(c,u){var p,m,f=[];if(u===(u|0))m=f[0]=u;else for(u=""+u,p=0;p<u.length;++p)f[p&7]=f[p&7]<<15^u.charCodeAt(p)+f[p+1&7]<<13;for(;f.length<8;)f.push(0);for(p=0;p<8&&f[p]===0;++p);for(p==8?m=f[7]=-1:m=f[p],c.x=f,c.i=0,p=256;p>0;--p)c.next()}l(a,i)}function n(i,a){return a.x=i.x.slice(),a.i=i.i,a}function s(i,a){i==null&&(i=+new Date);var l=new o(i),c=a&&a.state,u=function(){return(l.next()>>>0)/4294967296};return u.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},u.int32=l.next,u.quick=u,c&&(c.x&&n(c,l),u.state=function(){return n(l,{})}),u}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xorshift7=s})(wv,typeof y0=="object"&&y0,typeof define=="function"&&define)});var Sv=pr((Iv,b0)=>{(function(r,t,e){function o(i){var a=this;a.next=function(){var c=a.w,u=a.X,p=a.i,m,f;return a.w=c=c+1640531527|0,f=u[p+34&127],m=u[p=p+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=u[p]=f^m,a.i=p,f+(c^c>>>16)|0};function l(c,u){var p,m,f,h,d,g=[],x=128;for(u===(u|0)?(m=u,u=null):(u=u+"\0",m=0,x=Math.max(x,u.length)),f=0,h=-32;h<x;++h)u&&(m^=u.charCodeAt((h+32)%u.length)),h===0&&(d=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,h>=0&&(d=d+1640531527|0,p=g[h&127]^=m+d,f=p==0?f+1:0);for(f>=128&&(g[(u&&u.length||0)&127]=-1),f=127,h=4*128;h>0;--h)m=g[f+34&127],p=g[f=f+1&127],m^=m<<13,p^=p<<17,m^=m>>>15,p^=p>>>12,g[f]=m^p;c.w=d,c.X=g,c.i=f}l(a,i)}function n(i,a){return a.i=i.i,a.w=i.w,a.X=i.X.slice(),a}function s(i,a){i==null&&(i=+new Date);var l=new o(i),c=a&&a.state,u=function(){return(l.next()>>>0)/4294967296};return u.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},u.int32=l.next,u.quick=u,c&&(c.X&&n(c,l),u.state=function(){return n(l,{})}),u}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xor4096=s})(Iv,typeof b0=="object"&&b0,typeof define=="function"&&define)});var Nv=pr((vv,w0)=>{(function(r,t,e){function o(i){var a=this,l="";a.next=function(){var u=a.b,p=a.c,m=a.d,f=a.a;return u=u<<25^u>>>7^p,p=p-m|0,m=m<<24^m>>>8^f,f=f-u|0,a.b=u=u<<20^u>>>12^p,a.c=p=p-m|0,a.d=m<<16^p>>>16^f,a.a=f-u|0},a.a=0,a.b=0,a.c=-1640531527,a.d=1367130551,i===Math.floor(i)?(a.a=i/4294967296|0,a.b=i|0):l+=i;for(var c=0;c<l.length+20;c++)a.b^=l.charCodeAt(c)|0,a.next()}function n(i,a){return a.a=i.a,a.b=i.b,a.c=i.c,a.d=i.d,a}function s(i,a){var l=new o(i),c=a&&a.state,u=function(){return(l.next()>>>0)/4294967296};return u.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},u.int32=l.next,u.quick=u,c&&(typeof c=="object"&&n(c,l),u.state=function(){return n(l,{})}),u}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.tychei=s})(vv,typeof w0=="object"&&w0,typeof define=="function"&&define)});var Tv=pr(()=>{});var Ev=pr((kv,Zh)=>{(function(r,t,e){var o=256,n=6,s=52,i="random",a=e.pow(o,n),l=e.pow(2,s),c=l*2,u=o-1,p;function m(C,w,I){var E=[];w=w==!0?{entropy:!0}:w||{};var A=g(d(w.entropy?[C,b(t)]:C??x(),3),E),$=new f(E),_=function(){for(var L=$.g(n),M=a,V=0;L<l;)L=(L+V)*o,M*=o,V=$.g(1);for(;L>=c;)L/=2,M/=2,V>>>=1;return(L+V)/M};return _.int32=function(){return $.g(4)|0},_.quick=function(){return $.g(4)/4294967296},_.double=_,g(b($.S),t),(w.pass||I||function(L,M,V,G){return G&&(G.S&&h(G,$),L.state=function(){return h($,{})}),V?(e[i]=L,M):L})(_,A,"global"in w?w.global:this==e,w.state)}function f(C){var w,I=C.length,E=this,A=0,$=E.i=E.j=0,_=E.S=[];for(I||(C=[I++]);A<o;)_[A]=A++;for(A=0;A<o;A++)_[A]=_[$=u&$+C[A%I]+(w=_[A])],_[$]=w;(E.g=function(L){for(var M,V=0,G=E.i,W=E.j,U=E.S;L--;)M=U[G=u&G+1],V=V*o+U[u&(U[G]=U[W=u&W+M])+(U[W]=M)];return E.i=G,E.j=W,V})(o)}function h(C,w){return w.i=C.i,w.j=C.j,w.S=C.S.slice(),w}function d(C,w){var I=[],E=typeof C,A;if(w&&E=="object")for(A in C)try{I.push(d(C[A],w-1))}catch{}return I.length?I:E=="string"?C:C+"\0"}function g(C,w){for(var I=C+"",E,A=0;A<I.length;)w[u&A]=u&(E^=w[u&A]*19)+I.charCodeAt(A++);return b(w)}function x(){try{var C;return p&&(C=p.randomBytes)?C=C(o):(C=new Uint8Array(o),(r.crypto||r.msCrypto).getRandomValues(C)),b(C)}catch{var w=r.navigator,I=w&&w.plugins;return[+new Date,r,I,r.screen,b(t)]}}function b(C){return String.fromCharCode.apply(0,C)}if(g(e.random(),t),typeof Zh=="object"&&Zh.exports){Zh.exports=m;try{p=Tv()}catch{}}else typeof define=="function"&&define.amd?define(function(){return m}):e["seed"+i]=m})(typeof self<"u"?self:kv,[],Math)});var _p=pr((Jct,Av)=>{var iB=dv(),aB=xv(),lB=bv(),cB=Cv(),uB=Sv(),pB=Nv(),tl=Ev();tl.alea=iB;tl.xor128=aB;tl.xorwow=lB;tl.xorshift7=cB;tl.xor4096=uB;tl.tychei=pB;Av.exports=tl});var vk=pr(Ng=>{"use strict";Ng.byteLength=SW;Ng.toByteArray=NW;Ng.fromByteArray=EW;var wn=[],ko=[],IW=typeof Uint8Array<"u"?Uint8Array:Array,xw="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";for(gl=0,Ik=xw.length;gl<Ik;++gl)wn[gl]=xw[gl],ko[xw.charCodeAt(gl)]=gl;var gl,Ik;ko[45]=62;ko[95]=63;function Sk(r){var t=r.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var e=r.indexOf("=");e===-1&&(e=t);var o=e===t?0:4-e%4;return[e,o]}function SW(r){var t=Sk(r),e=t[0],o=t[1];return(e+o)*3/4-o}function vW(r,t,e){return(t+e)*3/4-e}function NW(r){var t,e=Sk(r),o=e[0],n=e[1],s=new IW(vW(r,o,n)),i=0,a=n>0?o-4:o,l;for(l=0;l<a;l+=4)t=ko[r.charCodeAt(l)]<<18|ko[r.charCodeAt(l+1)]<<12|ko[r.charCodeAt(l+2)]<<6|ko[r.charCodeAt(l+3)],s[i++]=t>>16&255,s[i++]=t>>8&255,s[i++]=t&255;return n===2&&(t=ko[r.charCodeAt(l)]<<2|ko[r.charCodeAt(l+1)]>>4,s[i++]=t&255),n===1&&(t=ko[r.charCodeAt(l)]<<10|ko[r.charCodeAt(l+1)]<<4|ko[r.charCodeAt(l+2)]>>2,s[i++]=t>>8&255,s[i++]=t&255),s}function TW(r){return wn[r>>18&63]+wn[r>>12&63]+wn[r>>6&63]+wn[r&63]}function kW(r,t,e){for(var o,n=[],s=t;s<e;s+=3)o=(r[s]<<16&16711680)+(r[s+1]<<8&65280)+(r[s+2]&255),n.push(TW(o));return n.join("")}function EW(r){for(var t,e=r.length,o=e%3,n=[],s=16383,i=0,a=e-o;i<a;i+=s)n.push(kW(r,i,i+s>a?a:i+s));return o===1?(t=r[e-1],n.push(wn[t>>2]+wn[t<<4&63]+"==")):o===2&&(t=(r[e-2]<<8)+r[e-1],n.push(wn[t>>10]+wn[t>>4&63]+wn[t<<2&63]+"=")),n.join("")}});var Nk=pr(yw=>{yw.read=function(r,t,e,o,n){var s,i,a=n*8-o-1,l=(1<<a)-1,c=l>>1,u=-7,p=e?n-1:0,m=e?-1:1,f=r[t+p];for(p+=m,s=f&(1<<-u)-1,f>>=-u,u+=a;u>0;s=s*256+r[t+p],p+=m,u-=8);for(i=s&(1<<-u)-1,s>>=-u,u+=o;u>0;i=i*256+r[t+p],p+=m,u-=8);if(s===0)s=1-c;else{if(s===l)return i?NaN:(f?-1:1)*(1/0);i=i+Math.pow(2,o),s=s-c}return(f?-1:1)*i*Math.pow(2,s-o)};yw.write=function(r,t,e,o,n,s){var i,a,l,c=s*8-n-1,u=(1<<c)-1,p=u>>1,m=n===23?Math.pow(2,-24)-Math.pow(2,-77):0,f=o?0:s-1,h=o?1:-1,d=t<0||t===0&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(a=isNaN(t)?1:0,i=u):(i=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-i))<1&&(i--,l*=2),i+p>=1?t+=m/l:t+=m*Math.pow(2,1-p),t*l>=2&&(i++,l/=2),i+p>=u?(a=0,i=u):i+p>=1?(a=(t*l-1)*Math.pow(2,n),i=i+p):(a=t*Math.pow(2,p-1)*Math.pow(2,n),i=0));n>=8;r[e+f]=a&255,f+=h,a/=256,n-=8);for(i=i<<n|a,c+=n;c>0;r[e+f]=i&255,f+=h,i/=256,c-=8);r[e+f-h]|=d*128}});var zk=pr($u=>{"use strict";var bw=vk(),Au=Nk(),Tk=typeof Symbol=="function"&&typeof Symbol.for=="function"?Symbol.for("nodejs.util.inspect.custom"):null;$u.Buffer=Q;$u.SlowBuffer=_W;$u.INSPECT_MAX_BYTES=50;var Tg=2147483647;$u.kMaxLength=Tg;Q.TYPED_ARRAY_SUPPORT=AW();!Q.TYPED_ARRAY_SUPPORT&&typeof console<"u"&&typeof console.error=="function"&&console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");function AW(){try{var r=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(r,t),r.foo()===42}catch{return!1}}Object.defineProperty(Q.prototype,"parent",{enumerable:!0,get:function(){if(Q.isBuffer(this))return this.buffer}});Object.defineProperty(Q.prototype,"offset",{enumerable:!0,get:function(){if(Q.isBuffer(this))return this.byteOffset}});function Vs(r){if(r>Tg)throw new RangeError('The value "'+r+'" is invalid for option "size"');var t=new Uint8Array(r);return Object.setPrototypeOf(t,Q.prototype),t}function Q(r,t,e){if(typeof r=="number"){if(typeof t=="string")throw new TypeError('The "string" argument must be of type string. Received type number');return Sw(r)}return Ak(r,t,e)}Q.poolSize=8192;function Ak(r,t,e){if(typeof r=="string")return DW(r,t);if(ArrayBuffer.isView(r))return RW(r);if(r==null)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof r);if(Cn(r,ArrayBuffer)||r&&Cn(r.buffer,ArrayBuffer)||typeof SharedArrayBuffer<"u"&&(Cn(r,SharedArrayBuffer)||r&&Cn(r.buffer,SharedArrayBuffer)))return Cw(r,t,e);if(typeof r=="number")throw new TypeError('The "value" argument must not be of type number. Received type number');var o=r.valueOf&&r.valueOf();if(o!=null&&o!==r)return Q.from(o,t,e);var n=FW(r);if(n)return n;if(typeof Symbol<"u"&&Symbol.toPrimitive!=null&&typeof r[Symbol.toPrimitive]=="function")return Q.from(r[Symbol.toPrimitive]("string"),t,e);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof r)}Q.from=function(r,t,e){return Ak(r,t,e)};Object.setPrototypeOf(Q.prototype,Uint8Array.prototype);Object.setPrototypeOf(Q,Uint8Array);function $k(r){if(typeof r!="number")throw new TypeError('"size" argument must be of type number');if(r<0)throw new RangeError('The value "'+r+'" is invalid for option "size"')}function $W(r,t,e){return $k(r),r<=0?Vs(r):t!==void 0?typeof e=="string"?Vs(r).fill(t,e):Vs(r).fill(t):Vs(r)}Q.alloc=function(r,t,e){return $W(r,t,e)};function Sw(r){return $k(r),Vs(r<0?0:vw(r)|0)}Q.allocUnsafe=function(r){return Sw(r)};Q.allocUnsafeSlow=function(r){return Sw(r)};function DW(r,t){if((typeof t!="string"||t==="")&&(t="utf8"),!Q.isEncoding(t))throw new TypeError("Unknown encoding: "+t);var e=Dk(r,t)|0,o=Vs(e),n=o.write(r,t);return n!==e&&(o=o.slice(0,n)),o}function ww(r){for(var t=r.length<0?0:vw(r.length)|0,e=Vs(t),o=0;o<t;o+=1)e[o]=r[o]&255;return e}function RW(r){if(Cn(r,Uint8Array)){var t=new Uint8Array(r);return Cw(t.buffer,t.byteOffset,t.byteLength)}return ww(r)}function Cw(r,t,e){if(t<0||r.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(r.byteLength<t+(e||0))throw new RangeError('"length" is outside of buffer bounds');var o;return t===void 0&&e===void 0?o=new Uint8Array(r):e===void 0?o=new Uint8Array(r,t):o=new Uint8Array(r,t,e),Object.setPrototypeOf(o,Q.prototype),o}function FW(r){if(Q.isBuffer(r)){var t=vw(r.length)|0,e=Vs(t);return e.length===0||r.copy(e,0,0,t),e}if(r.length!==void 0)return typeof r.length!="number"||Nw(r.length)?Vs(0):ww(r);if(r.type==="Buffer"&&Array.isArray(r.data))return ww(r.data)}function vw(r){if(r>=Tg)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+Tg.toString(16)+" bytes");return r|0}function _W(r){return+r!=r&&(r=0),Q.alloc(+r)}Q.isBuffer=function(t){return t!=null&&t._isBuffer===!0&&t!==Q.prototype};Q.compare=function(t,e){if(Cn(t,Uint8Array)&&(t=Q.from(t,t.offset,t.byteLength)),Cn(e,Uint8Array)&&(e=Q.from(e,e.offset,e.byteLength)),!Q.isBuffer(t)||!Q.isBuffer(e))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(t===e)return 0;for(var o=t.length,n=e.length,s=0,i=Math.min(o,n);s<i;++s)if(t[s]!==e[s]){o=t[s],n=e[s];break}return o<n?-1:n<o?1:0};Q.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}};Q.concat=function(t,e){if(!Array.isArray(t))throw new TypeError('"list" argument must be an Array of Buffers');if(t.length===0)return Q.alloc(0);var o;if(e===void 0)for(e=0,o=0;o<t.length;++o)e+=t[o].length;var n=Q.allocUnsafe(e),s=0;for(o=0;o<t.length;++o){var i=t[o];if(Cn(i,Uint8Array))s+i.length>n.length?Q.from(i).copy(n,s):Uint8Array.prototype.set.call(n,i,s);else if(Q.isBuffer(i))i.copy(n,s);else throw new TypeError('"list" argument must be an Array of Buffers');s+=i.length}return n};function Dk(r,t){if(Q.isBuffer(r))return r.length;if(ArrayBuffer.isView(r)||Cn(r,ArrayBuffer))return r.byteLength;if(typeof r!="string")throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof r);var e=r.length,o=arguments.length>2&&arguments[2]===!0;if(!o&&e===0)return 0;for(var n=!1;;)switch(t){case"ascii":case"latin1":case"binary":return e;case"utf8":case"utf-8":return Iw(r).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return e*2;case"hex":return e>>>1;case"base64":return Pk(r).length;default:if(n)return o?-1:Iw(r).length;t=(""+t).toLowerCase(),n=!0}}Q.byteLength=Dk;function OW(r,t,e){var o=!1;if((t===void 0||t<0)&&(t=0),t>this.length||((e===void 0||e>this.length)&&(e=this.length),e<=0)||(e>>>=0,t>>>=0,e<=t))return"";for(r||(r="utf8");;)switch(r){case"hex":return HW(this,t,e);case"utf8":case"utf-8":return Fk(this,t,e);case"ascii":return UW(this,t,e);case"latin1":case"binary":return WW(this,t,e);case"base64":return VW(this,t,e);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return qW(this,t,e);default:if(o)throw new TypeError("Unknown encoding: "+r);r=(r+"").toLowerCase(),o=!0}}Q.prototype._isBuffer=!0;function xl(r,t,e){var o=r[t];r[t]=r[e],r[e]=o}Q.prototype.swap16=function(){var t=this.length;if(t%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)xl(this,e,e+1);return this};Q.prototype.swap32=function(){var t=this.length;if(t%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)xl(this,e,e+3),xl(this,e+1,e+2);return this};Q.prototype.swap64=function(){var t=this.length;if(t%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)xl(this,e,e+7),xl(this,e+1,e+6),xl(this,e+2,e+5),xl(this,e+3,e+4);return this};Q.prototype.toString=function(){var t=this.length;return t===0?"":arguments.length===0?Fk(this,0,t):OW.apply(this,arguments)};Q.prototype.toLocaleString=Q.prototype.toString;Q.prototype.equals=function(t){if(!Q.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t?!0:Q.compare(this,t)===0};Q.prototype.inspect=function(){var t="",e=$u.INSPECT_MAX_BYTES;return t=this.toString("hex",0,e).replace(/(.{2})/g,"$1 ").trim(),this.length>e&&(t+=" ... "),"<Buffer "+t+">"};Tk&&(Q.prototype[Tk]=Q.prototype.inspect);Q.prototype.compare=function(t,e,o,n,s){if(Cn(t,Uint8Array)&&(t=Q.from(t,t.offset,t.byteLength)),!Q.isBuffer(t))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof t);if(e===void 0&&(e=0),o===void 0&&(o=t?t.length:0),n===void 0&&(n=0),s===void 0&&(s=this.length),e<0||o>t.length||n<0||s>this.length)throw new RangeError("out of range index");if(n>=s&&e>=o)return 0;if(n>=s)return-1;if(e>=o)return 1;if(e>>>=0,o>>>=0,n>>>=0,s>>>=0,this===t)return 0;for(var i=s-n,a=o-e,l=Math.min(i,a),c=this.slice(n,s),u=t.slice(e,o),p=0;p<l;++p)if(c[p]!==u[p]){i=c[p],a=u[p];break}return i<a?-1:a<i?1:0};function Rk(r,t,e,o,n){if(r.length===0)return-1;if(typeof e=="string"?(o=e,e=0):e>2147483647?e=2147483647:e<-2147483648&&(e=-2147483648),e=+e,Nw(e)&&(e=n?0:r.length-1),e<0&&(e=r.length+e),e>=r.length){if(n)return-1;e=r.length-1}else if(e<0)if(n)e=0;else return-1;if(typeof t=="string"&&(t=Q.from(t,o)),Q.isBuffer(t))return t.length===0?-1:kk(r,t,e,o,n);if(typeof t=="number")return t=t&255,typeof Uint8Array.prototype.indexOf=="function"?n?Uint8Array.prototype.indexOf.call(r,t,e):Uint8Array.prototype.lastIndexOf.call(r,t,e):kk(r,[t],e,o,n);throw new TypeError("val must be string, number or Buffer")}function kk(r,t,e,o,n){var s=1,i=r.length,a=t.length;if(o!==void 0&&(o=String(o).toLowerCase(),o==="ucs2"||o==="ucs-2"||o==="utf16le"||o==="utf-16le")){if(r.length<2||t.length<2)return-1;s=2,i/=2,a/=2,e/=2}function l(f,h){return s===1?f[h]:f.readUInt16BE(h*s)}var c;if(n){var u=-1;for(c=e;c<i;c++)if(l(r,c)===l(t,u===-1?0:c-u)){if(u===-1&&(u=c),c-u+1===a)return u*s}else u!==-1&&(c-=c-u),u=-1}else for(e+a>i&&(e=i-a),c=e;c>=0;c--){for(var p=!0,m=0;m<a;m++)if(l(r,c+m)!==l(t,m)){p=!1;break}if(p)return c}return-1}Q.prototype.includes=function(t,e,o){return this.indexOf(t,e,o)!==-1};Q.prototype.indexOf=function(t,e,o){return Rk(this,t,e,o,!0)};Q.prototype.lastIndexOf=function(t,e,o){return Rk(this,t,e,o,!1)};function LW(r,t,e,o){e=Number(e)||0;var n=r.length-e;o?(o=Number(o),o>n&&(o=n)):o=n;var s=t.length;o>s/2&&(o=s/2);for(var i=0;i<o;++i){var a=parseInt(t.substr(i*2,2),16);if(Nw(a))return i;r[e+i]=a}return i}function PW(r,t,e,o){return kg(Iw(t,r.length-e),r,e,o)}function zW(r,t,e,o){return kg(XW(t),r,e,o)}function BW(r,t,e,o){return kg(Pk(t),r,e,o)}function MW(r,t,e,o){return kg(YW(t,r.length-e),r,e,o)}Q.prototype.write=function(t,e,o,n){if(e===void 0)n="utf8",o=this.length,e=0;else if(o===void 0&&typeof e=="string")n=e,o=this.length,e=0;else if(isFinite(e))e=e>>>0,isFinite(o)?(o=o>>>0,n===void 0&&(n="utf8")):(n=o,o=void 0);else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");var s=this.length-e;if((o===void 0||o>s)&&(o=s),t.length>0&&(o<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");for(var i=!1;;)switch(n){case"hex":return LW(this,t,e,o);case"utf8":case"utf-8":return PW(this,t,e,o);case"ascii":case"latin1":case"binary":return zW(this,t,e,o);case"base64":return BW(this,t,e,o);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return MW(this,t,e,o);default:if(i)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),i=!0}};Q.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function VW(r,t,e){return t===0&&e===r.length?bw.fromByteArray(r):bw.fromByteArray(r.slice(t,e))}function Fk(r,t,e){e=Math.min(r.length,e);for(var o=[],n=t;n<e;){var s=r[n],i=null,a=s>239?4:s>223?3:s>191?2:1;if(n+a<=e){var l,c,u,p;switch(a){case 1:s<128&&(i=s);break;case 2:l=r[n+1],(l&192)===128&&(p=(s&31)<<6|l&63,p>127&&(i=p));break;case 3:l=r[n+1],c=r[n+2],(l&192)===128&&(c&192)===128&&(p=(s&15)<<12|(l&63)<<6|c&63,p>2047&&(p<55296||p>57343)&&(i=p));break;case 4:l=r[n+1],c=r[n+2],u=r[n+3],(l&192)===128&&(c&192)===128&&(u&192)===128&&(p=(s&15)<<18|(l&63)<<12|(c&63)<<6|u&63,p>65535&&p<1114112&&(i=p))}}i===null?(i=65533,a=1):i>65535&&(i-=65536,o.push(i>>>10&1023|55296),i=56320|i&1023),o.push(i),n+=a}return GW(o)}var Ek=4096;function GW(r){var t=r.length;if(t<=Ek)return String.fromCharCode.apply(String,r);for(var e="",o=0;o<t;)e+=String.fromCharCode.apply(String,r.slice(o,o+=Ek));return e}function UW(r,t,e){var o="";e=Math.min(r.length,e);for(var n=t;n<e;++n)o+=String.fromCharCode(r[n]&127);return o}function WW(r,t,e){var o="";e=Math.min(r.length,e);for(var n=t;n<e;++n)o+=String.fromCharCode(r[n]);return o}function HW(r,t,e){var o=r.length;(!t||t<0)&&(t=0),(!e||e<0||e>o)&&(e=o);for(var n="",s=t;s<e;++s)n+=ZW[r[s]];return n}function qW(r,t,e){for(var o=r.slice(t,e),n="",s=0;s<o.length-1;s+=2)n+=String.fromCharCode(o[s]+o[s+1]*256);return n}Q.prototype.slice=function(t,e){var o=this.length;t=~~t,e=e===void 0?o:~~e,t<0?(t+=o,t<0&&(t=0)):t>o&&(t=o),e<0?(e+=o,e<0&&(e=0)):e>o&&(e=o),e<t&&(e=t);var n=this.subarray(t,e);return Object.setPrototypeOf(n,Q.prototype),n};function lr(r,t,e){if(r%1!==0||r<0)throw new RangeError("offset is not uint");if(r+t>e)throw new RangeError("Trying to access beyond buffer length")}Q.prototype.readUintLE=Q.prototype.readUIntLE=function(t,e,o){t=t>>>0,e=e>>>0,o||lr(t,e,this.length);for(var n=this[t],s=1,i=0;++i<e&&(s*=256);)n+=this[t+i]*s;return n};Q.prototype.readUintBE=Q.prototype.readUIntBE=function(t,e,o){t=t>>>0,e=e>>>0,o||lr(t,e,this.length);for(var n=this[t+--e],s=1;e>0&&(s*=256);)n+=this[t+--e]*s;return n};Q.prototype.readUint8=Q.prototype.readUInt8=function(t,e){return t=t>>>0,e||lr(t,1,this.length),this[t]};Q.prototype.readUint16LE=Q.prototype.readUInt16LE=function(t,e){return t=t>>>0,e||lr(t,2,this.length),this[t]|this[t+1]<<8};Q.prototype.readUint16BE=Q.prototype.readUInt16BE=function(t,e){return t=t>>>0,e||lr(t,2,this.length),this[t]<<8|this[t+1]};Q.prototype.readUint32LE=Q.prototype.readUInt32LE=function(t,e){return t=t>>>0,e||lr(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+this[t+3]*16777216};Q.prototype.readUint32BE=Q.prototype.readUInt32BE=function(t,e){return t=t>>>0,e||lr(t,4,this.length),this[t]*16777216+(this[t+1]<<16|this[t+2]<<8|this[t+3])};Q.prototype.readIntLE=function(t,e,o){t=t>>>0,e=e>>>0,o||lr(t,e,this.length);for(var n=this[t],s=1,i=0;++i<e&&(s*=256);)n+=this[t+i]*s;return s*=128,n>=s&&(n-=Math.pow(2,8*e)),n};Q.prototype.readIntBE=function(t,e,o){t=t>>>0,e=e>>>0,o||lr(t,e,this.length);for(var n=e,s=1,i=this[t+--n];n>0&&(s*=256);)i+=this[t+--n]*s;return s*=128,i>=s&&(i-=Math.pow(2,8*e)),i};Q.prototype.readInt8=function(t,e){return t=t>>>0,e||lr(t,1,this.length),this[t]&128?(255-this[t]+1)*-1:this[t]};Q.prototype.readInt16LE=function(t,e){t=t>>>0,e||lr(t,2,this.length);var o=this[t]|this[t+1]<<8;return o&32768?o|4294901760:o};Q.prototype.readInt16BE=function(t,e){t=t>>>0,e||lr(t,2,this.length);var o=this[t+1]|this[t]<<8;return o&32768?o|4294901760:o};Q.prototype.readInt32LE=function(t,e){return t=t>>>0,e||lr(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24};Q.prototype.readInt32BE=function(t,e){return t=t>>>0,e||lr(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]};Q.prototype.readFloatLE=function(t,e){return t=t>>>0,e||lr(t,4,this.length),Au.read(this,t,!0,23,4)};Q.prototype.readFloatBE=function(t,e){return t=t>>>0,e||lr(t,4,this.length),Au.read(this,t,!1,23,4)};Q.prototype.readDoubleLE=function(t,e){return t=t>>>0,e||lr(t,8,this.length),Au.read(this,t,!0,52,8)};Q.prototype.readDoubleBE=function(t,e){return t=t>>>0,e||lr(t,8,this.length),Au.read(this,t,!1,52,8)};function jr(r,t,e,o,n,s){if(!Q.isBuffer(r))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>n||t<s)throw new RangeError('"value" argument is out of bounds');if(e+o>r.length)throw new RangeError("Index out of range")}Q.prototype.writeUintLE=Q.prototype.writeUIntLE=function(t,e,o,n){if(t=+t,e=e>>>0,o=o>>>0,!n){var s=Math.pow(2,8*o)-1;jr(this,t,e,o,s,0)}var i=1,a=0;for(this[e]=t&255;++a<o&&(i*=256);)this[e+a]=t/i&255;return e+o};Q.prototype.writeUintBE=Q.prototype.writeUIntBE=function(t,e,o,n){if(t=+t,e=e>>>0,o=o>>>0,!n){var s=Math.pow(2,8*o)-1;jr(this,t,e,o,s,0)}var i=o-1,a=1;for(this[e+i]=t&255;--i>=0&&(a*=256);)this[e+i]=t/a&255;return e+o};Q.prototype.writeUint8=Q.prototype.writeUInt8=function(t,e,o){return t=+t,e=e>>>0,o||jr(this,t,e,1,255,0),this[e]=t&255,e+1};Q.prototype.writeUint16LE=Q.prototype.writeUInt16LE=function(t,e,o){return t=+t,e=e>>>0,o||jr(this,t,e,2,65535,0),this[e]=t&255,this[e+1]=t>>>8,e+2};Q.prototype.writeUint16BE=Q.prototype.writeUInt16BE=function(t,e,o){return t=+t,e=e>>>0,o||jr(this,t,e,2,65535,0),this[e]=t>>>8,this[e+1]=t&255,e+2};Q.prototype.writeUint32LE=Q.prototype.writeUInt32LE=function(t,e,o){return t=+t,e=e>>>0,o||jr(this,t,e,4,4294967295,0),this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=t&255,e+4};Q.prototype.writeUint32BE=Q.prototype.writeUInt32BE=function(t,e,o){return t=+t,e=e>>>0,o||jr(this,t,e,4,4294967295,0),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=t&255,e+4};Q.prototype.writeIntLE=function(t,e,o,n){if(t=+t,e=e>>>0,!n){var s=Math.pow(2,8*o-1);jr(this,t,e,o,s-1,-s)}var i=0,a=1,l=0;for(this[e]=t&255;++i<o&&(a*=256);)t<0&&l===0&&this[e+i-1]!==0&&(l=1),this[e+i]=(t/a>>0)-l&255;return e+o};Q.prototype.writeIntBE=function(t,e,o,n){if(t=+t,e=e>>>0,!n){var s=Math.pow(2,8*o-1);jr(this,t,e,o,s-1,-s)}var i=o-1,a=1,l=0;for(this[e+i]=t&255;--i>=0&&(a*=256);)t<0&&l===0&&this[e+i+1]!==0&&(l=1),this[e+i]=(t/a>>0)-l&255;return e+o};Q.prototype.writeInt8=function(t,e,o){return t=+t,e=e>>>0,o||jr(this,t,e,1,127,-128),t<0&&(t=255+t+1),this[e]=t&255,e+1};Q.prototype.writeInt16LE=function(t,e,o){return t=+t,e=e>>>0,o||jr(this,t,e,2,32767,-32768),this[e]=t&255,this[e+1]=t>>>8,e+2};Q.prototype.writeInt16BE=function(t,e,o){return t=+t,e=e>>>0,o||jr(this,t,e,2,32767,-32768),this[e]=t>>>8,this[e+1]=t&255,e+2};Q.prototype.writeInt32LE=function(t,e,o){return t=+t,e=e>>>0,o||jr(this,t,e,4,2147483647,-2147483648),this[e]=t&255,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24,e+4};Q.prototype.writeInt32BE=function(t,e,o){return t=+t,e=e>>>0,o||jr(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=t&255,e+4};function _k(r,t,e,o,n,s){if(e+o>r.length)throw new RangeError("Index out of range");if(e<0)throw new RangeError("Index out of range")}function Ok(r,t,e,o,n){return t=+t,e=e>>>0,n||_k(r,t,e,4,34028234663852886e22,-34028234663852886e22),Au.write(r,t,e,o,23,4),e+4}Q.prototype.writeFloatLE=function(t,e,o){return Ok(this,t,e,!0,o)};Q.prototype.writeFloatBE=function(t,e,o){return Ok(this,t,e,!1,o)};function Lk(r,t,e,o,n){return t=+t,e=e>>>0,n||_k(r,t,e,8,17976931348623157e292,-17976931348623157e292),Au.write(r,t,e,o,52,8),e+8}Q.prototype.writeDoubleLE=function(t,e,o){return Lk(this,t,e,!0,o)};Q.prototype.writeDoubleBE=function(t,e,o){return Lk(this,t,e,!1,o)};Q.prototype.copy=function(t,e,o,n){if(!Q.isBuffer(t))throw new TypeError("argument should be a Buffer");if(o||(o=0),!n&&n!==0&&(n=this.length),e>=t.length&&(e=t.length),e||(e=0),n>0&&n<o&&(n=o),n===o||t.length===0||this.length===0)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(o<0||o>=this.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),t.length-e<n-o&&(n=t.length-e+o);var s=n-o;return this===t&&typeof Uint8Array.prototype.copyWithin=="function"?this.copyWithin(e,o,n):Uint8Array.prototype.set.call(t,this.subarray(o,n),e),s};Q.prototype.fill=function(t,e,o,n){if(typeof t=="string"){if(typeof e=="string"?(n=e,e=0,o=this.length):typeof o=="string"&&(n=o,o=this.length),n!==void 0&&typeof n!="string")throw new TypeError("encoding must be a string");if(typeof n=="string"&&!Q.isEncoding(n))throw new TypeError("Unknown encoding: "+n);if(t.length===1){var s=t.charCodeAt(0);(n==="utf8"&&s<128||n==="latin1")&&(t=s)}}else typeof t=="number"?t=t&255:typeof t=="boolean"&&(t=Number(t));if(e<0||this.length<e||this.length<o)throw new RangeError("Out of range index");if(o<=e)return this;e=e>>>0,o=o===void 0?this.length:o>>>0,t||(t=0);var i;if(typeof t=="number")for(i=e;i<o;++i)this[i]=t;else{var a=Q.isBuffer(t)?t:Q.from(t,n),l=a.length;if(l===0)throw new TypeError('The value "'+t+'" is invalid for argument "value"');for(i=0;i<o-e;++i)this[i+e]=a[i%l]}return this};var KW=/[^+/0-9A-Za-z-_]/g;function jW(r){if(r=r.split("=")[0],r=r.trim().replace(KW,""),r.length<2)return"";for(;r.length%4!==0;)r=r+"=";return r}function Iw(r,t){t=t||1/0;for(var e,o=r.length,n=null,s=[],i=0;i<o;++i){if(e=r.charCodeAt(i),e>55295&&e<57344){if(!n){if(e>56319){(t-=3)>-1&&s.push(239,191,189);continue}else if(i+1===o){(t-=3)>-1&&s.push(239,191,189);continue}n=e;continue}if(e<56320){(t-=3)>-1&&s.push(239,191,189),n=e;continue}e=(n-55296<<10|e-56320)+65536}else n&&(t-=3)>-1&&s.push(239,191,189);if(n=null,e<128){if((t-=1)<0)break;s.push(e)}else if(e<2048){if((t-=2)<0)break;s.push(e>>6|192,e&63|128)}else if(e<65536){if((t-=3)<0)break;s.push(e>>12|224,e>>6&63|128,e&63|128)}else if(e<1114112){if((t-=4)<0)break;s.push(e>>18|240,e>>12&63|128,e>>6&63|128,e&63|128)}else throw new Error("Invalid code point")}return s}function XW(r){for(var t=[],e=0;e<r.length;++e)t.push(r.charCodeAt(e)&255);return t}function YW(r,t){for(var e,o,n,s=[],i=0;i<r.length&&!((t-=2)<0);++i)e=r.charCodeAt(i),o=e>>8,n=e%256,s.push(n),s.push(o);return s}function Pk(r){return bw.toByteArray(jW(r))}function kg(r,t,e,o){for(var n=0;n<o&&!(n+e>=t.length||n>=r.length);++n)t[n+e]=r[n];return n}function Cn(r,t){return r instanceof t||r!=null&&r.constructor!=null&&r.constructor.name!=null&&r.constructor.name===t.name}function Nw(r){return r!==r}var ZW=function(){for(var r="0123456789abcdef",t=new Array(256),e=0;e<16;++e)for(var o=e*16,n=0;n<16;++n)t[o+n]=r[e]+r[n];return t}()});var Vk=pr((Tw,Mk)=>{var Eg=zk(),In=Eg.Buffer;function Bk(r,t){for(var e in r)t[e]=r[e]}In.from&&In.alloc&&In.allocUnsafe&&In.allocUnsafeSlow?Mk.exports=Eg:(Bk(Eg,Tw),Tw.Buffer=yl);function yl(r,t,e){return In(r,t,e)}yl.prototype=Object.create(In.prototype);Bk(In,yl);yl.from=function(r,t,e){if(typeof r=="number")throw new TypeError("Argument must not be a number");return In(r,t,e)};yl.alloc=function(r,t,e){if(typeof r!="number")throw new TypeError("Argument must be a number");var o=In(r);return t!==void 0?typeof e=="string"?o.fill(t,e):o.fill(t):o.fill(0),o};yl.allocUnsafe=function(r){if(typeof r!="number")throw new TypeError("Argument must be a number");return In(r)};yl.allocUnsafeSlow=function(r){if(typeof r!="number")throw new TypeError("Argument must be a number");return Eg.SlowBuffer(r)}});var Wk=pr(Uk=>{"use strict";var Ew=Vk().Buffer,Gk=Ew.isEncoding||function(r){switch(r=""+r,r&&r.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function JW(r){if(!r)return"utf8";for(var t;;)switch(r){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return r;default:if(t)return;r=(""+r).toLowerCase(),t=!0}}function QW(r){var t=JW(r);if(typeof t!="string"&&(Ew.isEncoding===Gk||!Gk(r)))throw new Error("Unknown encoding: "+r);return t||r}Uk.StringDecoder=Af;function Af(r){this.encoding=QW(r);var t;switch(this.encoding){case"utf16le":this.text=s4,this.end=i4,t=4;break;case"utf8":this.fillLast=r4,t=4;break;case"base64":this.text=a4,this.end=l4,t=3;break;default:this.write=c4,this.end=u4;return}this.lastNeed=0,this.lastTotal=0,this.lastChar=Ew.allocUnsafe(t)}Af.prototype.write=function(r){if(r.length===0)return"";var t,e;if(this.lastNeed){if(t=this.fillLast(r),t===void 0)return"";e=this.lastNeed,this.lastNeed=0}else e=0;return e<r.length?t?t+this.text(r,e):this.text(r,e):t||""};Af.prototype.end=n4;Af.prototype.text=o4;Af.prototype.fillLast=function(r){if(this.lastNeed<=r.length)return r.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);r.copy(this.lastChar,this.lastTotal-this.lastNeed,0,r.length),this.lastNeed-=r.length};function kw(r){return r<=127?0:r>>5===6?2:r>>4===14?3:r>>3===30?4:r>>6===2?-1:-2}function t4(r,t,e){var o=t.length-1;if(o<e)return 0;var n=kw(t[o]);return n>=0?(n>0&&(r.lastNeed=n-1),n):--o<e||n===-2?0:(n=kw(t[o]),n>=0?(n>0&&(r.lastNeed=n-2),n):--o<e||n===-2?0:(n=kw(t[o]),n>=0?(n>0&&(n===2?n=0:r.lastNeed=n-3),n):0))}function e4(r,t,e){if((t[0]&192)!==128)return r.lastNeed=0,"\uFFFD";if(r.lastNeed>1&&t.length>1){if((t[1]&192)!==128)return r.lastNeed=1,"\uFFFD";if(r.lastNeed>2&&t.length>2&&(t[2]&192)!==128)return r.lastNeed=2,"\uFFFD"}}function r4(r){var t=this.lastTotal-this.lastNeed,e=e4(this,r,t);if(e!==void 0)return e;if(this.lastNeed<=r.length)return r.copy(this.lastChar,t,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);r.copy(this.lastChar,t,0,r.length),this.lastNeed-=r.length}function o4(r,t){var e=t4(this,r,t);if(!this.lastNeed)return r.toString("utf8",t);this.lastTotal=e;var o=r.length-(e-this.lastNeed);return r.copy(this.lastChar,0,o),r.toString("utf8",t,o)}function n4(r){var t=r&&r.length?this.write(r):"";return this.lastNeed?t+"\uFFFD":t}function s4(r,t){if((r.length-t)%2===0){var e=r.toString("utf16le",t);if(e){var o=e.charCodeAt(e.length-1);if(o>=55296&&o<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=r[r.length-2],this.lastChar[1]=r[r.length-1],e.slice(0,-1)}return e}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=r[r.length-1],r.toString("utf16le",t,r.length-1)}function i4(r){var t=r&&r.length?this.write(r):"";if(this.lastNeed){var e=this.lastTotal-this.lastNeed;return t+this.lastChar.toString("utf16le",0,e)}return t}function a4(r,t){var e=(r.length-t)%3;return e===0?r.toString("base64",t):(this.lastNeed=3-e,this.lastTotal=3,e===1?this.lastChar[0]=r[r.length-1]:(this.lastChar[0]=r[r.length-2],this.lastChar[1]=r[r.length-1]),r.toString("base64",t,r.length-e))}function l4(r){var t=r&&r.length?this.write(r):"";return this.lastNeed?t+this.lastChar.toString("base64",0,3-this.lastNeed):t}function c4(r){return r.toString(this.encoding)}function u4(r){return r&&r.length?this.write(r):""}});var FI=`<div class="ComplexNavigator">
  <div class="Buttons" [ngClass]="complexSearch().totalNumberOfResults <=6 ? 'smallCNButtons' : ''">
    <cp-complex-navigator-buttons
      [(interactorsSorting)]="interactorsSorting"
      [(organismIconDisplay)]="organismIconDisplay"
      [(interactorTypeDisplay)]="interactorTypeDisplay"
      [(idDisplay)]="idDisplay">
    </cp-complex-navigator-buttons>
  </div>
  <cp-table-structure [complexSearch]="complexSearch()"
                      [interactors]="interactors()"
                      [interactorsSorting]="interactorsSorting"
                      [organismIconDisplay]="organismIconDisplay"
                      [interactorTypeDisplay]="interactorTypeDisplay"
                      [idDisplay]="idDisplay"
                      [canAddComplexesToBasket]="canAddComplexesToBasket()"
                      [canRemoveComplexesFromBasket]="canRemoveComplexesFromBasket()"
                      (onComplexRemovedFromBasket)="onComplexRemovedFromBasket.emit($event)">
  </cp-table-structure>
</div>

`;var _I="";var TL=function(r,t,e,o){var n=arguments.length,s=n<3?t:o===null?o=Object.getOwnPropertyDescriptor(t,e):o,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")s=Reflect.decorate(r,t,e,o);else for(var a=r.length-1;a>=0;a--)(i=r[a])&&(s=(n<3?i(s):n>3?i(t,e,s):i(t,e))||s);return n>3&&s&&Object.defineProperty(t,e,s),s},eb,sp=(eb=class{constructor(){et(this,"complexSearch",Et());et(this,"interactors",Et());et(this,"canAddComplexesToBasket",Et());et(this,"canRemoveComplexesFromBasket",Et());et(this,"onComplexRemovedFromBasket",Zs());et(this,"interactorsSorting","Occurrence");et(this,"organismIconDisplay",!0);et(this,"interactorTypeDisplay",!0);et(this,"idDisplay",!0)}},et(eb,"propDecorators",{complexSearch:[{type:St,args:[{isSignal:!0,alias:"complexSearch",required:!1,transform:void 0}]}],interactors:[{type:St,args:[{isSignal:!0,alias:"interactors",required:!1,transform:void 0}]}],canAddComplexesToBasket:[{type:St,args:[{isSignal:!0,alias:"canAddComplexesToBasket",required:!1,transform:void 0}]}],canRemoveComplexesFromBasket:[{type:St,args:[{isSignal:!0,alias:"canRemoveComplexesFromBasket",required:!1,transform:void 0}]}],onComplexRemovedFromBasket:[{type:Er,args:["onComplexRemovedFromBasket"]}]}),eb);sp=TL([_e({selector:"cp-complex-navigator",template:FI,styles:[_I]})],sp);var OI=`<div class="complexNavigatorTable">
  <div class="header"
       (scroll)="body.scrollLeft = header.scrollLeft" #header>

    <cp-table-header [complexes]="sortedComplexes()"
                     [interactorsSorting]="interactorsSorting()"
                     (onComplexRemovedFromBasket)="onComplexRemovedFromBasket.emit($event)">
    </cp-table-header>
  </div>
  <div class="interactors"
       (scroll)="header.scrollLeft = body.scrollLeft" #body>
    <cp-table-interactor-column
      [complexes]="sortedComplexes()"
      [interactors]="interactors()"
      [interactorsSorting]="interactorsSorting()"
      [organismIconDisplay]="organismIconDisplay()"
      [interactorTypeDisplay]="interactorTypeDisplay()"
      [idDisplay]="idDisplay()">
    </cp-table-interactor-column>
  </div>
  <div class="spaceHolder"></div>
</div>

`;var LI=`.complexNavigatorTable{border-collapse:separate;height:100%}.header{position:sticky;top:20px;z-index:2;overflow-x:auto;overflow-y:hidden;transform:rotateX(180deg)}.interactors{z-index:1;position:relative;overflow-y:hidden}
`;var wa=class{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}},$n=class{refCount(t){return Pr("refCount")}incRef(t){return Pr("incRef")}timerAvailable(){return!0}time(t){return Pr("time")}read(t){return Pr("read")}readSync(t){return Pr("readSync")}readToGPU(t,e){return Pr("readToGPU")}numDataIds(){return Pr("numDataIds")}disposeData(t,e){return Pr("disposeData")}write(t,e,o){return Pr("write")}move(t,e,o,n,s){return Pr("move")}createTensorFromGPUData(t,e,o){return Pr("createTensorFromGPUData")}memory(){return Pr("memory")}floatPrecision(){return Pr("floatPrecision")}epsilon(){return this.floatPrecision()===32?1e-7:1e-4}dispose(){return Pr("dispose")}};function Pr(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function PI(r){let t=r.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,sh(r,t,e)}function AL(r,t){if(r.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${t.length}`);let e=r.length,o=0;for(;e>0;)o=Math.random()*e|0,e--,sh(r,e,o),sh(t,e,o)}function Fl(r,t,e){return Math.max(r,Math.min(t,e))}function $L(r){return r%2===0?r:r+1}function sh(r,t,e){let o=r[t];r[t]=r[e],r[e]=o}function DL(r){let t=0;for(let e=0;e<r.length;e++)t+=r[e];return t}function RL(r,t){let e=Math.random();return t*e+(1-e)*r}function FL(r,t){let e=0;for(let o=0;o<r.length;o++){let n=Number(r[o])-Number(t[o]);e+=n*n}return e}function N(r,t){if(!r)throw new Error(typeof t=="string"?t:t())}function ih(r,t,e=""){N(Js(r,t),()=>e+` Shapes ${r} and ${t} must match`)}function ip(r){N(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Ut(r){if(r.length===0)return 1;let t=r[0];for(let e=1;e<r.length;e++)t*=r[e];return t}function _L(r){return r.length===0}function OL(r,t){if(r===t)return!0;if(r==null||t==null||r.length!==t.length)return!1;for(let e=0;e<r.length;e++)if(r[e]!==null&&t[e]!==null&&r[e]!==t[e])return!1;return!0}function Js(r,t){if(r===t)return!0;if(r==null||t==null||r.length!==t.length)return!1;for(let e=0;e<r.length;e++)if(r[e]!==t[e])return!1;return!0}function Dn(r){return r%1===0}function LL(r){if(Math.tanh!=null)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;{let t=Math.exp(2*r);return(t-1)/(t+1)}}function PL(r){let t=Math.ceil(Math.sqrt(r));return[t,Math.ceil(r/t)]}function zL(r){let t=new Uint32Array(r);for(let e=0;e<r;++e)t[e]=e;return PI(t),t}function Ia(r,t){return t<=r.length?r:r+" ".repeat(t-r.length)}function BL(r,t=n=>0,e,o){return new Promise((n,s)=>{let i=0,a=()=>{if(r()){n();return}i++;let l=t(i);if(e!=null&&i>=e){s();return}o!=null?o(a,l):setTimeout(a,l)};a()})}function ML(r,t){let e=1,o=-1;for(let s=0;s<r.length;++s)if(r[s]>=0)e*=r[s];else if(r[s]===-1){if(o!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${o} and dim ${s}`);o=s}else if(r[s]<0)throw Error(`Shapes can not be < 0. Found ${r[s]} at dim ${s}`);if(o===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${r}`);return r}if(e===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);let n=r.slice();return n[o]=t/e,n}function Oe(r,t){let e=t.length;return r=r==null?t.map((o,n)=>n):[].concat(r),N(r.every(o=>o>=-e&&o<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${r}`),N(r.every(o=>Dn(o)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(o=>o<0?e+o:o)}function rb(r,t){let e=[],o=[],n=t!=null&&Array.isArray(t)&&t.length===0,s=t==null||n?null:Oe(t,r).sort(),i=0;for(let a=0;a<r.length;++a){if(s!=null){if(s[i]===a&&r[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${r[a]}' is not 1`);(s[i]==null||s[i]>a)&&r[a]===1&&(e.push(r[a]),o.push(a)),s[i]<=a&&i++}r[a]!==1&&(e.push(r[a]),o.push(a))}return{newShape:e,keptDims:o}}function VL(r,t){return ah(r,t)}function ah(r,t){let e=null;if(r==null||r==="float32")e=new Float32Array(t);else if(r==="int32")e=new Int32Array(t);else if(r==="bool")e=new Uint8Array(t);else if(r==="string")e=new Array(t);else throw new Error(`Unknown data type ${r}`);return e}function ob(r,t){for(let e=0;e<r.length;e++){let o=r[e];if(isNaN(o)||!isFinite(o))throw Error(`A tensor of type ${t} being uploaded contains ${o}.`)}}function nb(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function GL(r,t){return!(t==="complex64"||t==="float32"&&r!=="complex64"||t==="int32"&&r!=="float32"&&r!=="complex64"||t==="bool"&&r==="bool")}function _l(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function sb(r){if(r==null)return 0;let t=0;return r.forEach(e=>t+=e.length),t}function Ol(r){return typeof r=="string"||r instanceof String}function zI(r){return typeof r=="boolean"}function BI(r){return typeof r=="number"}function Qs(r){return Array.isArray(r)?Qs(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray?"int32":BI(r)?"float32":Ol(r)?"string":zI(r)?"bool":"float32"}function Ll(r){return!!(r&&r.constructor&&r.call&&r.apply)}function Pl(r,t){for(let e=t;e<r;++e)if(r%e===0)return e;return r}function en(r){let t=r.length;if(t<2)return[];let e=new Array(t-1);e[t-2]=r[t-1];for(let o=t-3;o>=0;--o)e[o]=e[o+1]*r[o+1];return e}function MI(r,t,e,o=!1){let n=new Array;if(t.length===1){let s=t[0]*(o?2:1);for(let i=0;i<s;i++)n[i]=e[r+i]}else{let s=t[0],i=t.slice(1),a=i.reduce((l,c)=>l*c)*(o?2:1);for(let l=0;l<s;l++)n[l]=MI(r+l*a,i,e,o)}return n}function Ca(r,t,e=!1){if(r.length===0)return t[0];let o=r.reduce((n,s)=>n*s)*(e?2:1);if(o===0)return[];if(o!==t.length)throw new Error(`[${r}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return MI(0,r,t,e)}function UL(r,t){if(Array.isArray(r))return r;if(t==="float32")return r instanceof Float32Array?r:new Float32Array(r);if(t==="int32")return r instanceof Int32Array?r:new Int32Array(r);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(r));throw new Error(`Unknown dtype ${t}`)}function ap(r,t){let e=zl(r,t);for(let o=0;o<e.length;o++)e[o]=1;return e}function zl(r,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${t}`)}function WL(r,t){let e=r.reduce((o,n)=>o*n,1);if(t==null||t==="float32")return Ca(r,new Float32Array(e));if(t==="int32")return Ca(r,new Int32Array(e));if(t==="bool")return Ca(r,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function je(r){r.forEach(t=>{N(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function HL(r,t,e){if(t===0)return 0;if(t===1)return r[0];let o=r[r.length-1];for(let n=0;n<r.length-1;++n)o+=e[n]*r[n];return o}function qL(r,t,e){if(t===0)return[];if(t===1)return[r];let o=new Array(t);for(let n=0;n<o.length-1;++n)o[n]=Math.floor(r/e[n]),r-=o[n]*e[n];return o[o.length-1]=r,o}function Sa(r){return r&&r.then&&typeof r.then=="function"}var VI="tfjsflags",lp=class{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=jL,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(P().getBool("IS_TEST")||P().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,o){if(this.flagRegistry[t]={evaluationFn:e,setHook:o},this.urlFlags[t]!=null){let n=this.urlFlags[t];P().getBool("IS_TEST")||P().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${n}.`),this.set(t,n)}}getAsync(t){return B(this,null,function*(){return t in this.flags?this.flags[t]:(this.flags[t]=yield this.evaluateFlag(t),this.flags[t])})}get(t){if(t in this.flags)return this.flags[t];let e=this.evaluateFlag(t);if(Sa(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getString(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let t=this.getQueryParams(this.global.location.search);VI in t&&t[VI].split(",").forEach(o=>{let[n,s]=o.split(":");this.urlFlags[n]=YL(n,s)})}};function jL(r){let t={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...o)=>(XL(t,o[0],o[1]),o.join("="))),t}function XL(r,t,e){r[decodeURIComponent(t)]=decodeURIComponent(e||"")}function YL(r,t){let e=t.toLowerCase();return e==="true"||e==="false"?e==="true":`${+e}`===e?+e:t}function P(){return ib}var ib=null;function GI(r){ib=r}var ab;function lb(){if(ab==null){let r;if(typeof window<"u")r=window;else if(typeof global<"u")r=global;else if(typeof process<"u")r=process;else if(typeof self<"u")r=self;else throw new Error("Could not find a global object");ab=r}return ab}function ZL(){let r=lb();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function cp(r,t){let e=ZL();if(e.has(r))return e.get(r);{let o=t();return e.set(r,o),e.get(r)}}var ti="Abs",Rn="Acos",Fn="Acosh",_o="Add",Bl="AddN",Ml="All",Vl="Any",ei="ArgMax",ri="ArgMin",_n="Asin",On="Asinh",Ln="Atan",Pn="Atanh",zn="Atan2",oi="AvgPool",Gl="AvgPoolGrad",ni="AvgPool3D",Ul="AvgPool3DGrad",si="BatchMatMul",ii="BatchToSpaceND",Wl="Bincount",up="BitwiseAnd",UI="BroadcastTo",lh="BroadcastArgs",rn="Cast",Bn="Ceil",Mn="ClipByValue",Hl="Complex",ai="ComplexAbs",li="Concat",ci="Conv2D",ql="Conv2DBackpropFilter",ui="Conv2DBackpropInput",pi="Conv3D",Kl="Conv3DBackpropFilterV2",jl="Conv3DBackpropInputV2",Vn="Cos",Gn="Cosh",Xl="Cumprod",mi="Cumsum",Yl="CropAndResize",Zl="DenseBincount",Jl="DepthToSpace",fi="DepthwiseConv2dNative",Ql="DepthwiseConv2dNativeBackpropFilter",tc="DepthwiseConv2dNativeBackpropInput",ch="Diag",hi="Dilation2D",pp="Dilation2DBackpropInput",mp="Dilation2DBackpropFilter",WI="Draw",Un="RealDiv",ec="Einsum",Wn="Elu",rc="EluGrad",Hn="Erf",va="Equal",qn="Exp",di="ExpandDims",Kn="Expm1",oc="FFT",nc="Fill",sc="FlipLeftRight",jn="Floor",Xn="FloorDiv",gi="FusedBatchNorm",xi="GatherV2",uh="GatherNd",Na="Greater",Yn="GreaterEqual",on="Identity",ic="IFFT",ac="Imag",Zn="IsFinite",Jn="IsInf",Qn="IsNan",yi="LeakyRelu",Ta="Less",ka="LessEqual",ph="LinSpace",ts="Log",es="Log1p",Ea="LogicalAnd",Aa="LogicalNot",$a="LogicalOr";var HI="LogSoftmax";var bi="LRN",lc="LRNGrad";var wi="Max",rs="Maximum",Ci="MaxPool",cc="MaxPoolGrad",Ii="MaxPool3D",uc="MaxPool3DGrad",mh="MaxPoolWithArgmax",Si="Mean",vi="Min",os="Minimum",Ni="MirrorPad",ns="Mod",fh="Multinomial",ss="Multiply",Ti="Neg",Da="NotEqual",pc="NonMaxSuppressionV3",mc="NonMaxSuppressionV4",fc="NonMaxSuppressionV5",ki="OnesLike",Ei="OneHot",Ai="Pack",$i="PadV2";var is="Pow",Di="Prelu",Ri="Prod",hh="RaggedGather",dh="RaggedRange",gh="RaggedTensorToTensor",hc="Range",dc="Real",as="Reciprocal",ls="Relu",Fi="Reshape",_i="ResizeNearestNeighbor",gc="ResizeNearestNeighborGrad",Oi="ResizeBilinear",xc="ResizeBilinearGrad",cs="Relu6",Li="Reverse",us="Round",ps="Rsqrt",xh="ScatterNd",yh="TensorScatterUpdate",bh="SearchSorted",Pi="Select",ms="Selu",zi="Slice",fs="Sin",hs="Sinh",ds="Sign",gs="Sigmoid",xs="Softplus",ys="Sqrt",Bi="Sum",Mi="SpaceToBatchND",Vi="SplitV",Gi="Softmax",wh="SparseFillEmptyRows",Ch="SparseReshape",Ih="SparseSegmentMean",Sh="SparseSegmentSum",vh="SparseToDense",bs="SquaredDifference",yc="Square",fp="StaticRegexReplace",bc="StridedSlice",Nh="StringNGrams",Th="StringSplit",kh="StringToHashBucketFast",ws="Sub",Cs="Tan",Is="Tanh",nn="Tile",wc="TopK",Cc="Transform",sn="Transpose",Ic="Unique",Ui="Unpack",Wi="UnsortedSegmentSum";var Hi="ZerosLike",Ss="Step",qI="FromPixels",Sc="RotateWithOffset",Ra="_FusedMatMul",Fa="FusedConv2D",_a="FusedDepthwiseConv2D";function an(...r){P().getBool("IS_TEST")||P().getBool("PROD")||console.warn(...r)}function JL(...r){P().getBool("IS_TEST")||P().getBool("PROD")||console.log(...r)}var Eh=cp("kernelRegistry",()=>new Map),cb=cp("gradRegistry",()=>new Map);function ub(r,t){let e=XI(r,t);return Eh.get(e)}function pb(r){return cb.get(r)}function mb(r){let t=Eh.entries(),e=[];for(;;){let{done:o,value:n}=t.next();if(o)break;let[s,i]=n,[a]=s.split("_");a===r&&e.push(i)}return e}function Ah(r){let{kernelName:t,backendName:e}=r,o=XI(t,e);Eh.has(o)&&an(`The kernel '${t}' for backend '${e}' is already registered`),Eh.set(o,r)}function jI(r){let{kernelName:t}=r;cb.has(t)&&P().getBool("DEBUG")&&an(`Overriding the gradient for '${t}'`),cb.set(t,r)}function XI(r,t){return`${t}_${r}`}var y={};co(y,{arraysEqual:()=>Js,arraysEqualWithNull:()=>OL,assert:()=>N,assertNonNegativeIntegerDimensions:()=>je,assertNonNull:()=>ip,assertShapesMatch:()=>ih,bytesFromStringArray:()=>sb,bytesPerElement:()=>_l,checkConversionForErrors:()=>ob,clamp:()=>Fl,computeStrides:()=>en,convertBackendValuesAndArrayBuffer:()=>UL,createScalarValue:()=>sP,createShuffledIndices:()=>zL,decodeString:()=>Ec,distSquared:()=>FL,encodeString:()=>kc,fetch:()=>aP,fingerPrint64:()=>nP,flatten:()=>Ki,getArrayFromDType:()=>ah,getTypedArrayFromDType:()=>VL,hasEncodingLoss:()=>GL,hexToLong:()=>hp,indexToLoc:()=>qL,inferDtype:()=>Qs,inferFromImplicitShape:()=>ML,isBoolean:()=>zI,isFunction:()=>Ll,isInt:()=>Dn,isNumber:()=>BI,isPromise:()=>Sa,isScalarShape:()=>_L,isString:()=>Ol,isTypedArray:()=>mr,isValidDtype:()=>nb,locToIndex:()=>HL,makeOnesTypedArray:()=>ap,makeZerosNestedTypedArray:()=>WL,makeZerosTypedArray:()=>zl,nearestDivisor:()=>Pl,nearestLargerEven:()=>$L,now:()=>Ba,parseAxisParam:()=>Oe,randUniform:()=>RL,repeatedTry:()=>BL,rightPad:()=>Ia,shuffle:()=>PI,shuffleCombo:()=>AL,sizeFromShape:()=>Ut,sizeToSquarishShape:()=>PL,squeezeShape:()=>rb,sum:()=>DL,swap:()=>sh,tanh:()=>LL,toNestedArray:()=>Ca,toTypedArray:()=>Tc});function $h(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray}var gb=np(iS());var za=gb.default||gb;function hp(r){return za.fromString(r,!0,16)}var lS=hp("c3a5c85c97cb3127"),Pa=hp("b492b66fbe98f273"),yr=hp("9ae16a3b2f90404f");function db(r){return r.xor(r.shru(47))}function cS(r,t,e){let o=r.slice(t,t+e);return za.fromBytes(Array.from(o),!0,!0)}function fe(r,t){return cS(r,t,8)}function aS(r,t){return cS(r,t,4)}function Xe(r,t){return t===0?r:r.shru(t).or(r.shl(64-t))}function qi(r,t,e=hp("9ddfea08eb382d69")){let o=r.xor(t).mul(e);o=o.xor(o.shru(47));let n=t.xor(o).mul(e);return n=n.xor(n.shru(47)),n=n.mul(e),n}function tP(r,t,e,o,n,s){n=n.add(r),s=Xe(s.add(n).add(o),21);let i=n;return n=n.add(t),n=n.add(e),s=s.add(Xe(n,44)),[n.add(o),s.add(i)]}function Rh(r,t,e,o){return tP(fe(r,t),fe(r,t+8),fe(r,t+16),fe(r,t+24),e,o)}function eP(r,t=r.length){if(t>=8){let e=yr.add(t*2),o=fe(r,0).add(yr),n=fe(r,t-8),s=Xe(n,37).mul(e).add(o),i=Xe(o,25).add(n).mul(e);return qi(s,i,e)}if(t>=4){let e=yr.add(t*2),o=aS(r,0);return qi(o.shl(3).add(t),aS(r,t-4),e)}if(t>0){let e=r[0],o=r[t>>1],n=r[t-1],s=e+(o<<8),i=t+(n<<2);return db(yr.mul(s).xor(lS.mul(i))).mul(yr)}return yr}function rP(r,t=r.length){let e=yr.add(t*2),o=fe(r,0).mul(Pa),n=fe(r,8),s=fe(r,t-8).mul(e),i=fe(r,t-16).mul(yr);return qi(Xe(o.add(n),43).add(Xe(s,30)).add(i),o.add(Xe(n.add(yr),18)).add(s),e)}function oP(r,t=r.length){let e=yr.add(t*2),o=fe(r,0).mul(yr),n=fe(r,8),s=fe(r,t-8).mul(e),i=fe(r,t-16).mul(yr),a=Xe(o.add(n),43).add(Xe(s,30)).add(i),l=qi(a,o.add(Xe(n.add(yr),18)).add(s),e),c=fe(r,16).mul(e),u=fe(r,24),p=a.add(fe(r,t-32)).mul(e),m=l.add(fe(r,t-24)).mul(e);return qi(Xe(c.add(u),43).add(Xe(p,30)).add(m),c.add(Xe(u.add(o),18)).add(p),e)}function nP(r,t=r.length){let e=za.fromNumber(81,!0);if(t<=32)return t<=16?eP(r,t):rP(r,t);if(t<=64)return oP(r,t);let o=e,n=e.mul(Pa).add(113),s=db(n.mul(yr).add(113)).mul(yr),i=[za.UZERO,za.UZERO],a=[za.UZERO,za.UZERO];o=o.mul(yr).add(fe(r,0));let l=0,c=(t-1>>6)*64,u=c+(t-1&63)-63;do o=Xe(o.add(n).add(i[0]).add(fe(r,l+8)),37).mul(Pa),n=Xe(n.add(i[1]).add(fe(r,l+48)),42).mul(Pa),o=o.xor(a[1]),n=n.add(i[0]).add(fe(r,l+40)),s=Xe(s.add(a[0]),33).mul(Pa),i=Rh(r,l,i[1].mul(Pa),o.add(a[0])),a=Rh(r,l+32,s.add(a[1]),n.add(fe(r,l+16))),[s,o]=[o,s],l+=64;while(l!==c);let p=Pa.add(s.and(255).shl(1));return l=u,a[0]=a[0].add(t-1&63),i[0]=i[0].add(a[0]),a[0]=a[0].add(i[0]),o=Xe(o.add(n).add(i[0]).add(fe(r,l+8)),37).mul(p),n=Xe(n.add(i[1]).add(fe(r,l+48)),42).mul(p),o=o.xor(a[1].mul(9)),n=n.add(i[0].mul(9).add(fe(r,l+40))),s=Xe(s.add(a[0]),33).mul(p),i=Rh(r,l,i[1].mul(p),o.add(a[0])),a=Rh(r,l+32,s.add(a[1]),n.add(fe(r,l+16))),[s,o]=[o,s],qi(qi(i[0],a[0],p).add(db(n).mul(lS)).add(s),qi(i[1],a[1],p).add(o),p)}function sP(r,t){return t==="string"?kc(r):Tc([r],t)}function iP(r,t){return r instanceof Float32Array&&t==="float32"||r instanceof Int32Array&&t==="int32"||r instanceof Uint8Array&&t==="bool"}function Tc(r,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=Ki(r)),P().getBool("DEBUG")&&ob(r,t),iP(r,t))return r;if(t==null||t==="float32"||t==="complex64")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool"){let e=new Uint8Array(r.length);for(let o=0;o<e.length;++o)Math.round(r[o])!==0&&(e[o]=1);return e}else throw new Error(`Unknown data type ${t}`)}function Ba(){return P().platform.now()}function aP(r,t){return P().platform.fetch(r,t)}function kc(r,t="utf-8"){return t=t||"utf-8",P().platform.encode(r,t)}function Ec(r,t="utf-8"){return t=t||"utf-8",P().platform.decode(r,t)}function mr(r){return P().platform.isTypedArray!=null?P().platform.isTypedArray(r):$h(r)}function Ki(r,t=[],e=!1){if(t==null&&(t=[]),typeof r=="boolean"||typeof r=="number"||typeof r=="string"||Sa(r)||r==null||mr(r)&&e)t.push(r);else if(Array.isArray(r)||mr(r))for(let o=0;o<r.length;++o)Ki(r[o],t,e);else{let o=-1;for(let n of Object.keys(r))/^([1-9]+[0-9]*|0)$/.test(n)&&(o=Math.max(o,Number(n)));for(let n=0;n<=o;n++)Ki(r[n],t,e)}return t}var Fh=class{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new xb)}profileKernel(t,e,o){let n,s=()=>{n=o()},i,a=Ba();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(let c of n)c.dataSync();i=Promise.resolve({kernelMs:Ba()-a})}if(P().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<n.length;c++){let u=n[c];u.data().then(p=>{lP(p,u.dtype,t)})}return{kernelName:t,outputs:n,inputs:e,timeMs:i.then(c=>c.kernelMs),extraInfo:i.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(t){let{kernelName:e,outputs:o,timeMs:n,inputs:s,extraInfo:i}=t;o.forEach(a=>{Promise.all([a.data(),n,i]).then(l=>{this.logger.logKernelProfile(e,a,l[0],l[1],s,l[2])})})}};function lP(r,t,e){if(t!=="float32")return!1;for(let o=0;o<r.length;o++){let n=r[o];if(isNaN(n)||!isFinite(n))return console.warn(`Found ${n} in the result of '${e}'`),!0}return!1}var xb=class{logKernelProfile(t,e,o,n,s,i){let a=typeof n=="number"?Ia(`${n}ms`,9):n.error,l=Ia(t,25),c=e.rank,u=e.size,p=Ia(e.shape.toString(),14),m="";for(let f in s){let h=s[f];if(h!=null){let d=h.shape||e.shape,g=d.length;m+=`${f}: ${g}D ${g>0?d:""} `}}console.log(`%c${l}	%c${a}	%c${c}D ${p}	%c${u}	%c${m}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function uS(r,t,e){let o={},n={};for(let l=0;l<t.length;l++)o[t[l].id]=!0;for(let l=0;l<r.length;l++){let c=r[l],u=c.inputs;for(let p in u){let m=u[p],f=!1;for(let h=0;h<t.length;h++)if(o[m.id]){c.outputs.forEach(d=>o[d.id]=!0),f=!0,n[c.id]=!0;break}if(f)break}}let s={};s[e.id]=!0;let i={};for(let l=r.length-1;l>=0;l--){let c=r[l],u=c.inputs;for(let p=0;p<c.outputs.length;p++)if(s[c.outputs[p].id]){for(let m in u)s[u[m].id]=!0,i[c.id]=!0;break}}let a=[];for(let l=0;l<r.length;l++){let c=r[l];if(n[c.id]&&i[c.id]){let u={};for(let m in c.inputs){let f=c.inputs[m];o[f.id]&&(u[m]=f)}let p=Object.assign({},c);p.inputs=u,p.outputs=c.outputs,a.push(p)}}return a}function pS(r,t,e,o){for(let n=t.length-1;n>=0;n--){let s=t[n],i=[];if(s.outputs.forEach(l=>{let c=r[l.id];c!=null?i.push(c):i.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let a=s.gradient(i);for(let l in s.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);let c=e(()=>a[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);let u=s.inputs[l];if(!Js(c.shape,u.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${u.shape}'`);if(r[u.id]==null)r[u.id]=c;else{let p=r[u.id];r[u.id]=o(p,c),p.dispose()}}}}var mS=20,dp=3,yb=7;function fS(r,t,e,o){let n=en(t),s=cP(r,t,e,n),i=t.length,a=_h(r,t,e,n,s),l=["Tensor"];return o&&(l.push(`  dtype: ${e}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(a.map(c=>"    "+c).join(`
`)),l.join(`
`)}function cP(r,t,e,o){let n=Ut(t),s=o[o.length-1],i=new Array(s).fill(0),a=t.length,l=e==="complex64"?xp(r):r;if(a>1)for(let c=0;c<n/s;c++){let u=c*s;for(let p=0;p<s;p++)i[p]=Math.max(i[p],gp(l[u+p],0,e).length)}return i}function gp(r,t,e){let o;return Array.isArray(r)?o=`${parseFloat(r[0].toFixed(yb))} + ${parseFloat(r[1].toFixed(yb))}j`:Ol(r)?o=`'${r}'`:e==="bool"?o=hS(r):o=parseFloat(r.toFixed(yb)).toString(),Ia(o,t)}function hS(r){return r===0?"false":"true"}function _h(r,t,e,o,n,s=!0){let i=e==="complex64"?2:1,a=t[0],l=t.length;if(l===0){if(e==="complex64"){let d=xp(r);return[gp(d[0],0,e)]}return e==="bool"?[hS(r[0])]:[r[0].toString()]}if(l===1){if(a>mS){let g=dp*i,x=Array.from(r.slice(0,g)),b=Array.from(r.slice((a-dp)*i,a*i));return e==="complex64"&&(x=xp(x),b=xp(b)),["["+x.map((C,w)=>gp(C,n[w],e)).join(", ")+", ..., "+b.map((C,w)=>gp(C,n[a-dp+w],e)).join(", ")+"]"]}return["["+(e==="complex64"?xp(r):Array.from(r)).map((g,x)=>gp(g,n[x],e)).join(", ")+"]"]}let c=t.slice(1),u=o.slice(1),p=o[0]*i,m=[];if(a>mS){for(let d=0;d<dp;d++){let g=d*p,x=g+p;m.push(..._h(r.slice(g,x),c,e,u,n,!1))}m.push("...");for(let d=a-dp;d<a;d++){let g=d*p,x=g+p;m.push(..._h(r.slice(g,x),c,e,u,n,d===a-1))}}else for(let d=0;d<a;d++){let g=d*p,x=g+p;m.push(..._h(r.slice(g,x),c,e,u,n,d===a-1))}let f=l===2?",":"";m[0]="["+(a>0?m[0]+f:"");for(let d=1;d<m.length-1;d++)m[d]=" "+m[d]+f;let h=`,
`;for(let d=2;d<l;d++)h+=`
`;return m[m.length-1]=" "+m[m.length-1]+"]"+(s?"":h),m}function xp(r){let t=[];for(let e=0;e<r.length;e+=2)t.push([r[e],r[e+1]]);return t}var jt=class{constructor(t,e,o){if(this.dtype=e,this.shape=t.slice(),this.size=Ut(t),o!=null){let n=o.length;N(n===this.size,()=>`Length of values '${n}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=o||ah(e,this.size),this.strides=en(t)}set(t,...e){e.length===0&&(e=[0]),N(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);let o=this.locToIndex(e);this.values[o]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(let n of t){if(n<0||n>=this.shape[e]){let s=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(s)}e++}let o=t[t.length-1];for(let n=0;n<t.length-1;++n)o+=this.strides[n]*t[n];return this.values[o]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let o=0;o<t.length-1;++o)e+=this.strides[o]*t[o];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];let e=new Array(this.shape.length);for(let o=0;o<e.length-1;++o)e[o]=Math.floor(t/this.strides[o]),t-=e[o]*this.strides[o];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Lo().makeTensor(this.values,this.shape,this.dtype)}},Lo=null,Ac=null,uP=null;function dS(r){Lo=r}function gS(r){Ac=r}function xS(r){uP=r}var Vt=class{constructor(t,e,o,n){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=Ut(t),this.strides=en(t),this.dataId=o,this.id=n,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}buffer(){return B(this,null,function*(){let t=yield this.data();return Ac.buffer(this.shape,this.dtype,t)})}bufferSync(){return Ac.buffer(this.shape,this.dtype,this.dataSync())}array(){return B(this,null,function*(){let t=yield this.data();return Ca(this.shape,t,this.dtype==="complex64")})}arraySync(){return Ca(this.shape,this.dataSync(),this.dtype==="complex64")}data(){return B(this,null,function*(){this.throwIfDisposed();let t=Lo().read(this.dataId);if(this.dtype==="string"){let e=yield t;try{return e.map(o=>Ec(o))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t})}dataToGPU(t){return this.throwIfDisposed(),Lo().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();let t=Lo().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>Ec(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}bytes(){return B(this,null,function*(){this.throwIfDisposed();let t=yield Lo().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)})}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Lo().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Ac.print(this,t)}clone(){return this.throwIfDisposed(),Ac.clone(this)}toString(t=!1){let e=this.dataSync();return fS(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Ac.cast(this,t)}variable(t=!0,e,o){return this.throwIfDisposed(),Lo().makeVariable(this,t,e,o)}};Object.defineProperty(Vt,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function D(){return cp("Tensor",()=>Vt)}D();var vs=class extends Vt{constructor(t,e,o,n){super(t.shape,t.dtype,t.dataId,n),this.trainable=e,this.name=o}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!Js(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Lo().disposeTensor(this),this.dataId=t.dataId,Lo().incRef(this,null)}dispose(){Lo().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(vs,Symbol.hasInstance,{value:r=>r instanceof Vt&&r.assign!=null&&r.assign instanceof Function});var fo={};co(fo,{assertTypesMatch:()=>mP,getTensorsInContainer:()=>yp,isTensorInList:()=>fP,makeTypesMatch:()=>_t});var bb;(function(r){r.R0="R0",r.R1="R1",r.R2="R2",r.R3="R3",r.R4="R4",r.R5="R5",r.R6="R6"})(bb||(bb={}));var wb;(function(r){r.float32="float32",r.int32="int32",r.bool="int32",r.complex64="complex64"})(wb||(wb={}));var Cb;(function(r){r.float32="float32",r.int32="int32",r.bool="bool",r.complex64="complex64"})(Cb||(Cb={}));var Ib;(function(r){r.float32="float32",r.int32="float32",r.bool="float32",r.complex64="complex64"})(Ib||(Ib={}));var Sb;(function(r){r.float32="complex64",r.int32="complex64",r.bool="complex64",r.complex64="complex64"})(Sb||(Sb={}));var pP={float32:Ib,int32:wb,bool:Cb,complex64:Sb};function $e(r,t){if(r==="string"||t==="string"){if(r==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${r} with ${t}`)}return pP[r][t]}function Ma(r){return $e(r,"int32")}function Oh(r){return r!=null&&typeof r=="object"&&"texture"in r&&r.texture instanceof WebGLTexture}function Lh(r){return typeof GPUBuffer<"u"&&r!=null&&typeof r=="object"&&"buffer"in r&&r.buffer instanceof GPUBuffer}function _t(r,t){if(r.dtype===t.dtype)return[r,t];let e=$e(r.dtype,t.dtype);return[r.cast(e),t.cast(e)]}function mP(r,t){N(r.dtype===t.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${t.dtype}) input must match`)}function fP(r,t){return t.some(e=>e.id===r.id)}function yp(r){let t=[];return yS(r,t,new Set),t}function yS(r,t,e){if(r==null)return;if(r instanceof Vt){t.push(r);return}if(!hP(r))return;let o=r;for(let n in o){let s=o[n];e.has(s)||(e.add(s),yS(s,t,e))}}function hP(r){return Array.isArray(r)||typeof r=="object"}function vb(r){return r.kernelName!=null}var Ph=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(let t in this.registeredVariables)this.registeredVariables[t].dispose()}},bp=class r{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Ph}ready(){return B(this,null,function*(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let t=this.getSortedBackends();for(let e=0;e<t.length;e++){let o=t[e];if(yield this.initializeBackend(o).success){yield this.setBackend(o);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")})}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){let{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,o=1){return t in this.registryFactory?(an(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:o},!0)}setBackend(t){return B(this,null,function*(){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;let{success:e,asyncInit:o}=this.initializeBackend(t);if(!(o?yield e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new Fh(this.backendInstance),!0})}setupRegisteredKernels(){mb(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){mb(t).forEach(o=>{o.disposeFunc!=null&&o.disposeFunc(this.registry[t])})}initializeBackend(t){let e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{let o=e.factory();if(o&&!(o instanceof $n)&&typeof o.then=="function"){let n=++this.pendingBackendInitId,s=o.then(i=>n<this.pendingBackendInitId?!1:(this.registry[t]=i,this.pendingBackendInit=null,!0)).catch(i=>(n<this.pendingBackendInitId||(this.pendingBackendInit=null,an(`Initialization of backend ${t} failed`),an(i.stack||i.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[t]=o,{success:!0,asyncInit:!1}}catch(o){return an(`Initialization of backend ${t} failed`),an(o.stack||o.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){let t=this.getSortedBackends();for(let e=0;e<t.length;e++){let o=t[e],{success:n,asyncInit:s}=this.initializeBackend(o);if(s||n)return{name:o,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){let o=this.state.tensorInfo.get(e),n=o.backend,s=this.readSync(e),i=n.refCount(e);n.disposeData(e,!0),o.backend=t,t.move(e,s,o.shape,o.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let o=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");o=t}let n;return this.scopedRun(()=>this.startScope(o),()=>this.endScope(n),()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(t,e,o){t();try{let n=o();return e(),n}catch(n){throw e(),n}}nextTensorId(){return r.nextTensorId++}nextVariableId(){return r.nextVariableId++}clone(t){let e=T.runKernel(on,{x:t}),o={x:t},n=i=>({x:()=>{let a="float32",l={x:i},c={dtype:a};return T.runKernel(rn,l,c)}}),s=[];return this.addTapeNode(this.state.activeScope.name,o,[e],n,s,{}),e}runKernel(t,e,o){if(this.backendName==null&&this.backend,!(ub(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:o})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,o){let n=this.backend.numDataIds(),s=0;o.forEach(l=>{s+=l.dtype==="complex64"?3:1});let i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=n-e-s-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t){let e,o=[],n=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let l,c=vb(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(vb(t)){let{kernelName:h,inputs:d,attrs:g}=t;this.backendName==null&&this.backend;let x=ub(h,this.backendName);N(x!=null,()=>`Cannot find registered kernel '${h}' for backend '${this.backendName}'`),a=()=>{let b=this.backend.numDataIds();l=x.kernelFunc({inputs:d,attrs:g,backend:this.backend});let C=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(h,b,C);let w=C.map(I=>I.rank!=null?I:this.makeTensorFromTensorInfo(I));if(n){let I=this.getTensorsForGradient(h,d,w);o=this.saveTensorsForBackwardMode(I)}return w}}else{let{forwardFunc:h}=t,d=g=>{n&&(o=g.map(x=>this.keep(this.clone(x))))};a=()=>{let g=this.backend.numDataIds();l=this.tidy(()=>h(this.backend,d));let x=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,g,x),x}}let{inputs:u,attrs:p}=t,m=vb(t)?null:t.backwardsFunc,f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?e=a():(f=this.profiler.profileKernel(c,u,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),e=f.outputs)}),n&&this.addTapeNode(c,u,e,m,o,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(h=>u[h]!=null?u[h].shape:null),outputShapes:e.map(h=>h.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(l)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(o=>this.keep(this.clone(o)))}getTensorsForGradient(t,e,o){let n=pb(t);if(n!=null){let s=n.inputsToSave||[],i=n.outputsToSave||[],a;n.saveAllInputs?(N(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(e).map(c=>e[c])):a=s.map(c=>e[c]);let l=o.filter((c,u)=>i[u]);return a.concat(l)}return[]}makeTensor(t,e,o,n){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");o=o||"float32",n=n||this.backend;let s=t;o==="string"&&Ol(t[0])&&(s=t.map(l=>kc(l)));let i=n.write(s,e,o),a=new Vt(e,o,i,this.nextTensorId());if(this.trackTensor(a,n),o==="string"){let l=this.state.tensorInfo.get(i),c=sb(s);this.state.numBytes+=c-l.bytes,l.bytes=c}return a}makeTensorFromDataId(t,e,o,n){o=o||"float32";let s={dataId:t,shape:e,dtype:o};return this.makeTensorFromTensorInfo(s,n)}makeTensorFromTensorInfo(t,e){let{dataId:o,shape:n,dtype:s}=t,i=new Vt(n,s,o,this.nextTensorId());return this.trackTensor(i,e),i}makeVariable(t,e=!0,o,n){o=o||this.nextVariableId().toString(),n!=null&&n!==t.dtype&&(t=t.cast(n));let s=new vs(t,e,o,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let o=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(o=t.size*_l(t.dtype)),this.state.numBytes+=o,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:o})),t instanceof vs||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;let e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){let o=t.size*_l(t.dtype);this.state.numBytes-=o}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(let t in this.state.registeredVariables){let e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){let t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}profile(t){return B(this,null,function*(){this.state.profiling=!0;let e=this.state.numBytes,o=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=yield t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(n=>n.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-o;for(let n of this.state.activeProfile.kernels)n.kernelTimeMs=yield n.kernelTimeMs,n.extraInfo=yield n.extraInfo;return this.state.activeProfile})}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,o,n,s,i){let a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:o,saved:s},l=pb(t);l!=null&&(n=l.gradFunc),n!=null&&(a.gradient=c=>(c=c.map((u,p)=>{if(u==null){let m=o[p],f=zl(m.size,m.dtype);return this.makeTensor(f,m.shape,m.dtype)}return u}),n(c.length>1?c:c[0],s,i))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){let e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){let e=yp(t),o=new Set(e.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let i=this.state.activeScope.track[s];!i.kept&&!o.has(i.id)&&i.dispose()}let n=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(s=>{!s.kept&&s.scopeId===n.id&&this.track(s)})}gradients(t,e,o,n=!1){if(N(e.length>0,()=>"gradients() received an empty list of xs."),o!=null&&o.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${o.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));N(s instanceof Vt,()=>"The result y returned by f() must be a tensor.");let i=uS(this.state.activeTape,e,s);if(!n&&i.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let a={};a[s.id]=o??dP(s.shape),pS(a,i,c=>this.tidy(c),gP);let l=e.map(c=>a[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(let u of c.saved)u.dispose()}),this.state.activeTape=null),{value:s,grads:l}})}customGrad(t){return N(Ll(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{N(e.every(a=>a instanceof Vt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let o,n={};e.forEach((a,l)=>{n[l]=a});let s=(a,l)=>(o=t(...e,l),N(o.value instanceof Vt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),N(Ll(o.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),o.value),i=(a,l)=>{let c=o.gradFunc(a,l),u=Array.isArray(c)?c:[c];N(u.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),N(u.every(m=>m instanceof Vt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let p={};return u.forEach((m,f)=>{p[f]=()=>m}),p};return this.runKernelFunc({forwardFunc:s,backwardsFunc:i,inputs:n})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}time(t){return B(this,null,function*(){let e=Ba(),o=yield this.backend.time(t);return o.wallMs=Ba()-e,o})}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Ph;for(let t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};bp.nextTensorId=0;bp.nextVariableId=0;function dP(r){let t=ap(Ut(r),"float32");return T.makeTensor(t,r,"float32")}function Nb(){let r=lb();if(r._tfengine==null){let t=new lp(r);r._tfengine=new bp(t)}return GI(r._tfengine.ENV),dS(()=>r._tfengine),r._tfengine}var T=Nb();function gP(r,t){let e={a:r,b:t};return T.runKernel(_o,e)}var ji={};co(ji,{isBrowser:()=>kb,isMobile:()=>bP,mockIsMobile:()=>yP});function xP(){return typeof navigator<"u"&&navigator!=null}var Tb;function yP(r){Tb=r}function bP(r){if(Tb!==void 0)return Tb;if(r||xP()){if(r||(r=navigator),r.product==="ReactNative")return!0;let t=r.userAgent||r.vendor||(typeof window<"u"?window.opera:"");if(!t){let e=r;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function kb(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var Ar=P();Ar.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Ar.registerFlag("IS_BROWSER",()=>kb());Ar.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Ar.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Ar.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));Ar.registerFlag("PROD",()=>!1);Ar.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Ar.getBool("DEBUG"));Ar.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Ar.registerFlag("IS_TEST",()=>!1);Ar.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Ar.getBool("DEBUG"));Ar.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Ar.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Ar.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);function Va(r,t){let e=r;if(mr(r))return t==="string"?[]:[r.length];if(Oh(r)){let n=r.channels||"RGBA";return[r.height,r.width*n.length]}else if(Lh(r))return[r.buffer.size/(t==null?4:_l(t))];if(!Array.isArray(r))return[];let o=[];for(;Array.isArray(e)||mr(e)&&t!=="string";)o.push(e.length),e=e[0];return Array.isArray(r)&&P().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&wS(r,o,[]),o}function wS(r,t,e){if(e=e||[],!Array.isArray(r)&&!mr(r)){N(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}N(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${r.length} elements`),N(r.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${r.length} elements`);let o=t.slice(1);for(let n=0;n<r.length;++n)wS(r[n],o,e.concat(n))}function bS(r,t,e,o){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==t||r==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${o}' must be ${r} tensor, but got ${t} tensor`)}}function v(r,t,e,o="numeric"){if(r instanceof D())return bS(o,r.dtype,t,e),r;let n=Qs(r);if(n!=="string"&&["bool","int32","float32"].indexOf(o)>=0&&(n=o),bS(o,n,t,e),r==null||!mr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let l=r==null?"null":r.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${l}'`)}let s=Va(r,n);!mr(r)&&!Array.isArray(r)&&(r=[r]);let a=n!=="string"?Tc(r,n):Ki(r,[],!0);return T.makeTensor(a,s,n)}function zh(r,t,e,o="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((s,i)=>v(s,`${t}[${i}]`,e,o))}var wP="__op";function k(r){let t=Object.keys(r);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0],o=r[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+wP;let n=(...s)=>{T.startScope(e);try{let i=o(...s);return Sa(i)&&console.error("Cannot return a Promise inside of tidy."),T.endScope(i),i}catch(i){throw T.endScope(null),i}};return Object.defineProperty(n,"name",{value:e,configurable:!0}),n}function CP(r,t){let e=v(r,"real","complex"),o=v(t,"imag","complex");ih(e.shape,o.shape,`real and imag shapes, ${e.shape} and ${o.shape}, must match in call to tf.complex().`);let n={real:e,imag:o};return T.runKernel(Hl,n)}var to=k({complex_:CP});function Xi(r,t,e,o){if(o==null)o=Qs(r);else if(o==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Lh(r)||Oh(r)){if(o!=="float32"&&o!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${o}.`);return T.backend.createTensorFromGPUData(r,t||e,o)}if(!mr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){je(t);let n=Ut(t),s=Ut(e);N(n===s,()=>`Based on the provided shape, [${t}], the tensor should have ${n} values but has ${s}`);for(let i=0;i<e.length;++i){let a=e[i],l=i===e.length-1?a!==Ut(t.slice(i)):!0;N(e[i]===t[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!mr(r)&&!Array.isArray(r)&&(r=[r]),t=t||e,r=o!=="string"?Tc(r,o):Ki(r,[],!0),T.makeTensor(r,t,o)}function Mr(r,t,e){let o=Va(r,e);return Xi(r,t,o,e)}var Ns={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var nr=class r{static join(t){return new r(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,t==null||(t instanceof Array||(t=[t]),t=t.map(o=>mr(o)?o.buffer:o),t.length===0))return;this.bufferUniformSize=t[0].byteLength;let e=0;for(let o=0;o<t.length;o++){let n=t[o];o!==t.length-1&&n.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let s=e+n.byteLength;this.shards.push({buffer:n,start:e,end:s}),e=s}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(t=0,e=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,e=isNaN(Number(e))?0:e,t=Math.max(0,t),e=Math.min(this.byteLength,e),e<=t)return new ArrayBuffer(0);let o=this.findShardForByte(t);if(o===-1)throw new Error(`Could not find start shard for byte ${t}`);let n=e-t,s=new ArrayBuffer(n),i=new Uint8Array(s),a=0;for(let l=o;l<this.shards.length;l++){let c=this.shards[l],p=t+a-c.start,m=a,h=Math.min(e,c.end)-c.start,d=new Uint8Array(c.buffer,p,h-p);if(i.set(d,m),a+=d.length,e<c.end)break}return s}findShardForByte(t){if(this.shards.length===0||t<0||t>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function e(n){return t<n.start?-1:t>=n.end?1:0}if(e(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;let o=IP(this.shards,e);return o===-1?-1:(this.previousShardIndex=o,this.previousShardIndex)}};function IP(r,t){let e=0,o=r.length;for(;e<=o;){let n=Math.floor((o-e)/2)+e,s=t(r[n]);if(s===0)return n;s<0?o=n:e=n+1}return-1}function SP(r){P().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}xS(SP);function ho(){return T}function wp(){return T.memory()}function z(r,t){return T.tidy(r,t)}function vt(r){yp(r).forEach(e=>e.dispose())}function Be(r){return T.keep(r)}function CS(){return T.backendName}function Bh(r,t,e=1){return T.registerBackend(r,t,e)}function Mh(){return T.backend}var Yi=4;function vS(r,t){return B(this,null,function*(){let e=[],o=[],n=Array.isArray(r)?r.map(i=>i.name):Object.keys(r);for(let i=0;i<n.length;++i){let a=n[i],l=Array.isArray(r)?r[i].tensor:r[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);let c={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let u=new Promise(p=>B(this,null,function*(){let m=yield l.bytes(),f=m.reduce((g,x)=>g+x.length,0)+Yi*m.length,h=new Uint8Array(f),d=0;for(let g=0;g<m.length;g++){let x=m[g],b=new Uint8Array(new Uint32Array([x.length]).buffer);h.set(b,d),d+=Yi,h.set(x,d),d+=x.length}p(h)}));o.push(u)}else o.push(l.data());t!=null&&(c.group=t),e.push(c)}let s=yield Promise.all(o);return{data:TP(s),specs:e}})}function Vh(r,t){let e=new nr(r),o={},n=0;for(let s of t){let i=vP(s,(a,l)=>e.slice(n+a,n+l));o[s.name]=NS(s,e.slice(n,n+i)),n+=i}return o}function vP(r,t){let e=Ut(r.shape),o;if("quantization"in r){let n=r.quantization;o=Ns[n.dtype]}else if(r.dtype==="string"){let n=0;for(let s=0;s<e;s++)n+=Yi+new Uint32Array(t(n,n+Yi))[0];return n}else o=Ns[r.dtype];return e*o}function NP(r,t){return B(this,null,function*(){let e=Ut(r.shape),o;if("quantization"in r){let n=r.quantization;o=Ns[n.dtype]}else if(r.dtype==="string"){let n=0;for(let s=0;s<e;s++)n+=Yi+new Uint32Array(yield t(n,n+Yi))[0];return n}else o=Ns[r.dtype];return e*o})}function NS(r,t){let e=r.name,o=r.dtype,n=r.shape,s=Ut(n),i,a=0;if("quantization"in r){let l=r.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${r.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(o!=="float32")throw new Error(`Weight ${r.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${o}.`)}else throw new Error(`Weight ${r.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let c=Ns[l.dtype],u=l.dtype==="uint8"?new Uint8Array(t):new Uint16Array(t);if(o==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){i=new Float32Array(u.length);for(let p=0;p<u.length;p++){let m=u[p];i[p]=m*l.scale+l.min}}else if(l.dtype==="float16")i=$P()(u);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(o==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);i=new Int32Array(u.length);for(let p=0;p<u.length;p++){let m=u[p];i[p]=Math.round(m*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${e}': ${o}`);a+=s*c}else if(o==="string"){let l=Ut(r.shape);i=[];for(let c=0;c<l;c++){let u=new Uint32Array(t.slice(a,a+Yi))[0];a+=Yi;let p=new Uint8Array(t.slice(a,a+u));i.push(p),a+=u}}else{let l=Ns[o];if(o==="float32")i=new Float32Array(t);else if(o==="int32")i=new Int32Array(t);else if(o==="bool")i=new Uint8Array(t);else if(o==="complex64"){i=new Float32Array(t);let c=new Float32Array(i.length/2),u=new Float32Array(i.length/2);for(let h=0;h<c.length;h++)c[h]=i[h*2],u[h]=i[h*2+1];let p=Mr(c,n,"float32"),m=Mr(u,n,"float32"),f=to(p,m);return p.dispose(),m.dispose(),f}else throw new Error(`Unsupported dtype in weight '${e}': ${o}`);a+=s*l}return Mr(i,n,o)}function IS(r,t,e){return B(this,null,function*(){let o=new Uint8Array(t);for(;o.byteLength<e;){let{done:n,value:s}=yield r.read();if(n&&s==null){let a=e-o.byteLength;throw new Error(`Reader is done but ${a} bytes are still expected`)}let i=new Uint8Array(o.length+s.byteLength);i.set(o,0),i.set(new Uint8Array(s),o.length),o=i}return o.buffer})}function Eb(r,t){return B(this,null,function*(){let e={},o=r.getReader(),n=new ArrayBuffer(0);for(let s of t){let i=yield NP(s,(c,u)=>B(this,null,function*(){return n=yield IS(o,n,u),n.slice(c,u)}));n=yield IS(o,n,i);let a=n.slice(0,i);n=n.slice(i);let l=NS(s,a);if(e[s.name]=l,CS()==="webgpu"){let c=Mh();"uploadToGPU"in c&&Ut(l.shape)>=P().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&c.uploadToGPU(l.dataId)}}return e})}function TP(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let t=0,e=[];r.forEach(s=>{if(t+=s.byteLength,e.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let o=new Uint8Array(t),n=0;return e.forEach(s=>{o.set(new Uint8Array(s.buffer),n),n+=s.byteLength}),o.buffer}var Ab=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function SS(r){return Ab?Buffer.byteLength(r,"utf8"):new Blob([r]).size}function TS(r){if(Ab)return Buffer.from(r).toString("base64");let t=new Uint8Array(r),e="";for(let o=0,n=t.length;o<n;o++)e+=String.fromCharCode(t[o]);return btoa(e)}function kS(r){if(Ab){let o=Buffer.from(r,"base64");return o.buffer.slice(o.byteOffset,o.byteOffset+o.byteLength)}let t=atob(r),e=new Uint8Array(t.length);for(let o=0;o<t.length;++o)e.set([t.charCodeAt(o)],o);return e.buffer}function ES(r){return nr.join(r)}function $b(r){let t="/";for(r=r.trim();r.endsWith(t);)r=r.slice(0,r.length-1);let e=r.split(t);return e[e.length-1]}function Gh(r,t){let e={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy,weightsManifest:t};return r.signature!=null&&(e.signature=r.signature),r.userDefinedMetadata!=null&&(e.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(e.modelInitializer=r.modelInitializer),r.initializerSignature!=null&&(e.initializerSignature=r.initializerSignature),r.trainingConfig!=null&&(e.trainingConfig=r.trainingConfig),e}function Db(r,t,e){let o={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy};if(r.trainingConfig!=null&&(o.trainingConfig=r.trainingConfig),r.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");o.weightSpecs=t,o.weightData=e}return r.signature!=null&&(o.signature=r.signature),r.userDefinedMetadata!=null&&(o.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(o.modelInitializer=r.modelInitializer),r.initializerSignature!=null&&(o.initializerSignature=r.initializerSignature),o}function $c(r,t){return B(this,null,function*(){let e,o;return r.weightsManifest!=null&&([e,o]=yield t(r.weightsManifest)),Db(r,e,o)})}function ln(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:SS(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:SS(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:new nr(r.weightData).byteLength}}function Cp(r){let t=[];for(let e of r)t.push(...e.weights);return t}function kP(){let r=e=>{let o=e<<13,n=0;for(;!(o&8388608);)n-=8388608,o<<=1;return o&=-8388609,n+=947912704,o|n},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=r(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function EP(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let t=1;t<31;t++)r[t]=t<<23;for(let t=33;t<63;t++)r[t]=2147483648+(t-32<<23);return r}function AP(){let r=new Uint32Array(64);for(let t=0;t<64;t++)r[t]=1024;return r[0]=r[32]=0,r}function $P(){let r=kP(),t=EP(),e=AP();return o=>{let n=new ArrayBuffer(4*o.length),s=new Uint32Array(n);for(let i=0;i<o.length;i++){let a=o[i],l=r[e[a>>10]+(a&1023)]+t[a>>10];s[i]=l}return new Float32Array(n)}}var Me=class r{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return r.instance==null&&(r.instance=new r),r.instance}static registerSaveRouter(t){r.getInstance().saveRouters.push(t)}static registerLoadRouter(t){r.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return r.getHandlers(t,"save")}static getLoadHandlers(t,e){return r.getHandlers(t,"load",e)}static getHandlers(t,e,o){let n=[];return(e==="load"?r.getInstance().loadRouters:r.getInstance().saveRouters).forEach(i=>{let a=i(t,o);a!==null&&n.push(a)}),n}},AS=r=>Me.registerSaveRouter(r),$S=r=>Me.registerLoadRouter(r),DS=r=>Me.getSaveHandlers(r),RS=(r,t)=>Me.getLoadHandlers(r,t);var Rb="tensorflowjs",Fb=1,Ga="models_store",Zi="model_info_store";function FS(){if(!P().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window>"u"?self:window,t=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function _b(r){let t=r.result;t.createObjectStore(Ga,{keyPath:"modelPath"}),t.createObjectStore(Zi,{keyPath:"modelPath"})}var cn=class{constructor(t){if(this.indexedDB=FS(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}save(t){return B(this,null,function*(){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)})}load(){return B(this,null,function*(){return this.databaseAction(this.modelPath)})}databaseAction(t,e){return new Promise((o,n)=>{let s=this.indexedDB.open(Rb,Fb);s.onupgradeneeded=()=>_b(s),s.onsuccess=()=>{let i=s.result;if(e==null){let a=i.transaction(Ga,"readonly"),c=a.objectStore(Ga).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return i.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));o(c.result.modelArtifacts)},c.onerror=u=>(i.close(),n(c.error)),a.oncomplete=()=>i.close()}else{e.weightData=nr.join(e.weightData);let a=ln(e),l=i.transaction(Zi,"readwrite"),c=l.objectStore(Zi),u;try{u=c.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(m){return n(m)}let p;u.onsuccess=()=>{p=i.transaction(Ga,"readwrite");let m=p.objectStore(Ga),f;try{f=m.put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:a})}catch(h){return n(h)}f.onsuccess=()=>o({modelArtifactsInfo:a}),f.onerror=h=>{c=l.objectStore(Zi);let d=c.delete(this.modelPath);d.onsuccess=()=>(i.close(),n(f.error)),d.onerror=g=>(i.close(),n(f.error))}},u.onerror=m=>(i.close(),n(u.error)),l.oncomplete=()=>{p==null?i.close():p.oncomplete=()=>i.close()}}},s.onerror=i=>n(s.error)})}};cn.URL_SCHEME="indexeddb://";var _S=r=>P().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(cn.URL_SCHEME)?DP(r.slice(cn.URL_SCHEME.length)):null;Me.registerSaveRouter(_S);Me.registerLoadRouter(_S);function DP(r){return new cn(r)}function RP(r){return r.startsWith(cn.URL_SCHEME)?r.slice(cn.URL_SCHEME.length):r}var Uh=class{constructor(){this.indexedDB=FS()}listModels(){return B(this,null,function*(){return new Promise((t,e)=>{let o=this.indexedDB.open(Rb,Fb);o.onupgradeneeded=()=>_b(o),o.onsuccess=()=>{let n=o.result,s=n.transaction(Zi,"readonly"),a=s.objectStore(Zi).getAll();a.onsuccess=()=>{let l={};for(let c of a.result)l[c.modelPath]=c.modelArtifactsInfo;t(l)},a.onerror=l=>(n.close(),e(a.error)),s.oncomplete=()=>n.close()},o.onerror=n=>e(o.error)})})}removeModel(t){return B(this,null,function*(){return t=RP(t),new Promise((e,o)=>{let n=this.indexedDB.open(Rb,Fb);n.onupgradeneeded=()=>_b(n),n.onsuccess=()=>{let s=n.result,i=s.transaction(Zi,"readwrite"),a=i.objectStore(Zi),l=a.get(t),c;l.onsuccess=()=>{if(l.result==null)return s.close(),o(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{let u=a.delete(t),p=()=>{c=s.transaction(Ga,"readwrite");let f=c.objectStore(Ga).delete(t);f.onsuccess=()=>e(l.result.modelArtifactsInfo),f.onerror=h=>o(l.error)};u.onsuccess=p,u.onerror=m=>(p(),s.close(),o(l.error))}},l.onerror=u=>(s.close(),o(l.error)),i.oncomplete=()=>{c==null?s.close():c.oncomplete=()=>s.close()}},n.onerror=s=>o(n.error)})})}};var Ts="/",Dc="tensorflowjs_models",OS="info",FP="model_topology",_P="weight_specs",OP="weight_data",LP="model_metadata";function LS(r){return{info:[Dc,r,OS].join(Ts),topology:[Dc,r,FP].join(Ts),weightSpecs:[Dc,r,_P].join(Ts),weightData:[Dc,r,OP].join(Ts),modelMetadata:[Dc,r,LP].join(Ts)}}function PS(r){for(let t of Object.values(r))window.localStorage.removeItem(t)}function PP(r){let t=r.split(Ts);if(t.length<3)throw new Error(`Invalid key format: ${r}`);return t.slice(1,t.length-1).join(Ts)}function zP(r){return r.startsWith(un.URL_SCHEME)?r.slice(un.URL_SCHEME.length):r}var un=class{constructor(t){if(!P().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=LS(this.modelPath)}save(t){return B(this,null,function*(){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let e=JSON.stringify(t.modelTopology),o=JSON.stringify(t.weightSpecs),n=ln(t),s=nr.join(t.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(n)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,o),this.LS.setItem(this.keys.weightData,TS(s));let i={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,initializerSignature:t.initializerSignature!=null?t.initializerSignature:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:n}}catch{throw PS(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${n.modelTopologyBytes}, weightSpecsBytes=${n.weightSpecsBytes}, weightDataBytes=${n.weightDataBytes}.`)}}})}load(){return B(this,null,function*(){let t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let e={},o=JSON.parse(this.LS.getItem(this.keys.topology));if(o==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=o;let n=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(n==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=n;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let a=JSON.parse(s);e.format=a.format,e.generatedBy=a.generatedBy,e.convertedBy=a.convertedBy,a.signature!=null&&(e.signature=a.signature),a.userDefinedMetadata!=null&&(e.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(e.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(e.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(e.trainingConfig=a.trainingConfig)}let i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=kS(i),e})}};un.URL_SCHEME="localstorage://";var zS=r=>P().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(un.URL_SCHEME)?BP(r.slice(un.URL_SCHEME.length)):null;Me.registerSaveRouter(zS);Me.registerLoadRouter(zS);function BP(r){return new un(r)}var Wh=class{constructor(){N(P().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),N(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}listModels(){return B(this,null,function*(){let t={},e=Dc+Ts,o=Ts+OS;for(let n=0;n<this.LS.length;++n){let s=this.LS.key(n);if(s.startsWith(e)&&s.endsWith(o)){let i=PP(s);t[i]=JSON.parse(this.LS.getItem(s))}}return t})}removeModel(t){return B(this,null,function*(){t=zP(t);let e=LS(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);let o=JSON.parse(this.LS.getItem(e.info));return PS(e),o})}};var Rc="://",Po=class r{constructor(){this.managers={}}static getInstance(){return r.instance==null&&(r.instance=new r),r.instance}static registerManager(t,e){N(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(Rc)&&(t=t.slice(0,t.indexOf(Rc))),N(t.length>0,()=>"scheme must not be an empty string.");let o=r.getInstance();N(o.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),o.managers[t]=e}static getManager(t){let e=r.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(r.getInstance().managers)}};function Hh(r){if(r.indexOf(Rc)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Po.getSchemes().join(",")}`);return{scheme:r.split(Rc)[0],path:r.split(Rc)[1]}}function BS(r,t,e=!1){return B(this,null,function*(){N(r!==t,()=>`Old path and new path are the same: '${r}'`);let o=Me.getLoadHandlers(r);N(o.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),N(o.length<2,()=>`Copying failed because more than one (${o.length}) load handlers for source URL ${r}.`);let n=o[0],s=Me.getSaveHandlers(t);N(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),N(s.length<2,()=>`Copying failed because more than one (${o.length}) save handlers for destination URL ${t}.`);let i=s[0],a=Hh(r).scheme,l=Hh(r).path,c=a===Hh(r).scheme,u=yield n.load();e&&c&&(yield Po.getManager(a).removeModel(l));let p=yield i.save(u);return e&&!c&&(yield Po.getManager(a).removeModel(l)),p.modelArtifactsInfo})}function MS(){return B(this,null,function*(){let r=Po.getSchemes(),t={};for(let e of r){let o=yield Po.getManager(e).listModels();for(let n in o){let s=e+Rc+n;t[s]=o[n]}}return t})}function VS(r){return B(this,null,function*(){let t=Hh(r);return Po.getManager(t.scheme).removeModel(t.path)})}function GS(r,t){return B(this,null,function*(){return BS(r,t,!1)})}function US(r,t){return B(this,null,function*(){return BS(r,t,!0)})}var Ob=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(typeof window>"u"||!P().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",o=>{if(o.source===window&&o.data.name===this.messageName){o.stopPropagation();let n=this.functionRefs[o.data.index];n(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(t){return $h(t)}};if(P().get("IS_BROWSER")){P().setPlatform("browser",new Ob);try{Po.registerManager(un.URL_SCHEME,new Wh)}catch{}try{Po.registerManager(cn.URL_SCHEME,new Uh)}catch{}}var VP={importFetch:()=>HS()},Lb;var Pb=class{constructor(){this.util=qS(),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return P().global.fetch!=null?P().global.fetch(t,e):(Lb==null&&(Lb=VP.importFetch()),Lb(t,e))}now(){let t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}};P().get("IS_NODE")&&!P().get("IS_BROWSER")&&P().setPlatform("node",new Pb);function dt(r,t="float32",e){return t=t||"float32",je(r),new jt(r,t,e)}function GP(r,t){let e=v(r,"x","cast");if(!nb(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");let o={x:e},n={dtype:t};return T.runKernel(rn,o,n)}var Y=k({cast_:GP});function UP(r){let e={x:v(r,"x","clone","string_or_numeric")};return T.runKernel(on,e)}var Vr=k({clone_:UP});function KS(r,t=!1){console.log(r.toString(t))}Nb();var WP={buffer:dt,cast:Y,clone:Vr,print:KS};gS(WP);function HP(r,t){let e=v(r,"a","add"),o=v(t,"b","add");[e,o]=_t(e,o);let n={a:e,b:o};return T.runKernel(_o,n)}var j=k({add_:HP});function qP(r,t){let e=v(r,"a","floorDiv"),o=v(t,"b","floorDiv");[e,o]=_t(e,o);let n={a:e,b:o};return T.runKernel(Xn,n)}var qh=k({floorDiv_:qP});function KP(r,t){let e=v(r,"a","div"),o=v(t,"b","div");if([e,o]=_t(e,o),e.dtype==="int32"&&o.dtype==="int32")return qh(e,o);let n={a:e,b:o},s={};return T.runKernel(Un,n,s)}var nt=k({div_:KP});function jP(r,t){let e=v(r,"a","mul"),o=v(t,"b","mul");[e,o]=_t(e,o);let n={a:e,b:o};return T.runKernel(ss,n)}var R=k({mul_:jP});function XP(r){let t=v(r,"x","abs");if(t.dtype==="complex64"){let e={x:t};return T.runKernel(ai,e)}else{let e={x:t};return T.runKernel(ti,e)}}var De=k({abs_:XP});function YP(r){let e={x:v(r,"x","acos")};return T.runKernel(Rn,e)}var zb=k({acos_:YP});function ZP(r){let e={x:v(r,"x","acosh")};return T.runKernel(Fn,e)}var Bb=k({acosh_:ZP});function JP(r,t=null,e=!1){let n={x:v(r,"x","all","bool")},s={axis:t,keepDims:e};return T.runKernel(Ml,n,s)}var Ip=k({all_:JP});function QP(r,t=null,e=!1){let n={x:v(r,"x","any","bool")},s={axis:t,keepDims:e};return T.runKernel(Vl,n,s)}var _c=k({any_:QP});function tz(r,t=0){let o={x:v(r,"x","argMax")},n={axis:t};return T.runKernel(ei,o,n)}var eo=k({argMax_:tz});function ez(r,t=0){let o={x:v(r,"x","argMin")},n={axis:t};return T.runKernel(ri,o,n)}var jS=k({argMin_:ez});function rz(r){let e={x:v(r,"x","asin")};return T.runKernel(_n,e)}var Mb=k({asin_:rz});function oz(r){let e={x:v(r,"x","asinh")};return T.runKernel(On,e)}var Vb=k({asinh_:oz});function nz(r){let e={x:v(r,"x","atan")};return T.runKernel(Ln,e)}var Gb=k({atan_:nz});function sz(r,t){let e=v(r,"a","atan2"),o=v(t,"b","atan2");[e,o]=_t(e,o);let n={a:e,b:o};return T.runKernel(zn,n)}var XS=k({atan2_:sz});function iz(r){let e={x:v(r,"x","atanh")};return T.runKernel(Pn,e)}var Ub=k({atanh_:iz});function az(r,t,e,o,n="NHWC",s){let i=r[3],a=[...t,i],l=ZS(n);return Wa(r,a,e,s,o,null,null,l)}function Hb(r,t,e,o,n,s,i="channelsLast"){let[a,l]=Sp(t),c;if(i==="channelsLast")c=[a,l,r[3],r[3]];else if(i==="channelsFirst")c=[a,l,r[1],r[1]];else throw new Error(`Unknown dataFormat ${i}`);return Wa(r,c,e,o,n,s,!1,i)}function lz(r,t,e,o,n,s,i="NDHWC"){let[a,l,c]=Wb(t),u,p;if(i==="NDHWC")p="channelsLast",u=[a,l,c,r[4],r[4]];else if(i==="NCDHW")p="channelsFirst",u=[a,l,c,r[1],r[1]];else throw new Error(`Unknown dataFormat ${i}`);return YS(r,u,e,o,n,!1,p,s)}function Wa(r,t,e,o,n,s,i=!1,a="channelsLast"){let[l,c,u,p]=[-1,-1,-1,-1];if(a==="channelsLast")[l,c,u,p]=r;else if(a==="channelsFirst")[l,p,c,u]=r;else throw new Error(`Unknown dataFormat ${a}`);let[m,f,,h]=t,[d,g]=Sp(e),[x,b]=Sp(o),C=Oc(m,x),w=Oc(f,b),{padInfo:I,outHeight:E,outWidth:A}=pz(n,c,u,d,g,C,w,s,a),$=i?h*p:h,_;return a==="channelsFirst"?_=[l,$,E,A]:a==="channelsLast"&&(_=[l,E,A,$]),{batchSize:l,dataFormat:a,inHeight:c,inWidth:u,inChannels:p,outHeight:E,outWidth:A,outChannels:$,padInfo:I,strideHeight:d,strideWidth:g,filterHeight:m,filterWidth:f,effectiveFilterHeight:C,effectiveFilterWidth:w,dilationHeight:x,dilationWidth:b,inShape:r,outShape:_,filterShape:t}}function YS(r,t,e,o,n,s=!1,i="channelsLast",a){let[l,c,u,p,m]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,c,u,p,m]=r;else if(i==="channelsFirst")[l,m,c,u,p]=r;else throw new Error(`Unknown dataFormat ${i}`);let[f,h,d,,g]=t,[x,b,C]=Wb(e),[w,I,E]=Wb(o),A=Oc(f,w),$=Oc(h,I),_=Oc(d,E),{padInfo:L,outDepth:M,outHeight:V,outWidth:G}=mz(n,c,u,p,x,b,C,A,$,_,a),W=s?g*m:g,U;return i==="channelsFirst"?U=[l,W,M,V,G]:i==="channelsLast"&&(U=[l,M,V,G,W]),{batchSize:l,dataFormat:i,inDepth:c,inHeight:u,inWidth:p,inChannels:m,outDepth:M,outHeight:V,outWidth:G,outChannels:W,padInfo:L,strideDepth:x,strideHeight:b,strideWidth:C,filterDepth:f,filterHeight:h,filterWidth:d,effectiveFilterDepth:A,effectiveFilterHeight:$,effectiveFilterWidth:_,dilationDepth:w,dilationHeight:I,dilationWidth:E,inShape:r,outShape:U,filterShape:t}}function cz(r,t,e,o,n){o==null&&(o=qb(r,t,e));let s=r[0],i=r[1],a=vp((s-t+2*o)/e+1,n),l=vp((i-t+2*o)/e+1,n);return[a,l]}function uz(r,t,e,o,n,s){n==null&&(n=qb(r,t[0],o[0]));let i=[0,0,0,e];for(let a=0;a<3;a++)r[a]+2*n>=t[a]&&(i[a]=vp((r[a]-t[a]+2*n)/o[a]+1,s));return i}function qb(r,t,e,o=1){let n=Oc(t,o);return Math.floor((r[0]*(e-1)-e+n)/2)}function Sp(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function Wb(r){return typeof r=="number"?[r,r,r]:r}function Oc(r,t){return t<=1?r:r+(r-1)*(t-1)}function pz(r,t,e,o,n,s,i,a,l){let c,u,p;if(typeof r=="number"){c={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let f=cz([t,e],s,o,r,a);u=f[0],p=f[1]}else if(r==="same"){u=Math.ceil(t/o),p=Math.ceil(e/n);let m=Math.max(0,(u-1)*o+s-t),f=Math.max(0,(p-1)*n+i-e),h=Math.floor(m/2),d=m-h,g=Math.floor(f/2),x=f-g;c={top:h,bottom:d,left:g,right:x,type:"SAME"}}else if(r==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-s+1)/o),p=Math.ceil((e-i+1)/n);else if(typeof r=="object"){let m=l==="channelsLast"?r[1][0]:r[2][0],f=l==="channelsLast"?r[1][1]:r[2][1],h=l==="channelsLast"?r[2][0]:r[3][0],d=l==="channelsLast"?r[2][1]:r[3][1];c={top:m,bottom:f,left:h,right:d,type:m===0&&f===0&&h===0&&d===0?"VALID":"EXPLICIT"},u=vp((t-s+m+f)/o+1,a),p=vp((e-i+h+d)/n+1,a)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:c,outHeight:u,outWidth:p}}function mz(r,t,e,o,n,s,i,a,l,c,u){let p,m,f,h;if(r==="valid"&&(r=0),typeof r=="number"){p={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let g=uz([t,e,o,1],[a,l,c],1,[n,s,i],r,u);m=g[0],f=g[1],h=g[2]}else if(r==="same"){m=Math.ceil(t/n),f=Math.ceil(e/s),h=Math.ceil(o/i);let d=(m-1)*n+a-t,g=(f-1)*s+l-e,x=(h-1)*i+c-o,b=Math.floor(d/2),C=d-b,w=Math.floor(g/2),I=g-w,E=Math.floor(x/2),A=x-E;p={top:w,bottom:I,left:E,right:A,front:b,back:C,type:"SAME"}}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:p,outDepth:m,outHeight:f,outWidth:h}}function vp(r,t){if(!t)return Math.trunc(r);switch(t){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${t}`)}}function ro(r){let[t,e,o]=Sp(r);return t===1&&e===1&&o===1}function Ye(r,t){return ro(r)||ro(t)}function pn(r){return Sp(r).every(t=>t>0)}function ZS(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function ee(r,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")N(Dn(t),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(o=>{o.forEach(n=>{N(Dn(n),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${n}.`)})});else throw Error(`Error in ${r}: Unknown padding parameter: ${t}`)}}function fz(r,t){let o={x:v(r,"x","reshape","string_or_numeric")},n={shape:t};return T.runKernel(Fi,o,n)}var F=k({reshape_:fz});function hz(r,t,e,o,n){let s=v(r,"x","avgPool","float32"),i=1;N(Ye(e,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`);let a=s,l=!1;s.rank===3&&(l=!0,a=F(s,[1,s.shape[0],s.shape[1],s.shape[2]])),N(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),ee("avgPool",o,n);let c={x:a},u={filterSize:t,strides:e,pad:o,dimRoundingMode:n},p=T.runKernel(oi,c,u);return p=Y(p,s.dtype),l?F(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Ha=k({avgPool_:hz});function dz(r,t,e,o,n,s="NDHWC"){let i=v(r,"x","avgPool3d","float32"),a=i,l=!1;i.rank===4&&(l=!0,a=F(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),N(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),N(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),N(typeof e=="number"&&e>0||Array.isArray(e)&&e[0]>0&&e[1]>0&&e[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${e}'`),ee("avgPool3d",o,n);let c={x:a},u={filterSize:t,strides:e,pad:o,dimRoundingMode:n,dataFormat:s},p=T.runKernel(ni,c,u);return p=Y(p,a.dtype),l?F(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Kb=k({avgPool3d_:dz});function gz(r,t=0){N(r.length>=1,()=>"Pass at least one tensor to concat");let e=zh(r,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),e.length===1)return Vr(e[0]);let o=e,n={axis:t};return T.runKernel(li,o,n)}var ne=k({concat_:gz});function xz(r,t,e=!1,o=!1){let n=v(r,"a","matMul"),s=v(t,"b","matMul");[n,s]=_t(n,s);let i={a:n,b:s},a={transposeA:e,transposeB:o};return T.runKernel(si,i,a)}var Wt=k({matMul_:xz});function yz(r){let e={x:v(r,"x","sigmoid","float32")};return T.runKernel(gs,e)}var go=k({sigmoid_:yz});function bz(r,t,e){let o=v(r,"x","slice","string_or_numeric");if(o.rank===0)throw new Error("Slicing scalar is not possible");let n={x:o},s={begin:t,size:e};return T.runKernel(zi,n,s)}var Pt=k({slice_:bz});function wz(r){let e={x:v(r,"x","tanh","float32")};return T.runKernel(Is,e)}var qa=k({tanh_:wz});function Cz(r,t,e){let o=v(r,"x","batchToSpaceND"),n=t.reduce((a,l)=>a*l);N(o.rank>=1+t.length,()=>`input rank is ${o.rank} but should be > than blockShape.length ${t.length}`),N(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),N(o.shape[0]%n===0,()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${n}`);let s={x:o},i={blockShape:t,crops:e};return T.runKernel(ii,s,i)}var Lc=k({batchToSpaceND_:Cz});function JS(r){let t;return r.rank===0||r.rank===1?t=F(r,[1,1,1,r.size]):r.rank===2?t=F(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?t=F(r,[1,r.shape[0],r.shape[1],r.shape[2]]):t=r,t}function Iz(r,t,e,o,n,s){s==null&&(s=.001);let i=v(r,"x","batchNorm"),a=v(t,"mean","batchNorm"),l=v(e,"variance","batchNorm"),c;n!=null&&(c=v(n,"scale","batchNorm"));let u;o!=null&&(u=v(o,"offset","batchNorm")),N(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),N(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),N(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let m={x:JS(i),scale:c,offset:u,mean:a,variance:l},f={varianceEpsilon:s},h=T.runKernel(gi,m,f);return F(h,i.shape)}var Ji=k({batchNorm_:Iz});function Sz(r,t,e,o,n,s){let i=v(r,"x","batchNorm"),a=v(t,"mean","batchNorm"),l=v(e,"variance","batchNorm"),c;n!=null&&(c=v(n,"scale","batchNorm"));let u;return o!=null&&(u=v(o,"offset","batchNorm")),N(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),N(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),N(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&N(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&N(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),Ji(i,a,l,u,c,s)}var jb=k({batchNorm2d_:Sz});function vz(r,t,e,o,n,s){let i=v(r,"x","batchNorm"),a=v(t,"mean","batchNorm"),l=v(e,"variance","batchNorm"),c;n!=null&&(c=v(n,"scale","batchNorm"));let u;return o!=null&&(u=v(o,"offset","batchNorm")),N(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),N(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),N(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&N(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&N(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),Ji(i,a,l,u,c,s)}var Xb=k({batchNorm3d_:vz});function Nz(r,t,e,o,n,s){let i=v(r,"x","batchNorm"),a=v(t,"mean","batchNorm"),l=v(e,"variance","batchNorm"),c;n!=null&&(c=v(n,"scale","batchNorm"));let u;return o!=null&&(u=v(o,"offset","batchNorm")),N(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),N(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),N(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&N(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&N(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),Ji(i,a,l,u,c,s)}var Yb=k({batchNorm4d_:Nz});function Tz(r,t,e){let o=v(r,"x","bincount"),n=v(t,"weights","bincount");N(o.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${o.dtype}`),N(e>=0,()=>`size must be non-negative, but got ${e}.`),N(n.size===o.size||n.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${o.shape}, weights shape: ${n.shape}.`);let s={x:o,weights:n},i={size:e};return T.runKernel(Wl,s,i)}var QS=k({bincount_:Tz});function kz(r,t){let e=v(r,"broadcastTo","x"),o=e.shape;if(je(t),t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){let c=e.shape.slice();for(;c.length<t.length;)c.unshift(1);e=F(e,c)}let n=e.shape,s=Array.from(t);for(let c=t.length-1;c>=0;c--)if(n[c]===t[c])s[c]=1;else if(e.shape[c]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${t}].`);if(s.map((c,u)=>c>1?u:-1).filter(c=>c>=0).length===0)return Vr(e);let a={x:e},l={reps:s};return T.runKernel(nn,a,l)}var ks=k({broadcastTo_:kz});function Ez(r){let e={x:v(r,"x","ceil","float32")};return T.runKernel(Bn,e)}var Zb=k({ceil_:Ez});function Es(r,t,e){je(r),e=e||Qs(t);let o={shape:r,value:t,dtype:e};return T.runKernel(nc,{},o)}function Az(r,t,e){let o=v(r,"x","clipByValue");if(N(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return Es(o.shape,t,o.dtype);let n={x:o},s={clipValueMin:t,clipValueMax:e};return T.runKernel(Mn,n,s)}var Ze=k({clipByValue_:Az});function $z(r){return ne(r,0)}var Jb=k({concat1d_:$z});function Dz(r,t){return ne(r,t)}var Qb=k({concat2d_:Dz});function Rz(r,t){return ne(r,t)}var t0=k({concat3d_:Rz});function Fz(r,t){return ne(r,t)}var e0=k({concat4d_:Fz});function _z(r,t,e,o,n="NHWC",s=[1,1],i){let a=v(r,"x","conv2d","float32"),l=v(t,"filter","conv2d","float32"),c=a,u=!1;a.rank===3&&(u=!0,c=F(a,[1,a.shape[0],a.shape[1],a.shape[2]])),N(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),N(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),ee("conv2d",o,i);let p=n==="NHWC"?c.shape[3]:c.shape[1];N(p===l.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`),N(Ye(e,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),N(pn(s),()=>"Error in conv2D: Dilated rates should be larger than 0."),N(pn(e),()=>"Error in conv2D: Strides should be larger than 0.");let m={x:c,filter:l},f={strides:e,pad:o,dataFormat:n,dilations:s,dimRoundingMode:i},h=T.runKernel(ci,m,f);return u?F(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Gr=k({conv2d_:_z});function Oz(r,t,e,o,n="NWC",s=1,i){let a=v(r,"x","conv1d"),l=v(t,"filter","conv1d"),c=a,u=!1;a.rank===2&&(u=!0,c=F(a,[1,a.shape[0],a.shape[1]])),N(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),N(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),ee("conv1d",o,i),N(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),N(Ye(e,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${s}'`),N(pn(s),()=>"Error in conv1D: Dilated rates should be larger than 0."),N(pn(e),()=>"Error in conv1D: Stride should be larger than 0."),N(n==="NWC",()=>`Error in conv1d: got dataFormat of ${n} but only NWC is currently supported.`);let p=F(l,[1,l.shape[0],l.shape[1],l.shape[2]]),m=F(c,[c.shape[0],1,c.shape[1],c.shape[2]]),g=Gr(m,p,[1,e],o,"NHWC",[1,s],i);return u?F(g,[g.shape[2],g.shape[3]]):F(g,[g.shape[0],g.shape[2],g.shape[3]])}var Np=k({conv1d_:Oz});function Lz(r,t,e,o,n,s="NHWC",i){N(r.length===t.rank,()=>`Length of inShape (${r.length}) and rank of dy (${t.rank}) must match`);let a=r,l=t,c=!1;t.rank===3&&(c=!0,l=F(t,[1,t.shape[0],t.shape[1],t.shape[2]]),a=[1,r[0],r[1],r[2]]),N(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),N(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),N(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);let u=s==="NHWC"?a[3]:a[1],p=s==="NHWC"?l.shape[3]:l.shape[1];N(u===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${e.shape[2]}.`),N(p===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${e.shape[3]}.`),ee("conv2dDerInput",n,i);let m={dy:l,filter:e},f={strides:o,pad:n,dataFormat:s,dimRoundingMode:i,inputShape:a},h=T.runKernel(ui,m,f);return c?F(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Pc=k({conv2DBackpropInput_:Lz});function Pz(r,t,e,o,n,s){let i=v(r,"x","conv2dTranspose"),a=v(t,"filter","conv2dTranspose");return Pc(e,i,a,o,n,"NHWC",s)}var Tp=k({conv2dTranspose_:Pz});function zz(r,t,e,o,n="NDHWC",s=[1,1,1]){let i=v(r,"x","conv3d"),a=v(t,"filter","conv3d"),l=i,c=!1;i.rank===4&&(c=!0,l=F(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),N(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),N(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),N(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),N(Ye(e,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),N(n==="NDHWC",()=>`Error in conv3d: got dataFormat of ${n} but only NDHWC is currently supported.`),N(pn(s),()=>"Error in conv3D: Dilated rates should be larger than 0."),N(pn(e),()=>"Error in conv3D: Strides should be larger than 0.");let u={x:l,filter:a},p={strides:e,pad:o,dataFormat:n,dilations:s},m=T.runKernel(pi,u,p);return c?F(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var r0=k({conv3d_:zz});function Bz(r,t,e,o,n){N(r.length===t.rank,()=>`Length of inShape (${r.length}) and rank of dy (${t.rank}) must match`);let s=r,i=t,a=!1;t.rank===4&&(a=!0,i=F(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,r[0],r[1],r[2],r[3]]);let l=s[4],c=i.shape[4];N(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),N(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),N(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),N(l===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[3]}.`),N(c===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${e.shape[4]}.`);let u={dy:i,filter:e},p={pad:n,strides:o,inputShape:s},m=T.runKernel(jl,u,p);return a?F(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Kh=k({conv3DBackpropInput_:Bz});function Mz(r,t,e,o,n){let s=v(r,"x","conv3dTranspose"),i=v(t,"filter","conv3dTranspose");return Kh(e,s,i,o,n)}var o0=k({conv3dTranspose_:Mz});function Vz(r){let e={x:v(r,"x","cos","float32")};return T.runKernel(Vn,e)}var Ka=k({cos_:Vz});function Gz(r){let e={x:v(r,"x","cosh","float32")};return T.runKernel(Gn,e)}var kp=k({cosh_:Gz});function Uz(r,t=0,e=!1,o=!1){let s={x:v(r,"x","cumprod")},i={axis:t,exclusive:e,reverse:o};return T.runKernel(Xl,s,i)}var Ep=k({cumprod_:Uz});function Wz(r,t=0,e=!1,o=!1){let s={x:v(r,"x","cumsum")},i={axis:t,exclusive:e,reverse:o};return T.runKernel(mi,s,i)}var jh=k({cumsum_:Wz});function Hz(r,t,e,o=!1){let n=v(r,"x","denseBincount"),s=v(t,"weights","denseBincount");N(n.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${n.dtype}`),N(n.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${n.rank}.`),N(e>=0,()=>`size must be non-negative, but got ${e}.`),N(s.size===n.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${n.shape}, weights shape: ${s.shape}.`);let i={x:n,weights:s},a={size:e,binaryOutput:o};return T.runKernel(Zl,i,a)}var Xh=k({denseBincount_:Hz});function qz(r,t,e="NHWC"){let o=v(r,"x","depthToSpace","float32"),n=e==="NHWC"?o.shape[1]:o.shape[2],s=e==="NHWC"?o.shape[2]:o.shape[3],i=e==="NHWC"?o.shape[3]:o.shape[1];N(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),N(n*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${n} and ${t}  for depthToSpace with input shape
    ${o.shape}`),N(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${o.shape}`),N(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${o.shape}`);let a={x:o},l={blockSize:t,dataFormat:e};return T.runKernel(Jl,a,l)}var tv=k({depthToSpace_:qz});function Kz(r,t,e,o,n="NHWC",s=[1,1],i){let a=v(r,"x","depthwiseConv2d","float32"),l=v(t,"filter","depthwiseConv2d","float32"),c=a,u=!1;a.rank===3&&(u=!0,c=F(a,[1,a.shape[0],a.shape[1],a.shape[2]])),N(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),N(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);let p=n==="NHWC"?c.shape[3]:c.shape[1];N(p===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${l.shape[2]}.`),ee("depthwiseConv2d",o,i);let m={x:c,filter:l},f={strides:e,pad:o,dataFormat:n,dilations:s,dimRoundingMode:i},h=T.runKernel(fi,m,f);return u?F(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var As=k({depthwiseConv2d_:Kz});function jz(r,t,e,o,n=[1,1],s="NHWC"){let i=v(r,"x","dilation2d"),a=v(t,"filter","dilation2d");N(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),N(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),N(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let l=i,c=!1;i.rank===3&&(l=F(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=!0),N(l.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${a.shape[2]}`);let u={x:l,filter:a},p={strides:e,pad:o,dilations:n},m=T.runKernel(hi,u,p);return c?F(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var ev=k({dilation2d_:jz});var Ur={};co(Ur,{assertAndGetBroadcastShape:()=>kt,getBroadcastDims:()=>rv,getReductionAxes:()=>Zt});function rv(r,t){let e=r.length,o=[];for(let n=0;n<e;n++){let s=e-1-n,i=r[s]||1;(t[t.length-1-n]||1)>1&&i===1&&o.unshift(s)}return o}function Zt(r,t){let e=[];for(let o=0;o<t.length;o++){let n=r[r.length-o-1],s=t.length-o-1,i=t[s];(n==null||n===1&&i>1)&&e.unshift(s)}return e}function kt(r,t){let e=Math.max(r.length,t.length),o=new Array(e);for(let n=0;n<e;n++){let s=r[r.length-n-1];s==null&&(s=1);let i=t[t.length-n-1];if(i==null&&(i=1),s===1)o[e-n-1]=i;else if(i===1)o[e-n-1]=s;else if(s!==i){let a=`Operands could not be broadcast together with shapes ${r} and ${t}.`;throw Error(a)}else o[e-n-1]=s}return o}function Xz(r,t){let e=v(r,"a","equal","string_or_numeric"),o=v(t,"b","equal","string_or_numeric");[e,o]=_t(e,o),kt(e.shape,o.shape);let n={a:e,b:o};return T.runKernel(va,n)}var br=k({equal_:Xz});function Yz(r,t,e){let o=v(t,"a","where"),n=v(e,"b","where"),s=v(r,"condition","where","bool"),i=kt(kt(s.shape,o.shape),n.shape),a=ks(s,i),l=ks(o,i),c=ks(n,i),u={condition:a,t:l,e:c};return T.runKernel(Pi,u)}var se=k({where_:Yz});function Zz(r){let e={x:v(r,"x","zerosLike")};return T.runKernel(Hi,e)}var gt=k({zerosLike_:Zz});function Jz(r,t){let e=v(r,"a","div"),o=v(t,"b","div");[e,o]=_t(e,o);let n=nt(e,o),s=gt(n),i=br(o,s);return se(i,s,n)}var ov=k({divNoNan_:Jz});function Qz(r,t){let e=v(r,"t1","dot"),o=v(t,"t2","dot");N((e.rank===1||e.rank===2)&&(o.rank===1||o.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${o.rank}.`);let n=e.rank===1?e.size:e.shape[1],s=o.rank===1?o.size:o.shape[0];if(N(n===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${n} and ${s}.`),e.rank===1&&o.rank===1){let i=F(e,[1,-1]),a=F(o,[-1,1]),l=Wt(i,a);return F(l,[])}else if(e.rank===1&&o.rank===2){let i=F(e,[1,-1]),a=F(o,[o.shape[0],o.shape[1]]),l=Wt(i,a);return F(l,[l.size])}else if(e.rank===2&&o.rank===1){let i=F(o,[-1,1]),a=Wt(e,i);return F(a,[a.size])}else{let i=F(o,[o.shape[0],o.shape[1]]);return Wt(e,i)}}var nv=k({dot_:Qz});function t3(r,...t){let e=t.map((n,s)=>v(n,`tensors${s}`,"einsum")),o={equation:r};return T.runKernel(ec,e,o)}var zc=k({einsum_:t3});function e3(r){let e={x:v(r,"x","elu","float32")};return T.runKernel(Wn,e)}var $s=k({elu_:e3});function r3(r){let t=v(r,"x","erf");N(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=Y(t,"float32"));let e={x:t};return T.runKernel(Hn,e)}var Ap=k({erf_:r3});function n0(r,t){for(let e=0;e<r.length;++e)if(r[r.length-e-1]!==t-1-e)return!1;return!0}function sv(r,t,e){let o=r.length+t.length,n=[],s=0,i=0;for(let a=0;a<o;a++)e.indexOf(a)===-1?n.push(r[s++]):n.push(t[i++]);return n}function s0(r,t){let e=[],o=r.length;for(let s=0;s<o;s++)t.indexOf(s)===-1&&e.push(r[s]);let n=t.map(s=>r[s]);return[e,n]}function mn(r,t){let e=t.map(o=>1);return sv(r,e,t)}function o3(r,t,e){N(n0(t,e),()=>`${r} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function i0(r,t){if(n0(r,t))return null;let e=[];for(let o=0;o<t;++o)r.indexOf(o)===-1&&e.push(o);return r.forEach(o=>e.push(o)),e}function $p(r){return r.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function n3(r,t){let e=[];for(let o=t-r;o<t;++o)e.push(o);return e}function s3(r,t=null,e=!1){let n={x:v(r,"x","max")},s={reductionIndices:t,keepDims:e};return T.runKernel(wi,n,s)}var Je=k({max_:s3});function i3(r,t=null,e=!1){let n={x:v(r,"x","min")},s={axis:t,keepDims:e};return T.runKernel(vi,n,s)}var Qi=k({min_:i3});function a3(r,t){let e=v(r,"base","pow"),o=v(t,"exp","pow");[e,o]=_t(e,o);let n={a:e,b:o};return T.runKernel(is,n)}var $r=k({pow_:a3});function bt(r,t){if((mr(r)&&t!=="string"||Array.isArray(r))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&mr(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Xi(r,[],[],t)}function l3(r){let e={x:v(r,"x","sqrt","float32")};return T.runKernel(ys,e)}var Jt=k({sqrt_:l3});function c3(r){let t=v(r,"x","square"),e={};return T.runKernel("Square",{x:t},e)}var Ft=k({square_:c3});function u3(r,t=null,e=!1){let o=v(r,"x","sum");o.dtype==="bool"&&(o=Y(o,"int32"));let n={x:o},s={axis:t,keepDims:e};return T.runKernel(Bi,n,s)}var lt=k({sum_:u3});function p3(r,t="euclidean",e=null,o=!1){r=v(r,"x","norm");let n=iv(r,t,e),s=n.shape;if(o){let i=Oe(e,r.shape);s=mn(n.shape,i)}return F(n,s)}function iv(r,t,e=null){if(r.rank===0)return De(r);if(r.rank!==1&&e===null)return iv(F(r,[-1]),t,e);if(r.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return lt(De(r),e);if(t===1/0)return Je(De(r),e);if(t===-1/0)return Qi(De(r),e);if(t==="euclidean"||t===2)return Jt(lt($r(De(r),bt(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return Je(lt(De(r),e[0]),e[1]-1);if(t===1/0)return Je(lt(De(r),e[1]),e[0]);if(t===-1/0)return Qi(lt(De(r),e[1]),e[0]);if(t==="fro"||t==="euclidean")return Jt(lt(Ft(r),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}var ta=k({norm_:p3});function m3(r,t=null,e=!1){return ta(r,"euclidean",t,e)}var av=k({euclideanNorm_:m3});function f3(r){let e={x:v(r,"x","exp")};return T.runKernel(qn,e)}var Ve=k({exp_:f3});function h3(r,t=0){let e=v(r,"x","expandDims","string_or_numeric");N(t<=e.rank,()=>"Axis must be <= rank of the tensor");let o={input:e},n={dim:t};return T.runKernel(di,o,n)}var ke=k({expandDims_:h3});function d3(r){let e={x:v(r,"x","expm1")};return T.runKernel(Kn,e)}var l0=k({expm1_:d3});function g3(r,t){let e=v(r,"x","tile","string_or_numeric");N(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);let o={x:e},n={reps:t};return T.runKernel(nn,o,n)}var sr=k({tile_:g3});function x3(r,t,e,o="float32"){t==null&&(t=r);let n=dt([r,t],o),s=r<=t?r:t;for(let a=0;a<s;++a)n.set(1,a,a);let i=F(n.toTensor(),[r,t]);if(e==null)return i;if(e.length===1)return sr(ke(i,0),[e[0],1,1]);if(e.length===2)return sr(ke(ke(i,0),0),[e[0],e[1],1,1]);if(e.length===3)return sr(ke(ke(ke(i,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}var Bc=k({eye_:x3});function y3(r){let e={x:v(r,"x","floor","float32")};return T.runKernel(jn,e)}var Ds=k({floor_:y3});function b3(r,t,e=0,o=0){let n=v(r,"x","gather"),s=v(t,"indices","gather","int32"),i={x:n,indices:s},a={axis:e,batchDims:o};return T.runKernel(xi,i,a)}var ja=k({gather_:b3});function w3(r,t){let e=v(r,"a","greater","string_or_numeric"),o=v(t,"b","greater","string_or_numeric");[e,o]=_t(e,o),kt(e.shape,o.shape);let n={a:e,b:o};return T.runKernel(Na,n)}var we=k({greater_:w3});function C3(r,t){let e=v(r,"a","greaterEqual","string_or_numeric"),o=v(t,"b","greaterEqual","string_or_numeric");[e,o]=_t(e,o),kt(e.shape,o.shape);let n={a:e,b:o};return T.runKernel(Yn,n)}var Dr=k({greaterEqual_:C3});function I3(r){let e={input:v(r,"input","imag")};return T.runKernel(ac,e)}var Mc=k({imag_:I3});function S3(r){let e={x:v(r,"x","isFinite")};return T.runKernel(Zn,e)}var c0=k({isFinite_:S3});function v3(r){let e={x:v(r,"x","isInf")};return T.runKernel(Jn,e)}var u0=k({isInf_:v3});function N3(r){let e={x:v(r,"x","isNaN")};return T.runKernel(Qn,e)}var p0=k({isNaN_:N3});function T3(r,t=.2){let o={x:v(r,"x","leakyRelu")},n={alpha:t};return T.runKernel(yi,o,n)}var Xa=k({leakyRelu_:T3});function k3(r,t){let e=v(r,"a","less","string_or_numeric"),o=v(t,"b","less","string_or_numeric");[e,o]=_t(e,o),kt(e.shape,o.shape);let n={a:e,b:o};return T.runKernel(Ta,n)}var Ya=k({less_:k3});function E3(r,t){let e=v(r,"a","lessEqual","string_or_numeric"),o=v(t,"b","lessEqual","string_or_numeric");[e,o]=_t(e,o),kt(e.shape,o.shape);let n={a:e,b:o};return T.runKernel(ka,n)}var xo=k({lessEqual_:E3});function A3(r,t=5,e=1,o=1,n=.5){let s=v(r,"x","localResponseNormalization");N(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),N(Dn(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,a=!1;s.rank===3&&(a=!0,i=F(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},c={depthRadius:t,bias:e,alpha:o,beta:n},u=T.runKernel(bi,l,c);return a?F(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var lv=k({localResponseNormalization_:A3});function $3(r){let e={x:v(r,"x","log","float32")};return T.runKernel(ts,e)}var wr=k({log_:$3});function D3(r){let e={x:v(r,"x","log1p")};return T.runKernel(es,e)}var Dp=k({log1p_:D3});function m0(r,t){N(Ll(r),()=>"The f passed in variableGrads(f) must be a function"),N(t==null||Array.isArray(t)&&t.every(c=>c instanceof vs),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let e=t!=null;if(!e){t=[];for(let c in T.registeredVariables)t.push(T.registeredVariables[c])}let o=e?t.filter(c=>!c.trainable):null,n=t.length;t=t.filter(c=>c.trainable),N(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${n} variables is trainable.`);let s=!0,{value:i,grads:a}=T.gradients(r,t,null,s);N(a.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),N(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let l={};return t.forEach((c,u)=>{a[u]!=null&&(l[c.name]=a[u])}),o?.forEach(c=>l[c.name]=null),{value:i,grads:l}}function no(r){return T.customGrad(r)}function R3(r){let e={x:v(r,"x","neg")};return T.runKernel(Ti,e)}var Mt=k({neg_:R3});function F3(r){let e={x:v(r,"x","softplus")};return T.runKernel(xs,e)}var fn=k({softplus_:F3});function _3(r){let t=v(r,"x","logSigmoid");return no(o=>({value:Mt(fn(Mt(o))),gradFunc:i=>R(i,go(Mt(o)))}))(t)}var f0=k({logSigmoid_:_3});function O3(r,t){let e=v(r,"a","sub"),o=v(t,"b","sub");[e,o]=_t(e,o);let n={a:e,b:o};return T.runKernel(ws,n)}var ut=k({sub_:O3});function L3(r,t=-1){let e=v(r,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return no((n,s)=>{let a=Je(n,t,!0),l=ut(n,a),c=ut(Y(l,"float32"),wr(lt(Ve(l),t,!0)));return s([c]),{value:c,gradFunc:(p,m)=>{let[f]=m,h=!0,d=Ve(f);return ut(p,R(lt(p,t,h),d))}}})(e)}var Rp=k({logSoftmax_:L3});function P3(r,t=null,e=!1){let o=v(r,"x","logSumExp"),n=Oe(t,o.shape),s=Je(o,n,!0),i=ut(o,s),a=Ve(i),l=lt(a,n),c=wr(l),u=j(F(s,c.shape),c);if(e){let p=mn(u.shape,n);return F(u,p)}return u}var Fp=k({logSumExp_:P3});function z3(r,t){let e=v(r,"a","logicalAnd","bool"),o=v(t,"b","logicalAnd","bool");kt(e.shape,o.shape);let n={a:e,b:o};return T.runKernel(Ea,n)}var fr=k({logicalAnd_:z3});function B3(r){let e={x:v(r,"x","logicalNot","bool")};return T.runKernel(Aa,e)}var Vc=k({logicalNot_:B3});function M3(r,t){let e=v(r,"a","logicalOr","bool"),o=v(t,"b","logicalOr","bool");kt(e.shape,o.shape);let n={a:e,b:o};return T.runKernel($a,n)}var Yh=k({logicalOr_:M3});function V3(r,t){let e=v(r,"a","logicalXor","bool"),o=v(t,"b","logicalXor","bool");return kt(e.shape,o.shape),fr(Yh(r,t),Vc(fr(r,t)))}var cv=k({logicalXor_:V3});function G3(r,t,e,o,n){let s=v(r,"x","maxPool"),i=1,a=s,l=!1;s.rank===3&&(l=!0,a=F(s,[1,s.shape[0],s.shape[1],s.shape[2]])),N(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),N(Ye(e,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),ee("maxPool",o,n);let c={x:a},u={filterSize:t,strides:e,pad:o,dimRoundingMode:n},p=T.runKernel(Ci,c,u);return l?F(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Za=k({maxPool_:G3});function U3(r,t=[1,1,1],e,o,n,s="NDHWC"){let i=v(r,"x","maxPool3d"),a=i,l=!1;i.rank===4&&(l=!0,a=F(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),N(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),N(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),ee("maxPool3d",o,n);let c={x:a},u={filterSize:t,strides:e,pad:o,dimRoundingMode:n,dataFormat:s},p=T.runKernel(Ii,c,u);return l?F(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var h0=k({maxPool3d_:U3});function W3(r,t){let e=v(r,"a","maximum"),o=v(t,"b","maximum");[e,o]=_t(e,o),e.dtype==="bool"&&(e=Y(e,"int32"),o=Y(o,"int32")),kt(e.shape,o.shape);let n={a:e,b:o};return T.runKernel(rs,n)}var Wr=k({maximum_:W3});function H3(r,t=null,e=!1){let n={x:v(r,"x","mean")},s={axis:t,keepDims:e};return T.runKernel(Si,n,s)}var le=k({mean_:H3});function ie(r,t="float32"){if(je(r),t==="complex64"){let o=ie(r,"float32"),n=ie(r,"float32");return to(o,n)}let e=zl(Ut(r),t);return T.makeTensor(e,r,t)}function Cr(r,t="float32"){if(je(r),t==="complex64"){let o=Cr(r,"float32"),n=ie(r,"float32");return to(o,n)}let e=ap(Ut(r),t);return T.makeTensor(e,r,t)}function q3(r,t){let e=v(r,"a","minimum"),o=v(t,"b","minimum");[e,o]=_t(e,o),e.dtype==="bool"&&(e=Y(e,"int32"),o=Y(o,"int32")),kt(e.shape,o.shape);let n={a:e,b:o};return T.runKernel(os,n)}var hn=k({minimum_:q3});function K3(r,t,e){N(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);let o=v(r,"x","mirrorPad");if(o.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");N(t.length===o.rank,()=>`Padding doesn't match input. Must be ${o.rank}. Got ${t.length}.`);let n=e==="reflect"?1:0;for(let a=0;a<o.rank;a++)N(t[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),N(t[a][0]>=0&&t[a][0]<=o.shape[a]-n&&t[a][1]>=0&&t[a][1]<=o.shape[a]-n,()=>`Padding in dimension ${a} cannot be greater than or equal to ${o.shape[a]-n} or less than 0 for input of shape ${o.shape}`);let s={paddings:t,mode:e},i={x:o};return T.runKernel(Ni,i,s)}var uv=k({mirrorPad_:K3});function j3(r,t){let e=v(r,"a","mod"),o=v(t,"b","mod");[e,o]=_t(e,o);let n={a:e,b:o};return T.runKernel(ns,n)}var pv=k({mod_:j3});function X3(r,t=null,e=!1){r=v(r,"x","moments");let o=Oe(t,r.shape),n=le(r,o,e),s=n.shape;e||(s=mn(n.shape,o));let i=Ft(ut(Y(r,"float32"),F(n,s))),a=le(i,o,e);return{mean:n,variance:a}}var Gc=k({moments_:X3});function Y3(r,t){let e=v(r,"a","notEqual","string_or_numeric"),o=v(t,"b","notEqual","string_or_numeric");[e,o]=_t(e,o),kt(e.shape,o.shape);let n={a:e,b:o};return T.runKernel(Da,n)}var ea=k({notEqual_:Y3});function Z3(r,t,e=1,o=0,n="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let i={indices:v(r,"indices","oneHot","int32")},a={dtype:n,depth:t,onValue:e,offValue:o};return T.runKernel(Ei,i,a)}var Uc=k({oneHot_:Z3});function J3(r){let e={x:v(r,"x","onesLike")};return T.runKernel(ki,e)}var Ge=k({onesLike_:J3});function Q3(r,t,e=0){let o=v(r,"x","pad");if(o.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let n={paddings:t,constantValue:e},s={x:o};return T.runKernel($i,s,n)}var Ja=k({pad_:Q3});function tB(r,t,e){let o=v(r,"x","spaceToBatchND");N(o.rank>=1+t.length,()=>`input rank ${o.rank} should be > than [blockShape] ${t.length}`),N(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),N(o.shape.reduce((i,a,l)=>l>0&&l<=t.length?i&&(a+e[l-1][0]+e[l-1][1])%t[l-1]===0:i,!0),()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);let n={x:o},s={blockShape:t,paddings:e};return T.runKernel(Mi,n,s)}var Wc=k({spaceToBatchND_:tB});function eB(r,t,e,o,n,s,i){n==null&&(n=[1,1]),s==null&&(s=1),o===0&&(o="valid");let a=v(r,"x","maxPool"),l=a,c=!1;a.rank===3&&(c=!0,l=F(a,[1,a.shape[0],a.shape[1],a.shape[2]])),N(Ye(s,n),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${n}'`);let u=Hb(l.shape,t,s,n,o),p=[u.dilationHeight,u.dilationWidth],m;o==="same"?m=oB([u.filterHeight,u.filterWidth],p):m=[[0,0],[0,0]];let f=p[0]===1&&p[1]===1,[h,d]=rB([u.inHeight,u.inWidth],p,m),g=f?o:"valid",x=f?l:Wc(l,p,h),C=(e==="avg"?()=>Ha(x,t,s,g,i):()=>Za(x,t,s,g,i))(),w=f?C:Lc(C,p,d);return c?F(w,[w.shape[1],w.shape[2],w.shape[3]]):w}function rB(r,t,e){let o=e.map(u=>u[0]),n=e.map(u=>u[1]),s=r.concat(o,n),i=t.map((u,p)=>(u-s[p]%u)%u),a=n.map((u,p)=>u+i[p]),l=t.map((u,p)=>[o[p],a[p]]),c=t.map((u,p)=>[0,i[p]]);return[l,c]}function oB(r,t){let o=r.map((i,a)=>i+(i-1)*(t[a]-1)).map(i=>i-1),n=o.map(i=>Math.floor(i/2)),s=o.map((i,a)=>i-n[a]);return o.map((i,a)=>[n[a],s[a]])}var mv=k({pool_:eB});function nB(r,t){let e=v(r,"x","prelu"),o=v(t,"alpha","prelu"),n={x:e,alpha:o};return T.runKernel(Di,n)}var Qa=k({prelu_:nB});function sB(r,t=null,e=!1){let o=v(r,"x","prod");o.dtype==="bool"&&(o=Y(o,"int32"));let n={x:o},s={axis:t,keepDims:e};return T.runKernel(Ri,n,s)}var fv=k({prod_:sB});var C0=np(_p());var Hc=class{constructor(t,e,o,n,s){this.mean=t,this.stdDev=e,this.dtype=o,this.nextVal=NaN,this.truncated=n,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let i=s||Math.random();this.random=C0.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){let n=this.nextVal;return this.nextVal=NaN,n}let t,e,o=!1;for(;!o;){let n,s,i;do n=2*this.random()-1,s=2*this.random()-1,i=n*n+s*s;while(i>=1||i===0);let a=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*n*a,e=this.mean+this.stdDev*s*a,(!this.truncated||this.isValidTruncated(t))&&(o=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}};var Jh=class{constructor(t=0,e=1,o,n){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=o,n==null&&(n=Math.random()),typeof n=="number"&&(n=n.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=C0.alea(n)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function mB(r,t=0,e=1,o,n){if(je(r),o!=null&&o==="bool")throw new Error(`Unsupported data type ${o}`);let s=new Hc(t,e,o,!1,n),i=dt(r,o);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var Qh=k({randomNormal_:mB});function fB(r,t=0,e=1,o="float32",n){je(r);let s=dt(r,o),i=new Jh(t,e,null,n);for(let a=0;a<s.values.length;a++)s.values[a]=i.nextValue();return s.toTensor()}var zo=k({randomUniform_:fB});function Rs(r,t,e=1,o="float32"){if(e===0)throw new Error("Cannot have a step of zero");let n={start:r,stop:t,step:e,dtype:o};return T.runKernel(hc,{},n)}function hB(r){let e={input:v(r,"input","real")};return T.runKernel(dc,e)}var el=k({real_:hB});function dB(r){let e={x:v(r,"x","reciprocal")};return T.runKernel(as,e)}var I0=k({reciprocal_:dB});function gB(r){let e={x:v(r,"x","relu")};return T.runKernel(ls,e)}var Hr=k({relu_:gB});function xB(r){let e={x:v(r,"x","relu6")};return T.runKernel(cs,e)}var td=k({relu6_:xB});function yB(r,t){let o={x:v(r,"x","reverse")},n={dims:t};return T.runKernel(Li,o,n)}var so=k({reverse_:yB});function bB(r){let e={x:v(r,"x","round")};return T.runKernel(us,e)}var Op=k({round_:bB});function wB(r){let e={x:v(r,"x","rsqrt","float32")};return T.runKernel(ps,e)}var Lp=k({rsqrt_:wB});function CB(r){let e={x:v(r,"x","selu")};return T.runKernel(ms,e)}var Pp=k({selu_:CB});function IB(r,t,e,o,n,s=[1,1],i="NHWC"){let a=v(r,"x","separableConv2d"),l=v(t,"depthwiseFilter","separableConv2d"),c=v(e,"pointwiseFilter","separableConv2d"),u=a,p=!1;if(a.rank===3&&(p=!0,u=F(a,[1,a.shape[0],a.shape[1],a.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");N(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),N(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),N(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),N(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),N(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);let m=l.shape[2],f=l.shape[3];N(c.shape[2]===m*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${m*f}, but got ${c.shape[2]}.`);let h=As(u,l,o,n,i,s),g=Gr(h,c,1,"valid",i);return p?F(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var zp=k({separableConv2d_:IB});function SB(r){let e={x:v(r,"x","sign")};return T.runKernel(ds,e)}var S0=k({sign_:SB});function vB(r){let e={x:v(r,"x","sin","float32")};return T.runKernel(fs,e)}var Bp=k({sin_:vB});function NB(r){let e={x:v(r,"x","sinh")};return T.runKernel(hs,e)}var Mp=k({sinh_:NB});function TB(r,t,e){let o=v(r,"x","slice1d");return N(o.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${o.rank} tensor`),Pt(o,[t],[e])}var Vp=k({slice1d_:TB});function kB(r,t,e){let o=v(r,"x","slice2d");return N(o.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${o.rank} tensor`),Pt(o,t,e)}var ed=k({slice2d_:kB});function EB(r,t,e){let o=v(r,"x","slice3d");return N(o.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${o.rank} tensor`),Pt(o,t,e)}var Gp=k({slice3d_:EB});function AB(r,t,e){let o=v(r,"x","slice4d");return N(o.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${o.rank} tensor`),Pt(o,t,e)}var qc=k({slice4d_:AB});function $B(r,t=-1){let e=v(r,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);let o={logits:e},n={dim:t};return T.runKernel(Gi,o,n)}var rl=k({softmax_:$B});function DB(r){N(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let t={input:r};return T.runKernel(oc,t)}var Up=k({fft_:DB});function RB(r){N(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let t={input:r};return T.runKernel(ic,t)}var Kc=k({ifft_:RB});function FB(r){let t=r.shape[r.shape.length-1],e=r.size/t,o;if(t<=2){let n=F(r,[e,t]);o=Kc(n)}else{let n=[e,2*(t-1)],s=F(el(r),[e,t]),i=F(Mc(r),[e,t]),a=so(Pt(s,[0,1],[e,t-2]),1),l=R(so(Pt(i,[0,1],[e,t-2]),1),bt(-1)),c=ne([s,a],1),u=ne([i,l],1),p=F(to(c,u),[n[0],n[1]]);o=Kc(p)}if(o=el(o),r.rank===3&&r.shape[0]!==0){let n=o,s=r.shape[0];o=F(o,[s,o.shape[0]/s,o.shape[1]]),n.dispose()}return o}var v0=k({irfft_:FB});function _B(r,t,e=0){let n={x:v(r,"x","split")},s={numOrSizeSplits:t,axis:e};return T.runKernel(Vi,n,s)}var Pe=k({split_:_B});function OB(r,t){N(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let e=r.shape[r.shape.length-1],o=r.size/e,n;if(t!=null&&t<e){let h=r.shape.map(g=>0),d=r.shape.map(g=>g);d[r.shape.length-1]=t,n=Pt(r,h,d),e=t}else if(t!=null&&t>e){let h=r.shape.map(d=>d);h[r.shape.length-1]=t-e,n=ne([r,ie(h)],r.shape.length-1),e=t}else n=r;let s=gt(n),i=F(to(n,s),[o,e]),a=Up(i),l=Math.floor(e/2)+1,c=el(a),u=Mc(a),p=Pe(c,[l,e-l],c.shape.length-1),m=Pe(u,[l,e-l],u.shape.length-1),f=n.shape.slice();return f[n.shape.length-1]=l,F(to(p[0],m[0]),f)}var N0=k({rfft_:OB});function LB(r,t){let e=v(r,"a","squaredDifference"),o=v(t,"b","squaredDifference");[e,o]=_t(e,o),kt(e.shape,o.shape);let n={a:e,b:o},s={};return T.runKernel(bs,n,s)}var $v=k({squaredDifference_:LB});function PB(r,t){let e=v(r,"x","squeeze","string_or_numeric");return F(e,rb(e.shape,t).newShape)}var Bo=k({squeeze_:PB});function zB(r,t=0){let e=zh(r,"tensors","stack","string_or_numeric");N(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&N(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");let o=e,n={axis:t};return T.runKernel(Ai,o,n)}var Re=k({stack_:zB});function BB(r,t=0){let o={x:v(r,"x","step")},n={alpha:t};return T.runKernel(Ss,o,n)}var Mo=k({step_:BB});function MB(r,t,e,o,n=0,s=0,i=0,a=0,l=0){let u={x:v(r,"x","stridedSlice","string_or_numeric")},p={begin:t,end:e,strides:o,beginMask:n,endMask:s,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};return T.runKernel(bc,u,p)}var T0=k({stridedSlice_:MB});function VB(r){let e={x:v(r,"x","tan","float32")};return T.runKernel(Cs,e)}var k0=k({tan_:VB});function Ee(r,t){ip(r);let e=Va(r,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Xi(r,null,e,t)}function ra(r,t,e){if(ip(r),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let o=Va(r,e);if(o.length!==2&&o.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(o.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Xi(r,t,o,e)}function Dv(r,t,e){let o=t.rank>1?t.shape[t.rank-1]:1,n=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${r}, sliceDim: ${o}, and batchDim: ${n}.`;if(e.rank<n)throw new Error(s+` update.rank < ${n}. `);if(r.length<o+(e.rank-n))throw new Error(s+` Output shape length < ${o+(e.rank-n)}`);if(e.rank!==n+r.length-o)throw new Error(s+` update.rank != ${n+r.length-o}`);for(let i=0;i<n;++i)if(e.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${e.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<e.rank-n;++i)if(e.shape[i+n]!==r[i+o])throw new Error(s+` updates.shape[${i+n}] (${e.shape[i+n]}) != shape[${i+n}] (${r[i+n]})`)}function GB(r,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}Dv(e,t,r)}function UB(r,t,e){let o=t.shape.length,n=o>1?t.shape[o-1]:1,s=e.length,i=1;for(let p=n;p<s;++p)i*=e[p];let a=n<1?1:n,l=Ut(t.shape)/a,c=[...en(e.slice(0,n)),1],u=Ut(e);return{sliceRank:n,numUpdates:l,sliceSize:i,strides:c,outputSize:u}}function WB(r,t=1,e=!0){let o=v(r,"x","topk");if(o.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let n=o.shape[o.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>n)throw new Error(`'k' passed to topk() must be <= the last dimension (${n}) but got ${t}`);let s={x:o},i={k:t,sorted:e},[a,l]=T.runKernel(wc,s,i);return{values:a,indices:l}}var Rv=k({topk_:WB});function HB(r,t=0,e=1,o,n){if(je(r),o!=null&&o==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new Hc(t,e,o,!0,n),i=dt(r,o);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var Wp=k({truncatedNormal_:HB});function qB(r,t=0){let e=v(r,"x","unique","string_or_numeric");N(e.rank>0,()=>"The input tensor must be at least 1D");let o={x:e},n={axis:t},[s,i]=T.runKernel(Ic,o,n);return{values:s,indices:i}}var Fv=k({unique_:qB});function KB(r,t,e){let o=v(r,"x","unsortedSegmentSum"),n=v(t,"segmentIds","unsortedSegmentSum","int32");N(Dn(e),()=>"numSegments must be of dtype int");let s={x:o,segmentIds:n},i={numSegments:e};return T.runKernel(Wi,s,i)}var rd=k({unsortedSegmentSum_:KB});function jB(r,t=0){let e=v(r,"x","unstack","string_or_numeric");N(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);let o={value:e},n={axis:t};return T.runKernel(Ui,o,n)}var hr=k({unstack_:jB});function E0(r,t=!0,e,o){return T.makeVariable(r,t,e,o)}function _v(r,t){let e=[];for(let s=0;s<t.length;s++)t[s]&&e.push(s);let o=dt(r,"int32"),n=dt([e.length,r.length],"int32");for(let s=0;s<e.length;s++){let i=o.indexToLoc(e[s]),a=s*r.length;n.values.set(i,a)}return n.toTensor()}function XB(r,t,e){let o=v(r,"x","transpose");if(t==null&&(t=o.shape.map((i,a)=>a).reverse()),N(o.rank===t.length,()=>`Error in transpose: rank of input ${o.rank} must match length of perm ${t}.`),t.forEach(i=>{N(i>=0&&i<o.rank,()=>`All entries in 'perm' must be between 0 and ${o.rank-1} but got ${t}`)}),o.rank<=1)return o.clone();let n={x:o},s={perm:t};return o.dtype==="complex64"?z(()=>{let i=el(o),a=Mc(o);return i=T.runKernel(sn,{x:i},s),a=T.runKernel(sn,{x:a},s),e&&(a=Mt(a)),to(i,a)}):T.runKernel(sn,n,s)}var Rt=k({transpose_:XB});function Ov(r,t){if(t==null)return r.shape.slice();if(Js(r.shape,t))return t;if(r.shape.length===t.length){let e=[];for(let o=0;o<r.shape.length;o++)t[o]==null&&r.shape[o]!=null?e.push(r.shape[o]):e.push(t[o]);return e}return t}function YB(r,t,e,o){let n=v(r,"x","dropout");if(N(n.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${n.dtype} tensor instead.`),N(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return r instanceof Vt?n.clone():n;let s=Ov(n,e),i=1-t,a=nt(Ds(j(zo(s,0,1,"float32",o),i)),i);return R(n,a)}var Lv=k({dropout_:YB});var al={};co(al,{conv2d:()=>Pv,depthwiseConv2d:()=>zv,matMul:()=>Bv});function ZB(r,t,e,o,n,s="NHWC",i){let a=r;r.rank===3&&(a=F(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=t;l.rank===3&&(l=F(t,[1,t.shape[0],t.shape[1],t.shape[2]])),N(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),N(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),N(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);let c=s==="NHWC"?a.shape[3]:a.shape[1],u=s==="NHWC"?l.shape[3]:l.shape[1];N(c===e[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${e[2]}.`),N(u===e[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${e[3]}).`),ee("conv2dDerFilter",n,i);let p={x:a,dy:l},m={strides:o,pad:n,dataFormat:s,dimRoundingMode:i,filterShape:e};return T.runKernel(ql,p,m)}var jc=k({conv2DBackpropFilter_:ZB});function ol(r,t,e){if(e==null||e==="linear")return r;if(e==="relu")return R(r,Mo(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function nl(r,t){let e=t,o=Zt(r.shape,t.shape);return o.length>0&&(e=lt(e,o)),F(e,r.shape)}function sl(r,t,e,o){if(t==="linear")return r;if(t==="relu")return Hr(r);if(t==="elu")return $s(r);if(t==="relu6")return td(r);if(t==="prelu")return Qa(r,e);if(t==="leakyrelu")return Xa(r,o);if(t==="sigmoid")return go(r);throw new Error(`Unknown fused activation ${t}.`)}var il=(r,t)=>!(r>0)||t==="linear";function JB({x:r,filter:t,strides:e,pad:o,dataFormat:n="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",il(T.state.gradientDepth,l)===!1){N(n==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${n} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let E=Gr(r,t,e,o,n,s,i);return a!=null&&(E=j(E,a)),sl(E,l,c,u)}let p=v(r,"x","conv2d","float32"),m=v(t,"filter","conv2d","float32"),f=p,h=!1;p.rank===3&&(h=!0,f=F(p,[1,p.shape[0],p.shape[1],p.shape[2]])),N(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),N(m.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${m.rank}.`),ee("fused conv2d",o,i);let d=n==="NHWC"?f.shape[3]:f.shape[1];N(m.shape[2]===d,()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${m.shape[2]}.`),N(Ye(e,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`);let g=Wa(f.shape,m.shape,e,s,o,i),x;a!=null&&(x=v(a,"bias","fused conv2d"),[x]=_t(x,p),n==="NHWC"?kt(g.outShape,x.shape):(N(x.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`),N(x.shape.length===0||x.shape[0]===g.outChannels||x.shape[0]===1,()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let b;if(c!=null){let E=c.shape;if(N(E.length<=1||E.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${E.length}.`),E.length===1)N(E[0]===1||E[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${E}) is not compatible with the number of output channels (${g.outChannels}).`);else if(E.length===3)try{kt(E,g.outShape)}catch{let $=`Error in fused conv2d: PReLU activation weights (${E}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error($)}b=v(c,"prelu weights","fused conv2d")}let C=(E,A)=>{N(n==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${n} but only NHWC is currently supported.`);let[$,_,L,M]=A,V=ol(E,L,l);N(ro(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let G=Pc(_.shape,V,$,e,o),W=jc(_,V,$.shape,e,o),U=[G,W];if(M!=null){let K=nl(M,V);U.push(K)}return U},w={x:f,filter:m,bias:x,preluActivationWeights:b},I={strides:e,pad:o,dataFormat:n,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:u};return a==null?no((A,$,_)=>{let L=T.runKernel(Fa,w,I);return _([$,A,L]),h&&(L=F(L,[L.shape[1],L.shape[2],L.shape[3]])),{value:L,gradFunc:C}})(f,m):no((A,$,_,L)=>{let M=T.runKernel(Fa,w,I);return L([$,A,M,_]),h&&(M=F(M,[M.shape[1],M.shape[2],M.shape[3]])),{value:M,gradFunc:C}})(f,m,x)}var Pv=k({fusedConv2d_:JB});function QB(r,t,e,o,n,s=[1,1],i){let a=r;r.rank===3&&(a=F(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=t;l.rank===3&&(l=F(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={x:a,dy:l},u={strides:o,pad:n,dimRoundingMode:i,dilations:s,filterShape:e};return T.runKernel(Ql,c,u)}var od=k({depthwiseConv2dNativeBackpropFilter_:QB});function tM(r,t,e,o,n,s=[1,1],i){let a=t,l=!1;t.rank===3&&(l=!0,a=F(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={dy:a,filter:e},u={strides:o,pad:n,dimRoundingMode:i,dilations:s,inputShape:r},p=T.runKernel(tc,c,u);return l?F(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var nd=k({depthwiseConv2dNativeBackpropInput_:tM});function eM({x:r,filter:t,strides:e,pad:o,dataFormat:n="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(il(T.state.gradientDepth,l)===!1){let I=As(r,t,e,o,n,s,i);return a!=null&&(I=j(I,a)),sl(I,l,c,u)}let p=v(r,"x","depthwiseConv2d","float32"),m=v(t,"filter","depthwiseConv2d","float32"),f=p,h=!1;p.rank===3&&(h=!0,f=F(p,[1,p.shape[0],p.shape[1],p.shape[2]])),N(f.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),N(m.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${m.rank}.`),N(f.shape[3]===m.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${m.shape[2]}.`),s==null&&(s=[1,1]),N(Ye(e,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),ee("fused depthwiseConv2d",o,i);let d=Wa(f.shape,m.shape,e,s,o,i,!0),g;a!=null&&(g=v(a,"bias","fused conv2d"),[g]=_t(g,p),kt(d.outShape,g.shape));let x;c!=null&&(x=v(c,"prelu weights","fused depthwiseConv2d"));let b=(I,E)=>{N(ro(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[A,$,_,L]=E,M=ol(I,_,l),V=nd($.shape,M,A,e,o,s,i),G=od($,M,A.shape,e,o,s,i);if(L!=null){let W=nl(g,M);return[V,G,W]}return[V,G]},C={x:f,filter:m,bias:g,preluActivationWeights:x},w={strides:e,pad:o,dataFormat:n,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:u};return a==null?no((E,A,$)=>{let _=T.runKernel(_a,C,w);return $([A,E,_]),h&&(_=F(_,[_.shape[1],_.shape[2],_.shape[3]])),{value:_,gradFunc:b}})(f,m):no((E,A,$,_)=>{let L=T.runKernel(_a,C,w);return _([A,E,L,$]),h&&(L=F(L,[L.shape[1],L.shape[2],L.shape[3]])),{value:L,gradFunc:b}})(f,m,g)}var zv=k({fusedDepthwiseConv2d_:eM});function rM({a:r,b:t,transposeA:e=!1,transposeB:o=!1,bias:n,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:a=.2}){if(il(T.state.gradientDepth,s)===!1){let M=Wt(r,t,e,o);return n!=null&&(M=j(M,n)),sl(M,s,i,a)}let l=v(r,"a","fused matMul"),c=v(t,"b","fused matMul");[l,c]=_t(l,c);let u=e?l.shape[l.rank-2]:l.shape[l.rank-1],p=o?c.shape[c.rank-1]:c.shape[c.rank-2],m=e?l.shape[l.rank-1]:l.shape[l.rank-2],f=o?c.shape[c.rank-2]:c.shape[c.rank-1],h=l.shape.slice(0,-2),d=c.shape.slice(0,-2),g=Ut(h),x=Ut(d);N(u===p,()=>`Error in fused matMul: inner shapes (${u}) and (${p}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${e} and transposeB=${o} must match.`);let C=kt(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([m,f]),w=e?F(l,[g,u,m]):F(l,[g,m,u]),I=o?F(c,[x,f,p]):F(c,[x,p,f]),E;n!=null&&(E=v(n,"bias","fused matMul"),[E]=_t(E,l),kt(C,E.shape));let A;i!=null&&(A=v(i,"prelu weights","fused matMul"));let $=(M,V)=>{let[G,W,U,K]=V,Z=ol(F(M,U.shape),U,s),q,J;if(!e&&!o?(q=Wt(Z,W,!1,!0),J=Wt(G,Z,!0,!1)):!e&&o?(q=Wt(Z,W,!1,!1),J=Wt(Z,G,!0,!1)):e&&!o?(q=Wt(W,Z,!1,!0),J=Wt(G,Z,!1,!1)):(q=Wt(W,Z,!0,!0),J=Wt(Z,G,!0,!0)),n!=null){let rt=nl(K,Z);return[q,J,rt]}else return[q,J]},_={a:w,b:I,bias:E,preluActivationWeights:A},L={transposeA:e,transposeB:o,activation:s,leakyreluAlpha:a};return n==null?no((V,G,W)=>{let U=T.runKernel(Ra,_,L);return W([V,G,U]),{value:F(U,C),gradFunc:$}})(w,I):no((V,G,W,U)=>{let K=T.runKernel(Ra,_,L);return U([V,G,K,W]),{value:F(K,C),gradFunc:$}})(w,I,E)}var Bv=k({fusedMatMul_:rM});function oM(r,t,e,o,n="bilinear",s=0){let i=v(r,"image","cropAndResize"),a=v(t,"boxes","cropAndResize","float32"),l=v(e,"boxInd","cropAndResize","int32"),c=a.shape[0];N(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),N(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${a.shape}.`),N(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${a.shape}.`),N(o.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${o.length}.`),N(o[0]>=1&&o[1]>=1,()=>`cropSize must be atleast [1,1], but was ${o}`),N(n==="bilinear"||n==="nearest",()=>`method must be bilinear or nearest, but was ${n}`);let u={image:i,boxes:a,boxInd:l},p={method:n,extrapolationValue:s,cropSize:o};return T.runKernel(Yl,u,p)}var Mv=k({cropAndResize_:oM});function nM(r){let t=v(r,"image","flipLeftRight","float32");N(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let e={image:t};return T.runKernel(sc,e,{})}var Vv=k({flipLeftRight_:nM});function sM(r){let t=v(r,"image","grayscaleToRGB"),e=t.rank-1,o=t.shape[e];N(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),N(o===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${o}.`);let n=new Array(t.rank);return n.fill(1,0,e),n[e]=3,sr(t,n)}var Gv=k({grayscaleToRGB_:sM});function iM(r){let t=v(r,"image","RGBToGrayscale"),e=t.rank-1,o=t.shape[e];N(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),N(o===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${o}.`);let n=t.dtype,s=Y(t,"float32"),i=Ee([.2989,.587,.114]),a;switch(t.rank){case 2:a=zc("ij,j->i",s,i);break;case 3:a=zc("ijk,k->ij",s,i);break;case 4:a=zc("ijkl,l->ijk",s,i);break;case 5:a=zc("ijklm,m->ijkl",s,i);break;case 6:a=zc("ijklmn,n->ijklm",s,i);break;default:throw new Error("Not a valid tensor rank.")}return a=ke(a,-1),Y(a,n)}var Uv=k({rgbToGrayscale_:iM});function aM(r,t,e=0,o=.5){let n=v(r,"image","rotateWithOffset","float32");N(n.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${n.rank}.`);let s={image:n},i={radians:t,fillValue:e,center:o};return T.runKernel(Sc,s,i)}var Wv=k({rotateWithOffset_:aM});function yo(r,t,e,o,n,s){o==null&&(o=.5),n==null&&(n=Number.NEGATIVE_INFINITY),s==null&&(s=0);let i=r.shape[0];return e=Math.min(e,i),N(0<=o&&o<=1,()=>`iouThreshold must be in [0, 1], but was '${o}'`),N(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),N(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),N(t.rank===1,()=>"scores must be a 1D tensor"),N(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),N(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:e,iouThreshold:o,scoreThreshold:n,softNmsSigma:s}}function lM(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY){let s=v(r,"boxes","nonMaxSuppression","float32"),i=v(t,"scores","nonMaxSuppression","float32"),a=yo(s,i,e,o,n);e=a.maxOutputSize,o=a.iouThreshold,n=a.scoreThreshold;let l={maxOutputSize:e,iouThreshold:o,scoreThreshold:n};return T.runKernel(pc,{boxes:s,scores:i},l)}var Hv=k({nonMaxSuppression_:lM});function qv(r,t,e){let o=cM(r,t,e),n=o<0?-(o+1):o;r.splice(n,0,t)}function cM(r,t,e){return pM(r,t,e||uM)}function uM(r,t){return r>t?1:r<t?-1:0}function pM(r,t,e){let o=0,n=r.length,s=0,i=!1;for(;o<n;){s=o+(n-o>>>1);let a=e(t,r[s]);a>0?o=s+1:(n=s,i=!a)}return i?o:-o-1}function sd(r,t,e,o,n){return A0(r,t,e,o,n,0)}function id(r,t,e,o,n,s){return A0(r,t,e,o,n,0,!1,s,!0)}function ad(r,t,e,o,n,s){return A0(r,t,e,o,n,s,!0)}function A0(r,t,e,o,n,s,i=!1,a=!1,l=!1){let c=[];for(let g=0;g<t.length;g++)t[g]>n&&c.push({score:t[g],boxIndex:g,suppressBeginIndex:0});c.sort(Kv);let u=s>0?-.5/s:0,p=[],m=[];for(;p.length<e&&c.length>0;){let g=c.pop(),{score:x,boxIndex:b,suppressBeginIndex:C}=g;if(x<n)break;let w=!1;for(let I=p.length-1;I>=C;--I){let E=mM(r,b,p[I]);if(E>=o){w=!0;break}if(g.score=g.score*fM(o,u,E),g.score<=n)break}g.suppressBeginIndex=p.length,w||(g.score===x?(p.push(b),m.push(g.score)):g.score>n&&qv(c,g,Kv))}let f=p.length,h=e-f;a&&h>0&&(p.push(...new Array(h).fill(0)),m.push(...new Array(h).fill(0)));let d={selectedIndices:p};return i&&(d.selectedScores=m),l&&(d.validOutputs=f),d}function mM(r,t,e){let o=r.subarray(t*4,t*4+4),n=r.subarray(e*4,e*4+4),s=Math.min(o[0],o[2]),i=Math.min(o[1],o[3]),a=Math.max(o[0],o[2]),l=Math.max(o[1],o[3]),c=Math.min(n[0],n[2]),u=Math.min(n[1],n[3]),p=Math.max(n[0],n[2]),m=Math.max(n[1],n[3]),f=(a-s)*(l-i),h=(p-c)*(m-u);if(f<=0||h<=0)return 0;let d=Math.max(s,c),g=Math.max(i,u),x=Math.min(a,p),b=Math.min(l,m),C=Math.max(x-d,0)*Math.max(b-g,0);return C/(f+h-C)}function fM(r,t,e){let o=Math.exp(t*e*e);return e<=r?o:0}function Kv(r,t){return r.score-t.score||r.score===t.score&&t.boxIndex-r.boxIndex}function hM(s,i,a){return B(this,arguments,function*(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY){let l=v(r,"boxes","nonMaxSuppressionAsync"),c=v(t,"scores","nonMaxSuppressionAsync"),u=yo(l,c,e,o,n);e=u.maxOutputSize,o=u.iouThreshold,n=u.scoreThreshold;let p=yield Promise.all([l.data(),c.data()]),m=p[0],f=p[1],{selectedIndices:h}=sd(m,f,e,o,n);return l!==r&&l.dispose(),c!==t&&c.dispose(),Ee(h,"int32")})}var jv=hM;function dM(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,s=0){let i=v(r,"boxes","nonMaxSuppression"),a=v(t,"scores","nonMaxSuppression"),l=yo(i,a,e,o,n,s);e=l.maxOutputSize,o=l.iouThreshold,n=l.scoreThreshold,s=l.softNmsSigma;let c={boxes:i,scores:a},u={maxOutputSize:e,iouThreshold:o,scoreThreshold:n,softNmsSigma:s},p=T.runKernel(fc,c,u);return{selectedIndices:p[0],selectedScores:p[1]}}var Xv=k({nonMaxSuppressionWithScore_:dM});function gM(i,a,l){return B(this,arguments,function*(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,s=0){let c=v(r,"boxes","nonMaxSuppressionAsync"),u=v(t,"scores","nonMaxSuppressionAsync"),p=yo(c,u,e,o,n,s);e=p.maxOutputSize,o=p.iouThreshold,n=p.scoreThreshold,s=p.softNmsSigma;let m=yield Promise.all([c.data(),u.data()]),f=m[0],h=m[1],{selectedIndices:d,selectedScores:g}=ad(f,h,e,o,n,s);return c!==r&&c.dispose(),u!==t&&u.dispose(),{selectedIndices:Ee(d,"int32"),selectedScores:Ee(g)}})}var Yv=gM;function xM(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,s=!1){let i=v(r,"boxes","nonMaxSuppression"),a=v(t,"scores","nonMaxSuppression"),l=yo(i,a,e,o,n,null),c=l.maxOutputSize,u=l.iouThreshold,p=l.scoreThreshold,m={boxes:i,scores:a},f={maxOutputSize:c,iouThreshold:u,scoreThreshold:p,padToMaxOutputSize:s},h=T.runKernel(mc,m,f);return{selectedIndices:h[0],validOutputs:h[1]}}var Zv=k({nonMaxSuppressionPadded_:xM});function yM(i,a,l){return B(this,arguments,function*(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,s=!1){let c=v(r,"boxes","nonMaxSuppressionAsync"),u=v(t,"scores","nonMaxSuppressionAsync"),p=yo(c,u,e,o,n,null),m=p.maxOutputSize,f=p.iouThreshold,h=p.scoreThreshold,[d,g]=yield Promise.all([c.data(),u.data()]),{selectedIndices:x,validOutputs:b}=id(d,g,m,f,h,s);return c!==r&&c.dispose(),u!==t&&u.dispose(),{selectedIndices:Ee(x,"int32"),validOutputs:bt(b,"int32")}})}var Jv=yM;function bM(r,t,e=!1,o=!1){let n=v(r,"images","resizeBilinear");N(n.rank===3||n.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${n.rank}.`),N(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),N(o===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=n,i=!1;n.rank===3&&(i=!0,s=F(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let[]=t,a={images:s},l={alignCorners:e,halfPixelCenters:o,size:t},c=T.runKernel(Oi,a,l);return i?F(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var ld=k({resizeBilinear_:bM});function wM(r,t,e=!1,o=!1){let n=v(r,"images","resizeNearestNeighbor");N(n.rank===3||n.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${n.rank}.`),N(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),N(n.dtype==="float32"||n.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),N(o===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=n,i=!1;n.rank===3&&(i=!0,s=F(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let[]=t,a={images:s},l={alignCorners:e,halfPixelCenters:o,size:t},c=T.runKernel(_i,a,l);return i?F(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var cd=k({resizeNearestNeighbor_:wM});function CM(r,t="binary",e=!1,o=.5){let n=v(r,"image","threshold"),s=.2989,i=.587,a=.114,l=n.shape[0]*n.shape[1],c=R(Ee([o]),255),u,p,m,f;if(N(n.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${n.rank}.`),N(n.shape[2]===3||n.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${n.shape[2]}.`),N(n.dtype==="int32"||n.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${n.dtype}.`),N(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),n.shape[2]===3){[u,p,m]=Pe(n,[1,1,1],-1);let g=R(u,s),x=R(p,i),b=R(m,a);f=j(j(g,x),b)}else f=r;if(t==="otsu"){let g=QS(Y(Op(f),"int32"),Mr([]),256);c=IM(g,l)}let h=e?xo(f,c):we(f,c);return Y(R(h,255),"int32")}function IM(r,t){let e=Ee([-1]),o=Ee([0]),n=Ee([0]),s,i,a,l,c,u;for(let p=0;p<r.size-1;p++){s=Pt(r,0,p+1),i=Pt(r,p+1),c=nt(lt(s),t),u=nt(lt(i),t);let m=lt(R(s,Rs(0,s.size)));a=nt(m,lt(s));let f=Es(i.shape,s.size),h=j(Rs(0,i.size),f),d=R(i,h);l=nt(lt(d),lt(i));let g=ut(a,l),x=ut(a,l),b=R(c,u);n=R(R(b,g),x);let C=we(n,o);o=se(C,n,o),e=se(C,Ee([p]),e)}return e}var Qv=k({threshold_:CM});function SM(r,t,e="nearest",o="constant",n=0,s){let i=v(r,"image","transform","float32"),a=v(t,"transforms","transform","float32");N(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),N(a.rank===2&&(a.shape[0]===i.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),N(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let l={image:i,transforms:a},c={interpolation:e,fillMode:o,fillValue:n,outputShape:s};return T.runKernel(Cc,l,c)}var tN=k({transform_:SM});function vM(r,t,e){let o=v(r,"a","bandPart");N(o.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${o.rank}.`);let n=o.shape,[s,i]=o.shape.slice(-2),a,l;typeof t=="number"?(N(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),N(t<=s,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`),a=v(t<0?s:t,"numLower","bandPart")):(N(t.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),a=se(Ya(t,0),s,hn(t,s))),typeof e=="number"?(N(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`),N(e<=i,()=>`bandPart(): numUpper (${e}) must not be greater than the number of columns (${i}).`),l=v(e<0?i:e,"numUpper","bandPart")):(N(e.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=se(Ya(e,0),i,hn(e,i)));let c=F(Rs(0,s,1,"int32"),[-1,1]),u=Rs(0,i,1,"int32"),p=ut(c,u),m=fr(xo(p,a),Dr(p,Mt(l))),f=ie([s,i],o.dtype);return F(Re(hr(F(o,[-1,s,i])).map(h=>se(m,h,f))),n)}var eN=k({bandPart_:vM});function NM(r){let t;if(Array.isArray(r)){t=!1,N(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let n=r[0].shape[0];for(let s=1;s<r.length;++s)N(r[s].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[s].shape[0]} vs. ${n})`)}else t=!0,r=Pe(r,r.shape[0],0).map(n=>Bo(n,[0]));N(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let e=[],o=r;for(let n=0;n<r.length;++n)e.push(T.tidy(()=>{let s=o[n];if(n>0)for(let i=0;i<n;++i){let a=R(lt(R(e[i],s)),e[i]);s=ut(s,a)}return nt(s,ta(s,"euclidean"))}));return t?Re(e,0):e}var rN=k({gramSchmidt_:NM});function TM(r,t=!1){if(N(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return oN(r,t);{let e=r.shape.slice(0,r.shape.length-2).reduce((l,c)=>l*c),o=hr(F(r,[e,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),n=[],s=[];o.forEach(l=>{let[c,u]=oN(l,t);n.push(c),s.push(u)});let i=F(Re(n,0),r.shape),a=F(Re(s,0),r.shape);return[i,a]}}function oN(r,t=!1){return T.tidy(()=>{N(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let e=r.shape[0],o=r.shape[1],n=Bc(e),s=Vr(r),i=ra([[1]],[1,1]),a=Vr(i),l=e>=o?o:e;for(let c=0;c<l;++c){let u=s,p=a,m=n;[a,s,n]=T.tidy(()=>{let f=Pt(s,[c,c],[e-c,1]),h=ta(f),d=Pt(s,[c,c],[1,1]),g=se(we(d,0),ra([[-1]]),ra([[1]])),x=ut(d,R(g,h)),b=nt(f,x);b.shape[0]===1?a=Vr(i):a=ne([i,Pt(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);let C=Mt(nt(Wt(g,x),h)),w=Pt(s,[c,0],[e-c,o]),I=R(C,a),E=Rt(a);if(c===0)s=ut(w,Wt(I,Wt(E,w)));else{let _=ut(w,Wt(I,Wt(E,w)));s=ne([Pt(s,[0,0],[c,o]),_],0)}let A=Rt(I),$=Pt(n,[0,c],[e,n.shape[1]-c]);if(c===0)n=ut($,Wt(Wt($,a),A));else{let _=ut($,Wt(Wt($,a),A));n=ne([Pt(n,[0,0],[e,c]),_],1)}return[a,s,n]}),vt([u,p,m])}return!t&&e>o&&(n=Pt(n,[0,0],[e,o]),s=Pt(s,[0,0],[o,o])),[n,s]})}var nN=k({qr_:TM});var qr={flipLeftRight:Vv,grayscaleToRGB:Gv,resizeNearestNeighbor:cd,resizeBilinear:ld,rgbToGrayscale:Uv,rotateWithOffset:Wv,cropAndResize:Mv,nonMaxSuppression:Hv,nonMaxSuppressionAsync:jv,nonMaxSuppressionWithScore:Xv,nonMaxSuppressionWithScoreAsync:Yv,nonMaxSuppressionPadded:Zv,nonMaxSuppressionPaddedAsync:Jv,threshold:Qv,transform:tN},sN={bandPart:eN,gramSchmidt:rN,qr:nN};var H={};co(H,{Serializable:()=>Hp,SerializationMap:()=>ud,getRegisteredName:()=>EM,registerClass:()=>D0});var kM=new Map,$0=new Map,Hp=class{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}},ud=class r{constructor(){this.classNameMap={}}static getMap(){return r.instance==null&&(r.instance=new r),r.instance}static register(t){r.getMap().classNameMap[t.className]=[t,t.fromConfig]}};function D0(r,t,e){N(r.className!=null,()=>"Class being registered does not have the static className property defined."),N(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),N(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof t>"u"&&(t="Custom"),typeof e>"u"&&(e=r.className);let o=e,n=t+">"+o;return ud.register(r),kM.set(n,r),$0.set(r,n),r}function EM(r){return $0.has(r)?$0.get(r):r.className}var ir=class extends Hp{minimize(t,e=!1,o){let{value:n,grads:s}=this.computeGradients(t,o);if(o!=null){let i=o.map(a=>({name:a.name,tensor:s[a.name]}));this.applyGradients(i)}else this.applyGradients(s);return vt(s),e?n:(n.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return m0(t,e)}dispose(){this.iterations_!=null&&vt(this.iterations_)}saveIterations(){return B(this,null,function*(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:bt(this.iterations_,"int32")}})}getWeights(){return B(this,null,function*(){throw new Error("getWeights() is not implemented for this optimizer yet.")})}setWeights(t){return B(this,null,function*(){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)})}extractIterations(t){return B(this,null,function*(){return this.iterations_=(yield t[0].tensor.data())[0],t.slice(1)})}};Object.defineProperty(ir,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var Xc=class extends ir{static get className(){return"Adadelta"}constructor(t,e,o=null){super(),this.learningRate=t,this.rho=e,this.epsilon=o,this.accumulatedGrads=[],this.accumulatedUpdates=[],o==null&&(this.epsilon=T.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let s=T.registeredVariables[o],i=!1;this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${o}/accum_grad`,variable:z(()=>gt(s).variable(i))}),this.accumulatedUpdates[n]==null&&(this.accumulatedUpdates[n]={originalName:`${o}/accum_var`,variable:z(()=>gt(s).variable(i))});let a=Array.isArray(t)?t[n].tensor:t[o];if(a==null)return;let l=this.accumulatedGrads[n].variable,c=this.accumulatedUpdates[n].variable;z(()=>{let u=j(R(l,this.rho),R(Ft(a),1-this.rho)),p=R(nt(Jt(j(c,this.epsilon)),Jt(j(l,this.epsilon))),a),m=j(R(c,this.rho),R(Ft(p),1-this.rho));l.assign(u),c.assign(m);let f=j(R(p,-this.learningRate),s);s.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(vt(this.accumulatedGrads.map(t=>t.variable)),vt(this.accumulatedUpdates.map(t=>t.variable)))}getWeights(){return B(this,null,function*(){let t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[yield this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))})}setWeights(t){return B(this,null,function*(){t=yield this.extractIterations(t);let e=t.length/2,o=!1;this.accumulatedGrads=t.slice(0,e).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.accumulatedUpdates=t.slice(e,e*2).map(n=>({originalName:n.name,variable:n.tensor.variable(o)}))})}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}};var Yc=class extends ir{static get className(){return"Adagrad"}constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let s=T.registeredVariables[o];this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${o}/accumulator`,variable:z(()=>Es(s.shape,this.initialAccumulatorValue).variable(!1))});let i=Array.isArray(t)?t[n].tensor:t[o];if(i==null)return;let a=this.accumulatedGrads[n].variable;z(()=>{let l=j(a,Ft(i));a.assign(l);let c=j(R(nt(i,Jt(j(l,T.backend.epsilon()))),-this.learningRate),s);s.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&vt(this.accumulatedGrads.map(t=>t.variable))}getWeights(){return B(this,null,function*(){return[yield this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(t){return B(this,null,function*(){t=yield this.extractIterations(t);let e=!1;this.accumulatedGrads=t.map(o=>({originalName:o.name,variable:o.tensor.variable(e)}))})}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}};var Zc=class extends ir{static get className(){return"Adam"}constructor(t,e,o,n=null){super(),this.learningRate=t,this.beta1=e,this.beta2=o,this.epsilon=n,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],z(()=>{this.accBeta1=bt(e).variable(),this.accBeta2=bt(o).variable()}),n==null&&(this.epsilon=T.backend.epsilon())}applyGradients(t){let e=Array.isArray(t)?t.map(o=>o.name):Object.keys(t);z(()=>{let o=ut(1,this.accBeta1),n=ut(1,this.accBeta2);e.forEach((s,i)=>{let a=T.registeredVariables[s],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${s}/m`,variable:z(()=>gt(a).variable(l))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${s}/v`,variable:z(()=>gt(a).variable(l))});let c=Array.isArray(t)?t[i].tensor:t[s];if(c==null)return;let u=this.accumulatedFirstMoment[i].variable,p=this.accumulatedSecondMoment[i].variable,m=j(R(u,this.beta1),R(c,1-this.beta1)),f=j(R(p,this.beta2),R(Ft(c),1-this.beta2)),h=nt(m,o),d=nt(f,n);u.assign(m),p.assign(f);let g=j(R(nt(h,j(Jt(d),this.epsilon)),-this.learningRate),a);a.assign(g)}),this.accBeta1.assign(R(this.accBeta1,this.beta1)),this.accBeta2.assign(R(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&vt(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&vt(this.accumulatedSecondMoment.map(t=>t.variable))}getWeights(){return B(this,null,function*(){let t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[yield this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))})}setWeights(t){return B(this,null,function*(){t=yield this.extractIterations(t),z(()=>{this.accBeta1.assign($r(this.beta1,this.iterations_+1)),this.accBeta2.assign($r(this.beta2,this.iterations_+1))});let e=t.length/2,o=!1;this.accumulatedFirstMoment=t.slice(0,e).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(n=>({originalName:n.name,variable:n.tensor.variable(o)}))})}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}};var Jc=class extends ir{static get className(){return"Adamax"}constructor(t,e,o,n=null,s=0){super(),this.learningRate=t,this.beta1=e,this.beta2=o,this.epsilon=n,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],z(()=>{this.iteration=bt(0).variable(),this.accBeta1=bt(e).variable()}),n==null&&(this.epsilon=T.backend.epsilon())}applyGradients(t){let e=Array.isArray(t)?t.map(o=>o.name):Object.keys(t);z(()=>{let o=ut(1,this.accBeta1),n=nt(-this.learningRate,j(R(this.iteration,this.decay),1));e.forEach((s,i)=>{let a=T.registeredVariables[s],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${s}/m`,variable:gt(a).variable(l)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${s}/v`,variable:gt(a).variable(l)});let c=Array.isArray(t)?t[i].tensor:t[s];if(c==null)return;let u=this.accumulatedFirstMoment[i].variable,p=this.accumulatedWeightedInfNorm[i].variable,m=j(R(u,this.beta1),R(c,1-this.beta1)),f=R(p,this.beta2),h=De(c),d=Wr(f,h);u.assign(m),p.assign(d);let g=j(R(nt(n,o),nt(m,j(d,this.epsilon))),a);a.assign(g)}),this.iteration.assign(j(this.iteration,1)),this.accBeta1.assign(R(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&vt(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&vt(this.accumulatedWeightedInfNorm.map(t=>t.variable))}getWeights(){return B(this,null,function*(){throw new Error("getWeights() is not implemented for Adamax yet.")})}setWeights(t){return B(this,null,function*(){throw new Error("setWeights() is not implemented for Adamax yet.")})}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}};var oa=class extends ir{static get className(){return"SGD"}constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let s=Array.isArray(t)?t[n].tensor:t[o];if(s==null)return;let i=T.registeredVariables[o];z(()=>{let a=j(R(this.c,s),i);i.assign(a)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=Be(bt(-t))}dispose(){this.c.dispose()}getWeights(){return B(this,null,function*(){return[yield this.saveIterations()]})}setWeights(t){return B(this,null,function*(){if(t=yield this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")})}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}};var Qc=class extends oa{static get className(){return"Momentum"}constructor(t,e,o=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=o,this.accumulations=[],this.m=bt(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let s=T.registeredVariables[o];this.accumulations[n]==null&&(this.accumulations[n]={originalName:`${o}/momentum`,variable:z(()=>gt(s).variable(!1))});let i=this.accumulations[n].variable,a=Array.isArray(t)?t[n].tensor:t[o];a!=null&&z(()=>{let l,c=j(R(this.m,i),a);this.useNesterov?l=j(R(this.c,j(a,R(c,this.m))),s):l=j(R(this.c,c),s),i.assign(c),s.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&vt(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}getWeights(){return B(this,null,function*(){return[yield this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(t){return B(this,null,function*(){t=yield this.extractIterations(t);let e=!1;this.accumulations=t.map(o=>({originalName:o.name,variable:o.tensor.variable(e)}))})}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}};var tu=class extends ir{static get className(){return"RMSProp"}constructor(t,e=.9,o=0,n=null,s=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=o,this.epsilon=n,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,n==null&&(this.epsilon=T.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let s=T.registeredVariables[o],i=!1;this.accumulatedMeanSquares[n]==null&&(this.accumulatedMeanSquares[n]={originalName:`${o}/rms`,variable:z(()=>gt(s).variable(i))}),this.accumulatedMoments[n]==null&&(this.accumulatedMoments[n]={originalName:`${o}/momentum`,variable:z(()=>gt(s).variable(i))}),this.accumulatedMeanGrads[n]==null&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${o}/mg`,variable:z(()=>gt(s).variable(i))});let a=Array.isArray(t)?t[n].tensor:t[o];if(a==null)return;let l=this.accumulatedMeanSquares[n].variable,c=this.accumulatedMoments[n].variable;z(()=>{let u=j(R(l,this.decay),R(Ft(a),1-this.decay));if(this.centered){let p=this.accumulatedMeanGrads[n].variable,m=j(R(p,this.decay),R(a,1-this.decay)),f=nt(R(a,this.learningRate),Jt(ut(u,j(Ft(m),this.epsilon)))),h=j(R(c,this.momentum),f);l.assign(u),p.assign(m),c.assign(h);let d=ut(s,h);s.assign(d)}else{let p=j(R(l,this.decay),R(Ft(a),1-this.decay)),m=j(R(c,this.momentum),nt(R(a,this.learningRate),Jt(j(p,this.epsilon))));l.assign(p),c.assign(m);let f=ut(s,m);s.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&vt(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&vt(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&vt(this.accumulatedMoments.map(t=>t.variable))}getWeights(){return B(this,null,function*(){let t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[yield this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))})}setWeights(t){return B(this,null,function*(){t=yield this.extractIterations(t);let e=this.centered?t.length/3:t.length/2,o=!1;this.accumulatedMeanSquares=t.slice(0,e).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.accumulatedMoments=t.slice(e,e*2).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})))})}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}};var AM=[Xc,Yc,Zc,Jc,Qc,tu,oa];function iN(){for(let r of AM)D0(r)}var Fs={};co(Fs,{CompositeArrayBuffer:()=>nr,browserFiles:()=>lN,browserHTTPRequest:()=>mN,concatenateArrayBuffers:()=>ES,copyModel:()=>GS,decodeWeights:()=>Vh,decodeWeightsStream:()=>Eb,encodeWeights:()=>vS,fromMemory:()=>fN,fromMemorySync:()=>P0,getLoadHandlers:()=>RS,getModelArtifactsForJSON:()=>$c,getModelArtifactsForJSONSync:()=>Db,getModelArtifactsInfoForJSON:()=>ln,getSaveHandlers:()=>DS,getWeightSpecs:()=>Cp,http:()=>md,isHTTPScheme:()=>pd,listModels:()=>MS,loadWeights:()=>uN,moveModel:()=>US,registerLoadRouter:()=>$S,registerSaveRouter:()=>AS,removeModel:()=>VS,weightsLoaderFactory:()=>O0,withSaveHandler:()=>hN,withSaveHandlerSync:()=>dN});var $M="model",DM=".json",RM=".weights.bin";function aN(r){return new Promise(t=>setTimeout(t)).then(r)}var eu=class r{constructor(t){if(!P().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(r.URL_SCHEME)&&(t=t.slice(r.URL_SCHEME.length)),(t==null||t.length===0)&&(t=$M),this.modelJsonFileName=t+DM,this.weightDataFileName=t+RM}save(t){return B(this,null,function*(){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let e=nr.join(t.weightData),o=window.URL.createObjectURL(new Blob([e],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],s=Gh(t,n),i=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=i,yield aN(()=>a.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){let l=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;l.download=this.weightDataFileName,l.href=o,yield aN(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:ln(t)}}})}};eu.URL_SCHEME="downloads://";var R0=class{constructor(t){if(t==null||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}load(){return B(this,null,function*(){return new Promise((t,e)=>{let o=new FileReader;o.onload=n=>{let s=JSON.parse(n.target.result),i=s.modelTopology;if(i==null){e(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(s.weightsManifest==null){e(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){t({modelTopology:i});return}let l=$c(s,c=>this.loadWeights(c));t(l)},o.onerror=n=>e(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),o.readAsText(this.jsonFile)})})}loadWeights(t){let e=[],o=[];for(let i of t)e.push(...i.weights),o.push(...i.paths);let n=this.checkManifestAndWeightFiles(t),s=o.map(i=>this.loadWeightsFile(i,n[i]));return Promise.all(s).then(i=>[e,i])}loadWeightsFile(t,e){return new Promise((o,n)=>{let s=new FileReader;s.onload=i=>{let a=i.target.result;o(a)},s.onerror=i=>n(`Failed to weights data from file of path '${t}'.`),s.readAsArrayBuffer(e)})}checkManifestAndWeightFiles(t){let e=[],o=this.weightsFiles.map(s=>$b(s.name)),n={};for(let s of t)s.paths.forEach(i=>{let a=$b(i);if(e.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(e.push(a),o.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);n[i]=this.weightsFiles[o.indexOf(a)]});if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return n}},FM=r=>P().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(eu.URL_SCHEME)?_M(r.slice(eu.URL_SCHEME.length)):null;Me.registerSaveRouter(FM);function _M(r="model"){return new eu(r)}function lN(r){return new R0(r)}function F0(r,t,e,o){i(r),e=e??0,o=o??1,a(e,o);let n=0,s=l=>(l.then(c=>{let u=e+ ++n/r.length*(o-e);return t(u),c}),l);function i(l){N(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,c){N(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),N(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),N(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(r.map(s))}function _0(r,t){return B(this,null,function*(){t==null&&(t={});let e=t.fetchFunc==null?P().platform.fetch:t.fetchFunc,o=r.map(p=>e(p,t.requestInit,{isBinary:!0})),a=(t.onProgress==null?yield Promise.all(o):yield F0(o,t.onProgress,0,.5)).map(p=>p.arrayBuffer());return t.onProgress==null?yield Promise.all(a):yield F0(a,t.onProgress,.5,1)})}function cN(r,t){var e;let o=t.fetchFunc==null?P().platform.fetch:t.fetchFunc,n=0,s;return(e=t.onProgress)===null||e===void 0||e.call(t,0),new ReadableStream({pull:i=>B(this,null,function*(){for(var a;n<r.length;){s||(s=(yield o(r[n],t.requestInit,{isBinary:!0})).body.getReader());let{done:l,value:c}=yield s.read();if(l){n++,s=void 0,(a=t.onProgress)===null||a===void 0||a.call(t,n/r.length);continue}i.enqueue(c);return}i.close()})})}function uN(r,t="",e,o){return B(this,null,function*(){return O0(i=>_0(i,{requestInit:o}))(r,t,e)})}function O0(r){return(t,e="",o)=>B(this,null,function*(){let n=t.map(()=>!1),s={},i=o!=null?o.map(()=>!1):[],a=[];if(t.forEach((f,h)=>{let d=0;f.weights.forEach(g=>{let x="quantization"in g?g.quantization.dtype:g.dtype,b=Ns[x]*Ut(g.shape),C=()=>{n[h]=!0,s[h]==null&&(s[h]=[]),s[h].push({manifestEntry:g,groupOffset:d,sizeBytes:b})};o!=null?o.forEach((w,I)=>{w===g.name&&(C(),i[I]=!0)}):C(),a.push(g.name),d+=b})}),!i.every(f=>f)){let f=o.filter((h,d)=>!i[d]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}let l=n.reduce((f,h,d)=>(h&&f.push(d),f),[]),c=[];l.forEach(f=>{t[f].paths.forEach(h=>{let d=e+(e.endsWith("/")?"":"/")+h;c.push(d)})});let u=yield r(c),p={},m=0;return l.forEach(f=>{let h=t[f].paths.length,d=new nr(u.slice(m,m+h));s[f].forEach(x=>{let b=d.slice(x.groupOffset,x.groupOffset+x.sizeBytes),C=Vh(b,[x.manifestEntry]);for(let w in C)p[w]=C[w]}),m+=h}),p})}var OM="application/octet-stream",LM="application/json",qp=class{constructor(t,e){if(this.DEFAULT_METHOD="POST",e==null&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.weightUrlConverter=e.weightUrlConverter,e.fetchFunc!=null?(N(typeof e.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=P().platform.fetch,N(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&N(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,e.requestInit!=null&&e.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{},this.loadOptions=e}save(t){return B(this,null,function*(){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;let o=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],n=Gh(t,o);if(e.body.append("model.json",new Blob([JSON.stringify(n)],{type:LM}),"model.json"),t.weightData!=null){let i=nr.join(t.weightData);e.body.append("model.weights.bin",new Blob([i],{type:OM}),"model.weights.bin")}let s=yield this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:ln(t),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)})}loadModelJSON(){return B(this,null,function*(){let t=yield this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=yield t.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}let o=e.modelTopology,n=e.weightsManifest;if(o==null&&n==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return e})}load(){return B(this,null,function*(){if(this.loadOptions.streamWeights)return this.loadStream();let t=yield this.loadModelJSON();return $c(t,e=>this.loadWeights(e))})}loadStream(){return B(this,null,function*(){let t=yield this.loadModelJSON(),e=yield this.getWeightUrls(t.weightsManifest),o=Cp(t.weightsManifest),n=()=>cN(e,this.loadOptions);return Object.assign(Object.assign({},t),{weightSpecs:o,getWeightStream:n})})}getWeightUrls(t){return B(this,null,function*(){let e=Array.isArray(this.path)?this.path[1]:this.path,[o,n]=PM(e),s=this.weightPathPrefix||o,i=[],a=[];for(let l of t)for(let c of l.paths)this.weightUrlConverter!=null?a.push(this.weightUrlConverter(c)):i.push(s+c+n);return this.weightUrlConverter&&i.push(...yield Promise.all(a)),i})}loadWeights(t){return B(this,null,function*(){let e=yield this.getWeightUrls(t),o=Cp(t),n=yield _0(e,this.loadOptions);return[o,n]})}};qp.URL_SCHEME_REGEX=/^https?:\/\//;function PM(r){let t=r.lastIndexOf("/"),e=r.lastIndexOf("?"),o=r.substring(0,t),n=e>t?r.substring(e):"";return[o+"/",n]}function pd(r){return r.match(qp.URL_SCHEME_REGEX)!=null}var pN=(r,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(r)?e=r.every(o=>pd(o)):e=pd(r),e)return md(r,t)}return null};Me.registerSaveRouter(pN);Me.registerLoadRouter(pN);function md(r,t){return new qp(r,t)}function mN(r,t){return md(r,t)}var Kp=class{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}},fd=class{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}},L0=class{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}};function fN(r,t,e,o){let n=arguments;return new L0(P0(...n))}function P0(r,t,e,o){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new Kp(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Kp({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Kp({modelTopology:r,weightSpecs:t,weightData:e,trainingConfig:o}))}function hN(r){return new fd(r)}function dN(r){return new fd(r)}function zM(r,t){let e=r.shape.length,o=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(o<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${o}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[o-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[o-1]} vs. ${e}`);if(Ut(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let n=t.shape,s=n[n.length-1],i=1;for(let p=0;p<n.length-1;++p)i*=n[p];let a=r.shape,l=n.slice();l.pop();let c=1;for(let p=s;p<e;++p)c*=a[p],l.push(a[p]);let u=[...en(r.shape).map(p=>p/c),1].slice(0,s);return[l,i,c,u]}var Ue={};co(Ue,{assertParamsValid:()=>MM,computeFlatOffset:()=>HM,computeOutShape:()=>GM,getNormalizedAxes:()=>UM,isSliceContinous:()=>WM,maskToAxes:()=>VM,parseSliceParams:()=>B0,sliceInfo:()=>qM,startForAxis:()=>SN,startIndicesWithElidedDims:()=>wN,stopForAxis:()=>vN,stopIndicesWithElidedDims:()=>CN,stridesForAxis:()=>IN,stridesWithElidedDims:()=>xN});var z0=-2,BM=-1;function MM(r,t,e){let o=r.shape.length;N(o===t.length,()=>`Error in slice${o}D: Length of begin ${t} must match the rank of the array (${o}).`),N(o===e.length,()=>`Error in slice${o}D: Length of size ${e} must match the rank of the array (${o}).`);for(let n=0;n<o;++n)N(t[n]+e[n]<=r.shape[n],()=>`Error in slice${o}D: begin[${n}] + size[${n}] (${t[n]+e[n]}) would overflow input.shape[${n}] (${r.shape[n]})`)}function VM(r){let t=[],e=0;for(;r>0;)r&1&&t.push(e),r/=2,e++;return t}function GM(r,t,e){let o=[];for(let n=0;n<r.length;n++)o[n]=Math.ceil((t[n]-r[n])/e[n]);return o}function xN(r,t,e,o){let n=[...r];for(let s=n.length;s<o.length;s++)n.push(1);for(let s=0;s<e;s++)s===0?n[t]=1:(n.splice(t,0,1),n.pop());return n}function yN(r,t,e){return e<=r?e:e-(t-1)}function bN(r,t){let e=[];for(let o=0;o<r;o++)e.push(t+o);return e}function UM(r,t,e,o,n,s,i,a,l){let c=r.length,u=new Array(c),p=new Array(c),m=new Array(c);if(t.length&&e>0){let f=t[0],h=e+1;u=wN(i,f,h,o,r),p=CN(a,f,h,n,r),m=xN(s,f,h,r)}else for(let f=0;f<c;f++)u[f]=SN(i,o,s,r,f,l),p[f]=vN(a,n,s,r,f,l),m[f]=IN(s,f,l);return{begin:u,end:p,strides:m}}function wN(r,t,e,o,n){let s=[...n],i=bN(e,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{let l=yN(t,e,a),c=o[l];r&1<<l&&(c=0),s[a]=c}return s}function CN(r,t,e,o,n){let s=[...n],i=bN(e,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{let l=yN(t,e,a),c=o[l];r&1<<l&&(c=Number.MAX_SAFE_INTEGER),s[a]=c}for(let a=0;a<s.length;a++){let l=n[a];s[a]<0&&(s[a]+=l),s[a]=Fl(0,s[a],n[a])}return s}function IN(r,t,e){let o=r[t];return(e&1<<t||o==null)&&(o=1),o}function SN(r,t,e,o,n,s){let i=t[n],a=e[n]||1;(r&1<<n||s&1<<n||i==null)&&(a>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let l=o[n];return i<0&&(i+=l),i=Fl(0,i,l-1),i}function vN(r,t,e,o,n,s){let i=t[n],a=e[n]||1;(r&1<<n||s&1<<n||i==null)&&(a>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let l=o[n];return i<0&&(i+=l),a>0?i=Fl(0,i,l):i=Fl(-1,i,l-1),i}function WM(r,t,e){let o=e.length;for(let n=0;n<e.length;n++)if(e[n]>1){o=n;break}for(let n=o+1;n<e.length;n++)if(t[n]>0||e[n]!==r[n])return!1;return!0}function HM(r,t){let e=r.length>0?r[r.length-1]:1;for(let o=0;o<r.length-1;o++)e+=r[o]*t[o];return e}function B0(r,t,e){let o,n=r.shape.length;typeof t=="number"?o=[t,...new Array(n-1).fill(0)]:t.length<n?o=t.concat(new Array(n-t.length).fill(0)):o=t.slice(),o.forEach(i=>{N(i!==-1,()=>"slice() does not support negative begin indexing.")});let s;return e==null?s=new Array(n).fill(-1):typeof e=="number"?s=[e,...new Array(n-1).fill(-1)]:e.length<n?s=e.concat(new Array(n-e.length).fill(-1)):s=e,s=s.map((i,a)=>i>=0?i:(N(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${a}.`),r.shape[a]-o[a])),[o,s]}function qM(r,t,e,o,n,s,i,a,l){let c;if(o==null?(c=new Array(t.length),c.fill(1)):c=o,i!=null&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1,p={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:c.slice(),beginMask:n,endMask:s,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};for(let C=0;C<p.dims;C++)u&&1<<C&a&&p.numAddAxisAfterEllipsis++,1<<C&i&&(u=!0);u||(p.ellipsisMask|=1<<p.dims,p.dims++);let m={dims:r.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};KM(p,m);let f=!0,h=!0,d=!0,g=[],x=[];for(let C=0;C<r.length;++C){if(m.strides[C]===0)throw Error(`strides[${C}] must be non-zero`);let w=!!(m.shrinkAxisMask&1<<C),I=r[C];if(I===-1){g.push(w?1:-1);continue}let E=[m.beginMask&1<<C,m.endMask&1<<C],A=[m.strides[C]>0?0:-1,m.strides[C]>0?I:I-1];if(w&&m.strides[C]<=0)throw Error("only stride 1 allowed on non-range indexing.");d=d&&m.strides[C]===1;let $=!!(m.beginMask&1<<C&&m.endMask&1<<C);if(m.beginValid&&m.endValid){if(w){let V=m.begin[C]<0?I+m.begin[C]:m.begin[C];if(m.begin[C]=V,m.end[C]=m.begin[C]+1,V<0||V>=I)throw Error(`slice index ${m.begin[C]} of dimension ${C} out of bounds.`)}else m.begin[C]=gN(m.begin[C],0,m.strides[C],I,E,A),m.end[C]=gN(m.end[C],1,m.strides[C],I,E,A);let M=m.strides[C]===1&&m.begin[C]===0&&m.end[C]===I;f=f&&M,h=h&&(C===0&&m.strides[C]===1||M)}else f=f&&m.strides[C]===1&&$,h=h&&(C===0&&m.strides[C]===1||$);let _,L=!1;if(m.beginValid&&m.endValid?(_=m.end[C]-m.begin[C],L=!0):w?(_=1,L=!0):$&&I>=0&&(m.strides[C]<0?_=-I:_=I,L=!0),L){let M;_===0||_<0!=m.strides[C]<0?M=0:M=Math.trunc(_/m.strides[C])+(_%m.strides[C]!==0?1:0),g.push(M)}else g.push(-1)}for(let C=0;C<m.finalShapeGatherIndices.length;++C){let w=m.finalShapeGatherIndices[C];w>=0?x.push(g[w]):w===z0&&x.push(1)}return{finalShapeSparse:x.filter((C,w)=>m.finalShapeGatherIndices[w]!==z0),finalShape:x,isIdentity:f,sliceDim0:h,isSimpleSlice:d,begin:m.begin,end:m.end,strides:m.strides}}function KM(r,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=r.begin!=null,t.endValid=r.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let o=0;o<r.dims;o++)if(1<<o&r.ellipsisMask){let n=Math.min(t.dims-(r.dims-o)+1+r.numAddAxisAfterEllipsis,t.dims);for(;e<n;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=o}else if(1<<o&r.newAxisMask)t.finalShapeGatherIndices.push(z0),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);r.begin!=null&&(t.begin[e]=r.begin[o]),r.end!=null&&(t.end[e]=r.end[o]),t.strides[e]=r.strides[o],r.beginMask&1<<o&&(t.beginMask|=1<<e),r.endMask&1<<o&&(t.endMask|=1<<e),r.shrinkAxisMask&1<<o?(t.finalShapeGatherIndices.push(BM),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(o)),t.inputShapeGatherIndicesSparse[e]=o,e++}}function gN(r,t,e,o,n,s){if(n[t])return e>0?s[t]:s[t+1&1];{let i=r<0?o+r:r;return i<s[0]?s[0]:i>s[1]?s[1]:i}}var hd=class{static sgd(t){return new oa(t)}static momentum(t,e,o=!1){return new Qc(t,e,o)}static rmsprop(t,e=.9,o=0,n=null,s=!1){return new tu(t,e,o,n,s)}static adam(t=.001,e=.9,o=.999,n=null){return new Zc(t,e,o,n)}static adadelta(t=.001,e=.95,o=null){return new Xc(t,e,o)}static adamax(t=.002,e=.9,o=.999,n=null,s=0){return new Jc(t,e,o,n,s)}static adagrad(t,e=.1){return new Yc(t,e)}};var ll=hd;var jM=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:r=>r();function jp(){return new Promise(r=>jM(()=>r()))}var S={};co(S,{ERF_A1:()=>cV,ERF_A2:()=>uV,ERF_A3:()=>pV,ERF_A4:()=>mV,ERF_A5:()=>fV,ERF_P:()=>lV,PARALLELIZE_THRESHOLD:()=>dd,RowPartitionType:()=>dn,SELU_SCALE:()=>V0,SELU_SCALEALPHA:()=>M0,applyActivation:()=>sl,assertAndGetBroadcastShape:()=>kt,assertAxesAreInnerMostDims:()=>o3,assertParamsConsistent:()=>XM,assignToTypedArray:()=>bV,axesAreInnerMostDims:()=>n0,calculateShapes:()=>UB,checkEinsumDimSizes:()=>NV,checkPadOnDimRoundingMode:()=>ee,combineLocations:()=>sv,combineRaggedTensorToTensorShapes:()=>ZM,complexWithEvenIndex:()=>gV,complexWithOddIndex:()=>xV,computeConv2DInfo:()=>Wa,computeConv3DInfo:()=>YS,computeDefaultPad:()=>qb,computeDilation2DInfo:()=>az,computeOptimalWindowSize:()=>eV,computeOutAndReduceShapes:()=>s0,computeOutShape:()=>YM,computePool2DInfo:()=>Hb,computePool3DInfo:()=>lz,convertConv2DDataFormat:()=>ZS,decodeEinsumEquation:()=>SV,eitherStridesOrDilationsAreOne:()=>Ye,expandShapeToKeepDim:()=>mn,exponent:()=>CV,exponents:()=>wV,fromStringArrayToUint8:()=>qV,fromUint8ToStringArray:()=>HV,getAxesPermutation:()=>i0,getBroadcastDims:()=>rv,getComplexWithIndex:()=>yV,getEinsumComputePath:()=>TV,getEinsumPermutation:()=>vV,getFusedBiasGradient:()=>nl,getFusedDyActivation:()=>ol,getImageCenter:()=>rV,getInnerMostAxes:()=>n3,getPermuted:()=>nV,getRaggedRank:()=>QM,getReductionAxes:()=>Zt,getReshaped:()=>oV,getReshapedPermuted:()=>sV,getRowPartitionTypesHelper:()=>JM,getSliceBeginCoords:()=>iV,getSliceSize:()=>aV,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>$V,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>DV,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>RV,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>OV,getSparseReshapeInputOutputMismatchErrorMessage:()=>PV,getSparseReshapeInputOutputMultipleErrorMessage:()=>LV,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>FV,getSparseReshapeNegativeOutputDimErrorMessage:()=>_V,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>VV,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>zV,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>BV,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>MV,getUndoAxesPermutation:()=>$p,isIdentityPermutation:()=>kV,log:()=>JL,mergeRealAndImagArrays:()=>hV,prepareAndValidate:()=>zM,prepareSplitSize:()=>AV,segment_util:()=>U0,shouldFuse:()=>il,slice_util:()=>Ue,splitRealAndImagArrays:()=>dV,stridesOrDilationsArePositive:()=>pn,tupleValuesAreOne:()=>ro,upcastType:()=>$e,validateDefaultValueShape:()=>tV,validateInput:()=>GB,validateUpdateShape:()=>Dv,warn:()=>an});function XM(r,t){let e=r[0].length;r.forEach((n,s)=>{N(n.length===e,()=>`Error in concat${e}D: rank of tensors[${s}] must be the same as the rank of the rest (${e})`)}),N(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);let o=r[0];r.forEach((n,s)=>{for(let i=0;i<e;i++)N(i===t||n[i]===o[i],()=>`Error in concat${e}D: Shape of tensors[${s}] (${n}) does not match the shape of the rest (${o}) along the non-concatenated axis ${s}.`)})}function YM(r,t){let e=r[0].slice();for(let o=1;o<r.length;o++)e[t]+=r[o][t];return e}var dn;(function(r){r[r.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",r[r.VALUE_ROWIDS=1]="VALUE_ROWIDS",r[r.ROW_LENGTHS=2]="ROW_LENGTHS",r[r.ROW_SPLITS=3]="ROW_SPLITS",r[r.ROW_LIMITS=4]="ROW_LIMITS",r[r.ROW_STARTS=5]="ROW_STARTS"})(dn||(dn={}));function ZM(r,t,e){let o=new Array;if(e==null&&t==null)return o;if(t==null)for(;o.length<r+e.length;)o.push(-1);else o=t.slice();if(e==null)return o;if(r+e.length!==o.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${r+e.length}, but shape.rank = ${o.length}`);for(let n=1;n<e.length;++n){let s=e[n],i=o[o.length-e.length+n],a=o[i];if(s>=0)if(a>=0){if(a!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${n+r}] = ${s} but shape[${n+r}] = ${a}`)}else o[i]=s}return o}function JM(r){let t={FIRST_DIM_SIZE:dn.FIRST_DIM_SIZE,VALUE_ROWIDS:dn.VALUE_ROWIDS,ROW_LENGTHS:dn.ROW_LENGTHS,ROW_SPLITS:dn.ROW_SPLITS,ROW_LIMITS:dn.ROW_LIMITS,ROW_STARTS:dn.ROW_STARTS},e=[];for(let o of r)if(o in t)e.push(t[o]);else break;return e}function QM(r){return r.length===0?0:r[0]===dn.FIRST_DIM_SIZE?r.length-1:r.length}function tV(r,t){if(r==null||t==null)return;let e=r.length,o=t.length;if(e>=o)throw new Error(`defaultValue.shape=${r} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${o})`);for(let n=0;n<Math.min(e,o-1);++n){let s=r[n],i=t[n+1];if(s>=0&&i>=0&&s!==1&&s!==i)throw new Error(`defaultValue.shape=${r}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${n-r.length}] = ${s} but ragged tensor input.flatValues.shape[${n-r.length}] = ${i}`)}}var dd=30;function eV(r){return r<=dd?r:Pl(r,Math.floor(Math.sqrt(r)))}function rV(r,t,e){let o=e*(typeof r=="number"?r:r[0]),n=t*(typeof r=="number"?r:r[1]);return[o,n]}function oV(r,t,e,o=!0){let n=[];if(o)n=n.concat(t.slice(0)),n.push(r[0]/e),n=n.concat(r.slice(1));else{n=n.concat(r[0]);let s=t.length;for(let i=0;i<s;++i)n=n.concat([r[i+1]/t[i],t[i]]);n=n.concat(r.slice(s+1))}return n}function nV(r,t,e=!0){let o=[];if(e){o.push(t);for(let n=t+1;n<r;++n)n<=2*t?(o.push(n),o.push(n-(t+1))):o.push(n)}else{let n=[],s=[];for(let i=1;i<r;++i)i>=t*2+1||i%2===1?s.push(i):n.push(i);o.push(...n),o.push(0),o.push(...s)}return o}function sV(r,t,e,o=!0){let n=[];o?n.push(r[0]/e):n.push(r[0]*e);for(let s=1;s<r.length;++s)s<=t.length?o?n.push(t[s-1]*r[s]):n.push(r[s]/t[s-1]):n.push(r[s]);return n}function iV(r,t){let e=[0];for(let o=0;o<t;++o)e.push(r[o][0]);return e}function aV(r,t,e){let o=r.slice(0,1);for(let n=0;n<e;++n)o.push(r[n+1]-t[n][0]-t[n][1]);return o}var M0=1.7580993408473768,V0=1.0507009873554805;var lV=.3275911,cV=.254829592,uV=-.284496736,pV=1.421413741,mV=-1.453152027,fV=1.061405429;function hV(r,t){if(r.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${t.length}.`);let e=new Float32Array(r.length*2);for(let o=0;o<e.length;o+=2)e[o]=r[o/2],e[o+1]=t[o/2];return e}function dV(r){let t=new Float32Array(r.length/2),e=new Float32Array(r.length/2);for(let o=0;o<r.length;o+=2)t[o/2]=r[o],e[o/2]=r[o+1];return{real:t,imag:e}}function gV(r){let t=Math.ceil(r.length/4),e=new Float32Array(t),o=new Float32Array(t);for(let n=0;n<r.length;n+=4)e[Math.floor(n/4)]=r[n],o[Math.floor(n/4)]=r[n+1];return{real:e,imag:o}}function xV(r){let t=Math.floor(r.length/4),e=new Float32Array(t),o=new Float32Array(t);for(let n=2;n<r.length;n+=4)e[Math.floor(n/4)]=r[n],o[Math.floor(n/4)]=r[n+1];return{real:e,imag:o}}function yV(r,t){let e=r[t*2],o=r[t*2+1];return{real:e,imag:o}}function bV(r,t,e,o){r[o*2]=t,r[o*2+1]=e}function wV(r,t){let e=new Float32Array(r/2),o=new Float32Array(r/2);for(let n=0;n<Math.ceil(r/2);n++){let s=(t?2:-2)*Math.PI*(n/r);e[n]=Math.cos(s),o[n]=Math.sin(s)}return{real:e,imag:o}}function CV(r,t,e){let o=(e?2:-2)*Math.PI*(r/t),n=Math.cos(o),s=Math.sin(o);return{real:n,imag:s}}var G0="->",IV=/->/g,NN=",",TN="...";function SV(r,t){r=r.replace(/\s/g,"");let e=(r.length-r.replace(IV,"").length)/G0.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${G0}").`);let[o,n]=r.split(G0);N(o.indexOf(TN)===-1,()=>`The ellipsis notation ("${TN}") is not supported yet.`);let s=o.split(NN),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let a=[];for(let m=0;m<n.length;++m){let f=n[m];if(!s.some(h=>h.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);a.indexOf(f)===-1&&a.push(f)}for(let m=0;m<o.length;++m){let f=o[m];a.indexOf(f)===-1&&f!==NN&&a.push(f)}let l=new Array(s.length);for(let m=0;m<i;++m){if(new Set(s[m].split("")).size!==s[m].length)throw new Error(`Found duplicate axes in input component ${s[m]}. Support for duplicate axes in input is not implemented yet.`);l[m]=[];for(let f=0;f<s[m].length;++f)l[m].push(a.indexOf(s[m][f]))}let c=a.length,u=n.length,p=[];for(let m=u;m<c;++m)p.push(m);return{allDims:a,summedDims:p,idDims:l}}function vV(r,t){let e=new Array(r);e.fill(-1);for(let n=0;n<t.length;++n)e[t[n]]=n;let o=[];for(let n=0;n<r;++n)e[n]===-1&&o.push(n);return e=e.filter(n=>n!==-1),{permutationIndices:e,expandDims:o}}function NV(r,t,e){let o=new Array(r);for(let n=0;n<e.length;++n){let s=e[n].shape;for(let i=0;i<t[n].length;++i)o[t[n][i]]===void 0?o[t[n][i]]=s[i]:N(o[t[n][i]]===s[i],()=>`Expected dimension ${o[t[n][i]]} at axis ${i} of input shaped ${JSON.stringify(s)}, but got dimension ${s[i]}`)}}function TV(r,t){let e=r,o=[],n=0;r.length===0&&e.push(-1),n=r.length+1;for(let i=0;i<n;++i)o.push([]);let s=[];for(let i=0;i<e.length;++i){let a=e[i],l=EV(t,a);for(let c of l)s.indexOf(c)===-1&&(o[i].push(c),s.push(c))}return{path:e,steps:o}}function kV(r){return r.every((t,e)=>t===e)}function EV(r,t){let e=[];for(let o=0;o<r.length;++o)(r[o].length===0||r[o].indexOf(t)!==-1||t===-1)&&e.push(o);return e}function AV(r,t,e=0){let o=[];if(typeof t=="number")N(r.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),o=new Array(t).fill(r.shape[e]/t);else{let n=t.reduce((i,a)=>(a===-1&&(i+=1),i),0);N(n<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(s!==-1){let i=t.reduce((a,l)=>l>0?a+l:a);t[s]=r.shape[e]-i}N(r.shape[e]===t.reduce((i,a)=>i+a),()=>"The sum of sizes must match the size of the axis dimension."),o=t}return o}function $V(r){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${r}`}function DV(r,t){return`indices(${r}, 0) is invalid: ${t} < 0`}function RV(r,t,e){return`indices(${r}, 0) is invalid: ${t} >= ${e}`}function FV(r,t){return`only one output dimension may be -1, not both ${r} and ${t}`}function _V(r,t){return`size ${r} must be non-negative, not ${t}`}function OV(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function LV(r,t){let e=Ut(r),o=Ut(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${o}. inputShape=${r} outputShape= ${t}`}function PV(r,t){let e=Ut(r),o=Ut(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${o}. inputShape=${r} outputShape=${t}`}function zV(){return"segment ids must be >= 0"}function BV(){return"segment ids are not increasing"}function MV(r,t){return`Segment id ${r} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function VV(r,t,e){return`Bad: indices[${r}] == ${t} out of range [0, ${e})`}var U0={};co(U0,{collectGatherOpShapeInfo:()=>WV,computeOutShape:()=>UV,segOpComputeOptimalWindowSize:()=>GV});function GV(r,t){let e=!1,o;for(r<=dd?(o=r,e=!0):o=Pl(r,Math.floor(Math.sqrt(r)));!e;)o>t||o===r?e=!0:o=Pl(r,o+1);return o}function UV(r,t,e){let o=[],n=r.length;for(let s=0;s<n;s++)s!==t?o.push(r[s]):o.push(e);return o}function WV(r,t,e,o){let n=t.shape.length,s=r.shape.length;if(o!==0&&(o<-n||o>n))throw new Error(`Expect batchDims in the range of [-${n}, ${n}], but got ${o}`);if(o<0&&(o+=n),o>s)throw new Error(`batchDims (${o}) must be less than rank(x) (
    ${s}).`);if(e<o)throw new Error(`batchDims (${o}) must be less than or equal to axis (${e}).`);for(let p=0;p<o;++p)if(r.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${r.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);let i=r.shape[e],a=[],l=1,c=1,u=1;for(let p=0;p<o;++p)a.push(r.shape[p]),l*=r.shape[p];for(let p=o;p<e;p++)a.push(r.shape[p]),c*=r.shape[p];for(let p=o;p<n;p++)a.push(t.shape[p]);for(let p=e+1;p<s;p++)a.push(r.shape[p]),u*=r.shape[p];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:i,outputShape:a}}function HV(r){try{return r.map(t=>Ec(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function qV(r){return r.map(t=>kc(t))}var ar={};co(ar,{nonMaxSuppressionV3Impl:()=>sd,nonMaxSuppressionV4Impl:()=>id,nonMaxSuppressionV5Impl:()=>ad,whereImpl:()=>_v});iN();var gd={kernelName:ti,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(r,Mo(Y(e,"float32"),-1))}}};var kN={kernelName:Rn,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let o=Ft(Y(e,"float32")),n=Jt(ut(bt(1),o));return Mt(nt(r,n))}}}};var EN={kernelName:Fn,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let o=Jt(ut(Ft(Y(e,"float32")),1));return nt(r,o)}}}};var AN={kernelName:_o,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t,n=kt(e.shape,o.shape);return{a:()=>{let a=r,l=Zt(e.shape,n);return l.length>0&&(a=lt(a,l)),F(a,e.shape)},b:()=>{let a=r,l=Zt(o.shape,n);return l.length>0&&(a=lt(a,l)),F(a,o.shape)}}}};var $N={kernelName:Bl,saveAllInputs:!0,gradFunc:(r,t)=>{let e={};return t.forEach((o,n)=>{e[n]=()=>r.clone()}),e}};var DN={kernelName:ei,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>gt(e)}}};var RN={kernelName:ri,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>gt(e)}}};var FN={kernelName:_n,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>nt(r,Jt(ut(bt(1),Ft(Y(e,"float32")))))}}};var _N={kernelName:On,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let o=Jt(j(bt(1),Ft(Y(e,"float32"))));return nt(r,o)}}}};var ON={kernelName:zn,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t,n=kt(e.shape,o.shape);return{a:()=>{let a=j(Ft(e),Ft(o)),l=R(r,nt(o,a)),c=Zt(e.shape,n);return c.length>0&&(l=lt(l,c)),F(l,e.shape)},b:()=>{let a=j(Ft(e),Ft(o)),l=Mt(R(r,nt(e,a))),c=Zt(o.shape,n);return c.length>0&&(l=lt(l,c)),F(l,o.shape)}}}};var LN={kernelName:Ln,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>nt(r,j(Ft(Y(e,"float32")),1))}}};var PN={kernelName:Pn,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>nt(r,ut(bt(1),Ft(Y(e,"float32"))))}}};function KV(r,t,e,o,n,s){let i=v(r,"dy","avgPool3dGrad"),a=v(t,"input","avgPool3dGrad"),l=i,c=a,u=!1;a.rank===4&&(u=!0,l=F(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),c=F(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),N(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),N(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),ee("avgPool3dGrad",n,s);let p={dy:l,input:c},m={filterSize:e,strides:o,pad:n,dimRoundingMode:s},f=T.runKernel(Ul,p,m);return u?F(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}var zN=k({avgPool3dGrad_:KV});var BN={kernelName:ni,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,{filterSize:n,strides:s,pad:i,dimRoundingMode:a}=e;return{x:()=>zN(r,o,n,s,i,a)}}};function jV(r,t,e,o,n){let s=v(r,"dy","avgPoolGrad"),i=v(t,"input","avgPoolGrad");N(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let a=i,l=s,c=!1;i.rank===3&&(c=!0,a=F(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=F(s,[1,s.shape[0],s.shape[1],s.shape[2]])),N(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),N(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);let u={dy:l,input:a},p={filterSize:e,strides:o,pad:n},m=T.runKernel(Gl,u,p);return c?F(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var MN=k({avgPoolGrad_:jV});var VN={kernelName:oi,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,{filterSize:n,strides:s,pad:i}=e;return{x:()=>MN(r,o,n,s,i)}}};var GN={kernelName:si,inputsToSave:["a","b"],gradFunc:(r,t,e)=>{let[o,n]=t,{transposeA:s,transposeB:i}=e;return!s&&!i?{a:()=>Wt(r,n,!1,!0),b:()=>Wt(o,r,!0,!1)}:!s&&i?{a:()=>Wt(r,n,!1,!1),b:()=>Wt(r,o,!0,!1)}:s&&!i?{a:()=>Wt(n,r,!1,!0),b:()=>Wt(o,r,!1,!1)}:{a:()=>Wt(n,r,!0,!0),b:()=>Wt(r,o,!0,!0)}}};var UN={kernelName:ii,gradFunc:(r,t,e)=>{let{blockShape:o,crops:n}=e;return{x:()=>Wc(r,o,n)}}};var WN={kernelName:UI,gradFunc:(r,t,e)=>{let o=e,n=o.inputShape,s=o.shape,i=Array.from(s);for(let l=n.length-1;l>=0;l--)if(n[l]===s[l])i[l]=1;else if(n[l]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${s}].`);let a=[];for(let l=0;l<i.length;l++)i[l]>1&&a.push(l);return{x:()=>lt(r,a,!0)}}};var HN={kernelName:rn,gradFunc:r=>({x:()=>r.clone()})};var qN={kernelName:Bn,gradFunc:r=>({x:()=>gt(r)})};var KN={kernelName:Mn,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,{clipValueMin:n,clipValueMax:s}=e;return{x:()=>se(fr(Dr(o,n),xo(o,s)),r,gt(r))}}};var jN={kernelName:ai,inputsToSave:["x"],gradFunc:gd.gradFunc};var XN={kernelName:li,saveAllInputs:!0,gradFunc:(r,t,e)=>{let o=t.map(l=>l.shape),{axis:n}=e,s=Oe(n,t[0].shape)[0],i=o.map(l=>l[s]);return Pe(r,i,s).map(l=>()=>l)}};var YN={kernelName:ci,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let[o,n]=t,{dilations:s,strides:i,pad:a,dataFormat:l}=e;return N(ro(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Pc(o.shape,r,n,i,a,l),filter:()=>jc(o,r,n.shape,i,a,l)}}};var ZN={kernelName:ui,inputsToSave:["dy","filter"],gradFunc:(r,t,e)=>{let[o,n]=t,{strides:s,pad:i,dataFormat:a,dimRoundingMode:l}=e;return{dy:()=>Gr(r,n,s,i,a,1,l),filter:()=>jc(r,o,n.shape,s,i,a,l)}}};function XV(r,t,e,o,n){let s=r;r.rank===4&&(s=F(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));let i=t;i.rank===4&&(i=F(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),N(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),N(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),N(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),N(s.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${e[3]}.`),N(i.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${e[4]}).`);let a={x:s,dy:i},l={strides:o,pad:n,filterShape:e};return T.runKernel(Kl,a,l)}var JN=k({conv3DBackpropFilter_:XV});var QN={kernelName:pi,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let{dilations:o,strides:n,pad:s}=e;N(ro(o),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);let[i,a]=t;return{x:()=>Kh(i.shape,r,a,n,s),filter:()=>JN(i,r,a.shape,n,s)}}};var tT={kernelName:Vn,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(Mt(Bp(Y(e,"float32"))),r)}}};var eT={kernelName:Gn,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(Mp(Y(e,"float32")),r)}}};var rT={kernelName:mi,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,{axis:n,exclusive:s,reverse:i}=e;return{x:()=>{let a=i0([n],o.rank),l=jh(r,n,s,!i);return a!=null&&(l=Rt(l,a)),l}}}};var oT={kernelName:fi,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let{dilations:o,strides:n,pad:s,dimRoundingMode:i}=e,a=o??[1,1];N(ro(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[l,c]=t;return N(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),N(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),N(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),N(Ye(n,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${n} and dilations '${a}'.`),ee("depthwiseConv2d",s,i),{x:()=>nd(l.shape,r,c,n,s,a,i),filter:()=>od(l,r,c.shape,n,s,a,i)}}};var nT={kernelName:hi,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let[o,n]=t,s={x:o,filter:n,dy:r},i={x:o,filter:n,dy:r};return{x:()=>T.runKernel(pp,s,e),filter:()=>T.runKernel(mp,i,e)}}};var sT={kernelName:Wn,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t,o={dy:r,y:e};return{x:()=>T.runKernel(rc,o)}}};var iT={kernelName:Hn,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t,o=R(Ve(Mt(Ft(e))),2/Math.sqrt(Math.PI));return{x:()=>R(r,o)}}};var aT={kernelName:qn,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(r,e)}}};var lT={kernelName:di,inputsToSave:["input"],gradFunc:(r,t)=>{let[e]=t;return{input:()=>F(r,e.shape)}}};var cT={kernelName:Kn,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(r,Ve(e))}}};var uT={kernelName:jn,gradFunc:r=>({x:()=>gt(r)})};var pT={kernelName:Xn,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t,n=kt(e.shape,o.shape);return{a:()=>{let a=nt(r,Y(o,"float32")),l=Zt(e.shape,n);return l.length>0?F(lt(a,l),e.shape):a},b:()=>{let a=R(r,Y(e,"float32")),l=Zt(o.shape,n);l.length>0&&(a=F(lt(a,l),o.shape));let c=Ft(o);return Mt(nt(a,Y(c,"float32")))}}}};var mT={kernelName:gi,inputsToSave:["x","mean","variance","scale"],gradFunc:(r,t,e)=>{let{varianceEpsilon:o}=e,[n,s,i,a]=t,l=a??bt(1),c=Zt(s.shape,n.shape),u=[];if(s.rank===1){for(let w=0;w<n.shape.length-1;++w)u.push(n.shape[w]);u.push(1)}let p=ut(n,s),m=R(r,l),f=Lp(j(i,bt(o))),h=R(R(R(f,f),f),bt(-.5));return{x:()=>s.rank===1?F(R(R(r,sr(F(f,[1,1,1,s.shape[0]]),u)),l),n.shape):F(R(R(r,f),l),n.shape),mean:()=>{let w=R(R(f,bt(-1)),m);return s.rank===1&&(w=lt(w,c)),F(w,s.shape)},variance:()=>{let w=R(R(h,p),m);return s.rank===1&&(w=lt(w,c)),F(w,s.shape)},scale:()=>{let w=R(p,f),I=R(r,w);return s.rank===1&&(I=lt(I,c)),F(I,s.shape)},offset:()=>{let w=r;return s.rank===1&&(w=lt(w,c)),F(w,s.shape)}}}};var dT={kernelName:xi,inputsToSave:["x","indices"],gradFunc:(r,t,e)=>{let[o,n]=t,{axis:s,batchDims:i}=e,a=Oe(s,o.shape)[0],l=(c,u,p)=>()=>{let m=c.shape,f=u.size,h=m.slice(0,a),d=h.length,g=m.slice(s,m.length).slice(1),x=g.length,b=fT(0,d),C=fT(d+1,d+1+x),w=hT([h,[f],g]),I=F(p,w),E=F(u,[f]),A=hT([[d],b,C]),$=Rt(I,A),_=rd($,E,c.shape[a]),L=$p(A);return _=Rt(_,L),_};if(i===1){let c=o.shape[0],u=o.split(c,0);return{x:()=>Re(u.map((f,h)=>l(f,n.slice(h,1),r.slice(h,1))())).reshape(o.shape),indices:()=>n}}else return{x:l(o,n,r),indices:()=>n}}};function fT(r,t){let e=[];for(let o=r;o<t;++o)e.push(o);return e}function hT(r){let t=[];for(let e=0;e<r.length;++e)for(let o=0;o<r[e].length;++o)t.push(r[e][o]);return t}var gT={kernelName:Yn,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t;return{a:()=>gt(e),b:()=>gt(o)}}};var xT={kernelName:on,gradFunc:r=>({x:()=>Y(r,"float32")})};var yT={kernelName:Zn,gradFunc:r=>({x:()=>gt(r)})};var bT={kernelName:Jn,gradFunc:r=>({x:()=>gt(r)})};var wT={kernelName:Qn,gradFunc:r=>({x:()=>gt(r)})};var CT={kernelName:yi,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,{alpha:n}=e,s=we(o,0);return{x:()=>se(s,r,R(r,n))}}};var IT={kernelName:es,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>nt(r,j(e,1))}}};var ST={kernelName:ts,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>nt(r,Y(e,"float32"))}}};var vT={kernelName:HI,inputsToSave:[],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[o]=t,{axis:n}=e;return{logits:()=>{let i=Ve(o);return ut(r,R(lt(r,n,!0),i))}}}};function YV(r,t,e,o=5,n=1,s=1,i=.5){let a={x:r,y:t,dy:e},l={depthRadius:o,bias:n,alpha:s,beta:i};return T.runKernel(lc,a,l)}var NT=k({localResponseNormalizationBackprop_:YV});var TT={kernelName:bi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[o,n]=t,{depthRadius:s,bias:i,alpha:a,beta:l}=e;return{x:()=>NT(o,n,r,s,i,a,l)}}};function xd(r,t,e,o){return t.rank<e.rank&&(t=F(t,mn(t.shape,o))),r.rank<e.rank&&(r=F(r,mn(r.shape,o))),{x:()=>R(r,Y(br(e,t),r.dtype))}}var W0={kernelName:wi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let o=e,{reductionIndices:n}=o,s=t[0],i=t[1],a=Oe(n,s.shape),l=xd(r,i,s,a);return{x:()=>l.x()}}};var kT={kernelName:rs,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t;return{a:()=>R(r,Y(Dr(e,o),"float32")),b:()=>R(r,Y(Ya(e,o),"float32"))}}};function ZV(r,t,e,o,n,s,i){let a=v(r,"dy","maxPool3dGrad"),l=v(t,"input","maxPool3dGrad"),c=v(e,"output","maxPool3dGrad"),u=a,p=l,m=c,f=!1;l.rank===4&&(f=!0,u=F(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),p=F(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),m=F(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),N(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),N(p.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),N(m.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${m.rank}.`),ee("maxPool3dGrad",s,i);let h={dy:u,input:p,output:m},d={filterSize:o,strides:n,pad:s,dimRoundingMode:i},g=T.runKernel(uc,h,d);return f?F(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var ET=k({maxPool3dGrad_:ZV});var AT={kernelName:Ii,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[o,n]=t,{filterSize:s,strides:i,pad:a,dimRoundingMode:l}=e;return{x:()=>ET(r,o,n,s,i,a,l)}}};function JV(r,t,e,o,n,s,i){let a=v(r,"dy","maxPoolGrad"),l=v(t,"input","maxPoolGrad"),c=v(e,"output","maxPoolGrad");N(l.rank===a.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`),N(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),N(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),ee("maxPoolGrad",s,i);let u={dy:a,input:l,output:c},p={filterSize:o,strides:n,pad:s,dimRoundingMode:i};return T.runKernel(cc,u,p)}var $T=k({maxPoolGrad_:JV});var DT={kernelName:Ci,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[o,n]=t,{filterSize:s,strides:i,pad:a}=e;return{x:()=>$T(r,o,n,s,i,a)}}};var RT={kernelName:Si,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,{axis:n}=e,s=Oe(n,o.shape),a=s0(o.shape,s)[1],l=Ut(a);return{x:()=>{let u=o.shape.slice();s.forEach(f=>{u[f]=1});let p=F(r,u);return nt(R(p,Cr(o.shape,"float32")),l)}}}};var FT={kernelName:vi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let o=e,{axis:n}=o,[s,i]=t,a=Oe(n,s.shape),l=xd(r,i,s,a);return{x:()=>l.x()}}};var _T={kernelName:os,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t;return{a:()=>R(r,Y(xo(e,o),"float32")),b:()=>R(r,Y(we(e,o),"float32"))}}};var OT={kernelName:Ni,inputsToSave:["x"],gradFunc:(r,t,e)=>{let o=t[0],{paddings:n}=e,s=n.map(i=>i[0]);return{x:()=>Pt(r,s,o.shape)}}};var LT={kernelName:ns,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t,n=kt(e.shape,o.shape);return{a:()=>{let a=Zt(e.shape,n);return a.length>0?F(lt(r,a),e.shape):r},b:()=>{let a=R(r,Mt(Ds(nt(e,o)))),l=Zt(o.shape,n);return l.length>0?F(lt(a,l),o.shape):a}}}};var PT={kernelName:ss,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t,n=kt(e.shape,o.shape);return{a:()=>{let a=R(r,Y(o,"float32")),l=Zt(e.shape,n);return l.length>0?F(lt(a,l),e.shape):a},b:()=>{let a=R(r,Y(e,"float32")),l=Zt(o.shape,n);return l.length>0?F(lt(a,l),o.shape):a}}}};var zT={kernelName:Ti,gradFunc:r=>({x:()=>Mt(r)})};var BT={kernelName:Ei,inputsToSave:["indices"],gradFunc:(r,t)=>{let e=t[0];return{indices:()=>ie(e.shape,"float32")}}};var MT={kernelName:ki,gradFunc:r=>({x:()=>gt(r)})};var VT={kernelName:Ai,saveAllInputs:!0,gradFunc:(r,t,e)=>{let{axis:o}=e;return hr(r,o).map(s=>()=>s)}};var H0={kernelName:$i,inputsToSave:["x"],gradFunc:(r,t,e)=>{let o=t[0],{paddings:n}=e,s=n.map(i=>i[0]);return{x:()=>Pt(r,s,o.shape)}}};var GT={kernelName:is,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(r,t)=>{let[e,o,n]=t,s=e,i=o,a=kt(s.shape,i.shape);return{a:()=>{let u=Y(i,"float32"),p=R(r,R(u,$r(s,ut(u,bt(1))))),m=Zt(s.shape,a);return m.length>0&&(p=lt(p,m)),F(p,s.shape)},b:()=>{let u=we(s,0),p=se(u,wr(s),gt(s)),m=R(r,R(n,p)),f=Zt(i.shape,a);return f.length>0&&(m=lt(m,f)),F(m,i.shape)}}}};var UT={kernelName:Di,inputsToSave:["x","alpha"],gradFunc:(r,t)=>{let[e,o]=t,n=we(e,0);return{x:()=>se(n,r,R(r,o)),alpha:()=>{let s=se(n,gt(r),R(r,e)),i=Zt(o.shape,r.shape);return i.length>0&&(s=lt(s,i)),F(s,o.shape)}}}};function QV(r,t,e){let o=r.shape.slice();o[e]=1;let n=F(t,o),s=Ep(r,e,!0,!1),i=Ep(r,e,!0,!0),a=R(s,i);return R(n,a)}function tG(r,t,e){let o=r.shape.length,n=o-e.length,s=S.getAxesPermutation(e,o),i=r;s!=null&&(i=Rt(r,s));let a=i.shape.slice(),c=a.splice(o-e.length,e.length).reduce((m,f)=>m*f,1);a.push(c);let u=i.reshape(a),p=QV(u,t,n);if(p=p.reshape(i.shape),s!=null){let m=S.getUndoAxesPermutation(s);p=Rt(p,m)}return p}var WT={kernelName:Ri,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,{axis:n}=e,s=[];return n==null?s=o.shape.map((i,a)=>a):typeof n=="number"?s=[n]:s=n,{x:()=>tG(o,r,s)}}};var HT={kernelName:Un,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t,n=kt(e.shape,o.shape);return{a:()=>{let a=nt(r,Y(o,"float32")),l=Zt(e.shape,n);return l.length>0?F(lt(a,l),e.shape):a},b:()=>{let a=R(r,Y(e,"float32")),l=Zt(o.shape,n);l.length>0&&(a=F(lt(a,l),o.shape));let c=Ft(o);return Mt(nt(a,Y(c,"float32")))}}}};var qT={kernelName:as,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>nt(r,Mt(Ft(e)))}}};var KT={kernelName:cs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t,o=R(xo(e,6),Mo(e));return{x:()=>R(r,Y(o,"float32"))}}};var jT={kernelName:ls,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(r,Y(Mo(e),"float32"))}}};var XT={kernelName:Fi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>F(r,e.shape)}}};var YT={kernelName:Oi,inputsToSave:["images"],gradFunc:(r,t,e)=>{let[o]=t,n={dy:r,images:o};return{images:()=>T.runKernel(xc,n,e)}}};var ZT={kernelName:_i,inputsToSave:["images"],gradFunc:(r,t,e)=>{let[o]=t,n={dy:r,images:o};return{images:()=>T.runKernel(gc,n,e)}}};var JT={kernelName:Li,gradFunc:(r,t,e)=>{let{dims:o}=e,n=Oe(o,r.shape);return{x:()=>so(r,n)}}};var QT={kernelName:us,gradFunc:r=>({x:()=>gt(r)})};var t1={kernelName:ps,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>Mt(nt(r,R($r(e,1.5),2)))}}};var e1={kernelName:Pi,inputsToSave:["condition"],gradFunc:(r,t)=>{let[e]=t;return{condition:()=>Y(gt(e),"float32"),t:()=>R(r,Y(e,r.dtype)),e:()=>R(r,Y(Vc(e),r.dtype))}}};var r1={kernelName:ms,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let o=we(e,bt(0)),n=bt(M0),s=bt(V0),i=R(r,s),a=R(R(r,n),Ve(Y(e,"float32")));return se(o,i,a)}}}};var o1={kernelName:gs,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(r,R(e,ut(bt(1),e)))}}};var n1={kernelName:ds,gradFunc:r=>({x:()=>gt(r)})};var s1={kernelName:fs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(Ka(Y(e,"float32")),r)}}};var i1={kernelName:hs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(kp(Y(e,"float32")),r)}}};var a1={kernelName:zi,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,{begin:n,size:s}=e,i=o.shape,[a,l]=B0(o,n,s),c=[];for(let u=0;u<r.rank;u++)c.push([a[u],i[u]-a[u]-l[u]]);return{x:()=>Ja(r,c)}}};var l1={kernelName:Gi,outputsToSave:[!0],gradFunc:(r,t,e)=>{let[o]=t,{dim:n}=e,s=!0,i=R(r,o);return{logits:()=>ut(i,R(lt(i,[n],s),o))}}};var c1={kernelName:xs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(r,go(e))}}};var q0={kernelName:Mi,gradFunc:(r,t,e)=>{let{blockShape:o,paddings:n}=e;return{x:()=>Lc(r,o,n)}}};var K0={kernelName:Vi,gradFunc:(r,t,e)=>{let{axis:o}=e;return{x:()=>ne(r,o)}}};var u1={kernelName:ys,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>nt(r,R(Jt(Y(e,"float32")),2))}}};var p1={kernelName:yc,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(r,R(Y(e,"float32"),2))}}};var m1={kernelName:bs,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t,n=bt(2);return{a:()=>R(r,R(n,ut(e,o))),b:()=>R(r,R(n,ut(o,e)))}}};var f1={kernelName:Ss,gradFunc:r=>({x:()=>gt(r)})};var h1={kernelName:ws,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t,n=kt(e.shape,o.shape);return{a:()=>{let a=r,l=Zt(e.shape,n);return l.length>0&&(a=lt(a,l)),F(a,e.shape)},b:()=>{let a=r,l=Zt(o.shape,n);return l.length>0&&(a=lt(a,l)),F(Mt(a),o.shape)}}}};var d1={kernelName:Bi,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,n=o.shape.slice(),{axis:s}=e;Oe(s,o.shape).forEach(c=>{n[c]=1});let a=F(r,n),l=R(a,Cr(o.shape,"float32"));return{x:()=>l}}};var g1={kernelName:Cs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>nt(r,Ft(Ka(e)))}}};var x1={kernelName:Is,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(ut(bt(1),Ft(e)),r)}}};var y1={kernelName:nn,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,{reps:n}=e;return{x:()=>{let i=gt(o);if(o.rank===1)for(let a=0;a<n[0];++a)i=j(i,Pt(r,[a*o.shape[0]],[o.shape[0]]));else if(o.rank===2)for(let a=0;a<n[0];++a)for(let l=0;l<n[1];++l)i=j(i,Pt(r,[a*o.shape[0],l*o.shape[1]],[o.shape[0],o.shape[1]]));else if(o.rank===3)for(let a=0;a<n[0];++a)for(let l=0;l<n[1];++l)for(let c=0;c<n[2];++c)i=j(i,Pt(r,[a*o.shape[0],l*o.shape[1],c*o.shape[2]],[o.shape[0],o.shape[1],o.shape[2]]));else if(o.rank===4)for(let a=0;a<n[0];++a)for(let l=0;l<n[1];++l)for(let c=0;c<n[2];++c)for(let u=0;u<n[3];++u)i=j(i,Pt(r,[a*o.shape[0],l*o.shape[1],c*o.shape[2],u*o.shape[3]],[o.shape[0],o.shape[1],o.shape[2],o.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${o.rank} tensors yet.`);return i}}}};var b1={kernelName:sn,gradFunc:(r,t,e)=>{let o=e,{perm:n}=o,s=$p(n);return{x:()=>Rt(r,s)}}};var w1={kernelName:Ui,gradFunc:(r,t,e)=>{let o=e,{axis:n}=o;return{value:()=>Re(r,n)}}};var C1={kernelName:Wi,inputsToSave:["segmentIds"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>eG(r,e)}}};function eG(r,t){let e=Wr(t,gt(t)),o=ja(r,e),n=Dr(t,bt(0,"int32")),s=o.rank-n.rank;for(let a=0;a<s;++a)n=ke(n,a+1);n=fr(n,Cr(o.shape,"bool"));let i=gt(o);return se(n,o,i)}var I1={kernelName:Hi,gradFunc:r=>({x:()=>gt(r)})};var rG=[gd,kN,EN,AN,$N,DN,RN,FN,_N,ON,LN,PN,BN,VN,GN,UN,WN,HN,qN,KN,jN,XN,ZN,YN,QN,tT,eT,rT,oT,nT,HT,sT,iT,aT,lT,cT,pT,uT,mT,dT,gT,xT,yT,bT,wT,CT,IT,ST,vT,TT,W0,W0,kT,AT,DT,RT,FT,_T,OT,LT,PT,zT,BT,MT,VT,H0,H0,GT,UT,WT,qT,KT,jT,XT,YT,ZT,JT,QT,t1,e1,r1,o1,n1,s1,i1,a1,l1,c1,q0,q0,K0,K0,u1,m1,p1,f1,h1,d1,g1,x1,y1,b1,w1,C1,I1];for(let r of rG)jI(r);D().prototype.abs=function(){return this.throwIfDisposed(),De(this)};D().prototype.acos=function(){return this.throwIfDisposed(),zb(this)};D().prototype.acosh=function(){return this.throwIfDisposed(),Bb(this)};D().prototype.add=function(r){return this.throwIfDisposed(),j(this,r)};D().prototype.all=function(r,t){return this.throwIfDisposed(),Ip(this,r,t)};D().prototype.any=function(r,t){return this.throwIfDisposed(),_c(this,r,t)};D().prototype.argMax=function(r){return this.throwIfDisposed(),eo(this,r)};D().prototype.argMin=function(r){return this.throwIfDisposed(),jS(this,r)};D().prototype.asScalar=function(){return this.throwIfDisposed(),N(this.size===1,()=>"The array must have only 1 element."),F(this,[])};D().prototype.asType=function(r){return this.throwIfDisposed(),Y(this,r)};D().prototype.as1D=function(){return this.throwIfDisposed(),F(this,[this.size])};D().prototype.as2D=function(r,t){return this.throwIfDisposed(),F(this,[r,t])};D().prototype.as3D=function(r,t,e){return this.throwIfDisposed(),F(this,[r,t,e])};D().prototype.as4D=function(r,t,e,o){return this.throwIfDisposed(),F(this,[r,t,e,o])};D().prototype.as5D=function(r,t,e,o,n){return this.throwIfDisposed(),F(this,[r,t,e,o,n])};D().prototype.asin=function(){return this.throwIfDisposed(),Mb(this)};D().prototype.asinh=function(){return this.throwIfDisposed(),Vb(this)};D().prototype.atan=function(){return this.throwIfDisposed(),Gb(this)};D().prototype.atan2=function(r){return this.throwIfDisposed(),XS(this,r)};D().prototype.atanh=function(){return this.throwIfDisposed(),Ub(this)};D().prototype.avgPool=function(r,t,e,o){return this.throwIfDisposed(),Ha(this,r,t,e,o)};D().prototype.batchToSpaceND=function(r,t){return this.throwIfDisposed(),Lc(this,r,t)};D().prototype.batchNorm=function(r,t,e,o,n){return this.throwIfDisposed(),Ji(this,r,t,e,o,n)};D().prototype.broadcastTo=function(r){return this.throwIfDisposed(),ks(this,r)};D().prototype.cast=function(r){return this.throwIfDisposed(),Y(this,r)};D().prototype.ceil=function(){return this.throwIfDisposed(),Zb(this)};D().prototype.clipByValue=function(r,t){return this.throwIfDisposed(),Ze(this,r,t)};D().prototype.concat=function(r,t){return this.throwIfDisposed(),r instanceof Vt&&(r=[r]),ne([this,...r],t)};D().prototype.conv1d=function(r,t,e,o,n,s){return this.throwIfDisposed(),Np(this,r,t,e,o,n,s)};D().prototype.conv2dTranspose=function(r,t,e,o,n){return this.throwIfDisposed(),Tp(this,r,t,e,o,n)};D().prototype.conv2d=function(r,t,e,o,n,s){return this.throwIfDisposed(),Gr(this,r,t,e,o,n,s)};D().prototype.cos=function(){return this.throwIfDisposed(),Ka(this)};D().prototype.cosh=function(){return this.throwIfDisposed(),kp(this)};D().prototype.cumprod=function(r,t,e){return this.throwIfDisposed(),Ep(this,r,t,e)};D().prototype.cumsum=function(r,t,e){return this.throwIfDisposed(),jh(this,r,t,e)};D().prototype.depthToSpace=function(r,t){return this.throwIfDisposed(),tv(this,r,t)};D().prototype.depthwiseConv2d=function(r,t,e,o,n,s){return this.throwIfDisposed(),As(this,r,t,e,o,n,s)};D().prototype.dilation2d=function(r,t,e,o,n){return this.throwIfDisposed(),ev(this,r,t,e,o,n)};D().prototype.divNoNan=function(r){return this.throwIfDisposed(),ov(this,r)};D().prototype.div=function(r){return this.throwIfDisposed(),nt(this,r)};D().prototype.dot=function(r){return this.throwIfDisposed(),nv(this,r)};D().prototype.elu=function(){return this.throwIfDisposed(),$s(this)};D().prototype.equal=function(r){return this.throwIfDisposed(),br(this,r)};D().prototype.erf=function(){return this.throwIfDisposed(),Ap(this)};D().prototype.euclideanNorm=function(r,t){return this.throwIfDisposed(),av(this,r,t)};D().prototype.exp=function(){return this.throwIfDisposed(),Ve(this)};D().prototype.expandDims=function(r){return this.throwIfDisposed(),ke(this,r)};D().prototype.expm1=function(){return this.throwIfDisposed(),l0(this)};D().prototype.fft=function(){return this.throwIfDisposed(),Up(this)};D().prototype.flatten=function(){return this.throwIfDisposed(),F(this,[this.size])};D().prototype.floor=function(){return this.throwIfDisposed(),Ds(this)};D().prototype.floorDiv=function(r){return this.throwIfDisposed(),qh(this,r)};D().prototype.gather=function(r,t,e){return this.throwIfDisposed(),ja(this,r,t,e)};D().prototype.greaterEqual=function(r){return this.throwIfDisposed(),Dr(this,r)};D().prototype.greater=function(r){return this.throwIfDisposed(),we(this,r)};D().prototype.ifft=function(){return this.throwIfDisposed(),Kc(this)};D().prototype.irfft=function(){return this.throwIfDisposed(),v0(this)};D().prototype.isFinite=function(){return this.throwIfDisposed(),c0(this)};D().prototype.isInf=function(){return this.throwIfDisposed(),u0(this)};D().prototype.isNaN=function(){return this.throwIfDisposed(),p0(this)};D().prototype.leakyRelu=function(r){return this.throwIfDisposed(),Xa(this,r)};D().prototype.lessEqual=function(r){return this.throwIfDisposed(),xo(this,r)};D().prototype.less=function(r){return this.throwIfDisposed(),Ya(this,r)};D().prototype.localResponseNormalization=function(r,t,e,o){return this.throwIfDisposed(),lv(this,r,t,e,o)};D().prototype.logSigmoid=function(){return this.throwIfDisposed(),f0(this)};D().prototype.logSoftmax=function(r){return this.throwIfDisposed(),Rp(this,r)};D().prototype.logSumExp=function(r,t){return this.throwIfDisposed(),Fp(this,r,t)};D().prototype.log=function(){return this.throwIfDisposed(),wr(this)};D().prototype.log1p=function(){return this.throwIfDisposed(),Dp(this)};D().prototype.logicalAnd=function(r){return this.throwIfDisposed(),fr(this,r)};D().prototype.logicalNot=function(){return this.throwIfDisposed(),Vc(this)};D().prototype.logicalOr=function(r){return this.throwIfDisposed(),Yh(this,r)};D().prototype.logicalXor=function(r){return this.throwIfDisposed(),cv(this,r)};D().prototype.matMul=function(r,t,e){return this.throwIfDisposed(),Wt(this,r,t,e)};D().prototype.maxPool=function(r,t,e,o){return this.throwIfDisposed(),Za(this,r,t,e,o)};D().prototype.max=function(r,t){return this.throwIfDisposed(),Je(this,r,t)};D().prototype.maximum=function(r){return this.throwIfDisposed(),Wr(this,r)};D().prototype.mean=function(r,t){return this.throwIfDisposed(),le(this,r,t)};D().prototype.min=function(r,t){return this.throwIfDisposed(),Qi(this,r,t)};D().prototype.minimum=function(r){return this.throwIfDisposed(),hn(this,r)};D().prototype.mirrorPad=function(r,t){return this.throwIfDisposed(),uv(this,r,t)};D().prototype.mod=function(r){return this.throwIfDisposed(),pv(this,r)};D().prototype.mul=function(r){return this.throwIfDisposed(),R(this,r)};D().prototype.neg=function(){return this.throwIfDisposed(),Mt(this)};D().prototype.norm=function(r,t,e){return this.throwIfDisposed(),ta(this,r,t,e)};D().prototype.notEqual=function(r){return this.throwIfDisposed(),ea(this,r)};D().prototype.oneHot=function(r,t=1,e=0){return this.throwIfDisposed(),Uc(this,r,t,e)};D().prototype.onesLike=function(){return this.throwIfDisposed(),Ge(this)};D().prototype.pad=function(r,t){return this.throwIfDisposed(),Ja(this,r,t)};D().prototype.pool=function(r,t,e,o,n,s){return this.throwIfDisposed(),mv(this,r,t,e,o,n,s)};D().prototype.pow=function(r){return this.throwIfDisposed(),$r(this,r)};D().prototype.prelu=function(r){return this.throwIfDisposed(),Qa(this,r)};D().prototype.prod=function(r,t){return this.throwIfDisposed(),fv(this,r,t)};D().prototype.reciprocal=function(){return this.throwIfDisposed(),I0(this)};D().prototype.relu=function(){return this.throwIfDisposed(),Hr(this)};D().prototype.relu6=function(){return this.throwIfDisposed(),td(this)};D().prototype.reshapeAs=function(r){return this.throwIfDisposed(),F(this,r.shape)};D().prototype.reshape=function(r){return this.throwIfDisposed(),F(this,r)};D().prototype.resizeBilinear=function(r,t,e){return this.throwIfDisposed(),ld(this,r,t,e)};D().prototype.resizeNearestNeighbor=function(r,t,e){return this.throwIfDisposed(),cd(this,r,t,e)};D().prototype.reverse=function(r){return this.throwIfDisposed(),so(this,r)};D().prototype.rfft=function(){return this.throwIfDisposed(),N0(this)};D().prototype.round=function(){return this.throwIfDisposed(),Op(this)};D().prototype.rsqrt=function(){return this.throwIfDisposed(),Lp(this)};D().prototype.selu=function(){return this.throwIfDisposed(),Pp(this)};D().prototype.separableConv2d=function(r,t,e,o,n,s){return this.throwIfDisposed(),zp(this,r,t,e,o,n,s)};D().prototype.sigmoid=function(){return this.throwIfDisposed(),go(this)};D().prototype.sign=function(){return this.throwIfDisposed(),S0(this)};D().prototype.sin=function(){return this.throwIfDisposed(),Bp(this)};D().prototype.sinh=function(){return this.throwIfDisposed(),Mp(this)};D().prototype.slice=function(r,t){return this.throwIfDisposed(),Pt(this,r,t)};D().prototype.softmax=function(r){return this.throwIfDisposed(),rl(this,r)};D().prototype.softplus=function(){return this.throwIfDisposed(),fn(this)};D().prototype.spaceToBatchND=function(r,t){return this.throwIfDisposed(),Wc(this,r,t)};D().prototype.split=function(r,t){return this.throwIfDisposed(),Pe(this,r,t)};D().prototype.sqrt=function(){return this.throwIfDisposed(),Jt(this)};D().prototype.square=function(){return this.throwIfDisposed(),Ft(this)};D().prototype.squaredDifference=function(r){return this.throwIfDisposed(),$v(this,r)};D().prototype.squeeze=function(r){return this.throwIfDisposed(),Bo(this,r)};D().prototype.stack=function(r,t){this.throwIfDisposed();let e=r instanceof Vt?[this,r]:[this,...r];return Re(e,t)};D().prototype.step=function(r){return this.throwIfDisposed(),Mo(this,r)};D().prototype.stridedSlice=function(r,t,e,o,n,s,i,a){return this.throwIfDisposed(),T0(this,r,t,e,o,n,s,i,a)};D().prototype.sub=function(r){return this.throwIfDisposed(),ut(this,r)};D().prototype.sum=function(r,t){return this.throwIfDisposed(),lt(this,r,t)};D().prototype.tan=function(){return this.throwIfDisposed(),k0(this)};D().prototype.tanh=function(){return this.throwIfDisposed(),qa(this)};D().prototype.tile=function(r){return this.throwIfDisposed(),sr(this,r)};D().prototype.toBool=function(){return this.throwIfDisposed(),Y(this,"bool")};D().prototype.toFloat=function(){return this.throwIfDisposed(),Y(this,"float32")};D().prototype.toInt=function(){return this.throwIfDisposed(),Y(this,"int32")};D().prototype.topk=function(r,t){return this.throwIfDisposed(),Rv(this,r,t)};D().prototype.transpose=function(r){return this.throwIfDisposed(),Rt(this,r)};D().prototype.unique=function(r){return this.throwIfDisposed(),Fv(this,r)};D().prototype.unsortedSegmentSum=function(r,t){return this.throwIfDisposed(),rd(this,r,t)};D().prototype.unstack=function(r){return this.throwIfDisposed(),hr(this,r)};D().prototype.where=function(r,t){return this.throwIfDisposed(),se(r,this,t)};D().prototype.zerosLike=function(){return this.throwIfDisposed(),gt(this)};var io=class r extends Error{constructor(t){super(t),Object.setPrototypeOf(this,r.prototype)}},Ir=class r extends Error{constructor(t){super(t),Object.setPrototypeOf(this,r.prototype)}},O=class r extends Error{constructor(t){super(t),Object.setPrototypeOf(this,r.prototype)}},wt=class r extends Error{constructor(t){super(t),Object.setPrototypeOf(this,r.prototype)}},yd=class r extends Error{constructor(t){super(t),Object.setPrototypeOf(this,r.prototype)}};var Xp=class{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){let o=this.cache.keys().next().value;this.cache.delete(o)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){let o=this.cache.keys().next().value;this.cache.delete(o)}this.maxEntries=t}};function wo(r,t){if(Array.isArray(r)){let e=[];for(let o=0;o<t;o++)e=e.concat(r);return e}else{let e=new Array(t);return e.fill(r),e}}function ao(r,t){if(!r)throw new yd(t)}function X0(r,t){let e=0;for(let o of r)o===t&&e++;return e}function We(r){return r.length===1?r[0]:r}function Ht(r){return Array.isArray(r)?r:[r]}function Co(r){let e=r.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function _s(r){return r.length<=1||r.indexOf("_")===-1?r:r.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}var bo={};function ru(r){if(r==null)return null;let t={};return t.className=r.getClassName(),t.config=r.getConfig(),t}function j0(r){if(!(r==null||typeof r!="object"))if(Array.isArray(r))r.forEach(t=>j0(t));else{let t=Object.keys(r);for(let e of t){let o=r[e];o!=null&&typeof o=="object"&&(!Array.isArray(o)&&o.type==="ndarray"&&typeof o.value=="number"?r[e]=o.value:j0(o))}}}function gn(r,t={},e={},o="object",n=!1){if(typeof r=="string"){let s=r,i;if(s in e)i=e[s];else if(s in bo)i=bo[s];else if(i=t[s],i==null)throw new O(`Unknown ${o}: ${r}. This may be due to one of the following reasons:
1. The ${o} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${o} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{let s=r;if(s.className==null||s.config==null)throw new O(`${o}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let i=s.className,a,l;if(i in e?[a,l]=e[i]:i in bo?[a,l]=bo.className:i in t&&([a,l]=t[i]),a==null)throw new O(`Unknown ${o}: ${i}. This may be due to one of the following reasons:
1. The ${o} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${o} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let c={};for(let f of Object.keys(bo))c[f]=bo[f];for(let f of Object.keys(e))c[f]=e[f];let u=s.config;u.customObjects=c;let p=Object.assign({},bo);for(let f of Object.keys(e))bo[f]=e[f];j0(s.config);let m=l(a,s.config,e,n);return bo=Object.assign({},p),m}else{let c=Object.assign({},bo);for(let p of Object.keys(e))bo[p]=e[p];let u=new a(s.config);return bo=Object.assign({},c),u}}}function oG(r,t){return r<t?-1:r>t?1:0}function Yp(r,t){return-1*oG(r,t)}function Io(r){if(r==null)return r;let t=[];for(let e of r)t.indexOf(e)===-1&&t.push(e);return t}function S1(r){if(r==null)throw new O(`Invalid value in obj: ${JSON.stringify(r)}`);for(let t in r)if(r.hasOwnProperty(t))return!1;return!0}function xn(r,t,e){if(e!=null&&r.indexOf(e)<0)throw new O(`${e} is not a valid ${t}.  Valid values are ${r} or null/undefined.`)}function bd(r,t,e=0,o=1/0){return ao(e>=0),ao(o>=e),Array.isArray(r)&&r.length>=e&&r.length<=o&&r.every(n=>typeof n===t)}function Se(r,t){Array.isArray(r)?(y.assert(r.length>0,()=>`${t} is unexpectedly an empty array.`),r.forEach((e,o)=>Se(e,`element ${o+1} of ${t}`))):y.assert(Number.isInteger(r)&&r>0,()=>`Expected ${t} to be a positive integer, but got ${v1(r)}.`)}function v1(r){return r===null?"null":Array.isArray(r)?"["+r.map(t=>v1(t)).join(",")+"]":typeof r=="string"?`"${r}"`:`${r}`}function N1(r,t,e){let o=e!=null?e():y.now(),n;return(...i)=>{let a=e!=null?e():y.now();return a-o<t||(o=a,n=r(...i)),n}}function wd(r){return r==="relu"?"relu":r==="linear"?"linear":r==="elu"?"elu":null}var nG=0;function Id(){return nG++}var Cd={};function na(r=""){return r in Cd||(Cd[r]=0),Cd[r]+=1,r+Cd[r].toString()}var T1=["channelsFirst","channelsLast"],k1=["nearest","bilinear"],E1=["valid","same","causal"],A1=["max","avg"],$1=["sum","mul","concat","ave"];var ou=new Map;function ce(r){xn(T1,"DataFormat",r)}function R1(r){xn(k1,"InterpolationFormat",r)}function Sr(r){xn(E1,"PaddingMode",r)}function Y0(r){xn(A1,"PoolMode",r)}var Zp=[],D1="/";function Go(r,t){Zp.push(r);try{let e=t();return Zp.pop(),e}catch(e){throw Zp.pop(),e}}function sG(){return Zp.length===0?"":Zp.join(D1)+D1}function Sd(r){if(!F1(r))throw new Error("Not a valid tensor name: '"+r+"'");return sG()+r}function vd(r){if(!F1(r))throw new Error("Not a valid tensor name: '"+r+"'");ou.has(r)||ou.set(r,0);let t=ou.get(r);if(ou.set(r,ou.get(r)+1),t>0){let e=`${r}_${t}`;return ou.set(e,1),e}else return r}var iG=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function F1(r){return!!r.match(iG)}function _1(r){return r===parseInt(r.toString(),10)}function So(r,t,e){t==null&&(t=0),e==null&&(e=r.length);let o=1;for(let n=t;n<e;++n)o*=r[n];return o}function cl(r){if(r.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<r.length;e++){let o=r[e];o<t&&(t=o)}return t}function Uo(r){if(r.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<r.length;e++){let o=r[e];o>t&&(t=o)}return t}function vr(r,t){if(t<r)throw new O(`end (${t}) < begin (${r}) is forbidden.`);let e=[];for(let o=r;o<t;++o)e.push(o);return e}var Z0;function Fe(){return Z0==null&&(Z0=Mh().epsilon()),Z0}function Nr(){return"channelsLast"}function dr(r,t){return Y(r,t)}function Ls(r,t=-1){let e=r.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),F(r,e)}function O1(r,t){return z(()=>{if(r.shape.length!==2)throw new O(`repeat() expects a rank-2 tensor, but received a rank-${r.shape.length} tensor.`);let e=Ls(r,1);return Td(e,[1,t,1])})}function L1(r){let t=[So(r.shape)];return F(r,t)}function P1(r){if(r.rank<=1)throw new O(`batchFlatten requires a minimum rank of 2. Got rank: ${r.rank}.`);let t=[r.shape[0],So(r.shape,1)];return F(r,t)}function Os(r,t,e){return z(()=>{switch(r.rank){case 1:return Vp(r,t,e);case 2:return ed(r,[t,0],[e,r.shape[1]]);case 3:return Gp(r,[t,0,0],[e,r.shape[1],r.shape[2]]);case 4:return qc(r,[t,0,0,0],[e,r.shape[1],r.shape[2],r.shape[3]]);case 5:return Pt(r,[t,0,0,0,0],[e,r.shape[1],r.shape[2],r.shape[3],r.shape[4]]);case 6:return Pt(r,[t,0,0,0,0,0],[e,r.shape[1],r.shape[2],r.shape[3],r.shape[4],r.shape[5]]);default:throw new O(`sliceAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}})}function J0(r,t,e){return z(()=>{switch(r.rank){case 1:return Vp(r,t,e);case 2:return ed(r,[0,t],[r.shape[0],e]);case 3:return Gp(r,[0,0,t],[r.shape[0],r.shape[1],e]);case 4:return qc(r,[0,0,0,t],[r.shape[0],r.shape[1],r.shape[2],e]);default:throw new O(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function Jp(r,t,e,o){return z(()=>{switch(r.rank){case 1:return Vp(r,t,e);case 2:switch(o){case 1:return Os(r,t,e);case 2:return J0(r,t,e);default:throw new O(`The axis is not within the rank of the tensor ${o}`)}case 3:switch(o){case 1:return Os(r,t,e);case 2:return Gp(r,[0,t,0],[r.shape[0],e,r.shape[2]]);case 3:return J0(r,t,e);default:throw new O(`The axis is not within the rank of the tensor ${o}`)}case 4:switch(o){case 1:return Os(r,t,e);case 2:return qc(r,[0,t,0,0],[r.shape[0],e,r.shape[2],r.shape[3]]);case 3:return qc(r,[0,0,t,0],[r.shape[0],r.shape[1],e,r.shape[3]]);case 4:return J0(r,t,e);default:throw new O(`The axis is not within the rank of the tensor ${o}`)}default:throw new O(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function nu(r,t=-1){let e;return t<0&&(e=r[0].rank,e!==0?t=e:t=0),t===r[0].rank&&(t=-1),ne(r,t)}function tw(r,t){switch(r.rank){case 1:return Jb([r,t]);case 2:return Qb([r,t],0);case 3:return t0([r,t],0);case 4:return e0([r,t],0);default:throw new O(`concatAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}}function Td(r,t){if(Array.isArray(t)||(t=[t]),r.rank!==t.length)throw new O(`The length of input n (${t.length}) does not match the number of dimensions in input x (${r.rank})`);return sr(r,t)}function su(r,t=0,e=1,o,n){return Qh(r,t,e,o,n)}function vo(r,t,e,o){if(r.rank<2||t.rank<2)throw new wt(`dot requires both inputs to be rank >= 2 but got x shape = ${r.shape} and y shape = ${t.shape}`);if(t.rank>=3){let n=r.shape.slice(-1)[0],s=t.shape.slice(-2)[0];if(n!==s)throw new wt(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${r.shape} and  y shape = ${t.shape}`)}if(r.rank===2&&t.rank===2)return al.matMul({a:r,b:t,transposeA:!1,transposeB:!1,bias:o?Q0(r.rank,o,Nr()):null,activation:e});{let n=r.shape.slice(),s=n.pop();r=F(r,[-1,s]);let i=t.shape.slice(),a=i.pop(),l=i.pop(),c=[...i,a],u=Array.from({length:t.rank},(h,d)=>d===0?t.rank-2:d<=t.rank-2?d-1:d);t=F(Rt(t,u),[l,-1]);let p=[...n,...c];return F(al.matMul({a:r,b:t,transposeA:!1,transposeB:!1,bias:o?Q0(r.rank,o,Nr()):null,activation:e}),p)}}function kd(r,t,e){return z(()=>(Array.isArray(t)?t=Ee(t,"int32"):t=Y(t,"int32"),ja(r,t,e)))}function ul(r){return R(r,r)}function Q0(r,t,e){let o=t.shape;if(t.rank!==1&&t.rank!==r)throw new O(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${r}`);if(r===5){if(e==="channelsFirst")return o.length===1?F(t,[1,o[0],1,1,1]):F(t,[1,o[3],o[0],o[1],o[2]]);if(e==="channelsLast")return o.length===1?F(t,[1,1,1,1,o[0]]):F(t,[1].concat(o))}else if(r===4){if(e==="channelsFirst")return o.length===1?F(t,[1,o[0],1,1]):F(t,[1,o[2],o[0],o[1]]);if(e==="channelsLast")return o.length===1?F(t,[1,1,1,o[0]]):F(t,[1].concat(o))}else if(r===3){if(e==="channelsFirst")return o.length===1?F(t,[1,o[0],1]):F(t,[1,o[1],o[0]]);if(e==="channelsLast")return o.length===1?F(t,[1,1,o[0]]):F(t,[1].concat(o))}else if(r<3)return t;throw new O(`Unsupported input rank by biasAdd: ${t.rank}`)}function Tr(r,t,e){return z(()=>(e==null&&(e=Nr()),ce(e),j(r,Q0(r.rank,t,e))))}function z1(r,t=1){if(t!==1)throw new wt(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return $s(r)}function B1(r){return z(()=>nt(r,j(De(r),1)))}function Ed(r,t,e,o){return z(()=>Lv(r,t,e,o))}function M1(r){return z(()=>{let t=j(.5,R(.2,r));return Ze(t,0,1)})}function sa(r,t,e=!1){return e?r():t()}var V1=["fanIn","fanOut","fanAvg"],G1=["normal","uniform","truncatedNormal"];function aG(r){xn(V1,"FanMode",r)}function lG(r){xn(G1,"Distribution",r)}var kr=class extends H.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},Qp=class extends kr{apply(t,e){return ie(t,e)}};Qp.className="Zeros";H.registerClass(Qp);var pl=class extends kr{apply(t,e){return Cr(t,e)}};pl.className="Ones";H.registerClass(pl);var tm=class extends kr{constructor(t){if(super(),typeof t!="object")throw new O(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new O(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return z(()=>R(bt(this.value),Cr(t,e)))}getConfig(){return{value:this.value}}};tm.className="Constant";H.registerClass(tm);var em=class extends kr{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return zo(t,this.minval,this.maxval,e,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};em.className="RandomUniform";H.registerClass(em);var rm=class extends kr{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new wt(`randomNormal does not support dType ${e}.`);return su(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};rm.className="RandomNormal";H.registerClass(rm);var om=class extends kr{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new wt(`truncatedNormal does not support dType ${e}.`);return Wp(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};om.className="TruncatedNormal";H.registerClass(om);var nm=class extends kr{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,e){return z(()=>{if(t.length!==2||t[0]!==t[1])throw new O("Identity matrix initializer can only be used for 2D square matrices.");return R(this.gain,Bc(t[0]))})}getConfig(){return{gain:this.gain}}};nm.className="Identity";H.registerClass(nm);function cG(r,t="channelsLast"){let e,o;if(ce(t),r.length===2)e=r[0],o=r[1];else if([3,4,5].indexOf(r.length)!==-1){if(t==="channelsFirst"){let n=So(r,2);e=r[1]*n,o=r[0]*n}else if(t==="channelsLast"){let n=So(r,0,r.length-2);e=r[r.length-2]*n,o=r[r.length-1]*n}}else{let n=So(r);e=Math.sqrt(n),o=Math.sqrt(n)}return[e,o]}var gr=class extends kr{constructor(t){if(super(),t.scale<0)throw new O(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,aG(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,lG(this.distribution),this.seed=t.seed}apply(t,e){let o=cG(t),n=o[0],s=o[1],i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,n):this.mode==="fanOut"?i/=Math.max(1,s):i/=Math.max(1,(n+s)/2),this.distribution==="normal"){let a=Math.sqrt(i);if(e=e||"float32",e!=="float32"&&e!=="int32")throw new wt(`${this.getClassName()} does not support dType ${e}.`);return Wp(t,0,a,e,this.seed)}else{let a=Math.sqrt(3*i);return zo(t,-a,a,e,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};gr.className="VarianceScaling";H.registerClass(gr);var iu=class extends gr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return gr.className}};iu.className="GlorotUniform";H.registerClass(iu);var au=class extends gr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return gr.className}};au.className="GlorotNormal";H.registerClass(au);var lu=class extends gr{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return gr.className}};lu.className="HeNormal";H.registerClass(lu);var cu=class extends gr{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return gr.className}};cu.className="HeUniform";H.registerClass(cu);var uu=class extends gr{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return gr.className}};uu.className="LeCunNormal";H.registerClass(uu);var pu=class extends gr{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return gr.className}};pu.className="LeCunUniform";H.registerClass(pu);var sm=class extends kr{constructor(t){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed}apply(t,e){return z(()=>{if(t.length<2)throw new wt("Shape must be at least 2D.");if(e!=="int32"&&e!=="float32"&&e!==void 0)throw new TypeError(`Unsupported data type ${e}.`);e=e;let o=y.sizeFromShape(t.slice(0,-1)),n=t[t.length-1],s=o*n;s>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${s}) elements: Slowness may result.`);let i=[Math.max(n,o),Math.min(n,o)],a=su(i,0,1,e,this.seed),l=sN.qr(a,!1),c=l[0],p=l[1].flatten().stridedSlice([0],[Math.min(n,o)*Math.min(n,o)],[Math.min(n,o)+1]);return c=R(c,p.sign()),o<n&&(c=c.transpose()),R(bt(this.gain),c.reshape(t))})}getConfig(){return{gain:this.gain,seed:this.seed}}};sm.className="Orthogonal";H.registerClass(sm);var U1={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function W1(r,t={}){return gn(r,H.SerializationMap.getMap().classNameMap,t,"initializer")}function re(r){return ru(r)}function Yt(r){if(typeof r=="string"){let t=r in U1?U1[r]:r;if(t==="GlorotNormal")return new au;if(t==="GlorotUniform")return new iu;if(t==="HeNormal")return new lu;if(t==="HeUniform")return new cu;if(t==="LeCunNormal")return new uu;if(t==="LeCunUniform")return new pu;{let e={};return e.className=t,e.config={},W1(e)}}else return r instanceof kr?r:W1(r)}function Ad(r){return Array.isArray(r)&&Array.isArray(r[0])}function mu(r){return r.length===0?[]:Array.isArray(r[0])?r:[r]}function xt(r){let t;if(Array.isArray(r)){if(r.length!==1)throw new O(`Expected Tensor length to be 1; got ${r.length}`);t=r[0]}else t=r;return t}function Dt(r){if(Array.isArray(r)&&Array.isArray(r[0])){if(r.length===1)return r=r,r[0];throw new O(`Expected exactly 1 Shape; got ${r.length}`)}else return r}function fu(r){let t=0;for(let e of r)e.shape.length===0?t+=1:t+=e.shape.reduce((o,n)=>o*n);return t}var q1="Variable",im=class{constructor(t,e="float32",o=q1,n=!0,s=null){this.dtype=e??"float32",this.shape=t.shape,this.id=Id(),o=o??q1,this.originalName=Sd(o),this.name=vd(this.originalName),this.trainable_=n,this.constraint=s,this.val=E0(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),pG(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}};function pG(r,t){if(r.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(r.shape)+" vs. "+JSON.stringify(t.shape))}function am(r){return r.map(t=>t.read())}function hu(r){r.forEach(t=>{t[0].write(t[1])})}var Qt=class{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}},xr=class{constructor(t,e,o,n,s,i,a){this.dtype=t,this.shape=e,this.sourceLayer=o,this.inputs=n,this.callArgs=s,this.outputTensorIndex=a,this.id=Id(),i!=null&&(this.originalName=Sd(i),this.name=vd(this.originalName)),this.rank=e.length}},mG=0,Ps=class{constructor(t,e){this.callArgs=e,this.id=mG++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(let o of t.inboundLayers)o?.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){let t=[];for(let e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},fG=0,Ct=class extends H.Serializable{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=fG++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){let o=this.getClassName();e=Co(o)+"_"+na(o)}if(this.name=e,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let o;if(t.batchInputShape!=null)o=t.batchInputShape;else if(t.inputShape!=null){let s=null;t.batchSize!=null&&(s=t.batchSize),o=[s].concat(t.inputShape)}this.batchInputShape=o;let n=t.dtype;n==null&&(n=t.inputDType),n==null&&(n="float32"),this.dtype=n}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(this.inboundNodes.length===0)throw new Ir(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new O(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return We(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return We(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new io(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new io(`Layer ${this.name} is not connected, no input to return.`);return We(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new io(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new io(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return We(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){let e=Ht(t);if(this.inputSpec==null||this.inputSpec.length===0)return;let o=Ht(this.inputSpec);if(e.length!==o.length)throw new O(`Layer ${this.name} expects ${o.length} inputs, but it received ${e.length} input tensors. Input received: ${t}`);for(let n=0;n<e.length;n++){let s=e[n],i=o[n];if(i==null)continue;let a=s.rank;if(i.ndim!=null&&a!==i.ndim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${a}`);if(i.maxNDim!=null&&a>i.maxNDim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${a}`);if(i.minNDim!=null&&a<i.minNDim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${a}.`);if(i.dtype!=null&&s.dtype!==i.dtype)throw new O(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${s.dtype}.`);if(i.axes){let l=s.shape;for(let c in i.axes){let u=Number(c),p=i.axes[c],m=u>=0?l[u]:l[l.length+u];if(p!=null&&[p,null].indexOf(m)===-1)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${p} but got shape ${l}.`)}}if(i.shape!=null)for(let l=0;l<i.shape.length;++l){let c=i.shape[l],u=s.shape[l];if(c!=null&&u!=null&&c!==u)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${s.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){this._callHook!=null&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();let o=Ht(t),n=gG(t),s=xG(t);if(n===s)throw new O("Arguments to apply() must be all SymbolicTensors or all Tensors");return Go(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);let i=[];for(let a of Ht(t))i.push(a.shape);this.build(We(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&s&&(this._refCount=1)}if(this.assertInputCompatibility(t),s){let i=this.call(t,e);this.supportsMasking&&this.setMaskMetadata(t,i);let a=Ht(i),l=[];for(let c of a)o.indexOf(c)!==-1&&(c=c.clone()),l.push(c);if(i=We(l),this.activityRegularizer!=null)throw new wt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{let i=hG(t),a=this.computeOutputShape(i),l,c=dG(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?i[0]:i),a!=null&&a.length>0&&Array.isArray(a[0])?l=a.map((u,p)=>new xr(c,u,this,Ht(t),e,this.name,p)):l=new xr(c,a,this,Ht(t),e,this.name),this.addInboundNode(t,l,null,null,i,a,e),this._refCount++,this.activityRegularizer!=null)throw new wt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((o,n)=>{o!=null&&t[n]!=null&&t[n]!==o&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new io(`The layer ${this.name} has never been called and thus has no defined output shape.`);let t=[];for(let e of this.inboundNodes){let o=JSON.stringify(e.outputShapes);t.indexOf(o)===-1&&t.push(o)}if(t.length===1){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&e.length===1?e[0]:e}else throw new io(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Ir(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return fu(this.weights)}build(t){this.built=!0}getWeights(t=!1){return am(t?this.trainableWeights:this.weights)}setWeights(t){z(()=>{let e=this.weights;if(e.length!==t.length)throw new O(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(e.length===0)return;let o=[],n=am(e);for(let s=0;s<n.length;++s){let i=n[s],a=e[s],l=t[s];if(!y.arraysEqual(i.shape,l.shape))throw new O(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);o.push([a,l])}hu(o)})}addWeight(t,e,o,n,s,i,a,l){if(this._addedWeightNames.indexOf(t)!==-1)throw new O(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),o==null&&(o="float32"),this.fastWeightInitDuringBuild&&(n=l!=null?l():Yt("zeros"));let c=n.apply(e,o),u=new im(c,o,t,i,a);return c.dispose(),s!=null&&this.addLoss(()=>s.apply(u.read())),i==null&&(i=!0),i?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=Ht(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(e!=null)if(Array.isArray(e))e.forEach(o=>{if(o!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return e}setMaskMetadata(t,e,o){if(!this.supportsMasking)return;let n=this.computeMask(t,o),s=Ht(e),i=Ht(n);if(s.length!==i.length)throw new Error(`${this.name} outputs ${s.length} tensors but ${s.length} masks for those tensors`);for(let a=0;a<s.length;a++)s[a].kerasMask=i[a]}addInboundNode(t,e,o,n,s,i,a=null){let l=Ht(t);e=Ht(e),o=Ht(o),n=Ht(n),s=mu(s),i=mu(i);let c=[],u=[],p=[];for(let m of l)c.push(m.sourceLayer),u.push(m.nodeIndex),p.push(m.tensorIndex);new Ps({outboundLayer:this,inboundLayers:c,nodeIndices:u,tensorIndices:p,inputTensors:l,outputTensors:e,inputMasks:o,outputMasks:n,inputShapes:s,outputShapes:i},a);for(let m=0;m<e.length;m++)e[m].sourceLayer=this,e[m].nodeIndex=this.inboundNodes.length-1,e[m].tensorIndex=m}getConfig(){let t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount===0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}};function hG(r){r=Ht(r);let t=[];for(let e of r)t.push(e.shape);return We(t)}function dG(r){return"float32"}function ew(r,t,e){if((t==null||e!=null&&e>0)&&(t=r.sourceLayer,e=r.nodeIndex),t.inboundNodes.length===0)return[r];{let o=t.inboundNodes[e];if(o.inboundLayers.length===0)return o.inputTensors;{let n=[];for(let s=0;s<o.inboundLayers.length;s++){let i=o.inputTensors[s],a=o.inboundLayers[s],l=o.nodeIndices[s],c=ew(i,a,l);for(let u of c)n.indexOf(u)===-1&&n.push(u)}return n}}}function gG(r){let t=!0;for(let e of Ht(r))if(!(e instanceof xr)){t=!1;break}return t}function xG(r){let t=!0;for(let e of Ht(r))if(e instanceof xr){t=!1;break}return t}var yn=class extends Ct{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:na("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new O("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(e==null){if(t.inputShape==null)throw new O("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new O("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let o=t.dtype||"float32";this.batchInputShape=e,this.dtype=o,this.inputSpec=[{shape:e}];let n=new xr(this.dtype,this.batchInputShape,this,[],{},this.name);n.nodeIndex=0,n.tensorIndex=0,new Ps({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[n],outputTensors:[n],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new O(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};yn.className="InputLayer";H.registerClass(yn);function rw(r){if(r.batchShape==null&&r.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(r.batchShape!=null&&r.shape!=null)throw new O("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=r.batchShape;r.shape!=null&&t==null&&(t=[null].concat(r.shape));let e=r.dtype;return e==null&&(e="float32"),new yn({batchInputShape:t,name:r.name,dtype:e,sparse:r.sparse}).inboundNodes[0].outputTensors[0]}function yG(r,t){if(r.dtype==null||r.dtype===t.dtype)return t;try{return Y(t,r.dtype)}catch{throw new O(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${r.name}' (${r.dtype}).`)}}var bn=class r{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof r)for(let e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(let e of t)this.add(e.key,e.value)}}add(t,e,o){if(this.id2Value[t.id]==null)this.id2Value[t.id]=yG(t,e),this.name2Id[t.name]=t.id,o!=null&&(this.id2Mask[t.id]=o);else throw new O(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof xr){if(this.id2Value[t.id]==null)throw new O(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{let e=this.name2Id[t];if(e==null)throw new O(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof xr){if(this.id2Value[t.id]==null)throw new O(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{let e=this.name2Id[t];if(e==null)throw new O(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&vt(this.id2Mask)}},$d=new Xp,Dd=new Xp;function j1(r){$d?.setMaxEntries(r),Dd?.setMaxEntries(r)}function ml(r,t,e,o){let n=e==null?!1:e.training,s=Array.isArray(r),i=s?r:[r],a=i.map(h=>h.name),l=[],c=t.names();for(let h of a)c.indexOf(h)!==-1?l.push(t.getValue(h)):l.push(null);o!=null&&(o.maxNumTensors=-1/0,o.minNumTensors=1/0);let u=a.join(",")+"|"+t.names().sort().join(","),p=$d.get(u),m;if(p==null){let h=bG(i,t);p=h.sorted,m=h.recipientCounts,$d.put(u,p),Dd.put(u,m)}m={},n||Object.assign(m,Dd.get(u));let f=new bn(t);for(let h=0;h<p.length;++h){if(o!=null){let _=wp().numTensors;_>o.maxNumTensors&&(o.maxNumTensors=_),_<o.minNumTensors&&(o.minNumTensors=_)}let d=p[h],g=d.sourceLayer;if(g instanceof yn)continue;let x=[],b=[],C=[],w=!1;for(let _ of d.inputs){let L=f.getValue(_),M=f.getMask(_);x.push(L),b.push(M),M!=null&&(w=!0),n||(m[_.name]--,m[_.name]===0&&!t.hasKey(_)&&a.indexOf(_.name)===-1&&!L.isDisposed&&_.sourceLayer.stateful!==!0&&C.push(L))}w&&(e=e||{},e.mask=b[0]);let I=Ht(g.apply(x,e)),E=null;g.supportsMasking&&(E=g.computeMask(x,b));let A=CG(d),$=Array.isArray(A)?A:[A];for(let _=0;_<$.length;++_){f.hasKey($[_])||f.add($[_],I[_],Array.isArray(E)?E[0]:E);let L=a.indexOf($[_].name);L!==-1&&(l[L]=I[_])}n||vt(C)}return f.disposeMasks(),s?l:l[0]}function bG(r,t){y.assert(r!=null&&r.length>0,()=>"Expected at least one fetch, got none");let e=[],o={};if(r.length===1){let n=K1(r[0],t);e=n.sorted,o=n.recipientMap}else{let n=new Set;for(let s of r){let{sorted:i,recipientMap:a}=K1(s,t);for(let l of i)n.has(l.name)||(e.push(l),n.add(l.name));for(let l in a)o[l]==null&&(o[l]=new Set),a[l].forEach(c=>o[l].add(c))}}return{sorted:e,recipientCounts:wG(o)}}function wG(r){let t={};for(let e in r)t[e]=r[e].size;return t}function K1(r,t){let e=new Set,o=[],n={};for(let a of t.names())e.add(a);let s=[],i=[];for(s.push(r);s.length>0;){let a=s[s.length-1];if(e.has(a.name)){s.pop();continue}let l=i[i.length-1]===s.length-1;if(a.inputs.length===0||l)s.pop(),o.push(a),e.add(a.name),l&&i.pop();else{i.push(s.length-1);for(let c of a.inputs)n[c.name]==null&&(n[c.name]=new Set),n[c.name].add(a.name),!e.has(c.name)&&s.push(c)}}return{sorted:o,recipientMap:n}}function CG(r){let t;if(r.sourceLayer.inboundNodes.length===1)t=r.sourceLayer.output;else{let e=null;for(let o=0;o<r.sourceLayer.inboundNodes.length;++o)for(let n of r.sourceLayer.inboundNodes[o].outputTensors)if(n.id===r.id){e=o;break}t=r.sourceLayer.getOutputAt(e)}return t}var IG=P();IG.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,j1);function ow(r,t){return z(()=>Jt(lt(R(r,r),t,!0)))}var fl=class extends H.Serializable{getConfig(){return{}}},lm=class extends fl{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return z(()=>{let e=ow(t,this.axis),o=Ze(e,0,this.maxValue);return R(t,nt(o,j(Fe(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};lm.className="MaxNorm";H.registerClass(lm);var cm=class extends fl{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return z(()=>nt(t,j(Fe(),ow(t,this.axis))))}getConfig(){return{axis:this.axis}}};cm.className="UnitNorm";H.registerClass(cm);var um=class extends fl{apply(t){return Hr(t)}};um.className="NonNeg";H.registerClass(um);var pm=class extends fl{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return z(()=>{let e=ow(t,this.axis),o=j(R(this.rate,Ze(e,this.minValue,this.maxValue)),R(1-this.rate,e));return R(t,nt(o,j(Fe(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};pm.className="MinMaxNorm";H.registerClass(pm);var X1={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function he(r){return ru(r)}function Y1(r,t={}){return gn(r,H.SerializationMap.getMap().classNameMap,t,"constraint")}function de(r){if(r==null)return null;if(typeof r=="string"){let e={className:r in X1?X1[r]:r,config:{}};return Y1(e)}else return r instanceof fl?r:Y1(r)}function zs(r){return B(this,null,function*(){if(r==null)return;let t=[],e=[],o=[];for(let n in r){let s=r[n];if(typeof s!="number"){let i=s;t.push(i.data()),e.push(n),o.push(i)}}if(t.length>0){let n=yield Promise.all(t);for(let s=0;s<n.length;++s)r[e[s]]=n[s][0];vt(o)}})}function Rd(r){if(r!=null)for(let t in r){let e=r[t];typeof e!="number"&&e.dispose()}}var Z1;(function(r){r[r.SILENT=0]="SILENT",r[r.VERBOSE=1]="VERBOSE"})(Z1||(Z1={}));var NG=125,ia=class{constructor(){this.validationData=null}setParams(t){this.params=t}onEpochBegin(t,e){return B(this,null,function*(){})}onEpochEnd(t,e){return B(this,null,function*(){})}onBatchBegin(t,e){return B(this,null,function*(){})}onBatchEnd(t,e){return B(this,null,function*(){})}onTrainBegin(t){return B(this,null,function*(){})}onTrainEnd(t){return B(this,null,function*(){})}setModel(t){}},Fd=class{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(let e of this.callbacks)e.setParams(t)}setModel(t){for(let e of this.callbacks)e.setModel(t)}onEpochBegin(t,e){return B(this,null,function*(){e==null&&(e={});for(let o of this.callbacks)yield o.onEpochBegin(t,e)})}onEpochEnd(t,e){return B(this,null,function*(){e==null&&(e={});for(let o of this.callbacks)yield o.onEpochEnd(t,e)})}onBatchBegin(t,e){return B(this,null,function*(){e==null&&(e={});for(let o of this.callbacks)yield o.onBatchBegin(t,e)})}onBatchEnd(t,e){return B(this,null,function*(){e==null&&(e={});for(let o of this.callbacks)yield o.onBatchEnd(t,e)})}onTrainBegin(t){return B(this,null,function*(){t==null&&(t={});for(let e of this.callbacks)yield e.onTrainBegin(t)})}onTrainEnd(t){return B(this,null,function*(){t==null&&(t={});for(let e of this.callbacks)yield e.onTrainEnd(t)})}},nw=class extends ia{constructor(){super()}onEpochBegin(t){return B(this,null,function*(){this.seen=0,this.totals={}})}onBatchEnd(t,e){return B(this,null,function*(){e==null&&(e={});let o=e.size==null?0:e.size;this.seen+=o;for(let n in e){let s=e[n];if(typeof s=="number")this.totals.hasOwnProperty(n)||(this.totals[n]=0),this.totals[n]=this.totals[n]+s*o;else{let i;n in this.totals?i=this.totals[n]:this.totals[n]=0;let a=z(()=>j(this.totals[n],R(s,o)));this.totals[n]=a,i?.dispose()}}})}onEpochEnd(t,e){return B(this,null,function*(){if(e!=null)for(let o of this.params.metrics)this.totals[o]!=null&&(typeof this.totals[o]=="number"?e[o]=this.totals[o]/this.seen:z(()=>{let n=R(nt(1,this.seen),this.totals[o]);e[o]=n,this.totals[o].dispose(),Be(e[o])}))})}},_d=class extends ia{onTrainBegin(t){return B(this,null,function*(){this.epoch=[],this.history={}})}onEpochEnd(t,e){return B(this,null,function*(){e==null&&(e={}),this.epoch.push(t);for(let o in e)this.history[o]==null&&(this.history[o]=[]),this.history[o].push(e[o])})}syncData(){return B(this,null,function*(){let t=[],e=[],o=[];for(let s in this.history){let i=this.history[s];for(let a=0;a<i.length;++a)if(typeof i[a]!="number"){let l=i[a];t.push(l.data()),e.push(s),o.push(a)}}let n=yield Promise.all(t);for(let s=0;s<n.length;++s)this.history[e[s]][o[s]].dispose(),this.history[e[s]][o[s]]=n[s][0]})}},Od=class extends ia{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||jp,this.yieldEvery=e||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=NG),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");y.isNumber(this.yieldEvery)&&(this.maybeWait=N1(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}maybeWait(t,e,o){return B(this,null,function*(){let n=[];this.yield!=null&&(yield zs(o),n.push(this.yield(t,e,o))),n.push(this.nextFrameFunc()),yield Promise.all(n)})}onEpochBegin(t,e){return B(this,null,function*(){this.currentEpoch=t,this.epochBegin!=null&&(yield zs(e),yield this.epochBegin(t,e))})}onEpochEnd(t,e){return B(this,null,function*(){let o=[];this.epochEnd!=null&&(yield zs(e),o.push(this.epochEnd(t,e))),this.yieldEvery==="epoch"&&o.push(this.nextFrameFunc()),yield Promise.all(o)})}onBatchBegin(t,e){return B(this,null,function*(){this.batchBegin!=null&&(yield zs(e),yield this.batchBegin(t,e))})}onBatchEnd(t,e){return B(this,null,function*(){let o=[];this.batchEnd!=null&&(yield zs(e),o.push(this.batchEnd(t,e))),this.yieldEvery==="batch"?o.push(this.nextFrameFunc()):y.isNumber(this.yieldEvery)&&o.push(this.maybeWait(this.currentEpoch,t,e)),yield Promise.all(o)})}onTrainBegin(t){return B(this,null,function*(){this.trainBegin!=null&&(yield zs(t),yield this.trainBegin(t))})}onTrainEnd(t){return B(this,null,function*(){this.trainEnd!=null&&(yield zs(t),yield this.trainEnd(t))})}};function Ld(r,t){return r==null&&(r={}),r instanceof ia?[r]:Array.isArray(r)&&r[0]instanceof ia?r:Ht(r).map(o=>new Od(o,t))}var mm=class r{constructor(){}static registerCallbackConstructor(t,e){y.assert(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),r.checkForDuplicate(e),r.constructors[t]==null&&(r.constructors[t]=[]),r.constructors[t].push(e)}static checkForDuplicate(t){for(let e in r.constructors)r.constructors[+e].forEach(n=>{if(n===t)throw new O("Duplicate callback constructor.")})}static clear(){r.constructors={}}static createCallbacks(t){let e=[];for(let o in r.constructors){let n=+o;t>=n&&e.push(...r.constructors[n])}return e.map(o=>new o)}};mm.constructors={};function Pd(r,t,e,o,n,s,i,a,l){let c=new _d,u=[new nw,...mm.createCallbacks(t)];r!=null&&u.push(...r),u.push(c);let p=new Fd(u);return p.setParams({epochs:e,initialEpoch:o,samples:n,steps:s,batchSize:i,verbose:t,doValidation:a,metrics:l}),{callbackList:p,history:c}}function Kr(r,t={},e=!1){return gn(r,H.SerializationMap.getMap().classNameMap,t,"layer",e)}function fm(r,t){return z(()=>{r.dtype!=="float32"&&(r=Y(r,"float32"));let e=lt(ul(r),t,!0),o=Es(e.shape,Fe()),n=Jt(Wr(e,o));return nt(r,n)})}function hl(r,t){return z(()=>le(ul(ut(t,r)),-1))}function dm(r,t){return z(()=>le(De(ut(t,r)),-1))}function gm(r,t){return z(()=>{let e=ut(r,t),o=Ze(De(r),Fe(),Number.MAX_VALUE),n=De(nt(e,o));return R(100,le(n,-1))})}function TG(r,t){return z(()=>{let e=Ze(t,Fe(),Number.MAX_VALUE),o=wr(j(1,e)),n=Ze(r,Fe(),Number.MAX_VALUE),s=wr(j(1,n));return le(ul(ut(o,s)),-1)})}function kG(r,t){return z(()=>{let e=Wr(0,ut(1,R(r,t)));return le(ul(e),-1)})}function EG(r,t){return z(()=>{let e=Wr(0,ut(1,R(r,t)));return le(e,-1)})}function AG(r,t){return z(()=>{let e=lt(R(r,t),-1),o=Je(R(ut(1,r),t),-1);return Wr(0,j(1,ut(o,e)))})}function $G(r,t){return z(()=>{let e=Math.log(2),o=ut(t,r),n=ut(j(o,fn(R(-2,o))),e);return le(n,-1)})}function dl(r,t,e=!1){return z(()=>{if(e)t=rl(t);else{let o=lt(t,t.shape.length-1,!0);t=nt(t,o)}return t=Ze(t,Fe(),1-Fe()),Mt(lt(R(Y(r,"float32"),wr(t)),t.shape.length-1))})}function du(r,t,e=!1){return z(()=>{let o=Y(Ds(L1(r)),"int32");t=Ze(t,Fe(),1-Fe());let n=t.shape,s=F(Uc(o,n[n.length-1]),n);return dl(s,t,e)})}function DG(r,t){if(!y.arraysEqual(r.shape,t.shape))throw new O(`logits and labels must have the same shape, but got shapes ${JSON.stringify(r.shape)} and ${JSON.stringify(t.shape)}`);return z(()=>{let e=Hr(t),o=Mt(De(t));return j(ut(e,R(t,r)),Dp(Ve(o)))})}function gu(r,t){return z(()=>{let e;return e=Ze(t,Fe(),1-Fe()),e=wr(nt(e,ut(1,e))),le(DG(r,e),-1)})}function RG(r,t){return z(()=>{let e=Ze(r,Fe(),1),o=Ze(t,Fe(),1);return lt(R(r,wr(nt(e,o))),-1)})}function FG(r,t){return z(()=>{let e=wr(j(Fe(),t));return le(ut(t,R(r,e)),-1)})}function zd(r,t){return z(()=>{let e=fm(r,-1),o=fm(t,-1),n=R(e,o);return Mt(lt(n,-1))})}var hm={meanSquaredError:hl,meanAbsoluteError:dm,meanAbsolutePercentageError:gm,meanSquaredLogarithmicError:TG,squaredHinge:kG,hinge:EG,categoricalHinge:AG,logcosh:$G,categoricalCrossentropy:dl,sparseCategoricalCrossentropy:du,binaryCrossentropy:gu,kullbackLeiblerDivergence:RG,poisson:FG,cosineProximity:zd};function Bd(r){if(typeof r=="string"){if(r in hm)return hm[r];let t=`Unknown loss ${r}`;throw r.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${r}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new O(t)}else return r}function Vd(r,t){return z(()=>{let e=R(.5,Ge(t)),o=dr(we(t,e),r.dtype);return le(br(r,o),-1)})}function Gd(r,t){return z(()=>dr(br(eo(r,-1),eo(t,-1)),"float32"))}function _G(r,t){return z(()=>Y(lt(fr(br(r,1),br(t,1))),"float32"))}function OG(r,t){return z(()=>Y(lt(fr(br(r,0),br(t,1))),"float32"))}function Q1(r,t){return z(()=>{let e=_G(r,t),o=OG(r,t),n=j(e,o);return Y(se(we(n,0),nt(e,n),0),"float32")})}function sw(r,t){return gu(r,t)}function iw(r,t){return r.rank===t.rank&&(r=Bo(r,[r.rank-1])),t=eo(t,-1),t.dtype!==r.dtype&&(t=Y(t,r.dtype)),Y(br(r,t),"float32")}var LG=hl,PG=hl,zG=dm,BG=dm,MG=gm,VG=gm,Ud=dl,GG=zd,aw=du,Md={binaryAccuracy:Vd,categoricalAccuracy:Gd,precision:Q1,categoricalCrossentropy:Ud,sparseCategoricalCrossentropy:aw,mse:LG,MSE:PG,mae:zG,MAE:BG,mape:MG,MAPE:VG,cosine:GG};function tk(r){if(typeof r=="string"&&r in Md)return Md[r];if(typeof r!="string"&&r!=null)return r;throw new O(`Unknown metric ${r}`)}function xm(r){if(ao(r!==null,`Unknown LossOrMetricFn ${r}`),typeof r=="string")return r;{let t;for(let e of Object.keys(hm))if(hm[e]===r){t=e;break}if(t!==void 0)return t;for(let e of Object.keys(Md))if(Md[e]===r){t=e;break}return t!==void 0?t:r.name}}function rk(r){let t={Adagrad:()=>ll.adagrad(.01),Adadelta:()=>ll.adadelta(1,.95,Fe()),Adam:()=>ll.adam(.001,.9,.999,Fe()),Adamax:()=>ll.adamax(.002,.9,.999,Fe(),0),RMSProp:()=>ll.rmsprop(.001,.9,0,Fe()),SGD:()=>ll.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,r in t)return t[r]();throw new O(`Unknown Optimizer ${r}`)}function cw(r,t,e=!1){if(r==null||typeof r!="object"||Object.getPrototypeOf(r)!==Object.prototype||!lw(r))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){let o=JSON.stringify(r);o.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${o.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function lw(r){if(r===null)return!0;if(typeof r=="object")if(Object.getPrototypeOf(r)===Object.prototype){let t=Object.keys(r);for(let e of t)if(typeof e!="string"||!lw(r[e]))return!1;return!0}else if(Array.isArray(r)){for(let t of r)if(!lw(t))return!1;return!0}else return!1;else{let t=typeof r;return t==="string"||t==="number"||t==="boolean"}}function ok(r,t,e,o=console.log){let n=HG(r),s=["Layer (type)","Input Shape","Output shape","Param #"];n?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(u=>Math.floor(t*u)));let i;if(!n){s.push("Receives inputs"),i=[];for(let u in r.nodesByDepth)i.push(...r.nodesByDepth[u])}o("_".repeat(t)),Wd(s,e,o),o("=".repeat(t));let a=r.layers;for(let u=0;u<a.length;++u)n?qG(a[u],e,o):KG(a[u],e,i,o),o((u===a.length-1?"=":"_").repeat(t));r.checkTrainableWeightsConsistency();let l=WG(r),c=fu(r.nonTrainableWeights);o(`Total params: ${l+c}`),o(`Trainable params: ${l}`),o(`Non-trainable params: ${c}`),o("_".repeat(t))}function WG(r){let t;return r.collectedTrainableWeights!=null?t=fu(r.collectedTrainableWeights):t=fu(r.trainableWeights),t}function HG(r){let t=!0,e=[],o=[];for(let n in r.nodesByDepth)e.push(r.nodesByDepth[n]);for(let n of e){if(n.length>1||n.length===1&&n[0].inboundLayers.length>1){t=!1;break}o.push(...n)}if(t)for(let n of r.layers){let s=!1;for(let i of n.inboundNodes)if(o.indexOf(i)!==-1)if(s){t=!1;break}else s=!0;if(!t)break}return t}function Wd(r,t,e=console.log){let o="";for(let n=0;n<r.length;++n)n>0&&(o=o.slice(0,o.length-1)+" "),o+=r[n],o=o.slice(0,t[n]),o+=" ".repeat(t[n]-o.length);e(o)}function qG(r,t,e){let o,n;try{n=r.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{n="multiple"}try{o=JSON.stringify(r.outputShape)}catch{o="multiple"}let s=r.name,i=r.getClassName(),a=[`${s} (${i})`,n,o,r.countParams().toString()];Wd(a,t,e)}function KG(r,t,e,o){let n,s;try{s=r.inboundNodes.map(p=>JSON.stringify(p.inputShapes)).join(",")}catch{s="multiple"}try{n=JSON.stringify(r.outputShape)}catch{n="multiple"}let i=[];for(let p of r.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(p)===-1))for(let m=0;m<p.inboundLayers.length;++m){let f=p.inboundLayers[m].name,h=p.nodeIndices[m],d=p.tensorIndices[m];i.push(`${f}[${h}][${d}]`)}let a=r.name,l=r.getClassName(),c=i.length===0?"":i[0],u=[`${a} (${l})`,s,n,r.countParams().toString(),c];Wd(u,t,o);for(let p=1;p<i.length;++p)Wd(["","","","",i[p]],t,o)}function nk(r,t,e){return(r==="inboundNodes"||r==="outputLayers"||r==="inputLayers")&&t===0&&typeof e=="string"}function ym(r,t){if(r===null)return null;if(typeof r=="string")return _s(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let e=[],o=r.length;for(let n=0;n<o;++n){let s=r[n];nk(t,n,s)?e.push(s):e.push(ym(s,t))}return e}else{let e={};for(let o of Object.keys(r)){let n=r[o];if(o==="name"&&typeof n=="string")e[o]=n;else{let s=_s(o);e[s]=ym(n,s)}}return e}}function Hd(r,t){if(r==null)return null;if(typeof r=="string")return Co(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let e=[],o=r.length;for(let n=0;n<o;++n){let s=r[n];nk(t,n,s)?e.push(s):e.push(Hd(s,t))}return e}else{let e={};for(let o of Object.keys(r)){let n=r[o],s=Co(o);(o==="name"||o==="className")&&typeof n=="string"?e[s]=n:e[s]=Hd(n,o)}return e}}var xu="4.21.0";var jG=r=>{let t=Object.keys(r);if(t.length===0)return!1;let e=t[0].split("/");return!isNaN(parseInt(e[e.length-1],10))},qd=class r extends Ct{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){let b=this.getClassName().toLowerCase();this.name=na(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],Io(this.inputs).length!==this.inputs.length)throw new O(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);Io(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let b of this.outputs){let C=b.sourceLayer,w=b.nodeIndex,I=b.tensorIndex;this.outputLayers.push(C),this.outputLayersNodeIndices.push(w),this.outputLayersTensorIndices.push(I)}for(let b of this.inputs){let C=b.sourceLayer,w=b.nodeIndex,I=b.tensorIndex;ao(w===0,"input layer has >1 nodes"),ao(I===0,"input layer has >1 tensors"),this.inputLayers.push(C),this.inputLayersNodeIndices.push(w),this.inputLayersTensorIndices.push(I)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){let C=this.inputLayers[b];if(!(C instanceof yn))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${b} (0-based) originates from layer type ${C.getClassName()}.`);this.inputNames.push(C.name),this.feedInputShapes.push(C.batchInputShape),this.feedInputNames.push(C.name)}for(let b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);let e={},o={},n={},s={},i={},a=[],l=(b,C,w,I,E,A)=>{(I==null||E==null||A==null)&&(I=b.sourceLayer,E=b.nodeIndex,A=b.tensorIndex);let $=I.inboundNodes[E];if(w.indexOf($)!==-1)throw new Ir(`The tensor ${b.name} at layer "${I.name}" is part of a cycle.`);if(C.indexOf($)!==-1)return;this.containerNodes.add(r.nodeKey(I,E)),I.id in i||(i[I.id]=Object.keys(i).length),w.indexOf($)===-1&&w.push($);let _=$.inboundLayers.length;for(let L=0;L<_;L++){let M=$.inputTensors[L],V=$.inboundLayers[L],G=$.nodeIndices[L],W=$.tensorIndices[L];l(M,C,w,V,G,W)}for(C.push($);w.indexOf($)>=0;)w.splice(w.indexOf($),1);a.push($)},c=[],u=[];for(let b of this.outputs)l(b,c,u);let p=a.slice().reverse();for(let b of p){o[b.id]=b,b.id in e||(e[b.id]=0);let C=e[b.id],w=n[b.outboundLayer.id]==null?0:n[b.outboundLayer.id];C=Math.max(C,w),n[b.outboundLayer.id]=C,s[b.outboundLayer.id]=b.outboundLayer,e[b.id]=C;for(let I=0;I<b.inboundLayers.length;I++){let E=b.inboundLayers[I],A=b.nodeIndices[I],$=E.inboundNodes[A],_=e[$.id]==null?0:e[$.id];e[$.id]=Math.max(C+1,_),o[$.id]=$}}let m={};for(let b in e){let C=e[b];C in m||(m[C]=[]),m[C].push(o[b])}let f={};for(let b in n){let C=n[b];C in f||(f[C]=[]),f[C].push(s[b])}let h=Object.keys(f).map(b=>parseInt(b,10)).sort(Yp);this.layers=[];for(let b of h){let C=f[b];C.sort((w,I)=>{let E=i[w.id],A=i[I.id];return E<A?-1:E>A?1:0});for(let w of C)w instanceof r&&this.internalContainerRefs.push(w),this.layers.push(w)}this.layersByDepth=f,h=Object.keys(m).map(b=>parseInt(b,10)).sort(Yp);let d=this.inputs.slice(),g=[];for(let b of h)for(let C of m[b]){let w=C.outboundLayer;if(w!=null){for(let I of C.inputTensors)if(d.indexOf(I)===-1)throw new Ir(`Graph disconnected: cannot obtain value for tensor ${I} at layer "${w.name}". The following previous layers were accessed without issue: ${g}`);for(let I of C.outputTensors)d.push(I);g.push(w.name)}}this.nodesByDepth=m;let x=this.layers.map(b=>b.name);for(let b of x){let C=x.filter(w=>w===b).length;if(C!==1)throw new Ir(`The name "${b}" is used ${C} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new Ps({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(let e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(o=>o.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new O("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(let e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){let t=[];for(let e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){let e=[];for(let o of this.layers)e.push(...o.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){let o={},n=0,s=jG(t);s&&this.parseWeights(t);for(let a of this.layers)for(let[l,c]of a.weights.entries()){let u=s?`${c.name.split("/").slice(0,-1).join("/")+"/"}${l}`:c.originalName;if(o[u]!=null)throw new O(`Duplicate weight name: ${u}`);o[u]=c,n++}let i=[];for(let a in t){let l=a;if(o[a]==null){let c=a.split("/");l=c.slice(0,-2).concat([c[c.length-1]]).join("/")}if(o[l]!=null)i.push([o[l],t[a]]);else if(e)throw new O(`Provided weight data has no target variable: ${a}`);delete o[l]}if(e){let a=[];for(let l in o)a.push(l);if(a.length>0)throw new O(`${a.length} of ${n} weights are not set: ${a}`)}hu(i)}parseWeights(t){for(let e in Object.keys(t)){let o=e.split("/"),n=["vars","layer_checkpoint_dependencies"],s=o.map(i=>i.startsWith("_")?i.slice(1):i).filter(i=>!n.includes(i)).join("/");s!==e&&(t[s]=t[e],delete t[e])}}updatedConfig(){let t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${xu}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){let o=Hd(this.updatedConfig());return e?JSON.stringify(o):o}call(t,e){return z(()=>{t=Ht(t);let o=new bn;for(let n=0;n<this.inputs.length;++n)o.add(this.inputs[n],t[n]);return ml(this.outputs,o,e)})}computeMask(t,e){return z(()=>{t=Ht(t);let o;return e==null?o=wo(null,t.length):o=Ht(e),this.runInternalGraph(t,o)[1]})}computeOutputShape(t){let e=mu(t);if(e.length!==this.inputLayers.length)throw new O(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);let o={};for(let a=0;a<e.length;a++){let l=this.inputLayers[a],c=e[a],u=l.name+"_0_0";o[u]=c}let n=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(Yp);if(n.length>1)for(let a of n){let l=this.nodesByDepth[a];for(let c of l){let u=c.outboundLayer;if(this.inputLayers.map(d=>d.id).indexOf(u.id)!==-1)continue;let p=[];for(let d=0;d<c.inboundLayers.length;d++){let g=c.inboundLayers[d],x=c.nodeIndices[d],b=c.tensorIndices[d],C=`${g.name}_${x}_${b}`,w=o[C];p.push(w)}let m=u.computeOutputShape(We(p)),f=mu(m),h=u.inboundNodes.indexOf(c);for(let d=0;d<f.length;d++){let g=`${u.name}_${h}_${d}`;o[g]=f[d]}}}let s=[],i=[];for(let a=0;a<this.outputLayers.length;a++){let l=this.outputLayers[a],c=this.outputLayersNodeIndices[a],u=this.outputLayersTensorIndices[a],p=`${l.name}_${c}_${u}`;i.push(p)}for(let a=0;a<i.length;a++){let l=i[a];ao(l in o),s.push(o[l])}return We(s)}runInternalGraph(t,e){e==null&&(e=wo(null,t.length));let o={};for(let l=0;l<this.inputs.length;++l){let c=this.inputs[l],u=t[l],p=e[l];o[c.id]=[u,p]}let n=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Yp);for(let l of n){let c=this.nodesByDepth[l];for(let u of c){let p=u.outboundLayer,m=u.inputTensors,f=u.outputTensors,h=new Array;for(let d of m)d.id in o&&h.push(o[d.id]);if(h.length===m.length){let d={},g,x,b,C;if(u.callArgs!=null&&(d=u.callArgs),h.length===1){let[w,I]=h[0];d.mask==null&&(d.mask=I),b=Ht(p.call(w,d)),C=Ht(p.computeMask(w,I)),g=[w],x=[I]}else g=h.map(w=>w[0]),x=h.map(w=>w[1]),d.mask==null&&(d.mask=x),b=Ht(p.call(g,d)),C=Ht(p.computeMask(g,x));if(p.activityRegularizer)throw new wt("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let w=0;w<f.length;++w){let I=f[w],E=b[w],A=C[w];o[I.id]=[E,A]}}}}let s=[],i=[],a=[];for(let l of this.outputs){ao(l.id in o,`Could not compute output ${l.name} : ${l.id}`);let[c,u]=o[l.id];a.push(c.shape),s.push(c),i.push(u)}return[s,i,a]}buildNodeConversionMap(t){let e={},o;for(let n of this.layers){o=n instanceof r?1:0;for(let s=0;s<n.inboundNodes.length;s++){let i=r.nodeKey(n,s);this.containerNodes.has(i)&&(e[i]=o,o+=1)}}return e}getLayer(t,e){if(e!=null)return this.findLayer(e);if(t==null)throw new O("Provide either a layer name or layer index");if(typeof t=="number")return this.findLayer(t);for(let o of this.layers)if(o.name===t)return o;throw new O(`No such layer: ${t}`)}findLayer(t){if(this.layers.length<=t)throw new O(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}calculateLosses(){return z(()=>{let t=[];for(let e of this.layers)for(let o=0;o<e.inboundNodes.length;++o){let n=r.nodeKey(e,o);this.containerNodes.has(n)&&t.push(...e.calculateLosses())}return t})}getConfig(){let t={name:this.name},e=this.buildNodeConversionMap(this.layers),o=[];for(let i of this.layers){let a=i.getClassName(),l=i.getConfig(),c=[];for(let p=0;p<i.inboundNodes.length;p++){let m=i.inboundNodes[p],f=r.nodeKey(i,p),h={};if(this.containerNodes.has(f)){if(m.callArgs)try{JSON.stringify(m.callArgs),h=m.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${m.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),h={}}if(m.inboundLayers.length>0){let d=[];for(let g=0;g<m.inboundLayers.length;g++){let x=m.inboundLayers[g],b=m.nodeIndices[g],C=m.tensorIndices[g],w=r.nodeKey(x,b),I=e[w];I==null&&(I=0),d.push([x.name,I,C,h])}c.push(d)}}}let u={};u.name=i.name,u.className=a,u.config=l,u.inboundNodes=c,o.push(u)}t.layers=o;let n=[];for(let i=0;i<this.inputLayers.length;i++){let a=this.inputLayers[i],l=this.inputLayersNodeIndices[i],c=r.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=e[c];u==null&&(u=0);let p=this.inputLayersTensorIndices[i];n.push([a.name,u,p])}t.inputLayers=n;let s=[];for(let i=0;i<this.outputLayers.length;i++){let a=this.outputLayers[i],l=this.outputLayersNodeIndices[i],c=r.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=e[c];u==null&&(u=0);let p=this.outputLayersTensorIndices[i];s.push([a.name,u,p])}return t.outputLayers=s,t}static fromConfig(t,e,o={},n=!1){let s={},i={};function a(g,x){g.name in i?i[g.name].push(x):i[g.name]=[x]}function l(g,x){let b=[],C;for(let w of x){let I=w[0],E=w[1],A=w[2];if(C=w[3]==null?{}:w[3],!(I in s)){a(g,x);return}let $=s[I];if($.inboundNodes.length<=E){a(g,x);return}let _=$.inboundNodes[E];b.push(_.outputTensors[A])}b.length>0&&g.apply(We(b),C)}function c(g){let x=g.name,b=Kr(g,e.customObjects!=null?e.customObjects:{});b.setFastWeightInitDuringBuild(n),s[x]=b,g.inboundNodes.forEach(w=>{if(!(w instanceof Array))throw new O(`Corrupted configuration, expected array for nodeData: ${w}`);a(b,w)})}let u=e.name,p=e.layers;for(let g of p)c(g);for(;!S1(i);)for(let g of p){let x=s[g.name];if(x.name in i){let b=i[x.name];delete i[x.name];for(let C of b)l(x,C)}}let m=[],f=[],h=e.inputLayers;for(let g of h){let x=g[0],b=g[1],C=g[2];ao(x in s);let I=s[x].inboundNodes[b].outputTensors;m.push(I[C])}let d=e.outputLayers;for(let g of d){let x=g[0],b=g[1],C=g[2];ao(x in s);let I=s[x].inboundNodes[b].outputTensors;f.push(I[C])}return new t({inputs:m,outputs:f,name:u})}get stateful(){if(this._stateful)throw new O("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let t of this.layers)if(t.stateful)return!0;return!1}resetStates(){z(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}};function XG(r,t,e){let o=t.length;if(r==null||Array.isArray(r)&&r.length===0)return t.map(n=>null);if(o===1)return Array.isArray(r)&&r.length===1?r:typeof r=="object"&&t[0]in r?[r[t[0]]]:[r];if(Array.isArray(r)){if(r.length!==o)throw new Error(`Provided ${e} is an array of ${r.length} element(s), but the model has ${o} outputs. Make sure a set of weights is provided for each model output.`);return r}else if(typeof r=="object"&&Object.keys(r).length>0&&typeof r[Object.keys(r)[0]]=="object"){let n=[];return t.forEach(s=>{s in r?n.push(r[s]):n.push(null)}),n}else throw new Error(`The model has multiple (${o}) outputs, so ${e} must be either an array with ${o} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(r)}`)}function Kd(r,t){return XG(r,t,"classWeight")}function jd(r,t,e,o){return B(this,null,function*(){if(t!=null||o!=null)throw new Error("Support sampleWeight is not implemented yet");if(e!=null){let n=z(()=>{if(r.shape.length===1)return Vr(r);if(r.shape.length===2){if(r.shape[1]>1)return eo(r,1);if(r.shape[1]===1)return F(r,[r.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${r.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${r.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(yield n.data());vt(n);let i=[];return s.forEach(a=>{if(e[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);i.push(e[a])}),Ee(i,"float32")}else return null})}function sk(r,t){return R(r,t)}var YG=32;function lk(r,t){let e,o,n=t;e=n.xs,o=n.ys,y.assert(e!=null&&o!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let s=ik("input",r.inputNames,e),i=ik("output",r.outputNames,o),a=s[0].shape[0];y.assert(s.length===r.inputs.length,()=>`LayersModel has ${r.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(r.inputNames)})`),y.assert(i.length===r.outputs.length,()=>`LayersModel has ${r.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(r.outputNames)})`);for(let l=0;l<s.length;l++)y.assert(s[l].shape[0]===a,()=>`Batch size mismatch: input ${r.inputNames[l]} has ${s[l].shape[0]}; expected  ${a} based on input ${r.inputNames[0]}.`);for(let l=0;l<i.length;l++)y.assert(i[l].shape[0]===a,()=>`Batch size mismatch: output ${r.outputNames[l]} has ${i[l].shape[0]}; expected  ${a} based on input ${r.inputNames[0]}.`);return{xs:s,ys:i}}function ik(r,t,e){if(e instanceof Vt)return[e];if(Array.isArray(e))return y.assert(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${r} keys ${t}.`),e;{let o=[];for(let n of t){if(e[n]==null)throw new O(`The feature data generated by the dataset lacks the required ${r} key '${n}'.`);o.push(e[n])}return o}}function ZG(r){if(r.length===3)throw new wt("Validation with sample weights is not implemented yet.");return{xs:r[0],ys:r[1]}}function ck(r,t,e){return B(this,null,function*(){let o=e.batchesPerEpoch!=null;if(y.assert(r.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),y.assert(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),y.assert(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),y.assert(!o||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),y.assert(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;try{let n=e.validationData!=null,s,i;if(n)if(ak(e.validationData))y.assert(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{let g=ZG(e.validationData);s=g.xs,i=g.ys}let a=r.makeTrainFunction(),l=r.getDedupedMetricsNames(),c;n?c=l.slice().concat(l.map(g=>"val_"+g)):c=l.slice();let u=Ld(e.callbacks,e.yieldEvery),p=e.verbose==null?1:e.verbose,{callbackList:m,history:f}=Pd(u,p,e.epochs,null,null,JG(t,e),null,n,c);m.setModel(r),r.history=f,yield m.onTrainBegin(),r.stopTraining_=!1;let h=e.initialEpoch==null?0:e.initialEpoch,d=yield t.iterator();for(;h<e.epochs;){let g={};yield m.onEpochBegin(h);let x=0,b=0;for(o||(d=yield t.iterator());!o||x<e.batchesPerEpoch;){let C=yield d.next();if(o&&C.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${x} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(C.value!=null){let{xs:w,ys:I}=lk(r,C.value),E={};E.batch=b,E.size=w[0].shape[0],yield m.onBatchBegin(b,E);let A=[];if(e.classWeight!=null){let L=Kd(e.classWeight,r.outputNames);for(let M=0;M<L.length;++M)A.push(yield jd(I[M],null,L[M]))}let $=w.concat(I).concat(A),_=a($);vt($);for(let L=0;L<l.length;++L){let M=l[L],V=_[L];E[M]=V,Be(V)}yield m.onBatchEnd(b,E),Rd(E),b++,x++}if(o?x>=e.batchesPerEpoch:C.done){if(n){let w;ak(e.validationData)?w=Ht(yield r.evaluateDataset(e.validationData,{batches:e.validationBatches})):w=Ht(r.evaluate(s,i,{batchSize:e.validationBatchSize==null?YG:e.validationBatchSize,verbose:0}));for(let I=0;I<r.metricsNames.length;++I)g[`val_${r.metricsNames[I]}`]=w[I]}break}if(r.stopTraining_)break}if(yield m.onEpochEnd(h,g),h++,r.stopTraining_)break}return yield m.onTrainEnd(),yield r.history.syncData(),r.history}finally{r.isTraining=!1}})}function JG(r,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(r.size)&&(e=r.size),e}function ak(r){return typeof r.iterator=="function"}function QG(r){return typeof r.next=="function"}function uk(r,t,e){return B(this,null,function*(){e=e||{};let o=e.batches!=null,n=r.testFunction,s=[];if(e.verbose>0)throw new wt("Verbose mode is not implemented yet.");y.assert(!o||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);let i=QG(t)?t:yield t.iterator(),a=0,l=0;for(;!o||l<e.batches;){let c=yield i.next();if(s=z(()=>{if(c.value){let{xs:u,ys:p}=lk(r,c.value),m=u.concat(p),f=z(()=>n(m));if(vt(m),l===0)for(let d=0;d<f.length;++d)s.push(bt(0));let h=m[0].shape[0];for(let d=0;d<f.length;++d){let g=f[d],x=s[d];s[d]=z(()=>j(s[d],R(h,g))),l>0&&vt(x)}vt(f),a+=h,++l}return s}),c.done){o&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<s.length;++c){let u=s[c];s[c]=nt(s[c],a),vt(u)}return We(s)})}function Xd(r){y.assert(r>0&&Number.isInteger(r),()=>`batchSize is required to be a positive integer, but got ${r}`)}function yu(r,t,e){return r==null?[null]:Array.isArray(r)?r.map(o=>Os(o,t,e-t)):Os(r,t,e-t)}function Yd(r,t){return z(()=>r==null?null:Array.isArray(r)?r.map(e=>Yd(e,t)):kd(r,t.dtype==="int32"?t:Y(t,"int32")))}function Zd(r,t){let e=[],o=0,n=null;for(;o<r;)n=o+t,n>=r&&(n=r),e.push([o,n]),o=n;return e}function uw(r){let t=[];r instanceof Vt&&(r=[r]);for(let e=0;e<r.length;++e){let o=r[e];if(o.rank===1)t.push(Ls(o,1));else{if(o.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(o)}}return t}function No(r,t){if(r==null)return;let e=[];if(t instanceof Vt)e.push(t.id);else if(Array.isArray(t))t.forEach(n=>e.push(n.id));else if(t!=null)for(let n in t){let s=t[n];e.push(s.id)}let o=[];if(r instanceof Vt)e.indexOf(r.id)===-1&&o.push(r);else if(Array.isArray(r))r.forEach(n=>{e.indexOf(n.id)===-1&&o.push(n)});else if(r!=null)for(let n in r){let s=r[n];e.indexOf(s.id)===-1&&o.push(s)}o.forEach(n=>{n.isDisposed||n.dispose()})}function tU(r){return r instanceof Vt}function pw(r){return Array.isArray(r)}function pk(r){return!tU(r)&&!pw(r)}function mk(r,t,e,o=!0,n=""){if(t==null||t.length===0){if(r!=null){let i=!1;if(pw(r)&&r.length>0)i=!0;else if(pk(r)){for(let a in r)if(r.hasOwnProperty(a)){i=!0;break}}else i=!0;if(i)throw new O(`Error when checking model ${n} expected no data, but got ${r}`)}return[]}if(r==null)return t.map(i=>null);let s;if(pk(r)){r=r,s=[];for(let i of t){if(r[i]==null)throw new O(`No data provided for "${i}". Need data for each key in: ${t}`);s.push(r[i])}}else if(pw(r)){if(r=r,r.length!==t.length)throw new O(`Error when checking model ${n}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${r}`);s=r}else{if(r=r,t.length>1)throw new O(`The model ${n} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${r.shape}`);s=[r]}if(s=uw(s),e!=null)for(let i=0;i<t.length;++i){if(e[i]==null)continue;let a=s[i];if(a.shape.length!==e[i].length)throw new O(`Error when checking ${n}: expected ${t[i]} to have ${e[i].length} dimension(s). but got array with shape ${a.shape}`);for(let l=0;l<e[i].length;++l){if(l===0&&!o)continue;let c=a.shape[l],u=e[i][l];if(u!=null&&u>=0&&c!==u)throw new O(`${n} expected a batch of elements where each example has shape [${e[i].slice(1,e[i].length)}] (i.e.,tensor shape [*,${e[i].slice(1,e[i].length)}]) but the ${n} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return s}function eU(r,t,e){let o=Io(r.map(s=>s.shape[0]));o.sort();let n=Io(t.map(s=>s.shape[0]));if(n.sort(),o.length>1)throw new O(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(r.map(s=>s.shape))}`);if(n.length>1)throw new O(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(s=>s.shape))}`);if(o.length>0&&n.length>0&&!y.arraysEqual(o,n))throw new O(`Input Tensors should have the same number of samples as target Tensors. Found ${o[0]} input sample(s) and ${n[0]} target sample(s).`)}function rU(r,t,e){let o=[hl,gu,dl];for(let n=0;n<r.length;++n){let s=r[n],i=t[n],a=e[n];if(i!=null){if(i===dl&&s.shape[s.shape.length-1]===1)throw new O(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(o.indexOf(i)!==-1){let l=s.shape.slice(1),c=a.slice(1);for(let u=0;u<l.length;++u){let p=l[u],m=c[u];if(m!=null&&p!==m)throw new O(`A target Tensor with shape ${s.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function fk(r,t,e,o=!0,n=""){let s;if(Array.isArray(r)){if(r.length!==t.length)throw new O(`Error when checking model ${n}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${r.length} Tensors(s).`);s=r}else{if(t.length>1)throw new O(`The model expects ${t.length} ${n} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(r.shape)}.`);s=[r]}if(e!=null)for(let i=0;i<t.length;++i){if(e[i]==null)continue;let a=s[i];if(a.shape.length!==e[i].length)throw new O(`Error when checking ${n}: expected ${t[i]} to have ${e[i].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let l=0;l<e[i].length;++l){if(l===0&&!o)continue;let c=a.shape[l],u=e[i][l];if(u!=null&&u!==c)throw new O(`Error when checking ${n}: expected ${t[i]} to have shape ${JSON.stringify(e[i])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function oU(r,t){if(r==null||Array.isArray(r)&&r.length===0)return t.map(o=>[]);let e;if(typeof r=="string"||typeof r=="function")e=[r];else if(Array.isArray(r)||typeof r=="object")e=r;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${r}`);if(Array.isArray(e))return t.map(o=>e);{let o=[];for(let n of t){let s=e.hasOwnProperty(n)?e[n]:[];Array.isArray(s)||(s=[s]),o.push(s)}return o}}var nU="layers-model",To=class extends qd{constructor(t){super(t),this.isTraining=!1}summary(t,e,o=console.log){if(!this.built)throw new O("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");ok(this,t,e,o)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=rk(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof ir))throw new O("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(let i in t.loss)if(this.outputNames.indexOf(i)===-1)throw new O(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(let i of this.outputNames)t.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),e.push(Bd(t.loss[i]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new O(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);e=t.loss.map(a=>Bd(a))}else{let i=Bd(t.loss);this.outputs.forEach(a=>{e.push(i)})}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){let a=this.internalOutputShapes[i],l=this.outputNames[i];this.feedOutputNames.push(l),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[i])}let o=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Go("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(o.indexOf(i)!==-1)continue;let a=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([a,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});let n=oU(t.metrics,this.outputNames),s=(i,a,l)=>{this.outputNames.length>1&&(a=this.outputNames[i]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([l,i])};Go("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(o.indexOf(i)!==-1)continue;let a=n[i];(c=>{let u="",p,m,f;for(let h of c){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){let g=this.internalOutputShapes[i];g[g.length-1]===1||this.lossFunctions[i]===gu?["accuracy","acc"].indexOf(h)!==-1?m=Vd:["crossentropy","ce"].indexOf(h)!==-1&&(m=sw):this.lossFunctions[i]===du?["accuracy","acc"].indexOf(h)!==-1?m=iw:["crossentropy","ce"].indexOf(h)!==-1&&(m=aw):["accuracy","acc"].indexOf(h)!==-1?m=Gd:["crossentropy","ce"].indexOf(h)!==-1&&(m=Ud);let x;["accuracy","acc"].indexOf(h)!==-1?x="acc":["crossentropy","ce"].indexOf(h)!==-1&&(x="ce"),f=m,p=u+x}else f=tk(h),p=u+xm(h);let d;Go(p,()=>{d=f}),s(i,p,d)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,o={}){let n=o.batchSize==null?32:o.batchSize;Xd(n);let i=this.standardizeUserDataXY(t,e,!0,n);try{let a=i[0].concat(i[1]);this.makeTestFunction();let l=this.testFunction,c=this.testLoop(l,a,n,o.verbose,o.steps);return We(c)}finally{No(i[0],t),No(i[1],e)}}evaluateDataset(t,e){return B(this,null,function*(){return this.makeTestFunction(),uk(this,t,e)})}checkNumSamples(t,e,o,n="steps"){let s;if(o!=null){if(s=null,e!=null)throw new O(`If ${n} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else if(t!=null)Array.isArray(t)?s=t[0].shape[0]:s=t.shape[0];else throw new O(`Either the input data should have a defined shape, or ${n} shoud be specified.`);return s}execute(t,e){if(Array.isArray(e)&&e.length===0)throw new O("`outputs` is an empty Array, which is not allowed.");let o=Array.isArray(e),n=o?e:[e],s=this.retrieveSymbolicTensors(n),i=new bn;if(t instanceof Vt&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new O(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)i.add(this.inputs[l],t[l])}else for(let l of this.inputs){let c=t[l.name];if(c==null)throw new O(`No value is provided for the model's input ${l.name}`);i.add(l,c)}let a=ml(s,i);return o?a:a[0]}retrieveSymbolicTensors(t){let e=wo(null,t.length),o=t.length;for(let n of this.layers){let s=Array.isArray(n.output)?n.output:[n.output],i=s.map(a=>a.name);for(let a=0;a<t.length;++a){let l=i.indexOf(t[a]);if(l!==-1&&(e[a]=s[l],o--),o===0)break}if(o===0)break}if(o>0){let n=[];throw e.forEach((s,i)=>{s==null&&n.push(t[i])}),new O(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(t,e=32,o=!1){return z(()=>{let n=this.checkNumSamples(t);if(o)throw new wt("Verbose predictLoop() is not implemented yet.");let s=Zd(n,e),i=this.outputs.map(a=>[]);for(let a=0;a<s.length;++a)z(()=>{let c=s[a][0],u=s[a][1],p=yu(t,c,u),m=[];if(Array.isArray(p))for(let h=0;h<p.length;++h)m.push({key:this.inputs[h],value:p[h]});else m.push({key:this.inputs[0],value:p});let f=new bn(m);return ml(this.outputs,f)}).forEach((c,u)=>i[u].push(c));return We(i.map(a=>ne(a,0)))})}predict(t,e={}){let o=uw(t);fk(o,this.inputNames,this.feedInputShapes,!1);try{let n=e.batchSize==null?32:e.batchSize;return Xd(n),this.predictLoop(o,n)}finally{No(o,t)}}predictOnBatch(t){fk(t,this.inputNames,this.feedInputShapes,!0);let e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,o=!0,n){if(this.optimizer_==null)throw new Ir("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let s=[];for(let i=0;i<this.feedOutputShapes.length;++i){let a=this.feedOutputShapes[i];this.feedLossFns[i]===du?s.push(a.slice(0,a.length-1).concat([1])):s.push(a)}if(t=mk(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=mk(e,this.feedOutputNames,s,!1,"target"),eU(t,e,null),rU(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&n!=null&&n>0&&t[0].shape[0]%n!==0)throw new O(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${n}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}standardizeUserData(t,e,o,n,s=!0,i){return B(this,null,function*(){let[a,l]=this.standardizeUserDataXY(t,e,s,i);if(o!=null)throw new Error("sample weight is not supported yet.");let c=null;if(n!=null){let u=Kd(n,this.outputNames);c=[];for(let p=0;p<u.length;++p)c.push(yield jd(l[p],null,u[p]))}return[a,l,c]})}testLoop(t,e,o,n=0,s){return z(()=>{let i=this.checkNumSamples(e,o,s,"steps"),a=[];if(n>0)throw new wt("Verbose mode is not implemented yet.");if(s!=null)throw new wt("steps mode in testLoop() is not implemented yet");{let l=Zd(i,o),c=Ee(vr(0,i));for(let u=0;u<l.length;++u){let p=l[u][0],m=l[u][1],f=Os(c,p,m-p),h=Yd(e,f),d=t(h);if(u===0)for(let g=0;g<d.length;++g)a.push(bt(0));for(let g=0;g<d.length;++g){let x=d[g];a[g]=j(a[g],R(m-p,x))}}for(let u=0;u<a.length;++u)a[u]=nt(a[u],i)}return a})}getDedupedMetricsNames(){let t=this.metricsNames,e=[];for(let o=0;o<t.length;++o){let n=t[o],s=n;if(X0(t,n)>1){let i=X0(t.slice(0,o),n);s+=`_${i}`}e.push(s)}return e}makeTrainFunction(){return t=>{let e=[],o=t.slice(0,this.inputs.length),n=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],a=()=>{let p=[];for(let d=0;d<this.inputs.length;++d)p.push({key:this.inputs[d],value:o[d]});let m=new bn(p),f=ml(this.outputs,m,{training:!0}),h;for(let d=0;d<this.lossFunctions.length;++d){let g=this.lossFunctions[d],x=g(n[d],f[d]);s[d]!=null&&(x=sk(x,s[d]));let b=le(x);e.push(b),d===0?h=x:h=j(h,x)}for(let d=0;d<this.metricsTensors.length;++d){let g;if(this.outputs.length>1&&d<this.outputs.length)g=e[d];else{let x=this.metricsTensors[d][0],b=this.metricsTensors[d][1];g=le(x(n[b],f[b]))}Be(g),i.push(g)}return h=le(h),this.calculateLosses().forEach(d=>{h=j(h,d)}),h},l=this.collectedTrainableWeights.map(p=>p.read());return[this.optimizer_.minimize(a,!0,l)].concat(i)}}makeTestFunction(){this.testFunction=t=>z(()=>{let e=[],o,n=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let c=0;c<this.inputs.length;++c)i.push({key:this.inputs[c],value:n[c]});let a=new bn(i),l=ml(this.outputs,a);for(let c=0;c<this.lossFunctions.length;++c){let u=this.lossFunctions[c],p=le(u(s[c],l[c]));c===0?o=p:o=j(o,p),e.push(o)}for(let c=0;c<this.metricsTensors.length;++c){let u=this.metricsTensors[c][0],p=this.metricsTensors[c][1],m=le(u(s[p],l[p]));e.push(m)}return e})}fit(n,s){return B(this,arguments,function*(t,e,o={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let i,a,l,c,u,p,m,f,h;try{let d=o.batchSize==null?32:o.batchSize;Xd(d);let x=yield this.standardizeUserData(t,e,o.sampleWeight,o.classWeight,!1,d);i=x[0],a=x[1],h=x[2];let b=!1,C;if(o.validationData!=null&&o.validationData.length>0){if(b=!0,o.validationData.length===2)u=o.validationData[0],p=o.validationData[1];else throw o.validationData.length===3?new wt("validationData including sample weights is not supported yet."):new O(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${o.validationData} is invalid.`);let V=yield this.standardizeUserData(u,p,null,null,!0,d);m=V[0],f=V[1],C=m.concat(f)}else if(o.validationSplit!=null&&o.validationSplit>0&&o.validationSplit<1){b=!0;let M=Math.floor(i[0].shape[0]*(1-o.validationSplit)),V=i[0].shape[0];m=yu(i,M,V),l=i,i=yu(i,0,M),f=yu(a,M,V),c=a,a=yu(a,0,M),C=m.concat(f)}else o.validationSteps!=null&&(b=!0);let w=i.concat(a).concat(h);this.checkTrainableWeightsConsistency();let I=this.makeTrainFunction(),E=this.getDedupedMetricsNames(),A,$;b?(this.makeTestFunction(),A=this.testFunction,$=E.slice().concat(E.map(M=>"val_"+M))):(A=null,C=[],$=E.slice());let _=Ld(o.callbacks,o.yieldEvery);return yield this.fitLoop(I,w,E,d,o.epochs,o.verbose,_,A,C,o.shuffle,$,o.initialEpoch,null,null)}finally{this.isTraining=!1,No(i,t),No(a,e),No(l,t),No(c,e),No(m,u),No(f,p),h!=null&&vt(h)}})}fitLoop(t,e,o,n,s,i,a,l,c,u,p,m,f,h){return B(this,null,function*(){n==null&&(n=32),s==null&&(s=1),u==null&&(u=!0),m==null&&(m=0);let d=!1;if(l!=null&&c!=null&&(d=!0),h!=null&&(d=!0,f==null))throw new O("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=this.checkNumSamples(e,n,f,"steps_per_epoch"),x;g!=null&&(x=vr(0,g)),i==null&&(i=1);let{callbackList:b,history:C}=Pd(a,i,s,m,g,f,n,d,p);b.setModel(this),this.history=C,yield b.onTrainBegin(),this.stopTraining_=!1;for(let w=m;w<s;++w){yield b.onEpochBegin(w);let I={};if(f!=null)throw new wt("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new wt("batch shuffling is not implemneted yet");u&&y.shuffle(x);let E=Ee(x),A=Zd(g,n);for(let $=0;$<A.length;++$){let _={};if(yield b.onBatchBegin($,_),z(()=>{let L=A[$][0],M=A[$][1],V=Os(E,L,M-L);_.batch=$,_.size=M-L;let G=Yd(e,V),W=t(G);for(let U=0;U<o.length;++U){let K=o[U],Z=W[U];_[K]=Z,Be(Z)}if($===A.length-1&&d){let U=this.testLoop(l,c,n);for(let K=0;K<o.length;++K){let Z=o[K],q=U[K];Be(q),I["val_"+Z]=q}}}),yield b.onBatchEnd($,_),Rd(_),this.stopTraining_)break}E.dispose()}if(yield b.onEpochEnd(w,I),this.stopTraining_)break}return yield b.onTrainEnd(),yield this.history.syncData(),this.history})}fitDataset(t,e){return B(this,null,function*(){return ck(this,t,e)})}trainOnBatch(t,e){return B(this,null,function*(){let o=yield this.standardizeUserData(t,e),n=o[0],s=o[1],a=this.makeTrainFunction()(n.concat(s)),l=[];for(let c of a){let u=yield c.data();l.push(u[0])}return vt(a),No(o[0],t),No(o[1],e),We(l)})}getNamedWeights(t){let e=[],o=t!=null&&t.trainableOnly,n=o?this.trainableWeights:this.weights,s=this.getWeights(o);for(let i=0;i<n.length;++i)o&&!n[i].trainable||e.push({name:n[i].originalName,tensor:s[i]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){let t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let e=wp().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-wp().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=Co(this.loss);else if(Array.isArray(this.loss)){for(let e of this.loss)if(typeof e!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(e=>Co(e))}else{let e=Object.keys(this.loss);t={};let o=this.loss;for(let n of e)if(typeof o[n]=="string")t[n]=Co(o[n]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Co(xm(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>Co(xm(t)));{let t={};for(let e in this.metrics)t[e]=Co(xm(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let e=ym(t.optimizer_config),o=Kr(e),n;if(typeof t.loss=="string")n=_s(t.loss);else if(Array.isArray(t.loss))n=t.loss.map(i=>_s(i));else if(t.loss!=null){n={};for(let i in t.loss)n[i]=_s(t.loss[i])}let s;if(Array.isArray(t.metrics))s=t.metrics.map(i=>_s(i));else if(t.metrics!=null){s={};for(let i in t.metrics)s[i]=_s(t.metrics[i])}this.compile({loss:n,metrics:s,optimizer:o})}save(t,e){return B(this,null,function*(){if(typeof t=="string"){let c=Fs.getSaveHandlers(t);if(c.length===0)throw new O(`Cannot find any save handlers for URL '${t}'`);if(c.length>1)throw new O(`Found more than one (${c.length}) save handlers for URL '${t}'`);t=c[0]}if(t.save==null)throw new O("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let o=yield Fs.encodeWeights(this.getNamedWeights(e)),a={modelTopology:this.toJSON(null,!1),format:nU,generatedBy:`TensorFlow.js tfjs-layers v${xu}`,convertedBy:null};if((e==null?!1:e.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();let c="optimizer",{data:u,specs:p}=yield Fs.encodeWeights(yield this.optimizer.getWeights(),c);o.specs.push(...p),o.data=Fs.concatenateArrayBuffers([o.data,u])}return this.userDefinedMetadata!=null&&(cw(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=o.data,a.weightSpecs=o.specs,t.save(a)})}setUserDefinedMetadata(t){cw(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}};To.className="Model";H.registerClass(To);var Jd=class extends To{};Jd.className="Functional";H.registerClass(Jd);var bu=class r extends To{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:na("sequential_"),t.layers!=null)for(let e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(o=>o<0))throw new O(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){let e=t instanceof r||t instanceof To,o;if(e){if(o=t,o.outputs.length!==1)throw new O("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(o.inputs.length!==1)throw new O("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new O("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let n=rw({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(n)}if(e)this.outputs=o.outputs,this.inputs=o.inputs;else{if(t.inboundNodes.length!==1)throw new O(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new O("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=ew(this.outputs[0])}this.inboundNodes=[],new Ps({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:wo(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(n=>n.shape),outputShapes:this.outputs[0].shape})}else{let n=t.apply(this.outputs[0]);if(Array.isArray(n))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[n],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return this.model==null&&this.build(),this.model.call(t,e)}build(t){if(Dt(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new To({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,o=console.log){this.built||this.build(),super.summary(t,e,o)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,e,o={}){if(!this.built)throw new Ir("The model needs to be compiled before being used.");return this.model.evaluate(t,e,o)}evaluateDataset(t,e){return B(this,null,function*(){if(!this.built)throw new Ir("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)})}predict(t,e={}){return this.model==null&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}fit(n,s){return B(this,arguments,function*(t,e,o={}){if(!this.built)throw new Ir("The model needs to be compiled before being used.");return this.model.fit(t,e,o)})}fitDataset(t,e){return B(this,null,function*(){if(!this.built)throw new Ir("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)})}trainOnBatch(t,e){return B(this,null,function*(){return this.model.trainOnBatch(t,e)})}static fromConfig(t,e,o={},n=!1){let s,i={};if(e instanceof Array){if(e[0].className==null||e[0].className==="Merge")throw new O("Legacy serialization format not supported yet.");s=e}else y.assert(e.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=e.layers,delete e.layers,i=e;let a=new t(i);if(!(a instanceof r))throw new wt(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(let l of s){let u=Kr(l,void 0,n);n&&u.setFastWeightInitDuringBuild(!0),a.add(u)}return a}set stopTraining(t){if(this.model==null)throw new O("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new O("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let t=[];for(let e of this.layers){let o={};o.className=e.getClassName(),o.config=e.getConfig(),t.push(o)}return{name:this.name,layers:t}}};bu.className="Sequential";H.registerClass(bu);var Qe=class extends H.Serializable{getConfig(){return{}}},Qd=class extends Qe{apply(t,e=1){return z1(t,e)}};Qd.className="elu";H.registerClass(Qd);var tg=class extends Qe{apply(t){return Pp(t)}};tg.className="selu";H.registerClass(tg);var eg=class extends Qe{apply(t){return Hr(t)}};eg.className="relu";H.registerClass(eg);var rg=class extends Qe{apply(t){return z(()=>hn(6,Hr(t)))}};rg.className="relu6";H.registerClass(rg);var og=class extends Qe{apply(t){return t}};og.className="linear";H.registerClass(og);var ng=class extends Qe{apply(t){return go(t)}};ng.className="sigmoid";H.registerClass(ng);var sg=class extends Qe{apply(t){return M1(t)}};sg.className="hardSigmoid";H.registerClass(sg);var ig=class extends Qe{apply(t){return fn(t)}};ig.className="softplus";H.registerClass(ig);var ag=class extends Qe{apply(t){return B1(t)}};ag.className="softsign";H.registerClass(ag);var lg=class extends Qe{apply(t){return qa(t)}};lg.className="tanh";H.registerClass(lg);var wu=class extends Qe{apply(t,e=-1){return rl(t,e)}};wu.className="softmax";H.registerClass(wu);var cg=class extends Qe{apply(t,e=-1){return Rp(t,e)}};cg.className="logSoftmax";H.registerClass(cg);var ug=class extends Qe{apply(t){return z(()=>z(()=>{let e=Math.sqrt(2),o=R(.5,j(1,Ap(nt(t,e))));return R(t,o)}))}};ug.className="gelu";H.registerClass(ug);var pg=class extends Qe{apply(t){return z(()=>R(.5,R(t,j(1,qa(R(Jt(nt(2,Math.PI)),j(t,R(.044715,$r(t,3)))))))))}};pg.className="gelu_new";H.registerClass(pg);var mg=class extends Qe{apply(t){return z(()=>R(t,qa(fn(t))))}};mg.className="mish";H.registerClass(mg);var fg=class extends Qe{apply(t,e=1){return z(()=>R(go(R(t,e)),t))}};fg.className="swish";H.registerClass(fg);function Wo(r){return r.getClassName()}function mw(r,t={}){return gn(r,H.SerializationMap.getMap().classNameMap,t,"activation")}function Ho(r){if(r==null){let t={};return t.className="linear",t.config={},mw(t)}if(typeof r=="string"){let t={};return t.className=r,t.config={},mw(t)}else return r instanceof Qe?r:mw(r)}function iU(r){if(r!=null&&typeof r!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${r}`)}var hg=class extends H.Serializable{},bm=class extends hg{constructor(t){super(),iU(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return z(()=>{let e=ie([1]);return this.hasL1&&(e=j(e,lt(R(this.l1,De(t))))),this.hasL2&&(e=j(e,lt(R(this.l2,ul(t))))),F(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}};bm.className="L1L2";H.registerClass(bm);var hk={l1l2:"L1L2"};function Kt(r){return ru(r)}function dk(r,t={}){return gn(r,H.SerializationMap.getMap().classNameMap,t,"regularizer")}function te(r){if(r==null)return null;if(typeof r=="string"){let e={className:r in hk?hk[r]:r,config:{}};return dk(e)}else return r instanceof hg?r:dk(r)}var wm=class extends Ct{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,e){t=xt(t);let o=Hr(t);return this.maxValue!=null&&(o=Ze(o,0,this.maxValue)),o}computeOutputShape(t){return t}getConfig(){let t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}};wm.className="ReLU";H.registerClass(wm);var Cm=class extends Ct{constructor(t){super(t??{}),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){let o=xt(t);return Xa(o,this.alpha)}computeOutputShape(t){return t}getConfig(){let t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}};Cm.className="LeakyReLU";H.registerClass(Cm);var Im=class extends Ct{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Yt(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=te(t.alphaRegularizer),this.alphaConstraint=de(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new O(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=Dt(t);let e=t.slice(1);if(this.sharedAxes!=null)for(let n of this.sharedAxes)e[n-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let o={};if(this.sharedAxes!=null)for(let n=1;n<t.length;++n)o[n]=t[n];this.inputSpec=[new Qt({ndim:t.length,axes:o})],this.built=!0}call(t,e){return t=xt(t),Qa(t,this.alpha.read())}getConfig(){let t={alphaInitializer:re(this.alphaInitializer),alphaRegularizer:Kt(this.alphaRegularizer),alphaConstraint:he(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}};Im.className="PReLU";H.registerClass(Im);var Sm=class extends Ct{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new wt(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){let o=xt(t);return $s(o)}computeOutputShape(t){return t}getConfig(){let t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}};Sm.className="ELU";H.registerClass(Sm);var vm=class extends Ct{constructor(t){super(t??{}),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,e){let o=xt(t);return R(o,Y(we(o,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){let t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}};vm.className="ThresholdedReLU";H.registerClass(vm);var Nm=class extends Ct{constructor(t){super(t??{}),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new wu().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,e){return z(()=>{let o=xt(t),n=e.mask;if(n!=null){let s=R(ut(Cr(o.shape),Y(n,o.dtype)),bt(-1e9));o=j(o,s)}return this.axis instanceof Array?this.axis.length>1?Ve(ut(o,Fp(o,this.axis,!0))):this.softmax(o,this.axis[0]):this.softmax(o,this.axis)})}computeOutputShape(t){return t}getConfig(){let t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}};Nm.className="Softmax";H.registerClass(Nm);function aa(r,t,e){if(typeof r=="number")return wo(r,t);if(r.length!==t)throw new O(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${r.length} elements.`);for(let o=0;o<t;++o){let n=r[o];if(!_1(n))throw new O(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(r)} including a non-integer number ${n}`)}return r}function Rr(r,t,e,o,n=1){if(r==null)return r;let s=t+(t-1)*(n-1),i;return e==="same"?i=r:i=r-s+1,Math.floor((i+o-1)/o)}function qo(r,t,e,o){if(r==null)return null;if(o==="valid")r=r*t+Uo([e-t,0]);else if(o==="same")r=r*t;else throw new O(`Unsupport padding mode: ${o}.`);return r}function Fm(r,t){return z(()=>(ce(t),t==="channelsFirst"?Rt(r,[0,2,3,1]):r))}function fw(r,t){return z(()=>(ce(t),t==="channelsFirst"?Rt(r,[0,2,3,4,1]):r))}function lU(r,t,e,o=1,n="valid",s,i=1){return z(()=>{if(s==null&&(s=Nr()),ce(s),r.shape.length!==3)throw new O(`The input of a conv1dWithBias operation should be 3, but is ${r.shape.length} instead.`);if(t.shape.length!==3)throw new O(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new O(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(s==="channelsFirst"&&(r=Rt(r,[0,2,1])),n==="causal")throw new wt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=Np(r,t,o,n==="same"?"same":"valid","NWC",i);return e!=null&&(a=Tr(a,e)),a})}function gk(r,t,e,o=[1,1],n="valid",s,i,a=null){return z(()=>{if(s==null&&(s=Nr()),ce(s),r.rank!==3&&r.rank!==4)throw new O(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${r.rank}.`);if(t.rank!==3&&t.rank!==4)throw new O(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${r.rank}.`);let l=Fm(r,s);if(n==="causal")throw new wt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=al.conv2d({x:l,filter:t,strides:o,pad:n==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:e,activation:a}),s==="channelsFirst"&&(l=Rt(l,[0,3,1,2])),l})}function cU(r,t,e,o=[1,1,1],n="valid",s,i){return z(()=>{if(s==null&&(s=Nr()),ce(s),r.rank!==4&&r.rank!==5)throw new O(`conv3dWithBias expects input to be of rank 4 or 5, but received ${r.rank}.`);if(t.rank!==4&&t.rank!==5)throw new O(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${r.rank}.`);let a=fw(r,s);if(n==="causal")throw new wt("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=r0(a,t,o,n==="same"?"same":"valid","NDHWC",i),e!=null&&(a=Tr(a,e)),s==="channelsFirst"&&(a=Rt(a,[0,4,1,2,3])),a})}var Tm=class r extends Ct{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",r.verifyArgs(e),this.rank=t,Se(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new wt(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=aa(e.kernelSize,t,"kernelSize"),this.strides=aa(e.strides==null?1:e.strides,t,"strides"),this.padding=e.padding==null?"valid":e.padding,Sr(this.padding),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,ce(this.dataFormat),this.activation=Ho(e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.biasInitializer=Yt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=de(e.biasConstraint),this.biasRegularizer=te(e.biasRegularizer),this.activityRegularizer=te(e.activityRegularizer),this.dilationRate=aa(e.dilationRate==null?1:e.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new O(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new O(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new O(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(ao("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!bd(t.kernelSize,"number",1,3))throw new O(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){let t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Wo(this.activation),useBias:this.useBias,biasInitializer:re(this.biasInitializer),biasRegularizer:Kt(this.biasRegularizer),activityRegularizer:Kt(this.activityRegularizer),biasConstraint:he(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}},Cu=class r extends Tm{constructor(t,e){super(t,e),this.kernel=null,r.verifyArgs(e),this.filters=e.filters,Se(this.filters,"filters"),this.kernelInitializer=Yt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=de(e.kernelConstraint),this.kernelRegularizer=te(e.kernelRegularizer)}build(t){t=Dt(t);let e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new O(`The channel dimension of the input should be defined. Found ${t[e]}`);let o=t[e],n=this.kernelSize.concat([o,this.filters]);this.kernel=this.addWeight("kernel",n,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:o}}],this.built=!0}call(t,e){return z(()=>{t=xt(t);let o,n=this.bias==null?null:this.bias.read(),s=wd(this.activation.getClassName());if(s!=null&&this.rank===2)o=gk(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)o=lU(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)o=gk(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)o=cU(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new wt("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(o=this.activation.apply(o))}return o})}computeOutputShape(t){t=Dt(t);let e=[],o=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let s=0;s<o.length;++s){let i=Rr(o[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);e.push(i)}let n=[t[0]];return this.dataFormat==="channelsLast"?(n=n.concat(e),n.push(this.filters)):(n.push(this.filters),n=n.concat(e)),n}getConfig(){let t={filters:this.filters,kernelInitializer:re(this.kernelInitializer),kernelRegularizer:Kt(this.kernelRegularizer),kernelConstraint:he(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new O(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}},Iu=class r extends Cu{constructor(t){super(2,t),r.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!bd(t.kernelSize,"number",1,2))throw new O(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}};Iu.className="Conv2D";H.registerClass(Iu);var Su=class r extends Cu{constructor(t){super(3,t),r.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new O(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}};Su.className="Conv3D";H.registerClass(Su);var km=class extends Iu{constructor(t){if(super(t),this.inputSpec=[new Qt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new O(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Dt(t),t.length!==4)throw new O("Input should have rank 4; Received input shape: "+JSON.stringify(t));let e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new O("The channel dimension of the inputs should be defined. Found `None`.");let o=t[e],n=this.kernelSize.concat([this.filters,o]);this.kernel=this.addWeight("kernel",n,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Qt({ndim:4,axes:{[e]:o}})],this.built=!0}call(t,e){return z(()=>{let o=xt(t);if(o.shape.length!==4)throw new O(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${o.shape.length}`);let n=o.shape,s=n[0],i,a;this.dataFormat==="channelsFirst"?(i=2,a=3):(i=1,a=2);let l=n[i],c=n[a],u=this.kernelSize[0],p=this.kernelSize[1],m=this.strides[0],f=this.strides[1],h=qo(l,m,u,this.padding),d=qo(c,f,p,this.padding),g=[s,h,d,this.filters];this.dataFormat!=="channelsLast"&&(o=Rt(o,[0,2,3,1]));let x=Tp(o,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(x=Rt(x,[0,3,1,2])),this.bias!=null&&(x=Tr(x,this.bias.read(),this.dataFormat)),this.activation!=null&&(x=this.activation.apply(x)),x})}computeOutputShape(t){t=Dt(t);let e=t.slice(),o,n,s;this.dataFormat==="channelsFirst"?(o=1,n=2,s=3):(o=3,n=1,s=2);let i=this.kernelSize[0],a=this.kernelSize[1],l=this.strides[0],c=this.strides[1];return e[o]=this.filters,e[n]=qo(e[n],l,i,this.padding),e[s]=qo(e[s],c,a,this.padding),e}getConfig(){let t=super.getConfig();return delete t.dilationRate,t}};km.className="Conv2DTranspose";H.registerClass(km);var Em=class extends Su{constructor(t){if(super(t),this.inputSpec=[new Qt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new O(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Dt(t),t.length!==5)throw new O("Input should have rank 5; Received input shape: "+JSON.stringify(t));let e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new O("The channel dimension of the inputs should be defined. Found `None`.");let o=t[e],n=this.kernelSize.concat([this.filters,o]);this.kernel=this.addWeight("kernel",n,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Qt({ndim:5,axes:{[e]:o}})],this.built=!0}call(t,e){return z(()=>{let o=xt(t);if(o.shape.length!==5)throw new O(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${o.shape.length}`);let n=o.shape,s=n[0],i,a,l;this.dataFormat==="channelsFirst"?(l=2,i=3,a=4):(l=1,i=2,a=3);let c=n[l],u=n[i],p=n[a],m=this.kernelSize[0],f=this.kernelSize[1],h=this.kernelSize[2],d=this.strides[0],g=this.strides[1],x=this.strides[2],b=qo(c,d,m,this.padding),C=qo(u,g,f,this.padding),w=qo(p,x,h,this.padding),I=[s,b,C,w,this.filters];this.dataFormat!=="channelsLast"&&(o=Rt(o,[0,2,3,4,1]));let E=o0(o,this.kernel.read(),I,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(E=Rt(E,[0,4,1,2,3])),this.bias!==null&&(E=Tr(E,this.bias.read(),this.dataFormat)),this.activation!==null&&(E=this.activation.apply(E)),E})}computeOutputShape(t){t=Dt(t);let e=t.slice(),o,n,s,i;this.dataFormat==="channelsFirst"?(o=1,n=2,s=3,i=4):(o=4,n=1,s=2,i=3);let a=this.kernelSize[0],l=this.kernelSize[1],c=this.kernelSize[2],u=this.strides[0],p=this.strides[1],m=this.strides[2];return e[o]=this.filters,e[n]=qo(e[n],u,a,this.padding),e[s]=qo(e[s],p,l,this.padding),e[i]=qo(e[i],m,c,this.padding),e}getConfig(){let t=super.getConfig();return delete t.dilationRate,t}};Em.className="Conv3DTranspose";H.registerClass(Em);var dg=class extends Cu{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,e.filters==null)throw new O("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(e.kernelInitializer!=null||e.kernelRegularizer!=null||e.kernelConstraint!=null)throw new O("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(e.padding!=null&&e.padding!=="same"&&e.padding!=="valid")throw new O(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Yt(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=te(e.depthwiseRegularizer),this.depthwiseConstraint=de(e.depthwiseConstraint),this.pointwiseInitializer=Yt(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=te(e.pointwiseRegularizer),this.pointwiseConstraint=de(e.pointwiseConstraint)}build(t){if(t=Dt(t),t.length<this.rank+2)throw new O(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);let e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null||t[e]<0)throw new O(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);let o=t[e],n=this.kernelSize.concat([o,this.depthMultiplier]),s=[];for(let a=0;a<this.rank;++a)s.push(1);s.push(o*this.depthMultiplier,this.filters);let i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",n,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new Qt({ndim:this.rank+2,axes:{[e]:o}})],this.built=!0}call(t,e){return z(()=>{t=xt(t);let o;if(this.rank===1)throw new wt("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=Rt(t,[0,2,3,1])),o=zp(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(o=Tr(o,this.bias.read(),this.dataFormat)),this.activation!=null&&(o=this.activation.apply(o)),this.dataFormat==="channelsFirst"&&(o=Rt(o,[0,3,1,2])),o})}getConfig(){let t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=re(this.depthwiseInitializer),t.pointwiseInitializer=re(this.pointwiseInitializer),t.depthwiseRegularizer=Kt(this.depthwiseRegularizer),t.pointwiseRegularizer=Kt(this.pointwiseRegularizer),t.depthwiseConstraint=he(this.depthwiseConstraint),t.pointwiseConstraint=he(this.pointwiseConstraint),t}};dg.className="SeparableConv";var Am=class extends dg{constructor(t){super(2,t)}};Am.className="SeparableConv2D";H.registerClass(Am);var $m=class r extends Cu{constructor(t){super(1,t),r.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){let t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!bd(t.kernelSize,"number",1,1))throw new O(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}};$m.className="Conv1D";H.registerClass($m);var Dm=class extends Ct{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return z(()=>{if(t=xt(t),this.dataFormat==="channelsLast"){let o=Jp(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Jp(o,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let o=Jp(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Jp(o,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}};Dm.className="Cropping2D";H.registerClass(Dm);var Rm=class extends Ct{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,ce(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,R1(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){let e=t[2]==null?null:this.size[0]*t[2],o=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],e,o]}else{let e=t[1]==null?null:this.size[0]*t[1],o=t[2]==null?null:this.size[1]*t[2];return[t[0],e,o,t[3]]}}call(t,e){return z(()=>{let o=xt(t),n=o.shape;if(this.dataFormat==="channelsFirst"){o=Rt(o,[0,2,3,1]);let s=this.size[0]*n[2],i=this.size[1]*n[3],a=this.interpolation==="nearest"?qr.resizeNearestNeighbor(o,[s,i]):qr.resizeBilinear(o,[s,i]);return Rt(a,[0,3,1,2])}else{let s=this.size[0]*n[1],i=this.size[1]*n[2];return this.interpolation==="nearest"?qr.resizeNearestNeighbor(o,[s,i]):qr.resizeBilinear(o,[s,i])}})}getConfig(){let t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}};Rm.className="UpSampling2D";H.registerClass(Rm);function uU(r,t,e=[1,1],o="valid",n,s){return z(()=>{n==null&&(n=Nr()),ce(n);let i=Fm(r,n);if(r.rank!==4)throw new O(`Input for depthwiseConv2d is required to be 4-D, but is instead ${r.rank}-D`);if(t.rank!==4)throw new O(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=As(i,t,e,o==="same"?"same":"valid","NHWC",s),n==="channelsFirst"&&(i=Rt(i,[0,3,1,2])),i})}var _m=class extends Tm{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Yt(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=de(t.depthwiseConstraint),this.depthwiseRegularizer=te(t.depthwiseRegularizer)}build(t){if(t=Dt(t),t.length<4)throw new O(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);let e=this.dataFormat==="channelsFirst"?1:3;if(t[e]==null||t[e]<0)throw new O(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);let o=t[e],n=[this.kernelSize[0],this.kernelSize[1],o,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",n,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[o*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return z(()=>{t=xt(t);let o=uU(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(o=Tr(o,this.bias.read(),this.dataFormat)),this.activation!=null&&(o=this.activation.apply(o)),o})}computeOutputShape(t){t=Dt(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],o=this.dataFormat==="channelsFirst"?t[3]:t[2],n=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=Rr(e,this.kernelSize[0],this.padding,this.strides[0]),i=Rr(o,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],n,s,i]:[t[0],s,i,n]}getConfig(){let t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=re(this.depthwiseInitializer),t.depthwiseRegularizer=Kt(this.depthwiseRegularizer),t.depthwiseConstraint=he(this.depthwiseRegularizer),t}};_m.className="DepthwiseConv2D";H.registerClass(_m);function hw(r,t,e,o){if(Array.isArray(r)){if(t!=null||e!=null)throw new O("When inputs is an array, neither initialState or constants should be provided");o!=null&&(e=r.slice(r.length-o,r.length),r=r.slice(0,r.length-o)),r.length>1&&(t=r.slice(1,r.length)),r=r[0]}function n(s){return s==null||Array.isArray(s)?s:[s]}return t=n(t),e=n(e),{inputs:r,initialState:t,constants:e}}function dw(r,t,e,o=!1,n,s,i=!1,a=!1){return z(()=>{let l=t.shape.length;if(l<3)throw new O(`Input should be at least 3D, but is ${l}D.`);let c=[1,0].concat(vr(2,l));if(t=Rt(t,c),s!=null)throw new wt("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),n!=null&&(n=Y(Y(n,"bool"),"float32"),n.rank===l-1&&(n=ke(n,-1)),n=Rt(n,c)),o&&(t=so(t,0),n!=null&&(n=so(n,0)));let u=[],p,m=e,f=t.shape[0],h=hr(t),d;n!=null&&(d=hr(n));for(let x=0;x<f;++x){let b=h[x],C=z(()=>r(b,m));if(n==null)p=C[0],m=C[1];else{let w=z(()=>{let I=d[x],E=ut(Ge(I),I),A=j(R(C[0],I),R(m[0],E)),$=m.map((_,L)=>j(R(C[1][L],I),R(_,E)));return{output:A,newStates:$}});p=w.output,m=w.newStates}a&&u.push(p)}let g;return a&&(g=Re(u,1)),[p,g,m]})}var Ko=class r extends Ct{constructor(t){super(t);let e;if(t.cell==null)throw new O("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?e=new Tu({cells:t.cell}):e=t.cell,e.stateSize==null)throw new O("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new Qt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return vr(0,t).map(e=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){Ad(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);let o=e[0],n;if(this.returnSequences?n=[t[0],t[1],o]:n=[t[0],o],this.returnState){let s=[];for(let i of e)s.push([t[0],i]);return[n].concat(s)}else return n}computeMask(t,e){return z(()=>{Array.isArray(e)&&(e=e[0]);let o=this.returnSequences?e:null;if(this.returnState){let n=this.states.map(s=>null);return[o].concat(n)}else return o})}get states(){if(this.states_==null){let t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let o=0;o<t;++o)e.push(null);return e}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new wt("Constants support is not implemented in RNN yet.");Ad(t)&&(t=t[0]),t=t;let o=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new Qt({shape:[o,null,...n]});let s=[t[0]].concat(t.slice(2));this.cell.build(s);let i;if(Array.isArray(this.cell.stateSize)?i=this.cell.stateSize:i=[this.cell.stateSize],this.stateSpec!=null){if(!y.arraysEqual(this.stateSpec.map(a=>a.shape[a.shape.length-1]),i))throw new O(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(a=>new Qt({shape:[null,a]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){z(()=>{if(!this.stateful)throw new io("Cannot call resetStates() on an RNN Layer that is not stateful.");let o=this.inputSpec[0].shape[0];if(o==null)throw new O("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(n=>ie([o,n])):this.states_=[ie([o,this.cell.stateSize])];else if(t==null)vt(this.states_),this.keptStates!=null&&(vt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(n=>ie([o,n])):this.states_[0]=ie([o,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new O(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e===!0?this.keptStates.push(this.states_.slice()):vt(this.states_);for(let n=0;n<this.states_.length;++n){let s=t[n],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[n]:this.cell.stateSize,a=[o,i];if(!y.arraysEqual(s.shape,a))throw new O(`State ${n} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${s.shape}`);this.states_[n]=s}}this.states_=this.states_.map(n=>Be(n.clone()))})}apply(t,e){let o=e==null?null:e.initialState,n=e==null?null:e.constants;e==null&&(e={});let s=hw(t,o,n,this.numConstants);t=s.inputs,o=s.initialState,n=s.constants;let i=[],a=[];if(o!=null){e.initialState=o,i=i.concat(o),this.stateSpec=[];for(let c of o)this.stateSpec.push(new Qt({shape:c.shape}));a=a.concat(this.stateSpec)}if(n!=null&&(e.constants=n,i=i.concat(n),this.numConstants=n.length),i[0]instanceof xr){let c=[t].concat(i),u=this.inputSpec.concat(a),p=this.inputSpec;this.inputSpec=u;let m=super.apply(c,e);return this.inputSpec=p,m}else return super.apply(t,e)}call(t,e){return z(()=>{let o=e==null?null:e.mask,n=e==null?null:e.training,s=e==null?null:e.initialState;t=xt(t),s==null&&(this.stateful?s=this.states_:s=this.getInitialState(t));let i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==i)throw new O(`RNN Layer has ${i} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let a={training:n},c=dw((h,d)=>{let g=this.cell.call([h].concat(d),a);return[g[0],g.slice(1)]},t,s,this.goBackwards,o,null,this.unroll,this.returnSequences),u=c[0],p=c[1],m=c[2];this.stateful&&this.resetStates(m,n);let f=this.returnSequences?p:u;return this.returnState?[f].concat(m):f})}getInitialState(t){return z(()=>{let e=ie(t.shape);return e=lt(e,[1,2]),e=Ls(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(o=>o>1?Td(e,[1,o]):e):this.cell.stateSize>1?[Td(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){let t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(e.numConstants=this.numConstants);let o=this.cell.getConfig();return this.getClassName()===r.className&&(e.cell={className:this.cell.getClassName(),config:o}),Object.assign(Object.assign(Object.assign({},o),t),e)}static fromConfig(t,e,o={}){let n=e.cell,s=Kr(n,o);return new t(Object.assign(e,{cell:s}))}};Ko.className="RNN";H.registerClass(Ko);var la=class extends Ct{},vu=class extends la{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Se(this.units,"units"),this.activation=Ho(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Yt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Yt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Yt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=te(t.kernelRegularizer),this.recurrentRegularizer=te(t.recurrentRegularizer),this.biasRegularizer=te(t.biasRegularizer),this.kernelConstraint=de(t.kernelConstraint),this.recurrentConstraint=de(t.recurrentConstraint),this.biasConstraint=de(t.biasConstraint),this.dropout=cl([1,Uo([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=cl([1,Uo([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Dt(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return z(()=>{if(t=t,t.length!==2)throw new O(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let o=t[1];t=t[0];let n=e.training==null?!1:e.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Bs({ones:()=>Ge(t),rate:this.dropout,training:n,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Bs({ones:()=>Ge(o),rate:this.recurrentDropout,training:n,dropoutFunc:this.dropoutFunc}));let s,i=this.dropoutMask,a=this.recurrentDropoutMask;i!=null?s=vo(R(t,i),this.kernel.read()):s=vo(t,this.kernel.read()),this.bias!=null&&(s=Tr(s,this.bias.read())),a!=null&&(o=R(o,a));let l=j(s,vo(o,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){let t=super.getConfig(),e={units:this.units,activation:Wo(this.activation),useBias:this.useBias,kernelInitializer:re(this.kernelInitializer),recurrentInitializer:re(this.recurrentInitializer),biasInitializer:re(this.biasInitializer),kernelRegularizer:Kt(this.kernelRegularizer),recurrentRegularizer:Kt(this.recurrentRegularizer),biasRegularizer:Kt(this.biasRegularizer),activityRegularizer:Kt(this.activityRegularizer),kernelConstraint:he(this.kernelConstraint),recurrentConstraint:he(this.recurrentConstraint),biasConstraint:he(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),e)}};vu.className="SimpleRNNCell";H.registerClass(vu);var Om=class extends Ko{constructor(t){t.cell=new vu(t),super(t)}call(t,e){return z(()=>{this.cell.dropoutMask!=null&&(vt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(vt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let o=e==null?null:e.mask,n=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:o,training:n,initialState:s})})}static fromConfig(t,e){return new t(e)}};Om.className="SimpleRNN";H.registerClass(Om);var Nu=class extends la{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new O("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Se(this.units,"units"),this.activation=Ho(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Ho(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Yt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Yt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Yt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=te(t.kernelRegularizer),this.recurrentRegularizer=te(t.recurrentRegularizer),this.biasRegularizer=te(t.biasRegularizer),this.kernelConstraint=de(t.kernelConstraint),this.recurrentConstraint=de(t.recurrentConstraint),this.biasConstraint=de(t.biasConstraint),this.dropout=cl([1,Uo([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=cl([1,Uo([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Dt(t);let e=t[t.length-1];this.kernel=this.addWeight("kernel",[e,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return z(()=>{if(t=t,t.length!==2)throw new O(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);let o=e.training==null?!1:e.training,n=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Bs({ones:()=>Ge(t),rate:this.dropout,training:o,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Bs({ones:()=>Ge(n),rate:this.recurrentDropout,training:o,count:3,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,i=this.recurrentDropoutMask,a,l,c;0<this.dropout&&this.dropout<1&&(t=R(t,s[0]));let u=vo(t,this.kernel.read());this.useBias&&(u=Tr(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(n=R(n,i[0]));let p=this.recurrentKernel.read(),[m,f]=Pe(p,[2*this.units,this.units],p.rank-1),h=vo(n,m),[d,g,x]=Pe(u,3,u.rank-1),[b,C]=Pe(h,2,h.rank-1);a=this.recurrentActivation.apply(j(d,b)),l=this.recurrentActivation.apply(j(g,C));let w=vo(R(l,n),f);c=this.activation.apply(j(x,w));let I=j(R(a,n),R(j(1,Mt(a)),c));return[I,I]})}getConfig(){let t=super.getConfig(),e={units:this.units,activation:Wo(this.activation),recurrentActivation:Wo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:re(this.kernelInitializer),recurrentInitializer:re(this.recurrentInitializer),biasInitializer:re(this.biasInitializer),kernelRegularizer:Kt(this.kernelRegularizer),recurrentRegularizer:Kt(this.recurrentRegularizer),biasRegularizer:Kt(this.biasRegularizer),activityRegularizer:Kt(this.activityRegularizer),kernelConstraint:he(this.kernelConstraint),recurrentConstraint:he(this.recurrentConstraint),biasConstraint:he(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),e)}};Nu.className="GRUCell";H.registerClass(Nu);var Lm=class extends Ko{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Nu(t),super(t)}call(t,e){return z(()=>{this.cell.dropoutMask!=null&&(vt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(vt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let o=e==null?null:e.mask,n=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:o,training:n,initialState:s})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}};Lm.className="GRU";H.registerClass(Lm);var ca=class extends la{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Se(this.units,"units"),this.activation=Ho(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Ho(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Yt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Yt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Yt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=te(t.kernelRegularizer),this.recurrentRegularizer=te(t.recurrentRegularizer),this.biasRegularizer=te(t.biasRegularizer),this.kernelConstraint=de(t.kernelConstraint),this.recurrentConstraint=de(t.recurrentConstraint),this.biasConstraint=de(t.biasConstraint),this.dropout=cl([1,Uo([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=cl([1,Uo([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;t=Dt(t);let o=t[t.length-1];this.kernel=this.addWeight("kernel",[o,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let n;if(this.useBias){if(this.unitForgetBias){let s=this.biasInitializer,i=this.units;n=new(e=class extends kr{apply(l,c){let u=s.apply([i]),p=new pl().apply([i]),m=s.apply([i*2]);return tw(tw(u,p),m)}},e.className="CustomInit",e)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return z(()=>{let o=e.training==null?!1:e.training;if(t=t,t.length!==3)throw new O(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let n=t[1],s=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Bs({ones:()=>Ge(t),rate:this.dropout,training:o,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Bs({ones:()=>Ge(n),rate:this.recurrentDropout,training:o,count:4,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,a=this.recurrentDropoutMask,l,c,u,p;0<this.dropout&&this.dropout<1&&(t=R(t,i[0]));let m=vo(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(n=R(n,a[0])),m=j(m,vo(n,this.recurrentKernel.read())),this.useBias&&(m=Tr(m,this.bias.read()));let[f,h,d,g]=Pe(m,4,m.rank-1);l=this.recurrentActivation.apply(f),c=this.recurrentActivation.apply(h),u=j(R(c,s),R(l,this.activation.apply(d))),p=this.recurrentActivation.apply(g);let x=R(p,this.activation.apply(u));return[x,x,u]})}getConfig(){let t=super.getConfig(),e={units:this.units,activation:Wo(this.activation),recurrentActivation:Wo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:re(this.kernelInitializer),recurrentInitializer:re(this.recurrentInitializer),biasInitializer:re(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Kt(this.kernelRegularizer),recurrentRegularizer:Kt(this.recurrentRegularizer),biasRegularizer:Kt(this.biasRegularizer),activityRegularizer:Kt(this.activityRegularizer),kernelConstraint:he(this.kernelConstraint),recurrentConstraint:he(this.recurrentConstraint),biasConstraint:he(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),e)}};ca.className="LSTMCell";H.registerClass(ca);var Pm=class extends Ko{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new ca(t),super(t)}call(t,e){return z(()=>{this.cell.dropoutMask!=null&&(vt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(vt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let o=e==null?null:e.mask,n=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:o,training:n,initialState:s})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}};Pm.className="LSTM";H.registerClass(Pm);var Tu=class extends la{constructor(t){super(t),this.cells=t.cells}get stateSize(){let t=[];for(let e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return z(()=>{t=t;let o=t.slice(1),n=[];for(let a of this.cells.slice().reverse())Array.isArray(a.stateSize)?n.push(o.splice(0,a.stateSize.length)):n.push(o.splice(0,1));n.reverse();let s=[],i;for(let a=0;a<this.cells.length;++a){let l=this.cells[a];o=n[a],a===0?i=[t[0]].concat(o):i=[i[0]].concat(o),i=l.call(i,e),s.push(i.slice(1))}o=[];for(let a of s.slice().reverse())o.push(...a);return[i[0]].concat(o)})}build(t){Ad(t)&&(t=t[0]),t=t;let e;this.cells.forEach((o,n)=>{Go(`RNNCell_${n}`,()=>{o.build(t),Array.isArray(o.stateSize)?e=o.stateSize[0]:e=o.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){let t=super.getConfig(),e=s=>({className:s.getClassName(),config:s.getConfig()}),n={cells:this.cells.map(e)};return Object.assign(Object.assign({},t),n)}static fromConfig(t,e,o={}){let n=[];for(let s of e.cells)n.push(Kr(s,o));return new t({cells:n})}get trainableWeights(){if(!this.trainable)return[];let t=[];for(let e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){let t=[];for(let e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){let e=[];for(let o of this.cells)e.push(...o.trainableWeights);return e.concat(t)}return t}getWeights(){let t=[];for(let e of this.cells)t.push(...e.weights);return am(t)}setWeights(t){let e=[];for(let o of this.cells){let n=o.weights.length,s=t.splice(n);for(let i=0;i<o.weights.length;++i)e.push([o.weights[i],s[i]])}hu(e)}};Tu.className="StackedRNNCells";H.registerClass(Tu);function Bs(r){let{ones:t,rate:e,training:o=!1,count:n=1,dropoutFunc:s}=r,i=()=>s!=null?s(t(),e):Ed(t(),e),a=()=>sa(i,t,o);return!n||n<=1?Be(a().clone()):Array(n).fill(void 0).map(a).map(c=>Be(c.clone()))}var pU=function(r,t){var e={};for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&t.indexOf(o)<0&&(e[o]=r[o]);if(r!=null&&typeof Object.getOwnPropertySymbols=="function")for(var n=0,o=Object.getOwnPropertySymbols(r);n<o.length;n++)t.indexOf(o[n])<0&&Object.prototype.propertyIsEnumerable.call(r,o[n])&&(e[o[n]]=r[o[n]]);return e};var gg=class extends Ko{constructor(t){if(t.unroll)throw new wt("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new wt("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new Qt({ndim:5})]}call(t,e){return z(()=>{if(this.cell.dropoutMask!=null&&(vt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(vt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new O("ConvRNN2D cell does not support constants");let o=e==null?null:e.mask,n=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:o,training:n,initialState:s})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return z(()=>{let{stateSize:e}=this.cell,o=t.shape,n=this.computeSingleOutputShape(o),s=[n[0],...n.slice(2)],i=ie(s);return Array.isArray(e)?Array(e.length).fill(i):[i]})}resetStates(t,e=!1){z(()=>{if(!this.stateful)throw new io("Cannot call resetStates() on an RNN Layer that is not stateful.");let o=this.inputSpec[0].shape,n=this.computeSingleOutputShape(o),s=[n[0],...n.slice(2)];if(o[0]==null)throw new O("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>ie(s)):this.states_=[ie(s)];else if(t==null)vt(this.states_),this.keptStates!=null&&(vt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>ie(s)):this.states_[0]=ie(s);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new O(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):vt(this.states_);for(let a=0;a<this.states_.length;++a){let l=t[a],c=s;if(!y.arraysEqual(l.shape,c))throw new O(`State ${a} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${l.shape}`);this.states_[a]=l}}this.states_=this.states_.map(a=>Be(a.clone()))})}computeSingleOutputShape(t){let{dataFormat:e,filters:o,kernelSize:n,padding:s,strides:i,dilationRate:a}=this.cell,l=e==="channelsFirst",c=t[l?3:2],u=t[l?4:3],p=Rr(c,n[0],s,i[0],a[0]),m=Rr(u,n[1],s,i[1],a[1]);return[...t.slice(0,2),...l?[o,p,m]:[p,m,o]]}};gg.className="ConvRNN2D";var ku=class extends ca{constructor(t){let{filters:e,kernelSize:o,strides:n,padding:s,dataFormat:i,dilationRate:a}=t;super(Object.assign(Object.assign({},t),{units:e})),this.filters=e,Se(this.filters,"filters"),this.kernelSize=aa(o,2,"kernelSize"),this.kernelSize.forEach(l=>Se(l,"kernelSize")),this.strides=aa(n||1,2,"strides"),this.strides.forEach(l=>Se(l,"strides")),this.padding=s||"valid",Sr(this.padding),this.dataFormat=i||"channelsLast",ce(this.dataFormat),this.dilationRate=aa(a||1,2,"dilationRate"),this.dilationRate.forEach(l=>Se(l,"dilationRate"))}build(t){var e;t=Dt(t);let o=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[o]==null)throw new O(`The channel dimension of the input should be defined. Found ${t[o]}`);let n=t[o],s=4,i=this.kernelSize.concat([n,this.filters*s]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let a=this.kernelSize.concat([this.filters,this.filters*s]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){let c=this.biasInitializer,u=this.filters;l=new(e=class extends kr{apply(m,f){let h=c.apply([u]),d=Cr([u]),g=c.apply([u*2]);return nu([h,d,g])}},e.className="CustomInit",e)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*s],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return z(()=>{if(t.length!==3)throw new O(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let o=e.training||!1,n=t[0],s=t[1],i=t[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Bs({ones:()=>Ge(n),rate:this.dropout,training:o,count:a,dropoutFunc:this.dropoutFunc}));let l=this.dropoutMask,c=(rt,ot,it)=>!ot||!ot[it]?rt:R(ot[it],rt),u=c(n,l,0),p=c(n,l,1),m=c(n,l,2),f=c(n,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Bs({ones:()=>Ge(s),rate:this.recurrentDropout,training:o,count:a,dropoutFunc:this.dropoutFunc}));let h=this.recurrentDropoutMask,d=c(s,h,0),g=c(s,h,1),x=c(s,h,2),b=c(s,h,3),C=3,[w,I,E,A]=Pe(this.kernel.read(),a,C),[$,_,L,M]=this.useBias?Pe(this.bias.read(),a):[null,null,null,null];u=this.inputConv(u,w,$,this.padding),p=this.inputConv(p,I,_,this.padding),m=this.inputConv(m,E,L,this.padding),f=this.inputConv(f,A,M,this.padding);let[V,G,W,U]=Pe(this.recurrentKernel.read(),a,C);d=this.recurrentConv(d,V),g=this.recurrentConv(g,G),x=this.recurrentConv(x,W),b=this.recurrentConv(b,U);let K=this.recurrentActivation.apply(j(u,d)),Z=this.recurrentActivation.apply(j(p,g)),q=j(R(Z,i),R(K,this.activation.apply(j(m,x)))),J=R(this.recurrentActivation.apply(j(f,b)),this.activation.apply(q));return[J,J,q]})}getConfig(){let t=super.getConfig(),{units:e}=t,o=pU(t,["units"]),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},o),n)}inputConv(t,e,o,n){let s=Gr(t,e,this.strides,n||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return o?Tr(s,o,this.dataFormat):s}recurrentConv(t,e){return Gr(t,e,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};ku.className="ConvLSTM2DCell";H.registerClass(ku);var zm=class extends gg{constructor(t){let e=new ku(t);super(Object.assign(Object.assign({},t),{cell:e}))}static fromConfig(t,e){return new t(e)}};zm.className="ConvLSTM2D";H.registerClass(zm);var Eu=class extends Ct{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;let e=t.shape,o=[];for(let n=0;n<this.noiseShape.length;++n)o.push(this.noiseShape[n]==null?e[n]:this.noiseShape[n]);return o}call(t,e){return z(()=>{this.invokeCallHook(t,e);let o=xt(t);if(0<this.rate&&this.rate<1){let n=e.training==null?!1:e.training,s=this.getNoiseShape(o);return sa(()=>Ed(o,this.rate,s,this.seed),()=>o,n)}return t})}getConfig(){let t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}};Eu.className="Dropout";H.registerClass(Eu);var Bm=class extends Eu{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){let e=t.shape;return[e[0],1,e[2]]}};Bm.className="SpatialDropout1D";H.registerClass(Bm);var Mm=class extends Ct{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let e=null;t.batchSize!=null&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Se(this.units,"units"),this.activation=Ho(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=Yt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Yt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=de(t.kernelConstraint),this.biasConstraint=de(t.biasConstraint),this.kernelRegularizer=te(t.kernelRegularizer),this.biasRegularizer=te(t.biasRegularizer),this.activityRegularizer=te(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=Dt(t);let e=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){t=Dt(t);let e=t.slice();return e[e.length-1]=this.units,e}call(t,e){return z(()=>{this.invokeCallHook(t,e);let o=xt(t),n=wd(this.activation.getClassName()),s;return n!=null?s=vo(o,this.kernel.read(),n,this.bias?this.bias.read():null):(s=vo(o,this.kernel.read()),this.bias!=null&&(s=Tr(s,this.bias.read())),this.activation!=null&&(s=this.activation.apply(s))),s})}getConfig(){let t={units:this.units,activation:Wo(this.activation),useBias:this.useBias,kernelInitializer:re(this.kernelInitializer),biasInitializer:re(this.biasInitializer),kernelRegularizer:Kt(this.kernelRegularizer),biasRegularizer:Kt(this.biasRegularizer),activityRegularizer:Kt(this.activityRegularizer),kernelConstraint:he(this.kernelConstraint),biasConstraint:he(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}};Mm.className="Dense";H.registerClass(Mm);var Vm=class extends Ct{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Dt(t);for(let e of t.slice(1))if(e==null)throw new O(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],So(t,1)]}call(t,e){return z(()=>{this.invokeCallHook(t,e);let o=xt(t);if(this.dataFormat==="channelsFirst"&&o.rank>1){let n=[0];for(let s=2;s<o.rank;++s)n.push(s);n.push(1),o=Rt(o,n)}return P1(o)})}getConfig(){let t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);let e=super.getConfig();return Object.assign(t,e),t}};Vm.className="Flatten";H.registerClass(Vm);var Gm=class extends Ct{constructor(t){super(t),this.supportsMasking=!0,this.activation=Ho(t.activation)}call(t,e){return z(()=>{this.invokeCallHook(t,e);let o=xt(t);return this.activation.apply(o)})}getConfig(){let t={activation:Wo(this.activation)},e=super.getConfig();return Object.assign(t,e),t}};Gm.className="Activation";H.registerClass(Gm);var Um=class extends Ct{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return z(()=>(t=xt(t),O1(t,this.n)))}getConfig(){let t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}};Um.className="RepeatVector";H.registerClass(Um);var Wm=class extends Ct{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,e){let o="Total size of new array must be unchanged.",n=e.slice(),s=1,i=null;for(let l=0;l<n.length;++l){let c=n[l];if(this.isUnknown(c))if(i===null)i=l;else throw new O("Can only specifiy one unknown dimension.");else s*=c}let a=So(t);if(i!==null){if(s===0||a%s!==0)throw new O(o);n[i]=a/s}else if(a!==s)throw new O(o);return n}computeOutputShape(t){let e=!1;for(let o=0;o<t.length;++o)if(this.isUnknown(t[o])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return z(()=>{this.invokeCallHook(t,e);let o=xt(t),n=o.shape,s=n.slice(0,1).concat(this.fixUnknownDimension(n.slice(1),this.targetShape));return F(o,s)})}getConfig(){let t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}};Wm.className="Reshape";H.registerClass(Wm);var Hm=class extends Ct{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);let e=vr(1,t.dims.length+1);if(!y.arraysEqual(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Qt({ndim:this.dims.length+1})]}computeOutputShape(t){t=Dt(t);let e=t.slice();return this.dims.forEach((o,n)=>{e[n+1]=t[o]}),e}call(t,e){return Rt(xt(t),this.dimsIncludingBatch)}getConfig(){let t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}};Hm.className="Permute";H.registerClass(Hm);var qm=class extends Ct{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){let o=xt(t);return _c(ea(o,this.maskValue),-1)}call(t,e){return z(()=>{this.invokeCallHook(t,e);let o=xt(t),i=_c(ea(o,this.maskValue),-1,!0);return R(o,Y(i,o.dtype))})}};qm.className="Masking";H.registerClass(qm);var Km=class extends Ct{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let e=null;t.batchSize!=null&&(e=t.batchSize),t.inputLength==null?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(Ht(t.inputLength))}this.inputDim=t.inputDim,Se(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Se(this.outputDim,"outputDim"),this.embeddingsInitializer=Yt(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=te(t.embeddingsRegularizer),this.activityRegularizer=te(t.activityRegularizer),this.embeddingsConstraint=de(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return z(()=>this.maskZero?(t=xt(t),ea(t,gt(t))):null)}computeOutputShape(t){if(t=Dt(t),this.inputLength==null)return[...t,this.outputDim];let e=Ht(this.inputLength);if(e.length!==t.length-1)throw new O(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let o=0;for(let n=0;n<e.length;++n){let s=e[n],i=t[n+1];if(s!=null&&i!=null&&s!==i)throw new O(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);s==null&&(e[o]=i),o++}}return[t[0],...e,this.outputDim]}call(t,e){return z(()=>{this.invokeCallHook(t,e);let o=xt(t);o.dtype!=="int32"&&(o=dr(o,"int32"));let n=kd(this.embeddings.read(),F(o,[o.size]));return F(n,Dt(this.computeOutputShape(o.shape)))})}getConfig(){let t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:re(this.embeddingsInitializer),embeddingsRegularizer:Kt(this.embeddingsRegularizer),activityRegularizer:Kt(this.activityRegularizer),embeddingsConstraint:he(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}};Km.className="Embedding";H.registerClass(Km);var Ms=class extends Ct{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new wt}computeElementwiseOpOutputShape(t,e){if(t==null||e==null)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(e.length===0)return t;let o=t.slice(0,t.length-e.length);for(let n=0;n<e.length;++n){let s=t[t.length-e.length+n],i=e[n];if(s==null||i==null||s<0||i<0)o.push(null);else if(s===1)o.push(i);else if(i===1)o.push(s);else{if(s!==i)throw new O("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));o.push(s)}}return o}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Dt(t)]),t=t,t.length<2)throw new O(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(let s of t)s!=null&&s[0]!==null&&e.push(s[0]);if(e=Io(e),e.length>1)throw new O(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let o=t[0]==null?null:t[0].slice(1);for(let s=1;s<t.length;++s){let i=t[s]==null?null:t[s].slice(1);o=this.computeElementwiseOpOutputShape(o,i)}let n=t.map(s=>s.length);t.indexOf(null)===-1&&Io(n).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return z(()=>{if(t=t,this.reshapeRequired){let o=[],n=t.map(s=>s.rank);if(n.indexOf(null)===-1){let s=Uo(n);for(let i of t){let a=i.rank;for(let l=0;l<s-a;++l)i=Ls(i,1);o.push(i)}return this.mergeFunction(o)}else{let s=!1;for(let l of t){let c=l.rank;if(c==null){let u=l.shape,p=u[0],m=u.slice(1).concat([p]),f=F(l,[p].concat(So(u.slice(1))));f=Rt(f,[1,0]),f=F(f,m),o.push(f),s=!0}else if(c>1){let u=vr(1,c).concat([0]);o.push(Rt(l,u)),s=!0}else o.push(l)}let i=this.mergeFunction(o),a=i.rank;if(s){if(a==null){let l=i.shape,c=l.length,u=l[c-1],p=[u].concat(l.slice(0,l.length-1));i=F(Rt(F(i,[-1,u]),[1,0]),p)}else if(a>1){let l=[a-1].concat(vr(0,a-1));i=Rt(i,l)}}return i}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let e;t[0]==null?e=null:e=t[0].slice(1);for(let n=1;n<t.length;++n){let s=t[n]==null?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,s)}let o=[];for(let n of t)n!=null&&n[0]!==null&&o.push(n[0]);return o=Io(o),o.length===1?e=o.concat(e):e=[null].concat(e),e}computeMask(t,e){return z(()=>{if(e==null)return null;if(!Array.isArray(e))throw new O("`mask` should be an Array");if(!Array.isArray(t))throw new O("`inputs` should be an Array");if(e.length!==t.length)throw new O(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(n=>n==null))return null;e=e.map(n=>n==null?n:ke(n,0));let o=e[0];for(let n=1;n<e.length-1;++n)o=fr(o,e[n]);return o})}},Xm=class extends Ms{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0].clone();for(let o=1;o<t.length;++o)e=j(e,t[o]);return e})}};Xm.className="Add";H.registerClass(Xm);var Ym=class extends Ms{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0].clone();for(let o=1;o<t.length;++o)e=R(e,t[o]);return e})}};Ym.className="Multiply";H.registerClass(Ym);var Zm=class extends Ms{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0].clone();for(let o=1;o<t.length;++o)e=j(e,t[o]);return R(1/t.length,e)})}};Zm.className="Average";H.registerClass(Zm);var Jm=class extends Ms{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0];for(let o=1;o<t.length;++o)e=Wr(e,t[o]);return e})}};Jm.className="Maximum";H.registerClass(Jm);var Qm=class extends Ms{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0];for(let o=1;o<t.length;++o)e=hn(e,t[o]);return e})}};Qm.className="Minimum";H.registerClass(Qm);var tf=class extends Ms{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new O("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(let n of t)if(n!=null){e=!1;break}if(e)return;let o=[];for(let n=0;n<t.length;++n){let s=t[n].slice();s.splice(this.axis,1);let i=!1;for(let a of o)if(y.arraysEqual(a,s)){i=!0;break}i||o.push(s)}if(o.length>1)throw new O("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return z(()=>nu(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new O("A `Concatenate` layer should be called on a list of inputs.");let e=t,o=e[0].slice(),n=this.axis<0?o.length+this.axis:this.axis;for(let s of e.slice(1)){if(o[n]==null||s[n]==null){o[n]=null;break}o[n]+=s[n]}return o}computeMask(t,e){if(e==null)return null;if(!Array.isArray(e))throw new O("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new O("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new O(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return z(()=>{let o=!0;if(e.forEach(i=>{if(i!=null){o=!1;return}}),o)return null;let n=[];for(let i=0;i<t.length;++i)e[i]==null?n.push(Y(Ge(t[i]),"bool")):e[i].rank<t[i].rank?n.push(ke(e[i],-1)):n.push(e[i]);let s=ne(n,this.axis);return Ip(s,-1,!1)})}getConfig(){let t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}};tf.className="Concatenate";H.registerClass(tf);function jm(r,t){for(;r<0;)r+=t;return r}function mU(r,t,e){if(r.shape.length>3||t.shape.length>3)throw new wt("batchDot is not implemented for tensors of 4D or higher rank yet");if(y.assert(r.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${r.shape.length}`),y.assert(r.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),r.dtype==="complex64"||t.dtype==="complex64")throw new wt("batchDot is not implemented for complex64-type Tensors yet.");let o=r.shape.length,n=t.shape.length;e==null&&(e=[o-1,n-2]);let s=e;return z(()=>{let i;if(o>n){i=o-n;let l=[];for(let c=0;c<i;++c)l.push(1);t=F(t,t.shape.concat(l))}else if(n>o){i=n-o;let l=[];for(let c=0;c<i;++c)l.push(1);r=F(r,r.shape.concat(l))}else i=0;let a;if(r.shape.length===2&&t.shape.length===2)s[0]===s[1]?a=lt(R(r,t),s[0]):a=lt(R(Rt(r,[1,0]),t),s[1]);else{let l=s[0]!==r.shape.length-1,c=s[1]===t.shape.length-1;a=Wt(r,t,l,c)}if(i>0){let l;o>n?l=o+n-3:l=o-1;let c=[];for(let u=l;u<l+i;++u)c.push(u);a=Bo(a,c)}return a.shape.length===1&&(a=ke(a,1)),a})}var ef=class extends Ms{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){y.assert(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let e=t[0],o=t[1];if(e.length>3||o.length>3)throw new wt("Dot layer does not support tensors of 4D or higher rank yet.");let n=this.interpretAxes(e,o);if(e[n[0]]!==o[n[1]])throw new O(`Dimension incompatibility: ${e[n[0]]} !== ${o[n[1]]}`)}mergeFunction(t){if(t.length!==2)throw new O(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e=t[0],o=t[1],n;return Array.isArray(this.axes)?n=this.axes.map((s,i)=>jm(s,t[i].shape.length)):n=[jm(this.axes,e.shape.length),jm(this.axes,o.shape.length)],this.normalize&&(e=fm(e,n[0]),o=fm(o,n[1])),mU(e,o,n)}interpretAxes(t,e){let o;return Array.isArray(this.axes)?o=this.axes:o=[jm(this.axes,t.length),jm(this.axes,e.length)],o}computeOutputShape(t){y.assert(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let e=t[0].slice(),o=t[1].slice();if(e.length>3||o.length>3)throw new wt("Dot layer does not support tensors of 4D or higher rank yet.");let n=this.interpretAxes(e,o);e.splice(n[0],1),o.splice(n[1],1),o.splice(0,1);let s=e.concat(o);return s.length===1&&s.push(1),s}computeMask(t,e){return null}getConfig(){let t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}};ef.className="Dot";H.registerClass(ef);var rf=class extends Ct{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return z(()=>{this.invokeCallHook(t,e);let o=xt(t);return sa(()=>j(su(o.shape,0,this.stddev),o),()=>o,e.training||!1)})}};rf.className="GaussianNoise";H.registerClass(rf);var of=class extends Ct{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return z(()=>{this.invokeCallHook(t,e);let o=xt(t);return this.rate>0&&this.rate<1?sa(()=>{let s=Math.sqrt(this.rate/(1-this.rate));return R(o,su(o.shape,1,s))},()=>o,e.training||!1):o})}};of.className="GaussianDropout";H.registerClass(of);var nf=class extends Ct{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||xt(t).shape}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return z(()=>{if(this.rate<1&&this.rate>0){let o=this._getNoiseShape(t);return sa(()=>{let s=xt(t),l=-1.6732632423543772*1.0507009873554805,c=Dr(zo(o),this.rate);c=dr(c,"float32");let u=((1-this.rate)*(1+this.rate*l**2))**-.5,p=-u*l*this.rate,m=j(R(s,c),R(j(c,-1),l));return j(R(m,u),p)},()=>xt(t),e.training||!1)}return t})}};nf.className="AlphaDropout";H.registerClass(nf);function sf(r,t,e,o,n,s=.001){let i;if(r.rank===2)i=jb(r,t,e,o,n,s);else if(r.rank===3)i=Xb(r,t,e,o,n,s);else if(r.rank===4)i=Yb(r,t,e,o,n,s);else throw new wt(`batchNormalization is not implemented for array of rank ${r.rank} yet`);return i}function fU(r,t,e,o,n=.001){return z(()=>{let s=Gc(r,o),i=s.mean,a=s.variance;return[sf(r,i,a,e,t,n),i,a]})}function hU(r,t,e,o,n=.001){return z(()=>{let s=Gc(r,o),i=s.mean,a=s.variance,l=[];for(let h of vr(0,r.rank))o.indexOf(h)!==-1?l.push(1):l.push(r.shape[h]);let c=F(i,l),u=F(a,l),p=t==null?null:F(t,l),m=e==null?null:F(e,l);return[sf(r,c,u,m,p,n),i,a]})}function dU(r,t,e,o,n=.001){return y.arraysEqual(o.slice().sort(),vr(0,r.rank-1))?fU(r,t,e,o,n):hU(r,t,e,o,n)}var af=class extends Ct{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=Yt(t.betaInitializer||"zeros"),this.gammaInitializer=Yt(t.gammaInitializer||"ones"),this.movingMeanInitializer=Yt(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Yt(t.movingVarianceInitializer||"ones"),this.betaConstraint=de(t.betaConstraint),this.gammaConstraint=de(t.gammaConstraint),this.betaRegularizer=te(t.betaRegularizer),this.gammaRegularizer=te(t.gammaRegularizer)}build(t){t=Dt(t);let e=this.axis>=0?this.axis:this.axis+t.length,o=t[e];if(o==null)throw new O(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new Qt({ndim:t.length,axes:{[e]:o}})];let n=[o];this.scale&&(this.gamma=this.addWeight("gamma",n,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",n,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",n,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",n,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return z(()=>{let o=e.training==null?!1:e.training,n=xt(t),s=n.shape,i=s.length,a=vr(0,i),l=this.axis>=0?this.axis:this.axis+i;a.splice(l,1);let c=wo(1,i);c[l]=s[l];let u=a.slice();u.sort();let p=!y.arraysEqual(u,vr(0,i).slice(0,i-1)),m=()=>{if(p){let b=F(this.movingMean.read(),c),C=F(this.movingVariance.read(),c),w=this.center?F(this.beta.read(),c):null,I=this.scale?F(this.gamma.read(),c):null;return sf(n,b,C,w,I,this.epsilon)}else return sf(n,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!o)return m();let[f,h,d]=dU(n,this.gamma.read(),this.beta.read(),a,this.epsilon),g=(b,C,w)=>{z(()=>{let I=1-w,E=b.read(),A=R(ut(E,C),I);b.write(ut(E,A))})};return(()=>{g(this.movingMean,h,this.momentum),g(this.movingVariance,d,this.momentum)})(),f})}getConfig(){let t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:re(this.betaInitializer),gammaInitializer:re(this.gammaInitializer),movingMeanInitializer:re(this.movingMeanInitializer),movingVarianceInitializer:re(this.movingVarianceInitializer),betaRegularizer:Kt(this.betaRegularizer),gammaRegularizer:Kt(this.gammaRegularizer),betaConstraint:he(this.betaConstraint),gammaConstraint:he(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}};af.className="BatchNormalization";H.registerClass(af);var lf=class extends Ct{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=Yt(t.betaInitializer||"zeros"),this.gammaInitializer=Yt(t.gammaInitializer||"ones"),this.betaRegularizer=te(t.betaRegularizer),this.gammaRegularizer=te(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=Dt(t);let e=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=e);for(let s of this.axis)if(s<0||s>=e)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==Io(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let o=this.axis.map(s=>t[s]),n=!0;this.scale?this.gamma=this.addWeight("gamma",o,"float32",this.gammaInitializer,this.gammaRegularizer,n):this.gamma=null,this.center?this.beta=this.addWeight("beta",o,"float32",this.betaInitializer,this.betaRegularizer,n):this.beta=null,this.built=!0}call(t,e){let o=xt(t),n=o.shape,s=n.length;return z(()=>{let{mean:a,variance:l}=Gc(o,this.axis,!0),c=wo(1,s);for(let d of this.axis)c[d]=n[d];let u=d=>d!=null&&d.shape.length!==s?F(d,c):d,p=this.scale?u(this.gamma.read()):null,m=this.center?u(this.beta.read()):null,f=[],h=[];for(let d=0;d<s;++d)this.axis.indexOf(d)!==-1?(f.push(n[d]),h.push(1)):(f.push(1),h.push(n[d]));return a=sr(a,f),l=sr(l,f),p!=null&&(p=sr(p,h)),m!=null&&(m=sr(m,h)),sf(o,a,l,m,p,this.epsilon)})}getConfig(){let t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:re(this.betaInitializer),gammaInitializer:re(this.gammaInitializer),betaRegularizer:Kt(this.betaRegularizer),gammaRegularizer:Kt(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}};lf.className="LayerNormalization";H.registerClass(lf);function gU(r,t,e){return z(()=>{if(r.rank!==4)throw new O(`temporalPadding expects input tensor to be 4-D, but received a ${r.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new O("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=Nr()),e!=="channelsLast"&&e!=="channelsFirst")throw new O(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let o;return e==="channelsFirst"?o=[[0,0],[0,0],t[0],t[1]]:o=[[0,0],t[0],t[1],[0,0]],Ja(r,o)})}var cf=class extends Ct{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?Nr():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new O(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,o;if(typeof t.padding[0]=="number")e=[t.padding[0],t.padding[0]],o=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new O(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],t.padding[1].length!==2)throw new O(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);o=t.padding[1]}this.padding=[e,o]}this.inputSpec=[new Qt({ndim:4})]}computeOutputShape(t){t=Dt(t);let e,o;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?e=t[2]+this.padding[0][0]+this.padding[0][1]:e=null,t[3]!=null&&t[3]>=0?o=t[3]+this.padding[1][0]+this.padding[1][1]:o=null,[t[0],t[1],e,o]):(t[1]!=null&&t[1]>=0?e=t[1]+this.padding[0][0]+this.padding[0][1]:e=null,t[2]!=null&&t[2]>=0?o=t[2]+this.padding[1][0]+this.padding[1][1]:o=null,[t[0],e,o,t[3]])}call(t,e){return z(()=>gU(xt(t),this.padding,this.dataFormat))}getConfig(){let t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}};cf.className="ZeroPadding2D";H.registerClass(cf);function Ig(r,t,e,o,n,s){return z(()=>{ce(n),Y0(s),Sr(o),e==null&&(e=[1,1]),o==null&&(o="valid"),n==null&&(n=Nr()),s==null&&(s="max"),r=Fm(r,n);let i,a=o==="same"?"same":"valid";return s==="max"?i=Za(r,t,e,a):i=Ha(r,t,e,a),n==="channelsFirst"&&(i=Rt(i,[0,3,1,2])),i})}function xk(r,t,e,o,n,s){return z(()=>{ce(n),Y0(s),Sr(o),e==null&&(e=[1,1,1]),o==null&&(o="valid"),n==null&&(n=Nr()),s==null&&(s="max"),r=fw(r,n);let i,a=o==="same"?"same":"valid";return s==="max"?i=h0(r,t,e,a):i=Kb(r,t,e,a),n==="channelsFirst"&&(i=Rt(i,[0,4,1,2,3])),i})}var xg=class extends Ct{constructor(t){if(t.poolSize==null&&(t.poolSize=2),super(t),typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new O(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if(Se(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new O(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);Se(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,Sr(this.padding),this.inputSpec=[new Qt({ndim:3})]}computeOutputShape(t){t=Dt(t);let e=Rr(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return z(()=>{this.invokeCallHook(t,e),t=Ls(xt(t),2);let o=this.poolingFunction(xt(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Bo(o,[2])})}getConfig(){let t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}},uf=class extends xg{constructor(t){super(t)}poolingFunction(t,e,o,n,s){return ce(s),Sr(n),Ig(t,e,o,n,s,"max")}};uf.className="MaxPooling1D";H.registerClass(uf);var pf=class extends xg{constructor(t){super(t)}poolingFunction(t,e,o,n,s){return ce(s),Sr(n),Ig(t,e,o,n,s,"avg")}};pf.className="AveragePooling1D";H.registerClass(pf);var yg=class extends Ct{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new O(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Se(this.poolSize,"poolSize"),Se(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,ce(this.dataFormat),Sr(this.padding),this.inputSpec=[new Qt({ndim:4})]}computeOutputShape(t){t=Dt(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],o=this.dataFormat==="channelsFirst"?t[3]:t[2];return e=Rr(e,this.poolSize[0],this.padding,this.strides[0]),o=Rr(o,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,o]:[t[0],e,o,t[3]]}call(t,e){return z(()=>(this.invokeCallHook(t,e),this.poolingFunction(xt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}},mf=class extends yg{constructor(t){super(t)}poolingFunction(t,e,o,n,s){return ce(s),Sr(n),Ig(t,e,o,n,s,"max")}};mf.className="MaxPooling2D";H.registerClass(mf);var ff=class extends yg{constructor(t){super(t)}poolingFunction(t,e,o,n,s){return ce(s),Sr(n),Ig(t,e,o,n,s,"avg")}};ff.className="AveragePooling2D";H.registerClass(ff);var bg=class extends Ct{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new O(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Se(this.poolSize,"poolSize"),Se(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,ce(this.dataFormat),Sr(this.padding),this.inputSpec=[new Qt({ndim:5})]}computeOutputShape(t){t=Dt(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],o=this.dataFormat==="channelsFirst"?t[3]:t[2],n=this.dataFormat==="channelsFirst"?t[4]:t[3];return e=Rr(e,this.poolSize[0],this.padding,this.strides[0]),o=Rr(o,this.poolSize[1],this.padding,this.strides[1]),n=Rr(n,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,o,n]:[t[0],e,o,n,t[4]]}call(t,e){return z(()=>(this.invokeCallHook(t,e),this.poolingFunction(xt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}},hf=class extends bg{constructor(t){super(t)}poolingFunction(t,e,o,n,s){return ce(s),Sr(n),xk(t,e,o,n,s,"max")}};hf.className="MaxPooling3D";H.registerClass(hf);var df=class extends bg{constructor(t){super(t)}poolingFunction(t,e,o,n,s){return ce(s),Sr(n),xk(t,e,o,n,s,"avg")}};df.className="AveragePooling3D";H.registerClass(df);var wg=class extends Ct{constructor(t){super(t),this.inputSpec=[new Qt({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new wt}},gf=class extends wg{constructor(t){super(t||{})}call(t,e){return z(()=>{let o=xt(t);return le(o,1)})}};gf.className="GlobalAveragePooling1D";H.registerClass(gf);var xf=class extends wg{constructor(t){super(t||{})}call(t,e){return z(()=>{let o=xt(t);return Je(o,1)})}};xf.className="GlobalMaxPooling1D";H.registerClass(xf);var Cg=class extends Ct{constructor(t){super(t),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,ce(this.dataFormat),this.inputSpec=[new Qt({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new wt}getConfig(){let t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}},yf=class extends Cg{call(t,e){return z(()=>{let o=xt(t);return this.dataFormat==="channelsLast"?le(o,[1,2]):le(o,[2,3])})}};yf.className="GlobalAveragePooling2D";H.registerClass(yf);var bf=class extends Cg{call(t,e){return z(()=>{let o=xt(t);return this.dataFormat==="channelsLast"?Je(o,[1,2]):Je(o,[2,3])})}};bf.className="GlobalMaxPooling2D";H.registerClass(bf);var Sg=class extends Ct{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){let t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,o={}){let n=e.layer,s=Kr(n,o);delete e.layer;let i={layer:s};return Object.assign(i,e),new t(i)}},wf=class extends Sg{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=Dt(t),t.length<3)throw new O(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];let e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=Dt(t);let e=[t[0]].concat(t.slice(2)),o=this.layer.computeOutputShape(e),n=t[1];return[o[0],n].concat(o.slice(1))}call(t,e){return z(()=>(t=xt(t),dw((i,a)=>[xt(this.layer.call(i,e)),[]],t,[],!1,null,null,!1,!0)[1]))}};wf.className="TimeDistributed";H.registerClass(wf);function xU(r){xn($1,"BidirectionalMergeMode",r)}var yU="concat",Cf=class extends Sg{constructor(t){super(t);let e=t.layer.getConfig(),o={};o.className=t.layer.getClassName(),o.config=e,this.forwardLayer=Kr(o),e.goBackwards=e.goBackwards!==!0;let n={};if(n.className=t.layer.getClassName(),n.config=e,this.backwardLayer=Kr(n),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?yU:t.mergeMode,xU(this.mergeMode),t.weights)throw new wt("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){let e=t.length,o=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,o)),this.backwardLayer.setWeights(t.slice(o))}computeOutputShape(t){let e=this.forwardLayer.computeOutputShape(t);Array.isArray(e)&&Array.isArray(e[0])||(e=[e]),e=e;let o,n,s;return this.returnState&&(s=e.slice(1)),o=e[0],o=o,this.mergeMode==="concat"?(o[o.length-1]*=2,n=[o]):this.mergeMode==null?n=[o,o.slice()]:n=[o],this.returnState?this.mergeMode==null?n.concat(s).concat(s.slice()):[o].concat(s).concat(s.slice()):We(n)}apply(t,e){let o=e==null?null:e.initialState,n=e==null?null:e.constants;e==null&&(e={});let s=hw(t,o,n,this.numConstants);if(t=s.inputs,o=s.initialState,n=s.constants,Array.isArray(t)&&(o=t.slice(1),t=t[0]),(o==null||o.length===0)&&n==null)return super.apply(t,e);let i=[],a=[];if(o!=null){let c=o.length;if(c%2>0)throw new O("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=o,i.push(...o);let u=o.map(p=>new Qt({shape:p.shape}));this.forwardLayer.stateSpec=u.slice(0,c/2),this.backwardLayer.stateSpec=u.slice(c/2),a.push(...u)}if(n!=null)throw new wt("Support for constants in Bidirectional layers is not implemented yet.");let l=i[0]instanceof xr;for(let c of i)if(c instanceof xr!==l)throw new O("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){let c=[t].concat(i),u=this.inputSpec.concat(a),p=this.inputSpec;this.inputSpec=u;let m=super.apply(c,e);return this.inputSpec=p,m}else return super.apply(t,e)}call(t,e){return z(()=>{let o=e.initialState,n,s;if(o==null)n=this.forwardLayer.call(t,e),s=this.backwardLayer.call(t,e);else{let l=o.slice(0,o.length/2),c=o.slice(o.length/2);n=this.forwardLayer.call(t,Object.assign(e,{initialState:l})),s=this.backwardLayer.call(t,Object.assign(e,{initialState:c}))}let i;this.returnState&&(Array.isArray(n)&&(i=n.slice(1).concat(s.slice(1))),n=n[0],s=s[0]),this.returnSequences&&(s=so(s,1));let a;return this.mergeMode==="concat"?a=nu([n,s]):this.mergeMode==="sum"?a=j(n,s):this.mergeMode==="ave"?a=R(.5,j(n,s)):this.mergeMode==="mul"?a=R(n,s):this.mergeMode==null&&(a=[n,s]),this.returnState?this.mergeMode==null?a.concat(i):[a].concat(i):a})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Go(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),Go(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){Array.isArray(e)&&(e=e[0]);let o;if(this.returnSequences?this.mergeMode==null?o=[e,e]:o=e:this.mergeMode==null?o=[null,null]:o=null,this.returnState){let s=this.forwardLayer.states.map(i=>null);return Array.isArray(o)?o.concat(s).concat(s):[o].concat(s).concat(s)}else return o}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){let t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){let o=Kr(e.layer);if(delete e.layer,e.numConstants!=null)throw new wt("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let n=e;return n.layer=o,new t(n)}};Cf.className="Bidirectional";H.registerClass(Cf);var If=class extends Ct{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){let t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return z(()=>(t=xt(t),t.dtype!=="float32"&&(t=dr(t,"float32")),j(R(t,this.scale),this.offset)))}};If.className="Rescaling";H.registerClass(If);var{resizeBilinear:bU,cropAndResize:wU}=qr,Sf=class extends Ct{constructor(t){super(t),this.height=t.height,this.width=t.width}centerCrop(t,e,o,n,s,i,a,l){return z(()=>{let c,u=!1,p=e/i,m=o/a,f=(n+e)/i,h=(s+o)/a,d=[p,m,f,h],g=[];t.rank===3?(u=!0,c=Re([t])):c=t;for(let I=0;I<c.shape[0];I++)g.push(d);let x=Mr(g,[g.length,4]),b=Rs(0,g.length,1,"int32"),w=wU(c,x,b,[n,s],"nearest");return u?dr(xt(hr(w)),l):dr(w,l)})}upsize(t,e,o,n){return z(()=>{let s=bU(t,[e,o]);return dr(s,n)})}call(t,e){return z(()=>{let o=xt(t),n=o.dtype,s=o.shape,i=s[s.length-3],a=s[s.length-2],l=0;i!==this.height&&(l=Math.floor((i-this.height)/2));let c=0;return a!==this.width&&(c=Math.floor((a-this.width)/2),c===0&&(c=1)),l>=0&&c>=0?this.centerCrop(o,l,c,this.height,this.width,i,a,n):this.upsize(t,this.height,this.width,n)})}getConfig(){let t={height:this.height,width:this.width},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){t=Dt(t);let e=t.length-3,o=t.length-2;return t[e]=this.height,t[o]=this.width,t}};Sf.className="CenterCrop";H.registerClass(Sf);function yk(r,t,e,o){let n=xt(r);if(n.dtype!=="int32"&&(n=dr(n,"int32")),t==="int")return n;let s=n.shape;if(n.rank===0&&(n=ke(n,-1)),t==="oneHot"&&n.shape[n.shape.length-1]!==1&&(n=ke(n,-1)),n.rank>2)throw new O(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${s} which would result in output rank ${n.rank}.`);let i=["multiHot","oneHot"].includes(t),a=n,l;if(typeof o<"u"&&t==="count"?l=Xh(a,o,e,i):l=Xh(a,[],e,i),t!=="tfIdf")return l;if(o)return R(l,o);throw new O("When outputMode is 'tfIdf', weights must be provided.")}var vf=class extends Ct{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){let t={numTokens:this.numTokens,outputMode:this.outputMode},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){return t=Dt(t),t==null?[this.numTokens]:this.outputMode==="oneHot"&&t[t.length-1]!==1?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,e){return z(()=>{t=xt(t),t.dtype!=="int32"&&(t=dr(t,"int32"));let o;if(typeof e.countWeights<"u"){if(this.outputMode!=="count")throw new O(`countWeights is not used when outputMode !== count.
              Received countWeights=${e.countWeights}`);o=xt(e.countWeights)}let n=Je(t),s=Qi(t),i=we(this.numTokens,n).bufferSync().get(0),a=Dr(s,0).bufferSync().get(0);if(!(i&&a))throw new O(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return yk(t,this.outputMode,this.numTokens,o)})}};vf.className="CategoryEncoding";H.registerClass(vf);var IU=["bilinear","nearest"],bk=new Set(IU),Nf=class extends Ct{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation)if(bk.has(t.interpolation))this.interpolation=t.interpolation;else throw new O(`Invalid interpolation parameter: ${t.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!t.cropToAspectRatio}computeOutputShape(t){t=Dt(t);let e=t[2];return[this.height,this.width,e]}getConfig(){let t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return z(()=>{let o=[this.height,this.width];if(this.interpolation==="bilinear")return qr.resizeBilinear(t,o,!this.cropToAspectRatio);if(this.interpolation==="nearest")return qr.resizeNearestNeighbor(t,o,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...bk]} are supported`)})}};Nf.className="Resizing";H.registerClass(Nf);var Tf=class{constructor(t){this.seed=t}next(){if(this.seed!==void 0)return this.seed++}};Tf.className="RandomSeed";var kf=class extends Ct{constructor(t){super(t),this.randomGenerator=new Tf(t.seed)}getConfig(){let t={seed:this.randomGenerator.seed},e=super.getConfig();return Object.assign(t,e),t}};kf.className="BaseRandomLayer";var SU=["bilinear","nearest"],wk=new Set(SU),Ef=class extends kf{constructor(t){super(t);let{factor:e,interpolation:o="bilinear"}=t;if(this.factor=e,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new O(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new O(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new O(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(o)if(wk.has(o))this.interpolation=o;else throw new O(`Invalid interpolation parameter: ${o} is not implemented`)}getConfig(){let t={factor:this.factor,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){t=Dt(t);let e=t[2];return[this.imgHeight,-1,e]}call(t,e){return z(()=>{let o=xt(t);this.imgHeight=o.shape[o.shape.length-3];let n=o.shape[o.shape.length-2];this.widthFactor=zo([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let s=this.widthFactor.dataSync()[0]*n;s=Math.round(s);let i=[this.imgHeight,s];switch(this.interpolation){case"bilinear":return qr.resizeBilinear(t,i);case"nearest":return qr.resizeNearestNeighbor(t,i);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...wk]} are supported`)}})}};Ef.className="RandomWidth";H.registerClass(Ef);var AU=P();AU.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,r=>{r&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var gw;(function(r){r[r.DT_INVALID=0]="DT_INVALID",r[r.DT_FLOAT=1]="DT_FLOAT",r[r.DT_DOUBLE=2]="DT_DOUBLE",r[r.DT_INT32=3]="DT_INT32",r[r.DT_UINT8=4]="DT_UINT8",r[r.DT_INT16=5]="DT_INT16",r[r.DT_INT8=6]="DT_INT8",r[r.DT_STRING=7]="DT_STRING",r[r.DT_COMPLEX64=8]="DT_COMPLEX64",r[r.DT_INT64=9]="DT_INT64",r[r.DT_BOOL=10]="DT_BOOL",r[r.DT_QINT8=11]="DT_QINT8",r[r.DT_QUINT8=12]="DT_QUINT8",r[r.DT_QINT32=13]="DT_QINT32",r[r.DT_BFLOAT16=14]="DT_BFLOAT16",r[r.DT_QINT16=15]="DT_QINT16",r[r.DT_QUINT16=16]="DT_QUINT16",r[r.DT_UINT16=17]="DT_UINT16",r[r.DT_COMPLEX128=18]="DT_COMPLEX128",r[r.DT_HALF=19]="DT_HALF",r[r.DT_RESOURCE=20]="DT_RESOURCE",r[r.DT_VARIANT=21]="DT_VARIANT",r[r.DT_UINT32=22]="DT_UINT32",r[r.DT_UINT64=23]="DT_UINT64",r[r.DT_FLOAT_REF=101]="DT_FLOAT_REF",r[r.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",r[r.DT_INT32_REF=103]="DT_INT32_REF",r[r.DT_UINT8_REF=104]="DT_UINT8_REF",r[r.DT_INT16_REF=105]="DT_INT16_REF",r[r.DT_INT8_REF=106]="DT_INT8_REF",r[r.DT_STRING_REF=107]="DT_STRING_REF",r[r.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",r[r.DT_INT64_REF=109]="DT_INT64_REF",r[r.DT_BOOL_REF=110]="DT_BOOL_REF",r[r.DT_QINT8_REF=111]="DT_QINT8_REF",r[r.DT_QUINT8_REF=112]="DT_QUINT8_REF",r[r.DT_QINT32_REF=113]="DT_QINT32_REF",r[r.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",r[r.DT_QINT16_REF=115]="DT_QINT16_REF",r[r.DT_QUINT16_REF=116]="DT_QUINT16_REF",r[r.DT_UINT16_REF=117]="DT_UINT16_REF",r[r.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",r[r.DT_HALF_REF=119]="DT_HALF_REF",r[r.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",r[r.DT_VARIANT_REF=121]="DT_VARIANT_REF",r[r.DT_UINT32_REF=122]="DT_UINT32_REF",r[r.DT_UINT64_REF=123]="DT_UINT64_REF"})(gw||(gw={}));var Ck;(function(r){let t;(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(t=r.CheckpointFormatVersion||(r.CheckpointFormatVersion={}))})(Ck||(Ck={}));var tE=np(_p());var Zk=np(_p());function Hk(r,t){return qk(r,t)}function qk(r,t,e=new Map,o=new Set){if(r==null)return null;if(typeof Blob=="function"&&r instanceof Blob)return r.slice();if(o.has(r))throw new Error("Circular references are not supported.");if(e.has(r))return e.get(r);let n=t(r);if(n.recurse&&n.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(n.recurse)if(Du(r)){let s=Array.isArray(r)?[]:{};o.add(r);for(let i in r){let a=r[i],l=qk(a,t,e,o);s[i]=l}return o.delete(r),r.__proto__&&(s.__proto__=r.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return e.set(r,n.value),n.value}function Kk(r,t=Aw){return jk(r,t)}function jk(r,t,e=new Set){let o=r[0];if(e.has(o))throw new Error("Circular references are not supported.");let n=t(r);if(n.recurse&&n.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(n.recurse)if(Du(o)){let s=Array.isArray(o)?[]:{};e.add(o);for(let i in o){let a=r.map(c=>c[i]),l=jk(a,t,e);s[i]=l}return e.delete(o),s}else throw new Error(`Can't recurse into non-iterable type: ${o}`);else return n.value}function Aw(r){return r===null?null:Du(r[0])?{value:null,recurse:!0}:{value:r,recurse:!1}}function Du(r){let t=!1;if(P().get("IS_BROWSER"))t=r instanceof TextDecoder;else{let{StringDecoder:e}=Wk();t=r instanceof e}return r!=null&&!ArrayBuffer.isView(r)&&(Array.isArray(r)||typeof r=="object"&&!(r instanceof Vt)&&!(r instanceof Promise)&&!t)}function Xk(r){return r==null||p4(r)||Array.isArray(r)||typeof r=="object"&&r instanceof Vt||y.isTypedArray(r)}function p4(r){return r===null||typeof r!="object"&&typeof r!="function"}function Yk(r){return Hk(r,m4)}function m4(r){return r instanceof Vt?{value:r.clone(),recurse:!1}:Du(r)?{value:null,recurse:!0}:{value:r,recurse:!1}}var Ru=class{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,t==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(let e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.wrap(this.begin+t),o=this.get(e);return this.set(e,this.pop()),o}};var $f=class r extends Ru{constructor(){super(r.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){let t=this.capacity*2,e=new Array(t),o=this.length();for(let n=0;n<o;n++)e[n]=this.get(this.wrap(this.begin+n));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=o}};$f.INITIAL_CAPACITY=32;function Jk(r){return new $w(r)}function Gw(r){return new Dw(r)}function Qk(r,t){return new $g(r,t)}var tr=class{toArray(){return B(this,null,function*(){let t=[],e=yield this.next();for(;!e.done;)t.push(e.value),e=yield this.next();return t})}toArrayForTest(){return B(this,null,function*(){let t=this.prefetch(100),e=[],o=yield t.next();for(;!o.done;)e.push(o.value),o=yield t.next();return e})}resolveFully(){return B(this,null,function*(){let t=yield this.next();for(;!t.done;)t=yield this.next()})}resolveWhile(t){return B(this,null,function*(){let e=yield this.next(),o=t(e.value);for(;!e.done&&o;)e=yield this.next(),o=t(e.value)})}handleErrors(t){return new zw(this,t)}filter(t){return new Lw(this,t)}map(t){return new Pw(this,t)}mapAsync(t){return new Ag(this,t)}serialMapAsync(t){return new Ag(this,t).serial()}flatmap(t){return new Bw(this,t)}forEachAsync(t){return B(this,null,function*(){return this.map(t).resolveFully()})}serialForEach(t){return B(this,null,function*(){return this.serialMapAsync(t).resolveWhile(e=>e===!0)})}rowMajorBatch(t,e=!0){return new Ow(this,t,e)}columnMajorBatch(t,e=!0,o=Aw){return this.rowMajorBatch(t,e).map(s=>Kk(s,o))}concatenate(t,e){return new $g(Jk([this,t]),e)}take(t){return t<0||t==null?this:new _w(this,t)}skip(t){return t<0||t==null?this:new Fw(this,t)}prefetch(t){return new Dg(this,t)}shuffle(t,e){return new Vw(this,t,e)}serial(){return new Rw(this)}},$w=class extends tr{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}next(){return B(this,null,function*(){if(this.trav>=this.items.length)return{value:null,done:!0};let t=this.items[this.trav];return this.trav++,{value:Yk(t),done:!1}})}},Dw=class extends tr{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}next(){return B(this,null,function*(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}})}},Rw=class extends tr{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}next(){return B(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return B(this,null,function*(){return this.upstream.next()})}},Fw=class extends tr{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}next(){return B(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return B(this,null,function*(){for(;this.count++<this.maxCount;){let t=yield this.upstream.next();if(t.done)return t;vt(t.value)}return this.upstream.next()})}},_w=class extends tr{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}next(){return B(this,null,function*(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()})}},Ow=class extends tr{constructor(t,e,o=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=o,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}next(){return B(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return B(this,null,function*(){let t=[];for(;t.length<this.batchSize;){let e=yield this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}})}},Lw=class extends tr{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}next(){return B(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return B(this,null,function*(){for(;;){let t=yield this.upstream.next();if(t.done||this.predicate(t.value))return t;vt(t.value)}})}},Pw=class extends tr{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}next(){return B(this,null,function*(){let t=yield this.upstream.next();if(t.done)return{value:null,done:!0};let e=fo.getTensorsInContainer(t.value),o=this.transform(t.value),n=fo.getTensorsInContainer(o);for(let s of e)fo.isTensorInList(s,n)||s.dispose();return{value:o,done:!1}})}},zw=class extends tr{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}next(){return B(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return B(this,null,function*(){for(;;)try{return yield this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}})}},Ag=class extends tr{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}next(){return B(this,null,function*(){let t=yield this.upstream.next();if(t.done)return{value:null,done:!0};let e=fo.getTensorsInContainer(t.value),o=yield this.transform(t.value),n=fo.getTensorsInContainer(o);for(let s of e)fo.isTensorInList(s,n)||s.dispose();return{value:o,done:!1}})}},Df=class extends tr{constructor(){super(),this.outputQueue=new $f,this.lastRead=Promise.resolve({value:null,done:!1})}next(){return B(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return B(this,null,function*(){for(;this.outputQueue.length()===0;)if(!(yield this.pump()))return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}})}},Bw=class extends Df{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}pump(){return B(this,null,function*(){let t=yield this.upstream.next();if(t.done)return!1;let e=fo.getTensorsInContainer(t.value),o=this.transform(t.value),n=fo.getTensorsInContainer(o);this.outputQueue.pushAll(o);for(let s of e)fo.isTensorInList(s,n)||s.dispose();return!0})}},$g=class extends tr{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}next(){return B(this,null,function*(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead})}readFromChain(t){return B(this,null,function*(){if(yield t,this.iterator==null){let o=yield this.moreIterators.next();if(o.done)return{value:null,done:!0};this.iterator=o.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let e=yield this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e})}},Mw;(function(r){r[r.FAIL=0]="FAIL",r[r.SHORTEST=1]="SHORTEST",r[r.LONGEST=2]="LONGEST"})(Mw||(Mw={}));var Dg=class extends tr{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new Ru(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}},Vw=class extends Dg{constructor(t,e,o){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=Zk.alea(o||y.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}next(){return B(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}serialNext(){return B(this,null,function*(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let t=this.chooseIndex(),e=yield this.buffer.shuffleExcise(t);if(e.done)this.upstreamExhausted=!0;else return this.refill(),e}return{value:null,done:!0}})}};var bl=class{constructor(){this.size=null}batch(t,e=!0){let o=this;y.assert(t>0,()=>`batchSize needs to be positive, but it is
      ${t}`);let n;return this.size===1/0||this.size==null?n=this.size:e?n=Math.ceil(this.size/t):n=Math.floor(this.size/t),jo(()=>B(this,null,function*(){return(yield o.iterator()).columnMajorBatch(t,e,h4)}),n)}concatenate(t){let e=this,o;return this.size===1/0||t.size===1/0?o=1/0:this.size!=null&&t.size!=null?o=this.size+t.size:o=null,jo(()=>B(this,null,function*(){return(yield e.iterator()).concatenate(yield t.iterator())}),o)}filter(t){let e=this,o;return this.size===1/0?o=1/0:o=null,jo(()=>B(this,null,function*(){return(yield e.iterator()).filter(n=>z(()=>t(n)))}),o)}forEachAsync(t){return B(this,null,function*(){return(yield this.iterator()).forEachAsync(t)})}map(t){let e=this;return jo(()=>B(this,null,function*(){return(yield e.iterator()).map(o=>z(()=>t(o)))}),this.size)}mapAsync(t){let e=this;return jo(()=>B(this,null,function*(){return(yield e.iterator()).mapAsync(t)}),this.size)}prefetch(t){if(t==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let e=this;return jo(()=>B(this,null,function*(){return(yield e.iterator()).prefetch(t)}),this.size)}repeat(t){let e=this,o;return this.size!=null&&t>0?o=this.size*t:t===0?o=0:this.size!=null&&(t===void 0||t<0)?o=1/0:o=null,jo(()=>B(this,null,function*(){let n=Gw(()=>B(this,null,function*(){return{value:yield e.iterator(),done:!1}}));return Qk(n.take(t))}),o)}skip(t){let e=this,o;return this.size!=null&&t>=0&&this.size>=t?o=this.size-t:this.size!=null&&(this.size<t||t===void 0||t<0)?o=0:o=null,jo(()=>B(this,null,function*(){return(yield e.iterator()).skip(t)}),o)}shuffle(t,e,o=!0){if(t==null||t<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let n=this,s=tE.alea(e||y.now().toString());return jo(()=>B(this,null,function*(){let i=s.int32();return o&&(i+=s.int32()),(yield n.iterator()).shuffle(t,i.toString())}),this.size)}take(t){let e=this,o;return this.size!=null&&this.size>t?o=t:this.size!=null&&this.size<=t?o=this.size:o=null,jo(()=>B(this,null,function*(){return(yield e.iterator()).take(t)}),o)}toArray(){return B(this,null,function*(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(yield this.iterator()).toArray()})}toArrayForTest(){return B(this,null,function*(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(yield this.iterator()).toArrayForTest()})}};bl.MAX_BUFFER_SIZE=1e4;function jo(r,t=null){return new class extends bl{constructor(){super(...arguments),this.size=t}iterator(){return B(this,null,function*(){return r()})}}}function h4(r){if(r===null)return null;let t=r[0];return Xk(t)?{value:d4(r),recurse:!1}:{value:null,recurse:!0}}function d4(r){if(r.length===0)throw new Error("Can't make a batch of zero elements.");return r[0]instanceof Vt?Re(r):Mr(r)}var jjt=Symbol("out"),Xjt=Symbol("field"),Yjt=Symbol("quote"),Zjt=Symbol("quoteafterquote"),Jjt=Symbol("quoteinquote");function X(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&y.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var N4=ar.whereImpl,Rf=class r extends $n{nextDataId(){return r.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new wa(this,ho())}write(t,e,o){this.firstUse&&(this.firstUse=!1,P().get("IS_NODE")&&S.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let n={id:this.nextDataId()};return this.data.set(n,{values:t,dtype:o,refCount:1}),n}makeTensorInfo(t,e,o){let n;if(e==="string"&&o!=null&&o.length>0&&y.isString(o[0])){let s=o.map(i=>y.encodeString(i));n=this.write(s,t,e)}else n=this.write(o,t,e);return{dataId:n,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){let e=this.data.get(t);e.refCount++}decRef(t){if(this.data.has(t)){let e=this.data.get(t);e.refCount--}}move(t,e,o,n,s){this.data.set(t,{values:e,dtype:n,refCount:s})}numDataIds(){return this.data.numDataIds()}read(t){return B(this,null,function*(){return this.readSync(t)})}readSync(t){let{dtype:e,complexTensorInfos:o}=this.data.get(t);if(e==="complex64"){let n=this.readSync(o.real.dataId),s=this.readSync(o.imag.dataId);return S.mergeRealAndImagArrays(n,s)}return y.convertBackendValuesAndArrayBuffer(this.data.get(t).values,e)}bufferSync(t){let e=this.readSync(t.dataId);if(t.dtype==="string")try{let o=e.map(n=>y.decodeString(n));return dt(t.shape,t.dtype,o)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return dt(t.shape,t.dtype,e)}makeOutput(t,e,o){return ho().makeTensorFromTensorInfo(this.makeTensorInfo(e,o,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;let{complexTensorInfos:o}=this.data.get(t);o!=null&&(this.disposeData(o.real.dataId,!0),this.disposeData(o.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}time(t){return B(this,null,function*(){let e=y.now();return t(),{kernelMs:y.now()-e}})}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){X([t],"where");let e=this.readSync(t.dataId);return N4(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};Rf.nextDataId=0;var bC={};co(bC,{addImpl:()=>Hw,bincountImpl:()=>Ou,bincountReduceImpl:()=>Rg,bitwiseAndImpl:()=>qw,castImpl:()=>Ww,ceilImpl:()=>Kw,concatImpl:()=>Fg,equalImpl:()=>jw,expImpl:()=>Yw,expm1Impl:()=>Jw,floorDivImpl:()=>tC,floorImpl:()=>Qw,gatherNdImpl:()=>_g,gatherV2Impl:()=>Og,greaterEqualImpl:()=>rC,greaterImpl:()=>eC,lessEqualImpl:()=>nC,lessImpl:()=>oC,linSpaceImpl:()=>Lg,logImpl:()=>sC,maxImpl:()=>Pg,maximumImpl:()=>iC,minimumImpl:()=>aC,multiplyImpl:()=>Ff,negImpl:()=>lC,notEqualImpl:()=>cC,prodImpl:()=>uC,raggedGatherImpl:()=>zg,raggedRangeImpl:()=>Bg,raggedTensorToTensorImpl:()=>Mg,rangeImpl:()=>Vg,rsqrtImpl:()=>mC,scatterImpl:()=>Xo,sigmoidImpl:()=>DE,simpleAbsImpl:()=>Uw,sliceImpl:()=>hC,sparseFillEmptyRowsImpl:()=>Gg,sparseReshapeImpl:()=>Ug,sparseSegmentReductionImpl:()=>Pu,sqrtImpl:()=>_E,squaredDifferenceImpl:()=>dC,staticRegexReplaceImpl:()=>gC,stridedSliceImpl:()=>Wg,stringNGramsImpl:()=>Hg,stringSplitImpl:()=>qg,stringToHashBucketFastImpl:()=>Kg,subImpl:()=>yC,tileImpl:()=>jg,topKImpl:()=>Xg,transposeImpl:()=>Lu,uniqueImpl:()=>Yg});function Uw(r){let t=new Float32Array(r.length);for(let e=0;e<r.length;++e)t[e]=Math.abs(r[e]);return t}var T4=r=>{let{x:t}=r.inputs,e=r.backend;X(t,"abs");let o=new Float32Array(y.sizeFromShape(t.shape)),n=e.data.get(t.dataId).values;return o=Uw(n),e.makeOutput(o,t.shape,t.dtype)},eE={kernelName:ti,backendName:"cpu",kernelFunc:T4};function Ot(r){return(t,e,o,n,s)=>{let i=S.assertAndGetBroadcastShape(t,e),a=i.length,l=y.computeStrides(i),c=y.sizeFromShape(i),u=y.getTypedArrayFromDType(s,c),p=t.length,m=e.length,f=y.computeStrides(t),h=y.computeStrides(e),d=S.getBroadcastDims(t,i),g=S.getBroadcastDims(e,i);if(d.length+g.length===0)for(let x=0;x<u.length;++x)u[x]=r(o[x%o.length],n[x%n.length]);else for(let x=0;x<u.length;++x){let b=y.indexToLoc(x,a,l),C=b.slice(-p);d.forEach(A=>C[A]=0);let w=y.locToIndex(C,p,f),I=b.slice(-m);g.forEach(A=>I[A]=0);let E=y.locToIndex(I,m,h);u[x]=r(o[w],n[E])}return[u,i]}}function ze(r){let{inputs:t,backend:e}=r,{real:o,imag:n}=t,s=e.data.get(o.dataId).values,i=e.data.get(n.dataId).values,a=e.makeTensorInfo(o.shape,"complex64"),l=e.data.get(a.dataId);return l.complexTensorInfos={real:e.makeTensorInfo(o.shape,"float32",s),imag:e.makeTensorInfo(n.shape,"float32",i)},a}var rE={kernelName:Hl,backendName:"cpu",kernelFunc:ze};function Fu(r,t,e="float32"){if(e==="complex64"){let n=Fu(r,t,"float32"),s=Fu(r,t,"float32");return ze({inputs:{real:n,imag:s},backend:r})}let o=y.makeZerosTypedArray(y.sizeFromShape(t),e);return r.makeTensorInfo(t,e,o)}function cr(r){let{inputs:t,backend:e}=r,{x:o}=t;return e.incRef(o.dataId),{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}var oE={kernelName:on,backendName:"cpu",kernelFunc:cr};function Eo(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.data.get(o.dataId).complexTensorInfos.real,s=e.data.get(n.dataId).values;return e.makeTensorInfo(n.shape,n.dtype,s)}var nE={kernelName:dc,backendName:"cpu",kernelFunc:Eo};function Ww(r,t,e,o){if(o==="int32"){let n=Int32Array.from(r);return[t,"int32",n]}if(o==="bool"){let n=y.toTypedArray([0],e),[s,i]=Ot((a,l)=>a!==l?1:0)(t,[],r,n,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${e} to ${o}`)}function Ao(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dtype:s}=o;if(s==="complex64"){if(n.dtype==="complex64")return cr({inputs:{x:n},backend:e});let u=Fu(e,n.shape,n.dtype),p=Ao({inputs:{x:n},backend:e,attrs:{dtype:"float32"}}),m=ze({inputs:{real:p,imag:u},backend:e});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(p),m}if(n.dtype==="complex64"){let u=Eo({inputs:{input:n},backend:e}),p=Ao({inputs:{x:u},backend:e,attrs:{dtype:s}});return e.disposeIntermediateTensorInfo(u),p}if(!y.hasEncodingLoss(n.dtype,s)){let u=cr({inputs:{x:n},backend:e});return{dataId:u.dataId,shape:u.shape,dtype:s}}let i=e.data.get(n.dataId).values,[a,l,c]=Ww(i,n.shape,n.dtype,s);return e.makeTensorInfo(a,l,c)}var sE={kernelName:rn,backendName:"cpu",kernelFunc:Ao};function Gt(r,t,e,o){return e==null?({inputs:n,backend:s})=>{let{a:i,b:a}=n,l=s;X([i,a],r);let c=l.data.get(i.dataId).values,u=l.data.get(a.dataId).values,p=i.dtype==="string"?S.fromUint8ToStringArray(c):c,m=i.dtype==="string"?S.fromUint8ToStringArray(u):u,f=o||i.dtype,[h,d]=t(i.shape,a.shape,p,m,f);return l.makeTensorInfo(d,f,h)}:({inputs:n,backend:s})=>{let{a:i,b:a}=n,l=s;if(i.dtype==="complex64"||a.dtype==="complex64"){let c=Ao({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),p=u.complexTensorInfos.real,m=u.complexTensorInfos.imag,f=l.data.get(p.dataId).values,h=l.data.get(m.dataId).values,d=Ao({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(d.dataId),x=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,C=l.data.get(x.dataId).values,w=l.data.get(b.dataId).values,[I,E,A]=e(i.shape,a.shape,f,h,C,w),$=l.makeTensorInfo(A,"float32",I),_=l.makeTensorInfo(A,"float32",E),L=ze({inputs:{real:$,imag:_},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(d),l.disposeIntermediateTensorInfo($),l.disposeIntermediateTensorInfo(_),L}else{let c=l.data.get(i.dataId).values,u=l.data.get(a.dataId).values,p=o||i.dtype,[m,f]=t(i.shape,a.shape,c,u,p);return l.makeTensorInfo(f,p,m)}}}function _u(r){return(t,e,o,n,s,i)=>{let a=S.assertAndGetBroadcastShape(t,e),l=y.sizeFromShape(a),c=a.length,u=y.computeStrides(a),p=y.getTypedArrayFromDType("float32",l),m=y.getTypedArrayFromDType("float32",l),f=S.getBroadcastDims(t,a),h=S.getBroadcastDims(e,a),d=S.mergeRealAndImagArrays(o,n),g=S.mergeRealAndImagArrays(s,i),x=t.length,b=y.computeStrides(t),C=e.length,w=y.computeStrides(e);if(f.length+h.length===0)for(let I=0;I<p.length;I++){let E=I%d.length,A=I%g.length,$=r(d[E*2],d[E*2+1],g[A*2],g[A*2+1]);p[I]=$.real,m[I]=$.imag}else for(let I=0;I<p.length;I++){let E=y.indexToLoc(I,c,u),A=E.slice(-x);f.forEach(V=>A[V]=0);let $=y.locToIndex(A,x,b),_=E.slice(-C);h.forEach(V=>_[V]=0);let L=y.locToIndex(_,C,w),M=r(d[$*2],d[$*2+1],g[L*2],g[L*2+1]);p[I]=M.real,m[I]=M.imag}return[p,m,a]}}var Hw=Ot((r,t)=>r+t),k4=_u((r,t,e,o)=>({real:r+e,imag:t+o})),Sn=Gt(_o,Hw,k4),iE={kernelName:_o,backendName:"cpu",kernelFunc:Sn};function Ou(r,t,e,o,n){let s=y.sizeFromShape(o),i=y.makeZerosTypedArray(n,e);for(let a=0;a<r.length;a++){let l=r[a];if(l<0)throw new Error("Input x must be non-negative!");l>=n||(s>0?i[l]+=t[a]:i[l]+=1)}return i}function Rg(r,t,e,o=!1){let n=r.shape[0],s=r.shape[1],i=dt([n,e],t.dtype);for(let a=0;a<n;a++)for(let l=0;l<s;l++){let c=r.get(a,l);if(c<0)throw new Error("Input x must be non-negative!");c>=e||(o?i.set(1,a,c):t.size>0?i.set(i.get(a,c)+t.get(a,l),a,c):i.set(i.get(a,c)+1,a,c))}return i}var qw=Ot((r,t)=>r&t),E4=Gt(up,qw),aE={kernelName:up,backendName:"cpu",kernelFunc:E4};function Ke(r){return(t,e,o)=>{let n=y.getArrayFromDType(e,t.length);for(let s=0;s<t.length;++s)n[s]=r(t[s],o);return n}}function It(r,t,e){let o=Ke(t);return Fr(r,o,e)}function Fr(r,t,e){return({inputs:o,attrs:n,backend:s})=>{let{x:i}=o;X(i,r);let a=s,l=a.data.get(i.dataId).values,c;if(i.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");c=S.fromUint8ToStringArray(l)}else c=l;let u=e||i.dtype,p=t(c,u,n);return a.makeTensorInfo(i.shape,u,p)}}var Kw=Ke(r=>Math.ceil(r)),A4=Fr(Bn,Kw),lE={kernelName:Bn,backendName:"cpu",kernelFunc:A4};function Fg(r,t,e,o){let n=y.getArrayFromDType(e,y.sizeFromShape(t));if(o&&e!=="string"){let s=0;r.forEach(i=>{let a=y.sizeFromShape(i.shape);n.set(i.vals,s),s+=a})}else{let s=0;r.forEach(i=>{let a=e==="string"?S.fromUint8ToStringArray(i.vals):i.vals,l=0;for(let c=0;c<i.shape[0];++c){let u=c*t[1]+s;for(let p=0;p<i.shape[1];++p)n[u+p]=a[l++]}s+=i.shape[1]})}return n}var jw=Ot((r,t)=>r===t?1:0),Xw=Gt(va,jw,null,"bool"),cE={kernelName:va,backendName:"cpu",kernelFunc:Xw};var Yw=Ke(r=>Math.exp(r)),Zw=Fr(qn,Yw,"float32"),uE={kernelName:qn,backendName:"cpu",kernelFunc:Zw};var Jw=Ke(r=>Math.expm1(r)),$4=Fr(Kn,Jw),pE={kernelName:Kn,backendName:"cpu",kernelFunc:$4};var Qw=Ke(r=>Math.floor(r)),D4=Fr(jn,Qw),mE={kernelName:jn,backendName:"cpu",kernelFunc:D4};var tC=Ot((r,t)=>Math.floor(r/t)),R4=Gt(Xn,tC,null,"int32"),fE={kernelName:Xn,backendName:"cpu",kernelFunc:R4};function _g(r,t,e,o,n,s,i,a,l){let c=dt([o,s],e);for(let u=0;u<o;u++){let p=[],m=0;for(let f=0;f<n;f++){let h=r[u*n+f];m+=h*i[f],p.push(h)}if(m<0||m>=l/s)throw new Error(`Invalid indices: ${p} does not index into ${a}`);for(let f=0;f<s;f++)c.values[u*s+f]=t.get(...t.indexToLoc(m*s+f))}return c}function Og(r,t,e){let o=dt(e,r.dtype);for(let n=0;n<o.size;++n){let i=o.indexToLoc(n).slice(),a=i[0],l=i[2],c=t.locToIndex([a,l]);i[2]=t.values[c];let u=r.locToIndex(i);0<=u&&u<r.values.length&&(o.values[n]=r.values[u])}return o}var eC=Ot((r,t)=>r>t?1:0),F4=Gt(Na,eC,null,"bool"),hE={kernelName:Na,backendName:"cpu",kernelFunc:F4};var rC=Ot((r,t)=>r>=t?1:0),_4=Gt(Yn,rC,null,"bool"),dE={kernelName:Yn,backendName:"cpu",kernelFunc:_4};var oC=Ot((r,t)=>r<t?1:0),O4=Gt(Ta,oC,null,"bool"),gE={kernelName:Ta,backendName:"cpu",kernelFunc:O4};var nC=Ot((r,t)=>r<=t?1:0),L4=Gt(ka,nC,null,"bool"),xE={kernelName:ka,backendName:"cpu",kernelFunc:L4};function Lg(r,t,e){let o=(t-r)/(e-1),n=y.makeZerosTypedArray(e,"float32");n[0]=r;for(let s=1;s<n.length;s++)n[s]=n[s-1]+o;return n}var sC=Ke(r=>Math.log(r)),P4=Fr(ts,sC),yE={kernelName:ts,backendName:"cpu",kernelFunc:P4};function Pg(r,t,e,o){let n=y.getTypedArrayFromDType(o,y.sizeFromShape(e));for(let s=0;s<n.length;++s){let i=s*t,a=r[i];for(let l=0;l<t;++l){let c=r[i+l];(Number.isNaN(c)||c>a)&&(a=c)}n[s]=a}return n}var iC=Ot((r,t)=>Math.max(r,t)),z4=Gt(rs,iC),bE={kernelName:rs,backendName:"cpu",kernelFunc:z4};var aC=Ot((r,t)=>Math.min(r,t)),B4=Gt(os,aC),wE={kernelName:os,backendName:"cpu",kernelFunc:B4};var Ff=Ot((r,t)=>r*t),M4=_u((r,t,e,o)=>({real:r*e-t*o,imag:r*o+t*e})),wl=Gt(ss,Ff,M4),CE={kernelName:ss,backendName:"cpu",kernelFunc:wl};function lC(r,t,e){let o=y.createScalarValue(-1,e);return Ff([],t,o,r,e)}function V4(r){let{inputs:t,backend:e}=r,{x:o}=t;X(o,"neg");let n=e.data.get(o.dataId).values,[s,i]=lC(n,o.shape,o.dtype);return e.makeTensorInfo(i,o.dtype,s)}var IE={kernelName:Ti,backendName:"cpu",kernelFunc:V4};var cC=Ot((r,t)=>r!==t?1:0),G4=Gt(Da,cC,null,"bool"),SE={kernelName:Da,backendName:"cpu",kernelFunc:G4};function Lu(r,t,e,o,n){let s=t.length,i=y.sizeFromShape(t),a=y.computeStrides(t),l=y.computeStrides(n),c=y.getTypedArrayFromDType(e,y.sizeFromShape(n));for(let u=0;u<i;++u){let p=y.indexToLoc(u,s,a),m=new Array(p.length);for(let h=0;h<m.length;h++)m[h]=p[o[h]];let f=y.locToIndex(m,s,l);c[f]=r[u]}return c}function ge(r){let{inputs:t,attrs:e,backend:o}=r,{x:n}=t,{perm:s}=e;X(n,"transpose");let i=n.shape.length,a=new Array(i);for(let p=0;p<a.length;p++)a[p]=n.shape[s[p]];let l=o.data.get(n.dataId).values,c=Lu(l,n.shape,n.dtype,s,a);return{dataId:o.write(c,a,n.dtype),shape:a,dtype:n.dtype}}var vE={kernelName:sn,backendName:"cpu",kernelFunc:ge};function uC(r,t,e,o){let[n,s]=S.computeOutAndReduceShapes(r,o),i=$e(t,"int32"),a=y.makeZerosTypedArray(y.sizeFromShape(n),i),l=y.sizeFromShape(s);for(let c=0;c<a.length;++c){let u=c*l,p=1;for(let m=0;m<l;++m)p*=e[u+m];a[c]=p}return{outVals:a,outShape:n,outDtype:i}}function U4(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o;X(n,"prod");let a=n.shape.length,l=y.parseAxisParam(s,n.shape),c=S.getAxesPermutation(l,a),u=l,p=n,m=[];c!=null&&(p=ge({inputs:{x:n},backend:e,attrs:{perm:c}}),m.push(p),u=S.getInnerMostAxes(u.length,a));let f=e.data.get(p.dataId).values,{outVals:h,outShape:d,outDtype:g}=uC(p.shape,p.dtype,f,u),x=d;return i&&(x=S.expandShapeToKeepDim(d,l)),m.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.makeTensorInfo(x,g,h)}var NE={kernelName:Ri,backendName:"cpu",kernelFunc:U4};function W4(r,t,e){r.forEach((o,n)=>{if(o<0||o>=e){let s=y.indexToLoc(n,t.length,y.computeStrides(t)).join(",");throw new Error(`indices[${s}] = ${o} is not in [0, ${e})`)}})}function H4(r,t){for(let e=0;e<r.length;++e){let o=r[e],n=e===r.length-1?t:r[e+1].length;if(o.length===0)throw new Error("Ragged splits may not be empty");if(o[0]<0)throw new Error("Ragged splits must be non-negative");if(o[o.length-1]>n)throw new Error("Ragged splits must not point past values");for(let s=1;s<o.length;++s)if(o[s-1]>o[s])throw new Error("Ragged splits must be sorted in ascending order")}}function q4(r,t,e,o){let n=[],s=0,i=t.length-1+e.length,a=new Array(i).fill(null).map(()=>[0]);H4(e,o);let l=1;for(let c=0;c<t.length-1;++c){l*=t[c];let u=t[c+1];for(let p=1;p<l+1;++p)a[c].push(p*u)}for(let c=0;c<r.length;++c){let u=r[c],p=r[c]+1;for(let m=0;m<e.length;++m){let f=e[m],h=m+t.length-1;if(h>=0){let d=a[h],g=d[d.length-1]-f[u];for(let x=u;x<p;++x)a[h].push(f[x+1]+g)}u=f[u],p=f[p]}p!==u&&(n.push([u,p]),s+=p-u)}return{outSplits:a,valueSlices:n,numValues:s}}function K4(r){let t=[];for(let e=0;e<r.length;++e){let o=r[e].length,n=y.getArrayFromDType("int32",o);t.push(n),r[e].forEach((s,i)=>n[i]=s)}return t}function TE(r,t){let e=r.slice(0,t);for(;e.length<t;)e.push(1);for(let o=t;o<r.length;o++)e[t-1]*=r[o];return e}function j4(r,t,e,o,n,s){let i=TE(t,2)[1],a=TE(s,2)[1],l=0;for(let c of e)for(let u=c[0];u<c[1];++u){for(let p=0;p<o;++p)n[l*a+p]=r[u*i+p];++l}}function X4(r,t,e,o,n){let s=t.slice();s[0]=n;let i=y.getArrayFromDType(e,y.sizeFromShape(s)),a=r.length,l=a===0?0:a/t[0];return j4(r,t,o,l,i,s),[i,s]}function zg(r,t,e,o,n,s,i,a){if(r.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");let l=t[0][0]-1;if(W4(s,i,l),o.length===0)throw new Error("params.rank must be nonzero");let c=o[0],{outSplits:u,valueSlices:p,numValues:m}=q4(s,i,r,c),f=K4(u),h=X4(e,o,n,p,m);return[f,h[0],h[1]]}var kE=2147483647;function Bg(r,t,e,o,n,s,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(n.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");let a=t.length===0,l=n.length===0,c=i.length===0,u=[];a||u.push(t[0]),l||u.push(n[0]),c||u.push(i[0]);for(let g=1;g<u.length;++g)if(u[g]!==u[g-1])throw new Error("starts, limits, and deltas must have the same shape");let p=u.length===0?1:u[0],m=y.getArrayFromDType("int32",p+1);m[0]=0;for(let g=0;g<p;++g){let x=a?r[0]:r[g],b=l?o[0]:o[g],C=c?s[0]:s[g];if(C===0)throw new Error("Requires delta != 0");let w;if(C>0&&b<x||C<0&&b>x)w=0;else if(w=Math.ceil(Math.abs((b-x)/C)),w>kE)throw new Error(`Requires ((limit - start) / delta) <= ${kE}`);m[g+1]=m[g]+w}let f=m[p],h=y.getArrayFromDType(e,f),d=0;for(let g=0;g<p;++g){let x=m[g+1]-m[g],b=a?r[0]:r[g],C=c?s[0]:s[g];for(let w=0;w<x;++w)h[d++]=b,b+=C}return[m,h]}var $o=S.RowPartitionType,pC=class r{constructor(t,e,o,n,s,i,a,l,c,u){this.shape=t,this.shapeShape=e,this.values=o,this.valuesShape=n,this.valuesDType=s,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=S.getRowPartitionTypesHelper(u),this.raggedRank=S.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===$o.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===$o.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){let e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case $o.VALUE_ROWIDS:return r.getMaxWidthValueRowID(e);case $o.ROW_SPLITS:return r.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${$o[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){let e=t.length;if(e===0||e===1)return 0;let o=0;for(let n=0;n<e-1;++n){let s=t[n+1]-t[n];s>o&&(o=s)}return o}static getMaxWidthValueRowID(t){let e=t.length;if(e===0)return 0;let o=0,n=t[0],s=0;for(let i=1;i<e;++i){let a=t[i];a!==n&&(n=a,s=Math.max(i-o,s),o=i)}return Math.max(e-o,s)}tensorShapeFromTensor(t,e,o=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return AE(t,o)}calculateOutputSize(t){let e=this.valuesShape,o=this.defaultValueShape;S.validateDefaultValueShape(o,e);let n=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=S.combineRaggedTensorToTensorShapes(this.raggedRank,n,e);i[0]<0&&(i[0]=t);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(t,e,o){let n=Math.min(t,o),s=[],i=0;for(let a=0;a<n;++a,i+=e)s.push(i);for(let a=n;a<t;++a)s.push(-1);return y.assert(s.length===t,()=>"Final length of result must be equal to firstDimension."),s}calculateOutputIndexRowSplit(t,e,o,n){let s=t.length,i=[];for(let a=0;a<s-1;++a){let l=t[a+1]-t[a],c=Math.min(n,l),u=e[a];u===-1&&(c=0);for(let p=0;p<c;++p)i.push(u),u+=o;for(let p=0;p<l-c;++p)i.push(-1)}if(s>0&&i.length!==t[s-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(t,e,o,n){let s=t.length,i=[];if(s===0)return[];let a=0,l=t[0];if(l>=e.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${e.length}`);let c=e[l];i.push(c);for(let u=1;u<s;++u){let p=t[u];if(p===l)c>=0&&(++a,a<n?c+=o:c=-1);else{if(a=0,l=p,p>=e.length)throw new Error(`Got nextValueRowId=${p} which is not less than ${e.length}`);c=e[p]}i.push(c)}if(i.length!==t.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(t,e,o,n){let s=this.getRowPartitionTensor(t),i=this.getRowPartitionTypeByDimension(t);switch(i){case $o.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,e,o,n);case $o.ROW_SPLITS:if(s.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(s,e,o,n);default:throw new Error(`Unsupported partition type: ${$o[i]}`)}}getFirstDimensionSize(){let t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let e=this.rowPartitionTypes[0];switch(e){case $o.FIRST_DIM_SIZE:return t[0];case $o.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case $o.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${$o[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),o=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let l=n.length-2;l>=0;--l)n[l]=n[l+1]*o[l+1];let s=AE(o,!1),i=y.getArrayFromDType(this.valuesDType,y.sizeFromShape(s));if(n[0]*o[0]>0){let l=this.calculateFirstParentOutputIndex(e,n[0],o[0]);for(let c=1;c<=this.raggedRank;++c)l=this.calculateOutputIndex(c-1,l,n[c],o[c]);this.setOutput(this.raggedRank,l,i,s)}return[s,i]}setOutput(t,e,o,n){if(o.length===0)return;let s=this.values,i=o,a=n.slice();a=a.slice(t+1);let l=y.sizeFromShape(a),c=e.length,u=this.defaultValue;if(u.length!==l&&u.length!==1){let h=this.defaultValueShape;z(()=>{let d=F(u,h);u=ks(d,a).dataSync()})}let p=0,m=0,f=0;for(let h=0;h<=c;++h){let d=h<c?e[h]:-1;if(d===f){++f;continue}if(m<f){let g=s.subarray(p*l),x=i.subarray(m*l),b=(f-m)*l;EE(x,g,b)}if(h>=c){let g=o.length;d=Math.floor(g/l)}if(d>f)if(this.defaultValue.length===1)i.subarray(f*l,d*l).fill(this.defaultValue[0]),f=d;else for(;d>f;){let g=i.slice(f*l);EE(g,u,l),++f}d<0?(p=h+1,m=f):(p=h,m=f,f=m+1)}}};function EE(r,t,e){for(let o=0;o<e;o++)r[o]=t[o]}function AE(r,t){let e=[];for(let o of r){if(o<0){if(!t)throw new Error(`Dimension ${o} must be >= 0`);if(o<-1)throw new Error(`Dimension ${o} must be >= -1`);o=-1}e.push(o)}return e}function Mg(r,t,e,o,n,s,i,a,l,c){return new pC(r,t,e,o,n,s,i,a,l,c).compute()}function Vg(r,t,e,o){let n=r===t,s=r<t&&e<0,i=t<r&&e>1;if(n||s||i)return y.makeZerosTypedArray(0,o);let a=Math.abs(Math.ceil((t-r)/e)),l=y.makeZerosTypedArray(a,o);t<r&&e===1&&(e=-1),l[0]=r;for(let c=1;c<l.length;c++)l[c]=l[c-1]+e;return l}var mC=Ke(r=>1/Math.sqrt(r)),Y4=Fr(ps,mC),$E={kernelName:ps,backendName:"cpu",kernelFunc:Y4};function Xo(r,t,e,o,n,s,i,a,l,c){let u=[o/n,n],p=r.values,m=t.values;if(o===0)return dt(e,t.dtype);let f=l instanceof jt?l:dt(u,t.dtype);typeof l=="string"||typeof l=="number"?f.values.fill(l):typeof l=="boolean"&&f.values.fill(+l);for(let h=0;h<s;h++){let d=[],g=0;for(let x=0;x<i;x++){let b=p[h*i+x];d.push(b),g+=b*a[x]}if(g<0||g>=o/n)throw new Error(`Invalid indices: ${d} does not index into ${e}`);for(let x=0;x<n;x++)c?f.values[g*n+x]+=m[h*n+x]:f.values[g*n+x]=t.rank===0?m[0]:m[h*n+x]}return f}var DE=Ke(r=>1/(1+Math.exp(-r))),fC=It(gs,r=>1/(1+Math.exp(-r))),RE={kernelName:gs,backendName:"cpu",kernelFunc:fC};function hC(r,t,e,o,n){let s=Ue.isSliceContinous(o,t,e),i=y.sizeFromShape(e),a=y.computeStrides(o);if(s){let p=Ue.computeFlatOffset(t,a);return n==="string"?r.slice(p,p+i):r.subarray(p,p+i)}let l=n==="string"?S.fromUint8ToStringArray(r):r,c=dt(o,n,l),u=dt(e,n);for(let p=0;p<u.size;++p){let m=u.indexToLoc(p),f=m.map((h,d)=>h+t[d]);u.set(c.get(...f),...m)}return n==="string"?S.fromStringArrayToUint8(u.values):u.values}function Do(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:s,size:i}=o;X(n,"slice");let[a,l]=Ue.parseSliceParams(n,s,i);Ue.assertParamsValid(n,a,l);let c=e.data.get(n.dataId).values,u=hC(c,a,l,n.shape,n.dtype);return e.makeTensorInfo(l,n.dtype,u)}var FE={kernelName:zi,backendName:"cpu",kernelFunc:Do};function Gg(r,t,e,o,n,s,i){let a=t[0],l=s[0],c=new Array(l),u=new Array(a),p=t[1];if(l===0){if(a!==0)throw new Error(S.getSparseFillEmptyRowsIndicesDenseShapeMismatch(a));let g=y.getArrayFromDType(e,0),x=y.getArrayFromDType(n,0);return[g,[0,p],x,c,u]}let m=!0,f=0,h=new Array(l).fill(0);for(let g=0;g<a;++g){let x=r[g*p];if(x<0)throw new Error(S.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,x));if(x>=l)throw new Error(S.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,x,l));++h[x],m=m&&x>=f,f=x}let d=!0;for(let g=0;g<l;++g){let x=h[g]===0;c[g]=x,d=d&&!x,h[g]=Math.max(h[g],1),g>0&&(h[g]+=h[g-1])}if(d&&m){let g=r,x=o;for(let b=0;b<a;++b)u[b]=b;return[g,[a,p],x,c,u]}else{let g=h[l-1],x=y.getArrayFromDType(e,g*p),b=y.getArrayFromDType(n,g),C=new Array(l).fill(0);for(let w=0;w<a;++w){let I=r[w*p],E=C[I],A=(I===0?0:h[I-1])+E;C[I]++;for(let $=0;$<p;++$)x[A*p+$]=r[w*p+$];b[A]=o[w],u[w]=A}for(let w=0;w<l;++w)if(C[w]===0){let E=w===0?0:h[w-1];x[E*p+0]=w;for(let A=1;A<p;++A)x[E*p+A]=0;b[E]=i}return[x,[g,p],b,c,u]}}function Ug(r,t,e,o,n){let s=y.sizeFromShape(o),i=t[0],a=n.length,l=[],c=1,u=-1;for(let g=0;g<a;++g){let x=n[g];if(x===-1){if(u!==-1)throw new Error(S.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(u,g));u=g,l.push(1)}else{if(x<0)throw new Error(S.getSparseReshapeNegativeOutputDimErrorMessage(g,x));c*=x,l.push(x)}}if(u!==-1){if(c<=0)throw new Error(S.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(s/c);if(c*g!==s)throw new Error(S.getSparseReshapeInputOutputMultipleErrorMessage(o,l));l[u]=g}if(y.sizeFromShape(l)!==s)throw new Error(S.getSparseReshapeInputOutputMismatchErrorMessage(o,l));let m=o.length,f=[];if(m>0){f[m-1]=1;for(let g=m-2;g>=0;--g)f[g]=f[g+1]*o[g+1]}let h=[];if(a>0){h[a-1]=1;for(let g=a-2;g>=0;--g)h[g]=h[g+1]*l[g+1]}let d=y.getArrayFromDType(e,i*a);for(let g=0;g<i;++g){let x=0;for(let b=0;b<m;++b)x+=r[g*m+b]*f[b];for(let b=0;b<a;++b)d[g*a+b]=Math.trunc(x/h[b]),x%=h[b]}return[d,[i,a],l]}function Pu(r,t,e,o,n,s=!1,i=0){let a=o.length,l=[t[0],r.length/t[0]],c=l[1],p=a>0?n[a-1]+1:0;if(p<0)throw new Error(S.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=t.slice();m[0]=p;let f=m.reduce((C,w)=>C*w,1),h=y.getArrayFromDType(e,f);if(a===0)return p>0&&h.fill(i),[h,m];if(p<=0)throw new Error(S.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=0,g=1,x=0,b=n[d];for(;;){let C=0;if(g<a){if(C=n[g],b===C){++g;continue}if(b>=C)throw new Error(S.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(b<0||b>=p)throw new Error(S.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b,p));b>x&&h.fill(i,x*c,b*c);for(let w=d;w<g;++w){let I=o[w];if(I<0||I>=l[0])throw new Error(S.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(w,o[w],l[0]));for(let E=0;E<c;E++)h[b*c+E]+=r[I*c+E]}if(s)for(let w=0;w<c;w++)h[b*c+w]/=g-d;if(d=g,++g,x=b+1,b=C,g>a)break}return x<p&&h.fill(i,x*c,p*c),[h,m]}var _E=Ke(r=>Math.sqrt(r)),Z4=It(ys,r=>Math.sqrt(r)),OE={kernelName:ys,backendName:"cpu",kernelFunc:Z4};var dC=Ot((r,t)=>{let e=r-t;return e*e}),J4=Gt(bs,dC),LE={kernelName:bs,backendName:"cpu",kernelFunc:J4};var gC=Ke((r,t)=>{let{pattern:e,replaceGlobal:o,rewrite:n}=t;return r.replace(new RegExp(e,o?"g":""),n)}),Q4=Fr(fp,gC),PE={kernelName:fp,backendName:"cpu",kernelFunc:Q4};function Wg(r,t,e,o){let n=dt(r,t.dtype);for(let s=0;s<n.size;s++){let i=n.indexToLoc(s),a=new Array(i.length);for(let l=0;l<a.length;l++)a[l]=i[l]*e[l]+o[l];n.set(t.get(...a),...i)}return n}var xC=class{constructor(t,e,o,n,s,i){this.separator=y.encodeString(t),this.nGramWidths=e,this.leftPad=y.encodeString(o),this.rightPad=y.encodeString(n),this.padWidth=s,this.preserveShort=i}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){let o=this.getPadWidth(e);return Math.max(0,t+2*o-e+1)}createNGrams(t,e,o,n,s,i){for(let a=0;a<s;++a){let l=this.getPadWidth(i),c=Math.max(0,l-a),u=Math.max(0,l-(s-(a+1))),p=i-(c+u),m=e+(c>0?0:a-l),f=0;f+=c*this.leftPad.length;for(let b=0;b<p;++b)f+=t[m+b].length;f+=u*this.rightPad.length;let h=c+u+p-1;f+=h*this.separator.length,o[n+a]=new Uint8Array(f);let d=o[n+a],g=0,x=b=>b.forEach(C=>d[g++]=C);for(let b=0;b<c;++b)x(this.leftPad),x(this.separator);for(let b=0;b<p-1;++b)x(t[m+b]),x(this.separator);if(p>0){x(t[m+p-1]);for(let b=0;b<u;++b)x(this.separator),x(this.rightPad)}else{for(let b=0;b<u-1;++b)x(this.rightPad),x(this.separator);x(this.rightPad)}}}compute(t,e){let o=t.length,n=e.length;if(n>0){let l=e[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let c=1;c<n;++c){let u=e[c]>=l;if(u=u&&e[c]<=o,!u)throw new Error(`Invalid split value ${e[c]}, must be in [${l}, ${o}]`);l=e[c]}if(l!==o)throw new Error(`Last split value must be data size. Expected ${o}, got ${l}`)}let s=n-1,i=y.getArrayFromDType("int32",n);if(o===0||n===0){let l=new Array(o);for(let c=0;c<=s;++c)i[c]=0;return[l,i]}i[0]=0;for(let l=1;l<=s;++l){let c=e[l]-e[l-1],u=0;this.nGramWidths.forEach(p=>{u+=this.getNumNGrams(c,p)}),this.preserveShort&&c>0&&u===0&&(u=1),i[l]=i[l-1]+u}let a=new Array(i[s]);for(let l=0;l<s;++l){let c=e[l],u=i[l];if(this.nGramWidths.forEach(p=>{let m=e[l+1]-e[l],f=this.getNumNGrams(m,p);this.createNGrams(t,c,a,u,f,p),u+=f}),this.preserveShort&&u===i[l]){let p=e[l+1]-e[l];if(p===0)continue;let m=p+2*this.padWidth;this.createNGrams(t,c,a,u,1,m)}}return[a,i]}};function Hg(r,t,e,o,n,s,i,a){return new xC(e,o,n,s,i,a).compute(r,t)}function tH(r,t,e,o){if(!r.length)return;if(t.length===0){for(let s=0;s<r.length;++s)o.push(r.subarray(s,s+1));return}if(t.length===1){let s=t[0],i=r.indexOf(s);for(;i!==-1;){let a=r.subarray(0,i);(!e||a.length!==0)&&o.push(a),r=r.subarray(i+1),i=r.indexOf(s)}(!e||r.length!==0)&&o.push(r);return}let n=0;for(let s=0;s<r.length+1;s++)if(s===r.length||t.indexOf(r[s])!==-1){let i=r.subarray(n,s);(!e||i.length!==0)&&o.push(i),n=s+1}}function qg(r,t,e){let o=r.length,n=[],s=0,i=0,a=new Array(o);for(let m=0;m<o;++m){let f=n.length;tH(r[m],t,e,n);let h=n.length-f;a[m]=h,s+=h,i=Math.max(i,h)}let l=y.getArrayFromDType("int32",s*2),c=new Array(s),u=[o,i],p=0;for(let m=0;m<o;++m)for(let f=0;f<a[m];++f)l[p*2]=m,l[p*2+1]=f,c[p]=n[p],++p;return[l,c,u]}function Kg(r,t){let e=y.getArrayFromDType("int32",r.length);for(let o=0;o<r.length;++o)e[o]=y.fingerPrint64(r[o]).modulo(t).getLowBitsUnsigned();return e}var yC=Ot((r,t)=>r-t),eH=_u((r,t,e,o)=>({real:r-e,imag:t-o})),_f=Gt(ws,yC,eH),zE={kernelName:ws,backendName:"cpu",kernelFunc:_f};function jg(r,t){let e=new Array(r.rank);for(let n=0;n<e.length;n++)e[n]=r.shape[n]*t[n];let o=dt(e,r.dtype);for(let n=0;n<o.values.length;++n){let s=o.indexToLoc(n),i=new Array(r.rank);for(let l=0;l<i.length;l++)i[l]=s[l]%r.shape[l];let a=r.locToIndex(i);o.values[n]=r.values[a]}return o}var Of=(r,t)=>{let e=t.value-r.value;return e===0?r.index-t.index:e};function BE(r,t,e=0,o=r.length-1){for(;o>e;){if(o-e>600){let a=o-e+1,l=t-e+1,c=Math.log(a),u=.5*Math.exp(2*c/3),p=.5*Math.sqrt(c*u*(a-u)/a)*Math.sign(l-a/2),m=Math.max(e,Math.floor(t-l*u/a+p)),f=Math.min(o,Math.floor(t+(a-l)*u/a+p));BE(r,t,m,f)}let n=r[t],s=e,i=o;for(y.swap(r,e,t),Of(r[o],n)>0&&y.swap(r,e,o);s<i;){for(y.swap(r,s,i),s++,i--;Of(r[s],n)<0;)s=s+1;for(;Of(r[i],n)>0;)i=i-1}Of(r[e],n)===0?y.swap(r,e,i):(i=i+1,y.swap(r,i,o)),i<=t&&(e=i+1),t<=i&&(o=i-1)}}function Xg(r,t,e,o,n){let s=t[t.length-1],[i,a]=[r.length/s,s],l=y.getTypedArrayFromDType(e,i*o),c=y.getTypedArrayFromDType("int32",i*o);for(let p=0;p<i;p++){let m=p*a,f=r.subarray(m,m+a),h=new Array(f.length);f.forEach((b,C)=>h[C]={value:b,index:C}),o<h.length&&(BE(h,o),h=h.slice(0,o)),n&&h.sort(Of);let d=p*o,g=l.subarray(d,d+o),x=c.subarray(d,d+o);for(let b=0;b<o;b++)g[b]=h[b].value,x[b]=h[b].index}let u=t.slice();return u[u.length-1]=o,[dt(u,e,l),dt(u,"int32",c)]}function Yg(r,t,e,o){let n=y.parseAxisParam(t,e)[0],s=[1,e[0],1];for(let h=0;h<n;h++)s[0]*=e[h];s[1]=e[n];for(let h=n+1;h<e.length;h++)s[2]*=e[h];let i=new Map,a=new Int32Array(e[n]),l=new jt(s,o,r),c=[],u=s[0]===1&&s[2]===1;for(let h=0;h<e[n];h++){let d;if(u)d=r[h].toString();else{let x=[];for(let b=0;b<s[0];b++)for(let C=0;C<s[2];C++)x.push(l.get(b,h,C));d=x.join(",")}let g=i.get(d);if(g!=null)a[h]=g;else{let x=i.size;i.set(d,x),a[h]=x,c.push(h)}}let p=s.slice();p[1]=i.size;let m=new jt(p,o);c.forEach((h,d)=>{for(let g=0;g<s[0];g++)for(let x=0;x<s[2];x++)m.set(l.get(g,h,x),g,d,x)});let f=e.slice();return f[n]=p[1],{outputValues:m.values,outputShape:f,indices:a}}Bh("cpu",()=>new Rf,1);var wC=It(Wn,r=>r>=0?r:Math.exp(r)-1),ME={kernelName:Wn,backendName:"cpu",kernelFunc:wC};function CC(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{alpha:s}=o;X([n],"leakyRelu");let i=y.sizeFromShape(n.shape),a=e.data.get(n.dataId).values,l=y.getTypedArrayFromDType("float32",i);for(let c=0;c<a.length;c++)l[c]=a[c]<0?s*a[c]:a[c];return e.makeTensorInfo(n.shape,"float32",l)}var VE={kernelName:yi,backendName:"cpu",kernelFunc:CC};var rH=Ot((r,t)=>r<0?t*r:r);function IC(r){let{inputs:t,backend:e}=r,{x:o,alpha:n}=t;X([o,n],"prelu");let s=e.data.get(o.dataId).values,i=e.data.get(n.dataId).values,[a,l]=rH(o.shape,n.shape,s,i,"float32");return e.makeTensorInfo(l,"float32",a)}var GE={kernelName:Di,backendName:"cpu",kernelFunc:IC};var SC=It(ls,r=>Math.max(0,r)),UE={kernelName:ls,backendName:"cpu",kernelFunc:SC};var vC=It(cs,r=>Math.min(Math.max(0,r),6)),WE={kernelName:cs,backendName:"cpu",kernelFunc:vC};function Cl(r,t,e,o,n){if(e==="linear")return cr({inputs:{x:t},backend:r});if(e==="relu")return SC({inputs:{x:t},backend:r});if(e==="elu")return wC({inputs:{x:t},backend:r});if(e==="relu6")return vC({inputs:{x:t},backend:r});if(e==="prelu")return IC({inputs:{x:t,alpha:o},backend:r});if(e==="leakyrelu")return CC({inputs:{x:t},backend:r,attrs:{alpha:n}});if(e==="sigmoid")return fC({inputs:{x:t},backend:r});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}function Lt(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{shape:s}=o,i=y.sizeFromShape(n.shape),a=y.inferFromImplicitShape(s,i),l=y.sizeFromShape(a);y.assert(i===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${n.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),e.incRef(n.dataId);let c=e.data.get(n.dataId);if(c.complexTensorInfos!=null){let u=c.complexTensorInfos.real,p=c.complexTensorInfos.imag;u.shape=a,p.shape=a}return{dataId:n.dataId,shape:a,dtype:n.dtype}}var HE={kernelName:Fi,backendName:"cpu",kernelFunc:Lt};function NC(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:s}=t,{transposeA:i,transposeB:a}=o;X([n,s],"matMul");let l=n.shape.length,c=s.shape.length,u=i?n.shape[l-2]:n.shape[l-1],p=a?s.shape[c-1]:s.shape[c-2],m=i?n.shape[l-1]:n.shape[l-2],f=a?s.shape[c-2]:s.shape[c-1],h=n.shape.slice(0,-2),d=s.shape.slice(0,-2),g=y.sizeFromShape(h),x=y.sizeFromShape(d),C=Ur.assertAndGetBroadcastShape(n.shape.slice(0,-2),s.shape.slice(0,-2)).concat([m,f]);y.assert(u===p,()=>`Error in matMul: inner shapes (${u}) and (${p}) of Tensors with shapes ${n.shape} and ${s.shape} and transposeA=${i} and transposeB=${a} must match.`);let w=i?[g,u,m]:[g,m,u],I=a?[x,f,p]:[x,p,f],E=Lt({inputs:{x:n},backend:e,attrs:{shape:w}}),A=Lt({inputs:{x:s},backend:e,attrs:{shape:I}}),$=i?E.shape[1]:E.shape[2],_=i?E.shape[2]:E.shape[1],L=a?A.shape[1]:A.shape[2],M=Math.max(g,x),V=e.data.get(E.dataId).values,G=e.data.get(A.dataId).values,W=y.computeStrides(E.shape),U=y.computeStrides(A.shape),[K,Z,q]=i?[W[0],1,W[1]]:[W[0],W[1],1],[J,rt,ot]=a?[1,U[1],U[0]]:[U[1],1,U[0]],it=_*L,st=dt([M,_,L],E.dtype),pt=st.values,at=e.blockSize;for(let ft=0;ft<M;ft++){let Nt=ft%g,$t=ft%x;for(let Tt=0;Tt<_;Tt+=at){let zt=Math.min(Tt+at,_);for(let Bt=0;Bt<L;Bt+=at){let oe=Math.min(Bt+at,L);for(let pe=0;pe<$;pe+=at){let Ae=Math.min(pe+at,$);for(let me=Tt;me<zt;me++)for(let ae=Bt;ae<oe;ae++){let Te=0;for(let Ce=pe;Ce<Ae;Ce++){let En=V[Nt*K+me*Z+Ce*q],or=G[Ce*J+ae*rt+$t*ot];Te+=En*or}pt[ft*it+(me*L+ae)]+=Te}}}}}return e.disposeIntermediateTensorInfo(E),e.disposeIntermediateTensorInfo(A),e.makeTensorInfo(C,st.dtype,st.values)}var qE={kernelName:si,backendName:"cpu",kernelFunc:NC};function oH(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:s,bias:i,preluActivationWeights:a}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:p}=o,m,f,h,d=[];m=NC({inputs:{a:n,b:s},attrs:{transposeA:l,transposeB:c},backend:e}),i&&(f=Sn({inputs:{a:m,b:i},backend:e}),d.push(m),m=f),u&&(h=Cl(e,m,u,a,p),d.push(m),m=h);for(let x of d)e.disposeIntermediateTensorInfo(x);return m}var KE={kernelName:Ra,backendName:"cpu",kernelFunc:oH};var nH=It(Rn,r=>Math.acos(r)),jE={kernelName:Rn,backendName:"cpu",kernelFunc:nH};var sH=It(Fn,r=>Math.acosh(r)),XE={kernelName:Fn,backendName:"cpu",kernelFunc:sH};function iH(r){let{inputs:t,backend:e}=r,o=t;X(t,"addN");let n=o.map(a=>e.data.get(a.dataId).values),s=dt(o[0].shape,o[0].dtype),i=s.values;for(let a=0;a<o.length;a++){let l=n[a];for(let c=0;c<i.length;c++)i[c]+=l[c]}return e.makeTensorInfo(s.shape,s.dtype,s.values)}var YE={kernelName:Bl,backendName:"cpu",kernelFunc:iH};function aH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o;X(n,"all");let a=y.parseAxisParam(s,n.shape),l=a,c=S.getAxesPermutation(l,n.shape.length),u=n;c!=null&&(u=ge({inputs:{x:n},backend:e,attrs:{perm:c}}),l=S.getInnerMostAxes(l.length,n.shape.length)),S.assertAxesAreInnerMostDims("all",l,u.shape.length);let[p,m]=S.computeOutAndReduceShapes(u.shape,l),f=y.sizeFromShape(m),h=y.makeZerosTypedArray(y.sizeFromShape(p),u.dtype),d=e.data.get(u.dataId).values;for(let x=0;x<h.length;++x){let b=x*f,C=d[b];for(let w=0;w<f;++w){let I=d[b+w];C=C&&I}h[x]=C}c!=null&&e.disposeIntermediateTensorInfo(u);let g=e.makeTensorInfo(p,u.dtype,h);if(i){let x=S.expandShapeToKeepDim(p,a),b=Lt({inputs:{x:g},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(g),b}return g}var ZE={kernelName:Ml,backendName:"cpu",kernelFunc:aH};function lH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o;X(n,"any");let a=y.parseAxisParam(s,n.shape),l=a,c=S.getAxesPermutation(l,n.shape.length),u=n;c!=null&&(u=ge({inputs:{x:n},backend:e,attrs:{perm:c}}),l=S.getInnerMostAxes(l.length,n.shape.length)),S.assertAxesAreInnerMostDims("any",l,u.shape.length);let[p,m]=S.computeOutAndReduceShapes(u.shape,l),f=y.sizeFromShape(m),h=y.makeZerosTypedArray(y.sizeFromShape(p),u.dtype),d=e.data.get(u.dataId).values;for(let x=0;x<h.length;++x){let b=x*f,C=d[b];for(let w=0;w<f;++w){let I=d[b+w];C=C||I}h[x]=C}c!=null&&e.disposeIntermediateTensorInfo(u);let g=e.makeTensorInfo(p,u.dtype,h);if(i){let x=S.expandShapeToKeepDim(p,a),b=Lt({inputs:{x:g},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(g),b}return g}var JE={kernelName:Vl,backendName:"cpu",kernelFunc:lH};function cH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s}=o;X(n,"argMax");let i=y.parseAxisParam(s,n.shape),a=S.getAxesPermutation(i,n.shape.length),l=n,c=[];a!=null&&(l=ge({inputs:{x:n},backend:e,attrs:{perm:a}}),c.push(l),i=S.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],S.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[u,p]=S.computeOutAndReduceShapes(l.shape,i),m=y.sizeFromShape(u),f=y.makeZerosTypedArray(m,"int32"),h=y.sizeFromShape(p),d=e.data.get(l.dataId).values;for(let g=0;g<f.length;++g){let x=g*h,b=d[x],C=0;for(let w=0;w<h;++w){let I=d[x+w];I>b&&(b=I,C=w)}f[g]=C}return c.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(u,"int32",f)}var QE={kernelName:ei,backendName:"cpu",kernelFunc:cH};function uH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s}=o;X(n,"argMin");let i=y.parseAxisParam(s,n.shape),a=S.getAxesPermutation(i,n.shape.length),l=n,c=[];a!=null&&(l=ge({inputs:{x:n},backend:e,attrs:{perm:a}}),c.push(l),i=S.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],S.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[u,p]=S.computeOutAndReduceShapes(l.shape,i),m=y.sizeFromShape(u),f=y.makeZerosTypedArray(m,"int32"),h=y.sizeFromShape(p),d=e.data.get(l.dataId).values;for(let g=0;g<f.length;++g){let x=g*h,b=d[x],C=0;for(let w=0;w<h;++w){let I=d[x+w];I<b&&(b=I,C=w)}f[g]=C}return c.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(u,"int32",f)}var tA={kernelName:ri,backendName:"cpu",kernelFunc:uH};var pH=It(_n,r=>Math.asin(r)),eA={kernelName:_n,backendName:"cpu",kernelFunc:pH};var mH=It(On,r=>Math.asinh(r)),rA={kernelName:On,backendName:"cpu",kernelFunc:mH};var fH=It(Ln,r=>Math.atan(r)),oA={kernelName:Ln,backendName:"cpu",kernelFunc:fH};var hH=Ot((r,t)=>Math.atan2(r,t)),dH=Gt(zn,hH),nA={kernelName:zn,backendName:"cpu",kernelFunc:dH};var gH=It(Pn,r=>Math.atanh(r)),sA={kernelName:Pn,backendName:"cpu",kernelFunc:gH};function zu(r,t,e,o,n,s){let i=n.strideHeight,a=n.strideWidth,l=n.dilationHeight,c=n.dilationWidth,u=n.effectiveFilterHeight,p=n.effectiveFilterWidth,m=n.padInfo.top,f=n.padInfo.left,h=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,d=dt(n.outShape,e),g=d.values,x=n.outShape[1]*n.outShape[2]*n.outShape[3],b=n.outShape[2]*n.outShape[3],C=n.outShape[3];for(let w=0;w<n.batchSize;++w){let I=w*x,E=w*o[0];for(let A=0;A<n.inChannels;++A)for(let $=0;$<n.outHeight;++$){let _=$*i-m,L=Math.max(0,_),M=Math.min(n.inHeight,u+_),V=I+$*b;for(let G=0;G<n.outWidth;++G){let W=G*a-f,U=Math.max(0,W),K=Math.min(n.inWidth,p+W),Z=h,q=0,J=0;for(let ot=L;ot<M;ot+=l){let it=E+ot*o[1];for(let st=U;st<K;st+=c){let pt=it+st*o[2],at=r[pt+A];s==="max"&&at>Z?Z=at:s==="avg"&&(q+=at,J++)}if(isNaN(Z))break}let rt=V+G*C+A;g[rt]=s==="avg"?q/J:Z}}}return d}function Zg(r,t,e,o,n=!1,s=!1){let i=dt(o.outShape,"int32"),a=o.strideHeight,l=o.strideWidth,c=o.dilationHeight,u=o.dilationWidth,p=o.effectiveFilterHeight,m=o.effectiveFilterWidth,f=o.padInfo.top,h=o.padInfo.left,d=dt(t,e,r);for(let g=0;g<o.batchSize;++g)for(let x=0;x<o.inChannels;++x)for(let b=0;b<o.outHeight;++b){let C=b*a-f,w=C;for(;w<0;)w+=c;let I=Math.min(o.inHeight,p+C);for(let E=0;E<o.outWidth;++E){let A=E*l-h,$=A;for(;$<0;)$+=u;let _=Math.min(o.inWidth,m+A),L=Number.NEGATIVE_INFINITY,M=-1;for(let V=w;V<I;V+=c){let G=V-C;for(let W=$;W<_;W+=u){let U=W-A,K=d.get(g,V,W,x);K>L&&(L=K,n?M=s?((g*o.inHeight+V)*o.inWidth+W)*o.inChannels+x:(V*o.inWidth+W)*o.inChannels+x:M=G*m+U)}}i.set(M,g,b,E,x)}}return i}function Jg(r,t,e,o,n,s){let i=n.strideDepth,a=n.strideHeight,l=n.strideWidth,c=n.dilationDepth,u=n.dilationHeight,p=n.dilationWidth,m=n.effectiveFilterDepth,f=n.effectiveFilterHeight,h=n.effectiveFilterWidth,d=n.padInfo.front,g=n.padInfo.top,x=n.padInfo.left,b=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,C=dt(n.outShape,e),w=C.values,I=n.outShape[1]*n.outShape[2]*n.outShape[3]*n.outShape[4],E=n.outShape[2]*n.outShape[3]*n.outShape[4],A=n.outShape[3]*n.outShape[4],$=n.outShape[4];for(let _=0;_<n.batchSize;++_){let L=_*I,M=_*o[0];for(let V=0;V<n.inChannels;++V)for(let G=0;G<n.outDepth;++G){let W=G*i-d,U=W;for(;U<0;)U+=c;let K=Math.min(n.inDepth,m+W),Z=L+G*E;for(let q=0;q<n.outHeight;++q){let J=q*a-g,rt=J;for(;rt<0;)rt+=u;let ot=Math.min(n.inHeight,f+J),it=Z+q*A;for(let st=0;st<n.outWidth;++st){let pt=st*l-x,at=pt;for(;at<0;)at+=p;let ft=Math.min(n.inWidth,h+pt),Nt=it+st*$,$t=b,Tt=0,zt=0;for(let oe=U;oe<K;oe+=c){let pe=M+oe*o[1];for(let Ae=rt;Ae<ot;Ae+=u){let me=pe+Ae*o[2];for(let ae=at;ae<ft;ae+=p){let Te=me+ae*o[3],Ce=r[Te+V];if(s==="max"&&Ce>$t?$t=Ce:s==="avg"&&(Tt+=Ce,zt++),isNaN($t))break}if(isNaN($t))break}if(isNaN($t))break}let Bt=Nt+V;w[Bt]=s==="avg"?Tt/Math.max(zt,1):$t}}}}return C}function iA(r,t){let e=dt(t.outShape,"int32"),o=t.strideDepth,n=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,a=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,u=t.effectiveFilterHeight,p=t.effectiveFilterWidth,m=t.padInfo.front,f=t.padInfo.top,h=t.padInfo.left;for(let d=0;d<t.batchSize;++d)for(let g=0;g<t.inChannels;++g)for(let x=0;x<t.outDepth;++x){let b=x*o-m,C=b;for(;C<0;)C+=i;let w=Math.min(t.inDepth,c+b);for(let I=0;I<t.outHeight;++I){let E=I*n-f,A=E;for(;A<0;)A+=a;let $=Math.min(t.inHeight,u+E);for(let _=0;_<t.outWidth;++_){let L=_*s-h,M=L;for(;M<0;)M+=l;let V=Math.min(t.inWidth,p+L),G=Number.NEGATIVE_INFINITY,W=-1;for(let U=C;U<w;U+=i){let K=U-b;for(let Z=A;Z<$;Z+=a){let q=Z-E;for(let J=M;J<V;J+=l){let rt=J-L,ot=r.get(d,U,Z,J,g);ot>=G&&(G=ot,W=K*u*p+q*u+rt)}}}e.set(W,d,x,I,_,g)}}}return e}function xH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t;X(n,"avgPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:l}=o,c=1;y.assert(S.eitherStridesOrDilationsAreOne(i,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let u=S.computePool2DInfo(n.shape,s,i,c,a,l),p;if(u.filterWidth===1&&u.filterHeight===1&&y.arraysEqual(u.inShape,u.outShape))p=cr({inputs:{x:n},backend:e});else{let m=e.data.get(n.dataId).values,f=y.computeStrides(n.shape),h=zu(m,n.shape,n.dtype,f,u,"avg");p=e.makeTensorInfo(u.outShape,n.dtype,h.values)}return p}var aA={kernelName:oi,backendName:"cpu",kernelFunc:xH};function yH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:s,strides:i,pad:a,dimRoundingMode:l,dataFormat:c}=o;X(n,"avgPool3d");let u=S.computePool3DInfo(n.shape,s,i,1,a,l,c),p=e.data.get(n.dataId).values,m=Jg(p,n.shape,n.dtype,y.computeStrides(n.shape),u,"avg");return e.makeTensorInfo(m.shape,"float32",m.values)}var lA={kernelName:ni,backendName:"cpu",kernelFunc:yH};function bH(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:s}=t,{filterSize:i,strides:a,pad:l,dimRoundingMode:c}=o;X([n,s],"avgPool3DGrad");let u=S.computePool3DInfo(s.shape,i,a,1,l,c),p=u.strideDepth,m=u.strideHeight,f=u.strideWidth,h=u.filterDepth,d=u.filterHeight,g=u.filterWidth,x=u.dilationDepth,b=u.dilationHeight,C=u.dilationWidth,w=u.effectiveFilterDepth,I=u.effectiveFilterHeight,E=u.effectiveFilterWidth,A=w-1-u.padInfo.front,$=E-1-u.padInfo.left,_=I-1-u.padInfo.top,L=dt(s.shape,"float32"),M=1/(h*d*g),V=e.bufferSync(n);for(let G=0;G<u.batchSize;++G)for(let W=0;W<u.inChannels;++W)for(let U=0;U<u.inDepth;++U)for(let K=0;K<u.inHeight;++K)for(let Z=0;Z<u.inWidth;++Z){let q=U-A,J=K-_,rt=Z-$,ot=0;for(let it=0;it<w;it+=x){let st=(q+it)/p;if(!(st<0||st>=u.outDepth||Math.floor(st)!==st))for(let pt=0;pt<I;pt+=b){let at=(J+pt)/m;if(!(at<0||at>=u.outHeight||Math.floor(at)!==at))for(let ft=0;ft<E;ft+=C){let Nt=(rt+ft)/f;if(Nt<0||Nt>=u.outWidth||Math.floor(Nt)!==Nt)continue;let $t=V.get(G,st,at,Nt,W);ot+=$t}}}L.set(ot*M,G,U,K,Z,W)}return e.makeTensorInfo(L.shape,L.dtype,L.values)}var cA={kernelName:Ul,backendName:"cpu",kernelFunc:bH};function wH(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:s}=t,i=s;X([n,s],"avgPoolGrad");let{filterSize:a,strides:l,pad:c}=o,u=S.computePool2DInfo(i.shape,a,l,1,c),p=u.strideHeight,m=u.strideWidth,f=u.filterHeight,h=u.filterWidth,d=u.dilationHeight,g=u.dilationWidth,x=u.effectiveFilterHeight,b=u.effectiveFilterWidth,C=b-1-u.padInfo.left,w=x-1-u.padInfo.top,I=dt(i.shape,"float32"),E=1/(f*h),A=e.data.get(n.dataId).values,$=dt(n.shape,"float32",A);for(let _=0;_<u.batchSize;++_)for(let L=0;L<u.inChannels;++L)for(let M=0;M<u.inHeight;++M)for(let V=0;V<u.inWidth;++V){let G=M-w,W=V-C,U=0;for(let K=0;K<x;K+=d){let Z=(G+K)/p;if(!(Z<0||Z>=u.outHeight||Math.floor(Z)!==Z))for(let q=0;q<b;q+=g){let J=(W+q)/m;if(J<0||J>=u.outWidth||Math.floor(J)!==J)continue;let rt=$.get(_,Z,J,L);U+=rt}}I.set(U*E,_,M,V,L)}return e.makeTensorInfo(I.shape,I.dtype,I.values)}var uA={kernelName:Gl,backendName:"cpu",kernelFunc:wH};function CH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,scale:s,offset:i,mean:a,variance:l}=t;y.assert(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),y.assert(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),y.assert(s==null||a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),X([n,a,l,s,i],"batchNorm");let{varianceEpsilon:c}=o;c==null&&(c=.001);let u=e.data.get(n.dataId).values,p=e.data.get(a.dataId).values,m=e.data.get(l.dataId).values,f=s?e.data.get(s.dataId).values:new Float32Array([1]),h=i?e.data.get(i.dataId).values:new Float32Array([0]),d=new Float32Array(u.length),g=h.length,x=f.length,b=m.length,C=p.length,w=0,I=0,E=0,A=0;for(let $=0;$<u.length;++$)d[$]=h[w++]+(u[$]-p[I++])*f[E++]/Math.sqrt(m[A++]+c),w>=g&&(w=0),I>=C&&(I=0),E>=x&&(E=0),A>=b&&(A=0);return e.makeTensorInfo(n.shape,n.dtype,d)}var pA={kernelName:gi,backendName:"cpu",kernelFunc:CH};function IH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:s,crops:i}=o;X([n],"batchToSpaceND");let a=s.reduce((x,b)=>x*b),l=S.getReshaped(n.shape,s,a),c=S.getPermuted(l.length,s.length),u=S.getReshapedPermuted(n.shape,s,a),p=S.getSliceBeginCoords(i,s.length),m=S.getSliceSize(u,i,s.length),f=Lt({inputs:{x:n},backend:e,attrs:{shape:l}}),h=ge({inputs:{x:f},backend:e,attrs:{perm:c}}),d=Lt({inputs:{x:h},backend:e,attrs:{shape:u}}),g=Do({inputs:{x:d},backend:e,attrs:{begin:p,size:m}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),g}var mA={kernelName:ii,backendName:"cpu",kernelFunc:IH};function SH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:s}=t,{size:i}=o,a=e.data.get(n.dataId).values,l=e.data.get(s.dataId).values,c=Ou(a,l,s.dtype,s.shape,i);return e.makeTensorInfo([i],s.dtype,c)}var fA={kernelName:Wl,backendName:"cpu",kernelFunc:SH};function vH(r){let{inputs:t,backend:e}=r,{s0:o,s1:n}=t,s=e.data.get(o.dataId).values,i=e.data.get(n.dataId).values,a=S.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}var hA={kernelName:lh,backendName:"cpu",kernelFunc:vH};var NH=It(Mn,(r,t)=>{let e=t;return r>e.clipValueMax?e.clipValueMax:r<e.clipValueMin?e.clipValueMin:r}),dA={kernelName:Mn,backendName:"cpu",kernelFunc:NH};var TH=r=>{let{x:t}=r.inputs,e=r.backend,o=new Float32Array(y.sizeFromShape(t.shape)),n=e.data.get(t.dataId),s=n.complexTensorInfos.real,i=n.complexTensorInfos.imag,a=e.data.get(s.dataId).values,l=e.data.get(i.dataId).values;for(let c=0;c<a.length;c++){let u=a[c],p=l[c];o[c]=Math.hypot(u,p)}return e.makeOutput(o,t.shape,"float32")},gA={kernelName:ai,backendName:"cpu",kernelFunc:TH};function vn(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.data.get(o.dataId).complexTensorInfos.imag,s=e.data.get(n.dataId).values;return e.makeTensorInfo(n.shape,n.dtype,s)}var xA={kernelName:ac,backendName:"cpu",kernelFunc:vn};function ua(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o,s=y.parseAxisParam(n,t[0].shape)[0],i=t.map(d=>d.shape);S.assertParamsConsistent(i,s);let a=S.computeOutShape(t.map(d=>d.shape),s);if(y.sizeFromShape(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);let l=t.filter(d=>y.sizeFromShape(d.shape)>0);if(l.length===1)return cr({inputs:{x:l[0]},backend:e});if(l[0].dtype==="complex64"){let d=l.map(w=>Eo({inputs:{input:w},backend:e})),g=l.map(w=>vn({inputs:{input:w},backend:e})),x=ua({inputs:d,backend:e,attrs:{axis:s}}),b=ua({inputs:g,backend:e,attrs:{axis:s}}),C=ze({inputs:{real:x,imag:b},backend:e});return d.forEach(w=>e.disposeIntermediateTensorInfo(w)),g.forEach(w=>e.disposeIntermediateTensorInfo(w)),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(b),C}let c=l.map(d=>{let x=[-1,y.sizeFromShape(d.shape.slice(s))];return Lt({inputs:{x:d},backend:e,attrs:{shape:x}})}),u=c.map(d=>({vals:e.data.get(d.dataId).values,shape:d.shape}));a=S.computeOutShape(c.map(d=>d.shape),1);let p=c[0].shape[0]===1,m=Fg(u,a,t[0].dtype,p),f=S.computeOutShape(l.map(d=>d.shape),s),h=e.makeTensorInfo(f,t[0].dtype,m);return c.forEach(d=>e.disposeIntermediateTensorInfo(d)),h}var yA={kernelName:li,backendName:"cpu",kernelFunc:ua};function TC(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s}=t,{strides:i,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=o;X([n,s],"conv2d");let p=S.convertConv2DDataFormat(l),m=S.computeConv2DInfo(n.shape,s.shape,i,c,a,u,!1,p),f=m.filterHeight,h=m.filterWidth,d=m.dilationHeight,g=m.dilationWidth,x=m.padInfo.left,b=m.padInfo.top,C=m.dataFormat==="channelsLast",w=new jt(m.outShape,n.dtype),I=y.computeStrides(n.shape),E=y.computeStrides(s.shape),A=I[0],$=C?I[1]:I[2],_=C?I[2]:1,L=C?1:I[1],M=w.strides[0],V=C?w.strides[1]:w.strides[2],G=C?w.strides[2]:1,W=C?1:w.strides[1],U=e.data.get(n.dataId).values,K=e.data.get(s.dataId).values,Z=w.values;for(let q=0;q<m.batchSize;++q){let J=q*A,rt=q*M;for(let ot=0;ot<m.outHeight;++ot){let it=rt+ot*V,st=ot*m.strideHeight-b;for(let pt=0;pt<f;++pt){let at=st+pt*d;if(at<0||at>=m.inHeight)continue;let ft=pt*E[0],Nt=J+at*$;for(let $t=0;$t<m.outWidth;++$t){let Tt=it+$t*G,zt=$t*m.strideWidth-x;for(let Bt=0;Bt<h;++Bt){let oe=zt+Bt*g;if(oe<0||oe>=m.inWidth)continue;let pe=ft+Bt*E[1],Ae=Nt+oe*_,me=pe;for(let ae=0;ae<m.inChannels;++ae){let Te=U[Ae+ae*L];for(let Ce=0;Ce<m.outChannels;++Ce)Z[Tt+Ce*W]+=Te*K[me+Ce];me+=m.outChannels}}}}}}return e.makeTensorInfo(w.shape,w.dtype,Z)}var bA={kernelName:ci,backendName:"cpu",kernelFunc:TC};function kH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:s}=t,{strides:i,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=o;X([n,s],"conv2dBackpropFilter");let p=S.convertConv2DDataFormat(l),m=S.computeConv2DInfo(n.shape,u,i,1,a,c,!1,p),{strideHeight:f,strideWidth:h,filterHeight:d,filterWidth:g}=m,x=m.dataFormat==="channelsLast",b=new jt(m.filterShape,"float32"),C=m.padInfo.left,w=m.padInfo.top,I=e.data.get(n.dataId).values,E=e.data.get(s.dataId).values,A=new jt(n.shape,n.dtype,I),$=new jt(s.shape,s.dtype,E);for(let _=0;_<d;++_){let L=Math.max(0,Math.ceil((w-_)/f)),M=Math.min(m.outHeight,(m.inHeight+w-_)/f);for(let V=0;V<g;++V){let G=Math.max(0,Math.ceil((C-V)/h)),W=Math.min(m.outWidth,(m.inWidth+C-V)/h);for(let U=0;U<m.inChannels;++U)for(let K=0;K<m.outChannels;++K){let Z=0;for(let q=0;q<m.batchSize;++q)for(let J=L;J<M;++J){let rt=_+J*f-w;for(let ot=G;ot<W;++ot){let it=V+ot*h-C;x?Z+=A.get(q,rt,it,U)*$.get(q,J,ot,K):Z+=A.get(q,U,rt,it)*$.get(q,K,J,ot)}}b.set(Z,_,V,U,K)}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}var wA={kernelName:ql,backendName:"cpu",kernelFunc:kH};function EH(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:s}=t,{inputShape:i,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=o;X([n,s],"conv2dBackpropInput");let p=y.computeStrides(s.shape),m=y.computeStrides(n.shape),f=S.convertConv2DDataFormat(c),h=S.computeConv2DInfo(i,s.shape,a,1,l,u,!1,f),d=new jt(h.inShape,"float32"),g=d.values,x=e.data.get(n.dataId).values,b=e.data.get(s.dataId).values,[C,w,I]=p,{batchSize:E,filterHeight:A,filterWidth:$,inChannels:_,inHeight:L,inWidth:M,outChannels:V,outHeight:G,outWidth:W,strideHeight:U,strideWidth:K}=h;f=h.dataFormat;let Z=A-1-h.padInfo.top,q=$-1-h.padInfo.left,J=f==="channelsLast",rt=d.strides[0],ot=J?d.strides[1]:d.strides[2],it=J?d.strides[2]:1,st=J?1:d.strides[1],pt=m[0],at=J?m[1]:m[2],ft=J?m[2]:1,Nt=J?1:m[1];for(let $t=0;$t<E;++$t)for(let Tt=0;Tt<_;++Tt)for(let zt=0;zt<L;++zt){let Bt=zt-Z,oe=Math.max(0,Math.ceil(Bt/U)),pe=Math.min(G,(A+Bt)/U);for(let Ae=0;Ae<M;++Ae){let me=Ae-q,ae=Math.max(0,Math.ceil(me/K)),Te=Math.min(W,($+me)/K),Ce=0;for(let or=oe;or<pe;++or){let Ks=or*U-Bt;for(let Qr=ae;Qr<Te;++Qr){let ya=Qr*K-me,Fo=pt*$t+at*or+ft*Qr,An=C*(A-1-Ks)+w*($-1-ya)+I*Tt;for(let js=0;js<V;++js){let Xs=x[Fo+Nt*js],Ys=b[An+js];Ce+=Xs*Ys}}}let En=rt*$t+ot*zt+it*Ae+st*Tt;g[En]=Ce}}return e.makeTensorInfo(d.shape,d.dtype,d.values)}var CA={kernelName:ui,backendName:"cpu",kernelFunc:EH};function AH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s}=t,{strides:i,pad:a,dilations:l}=o;X([n,s],"conv3d");let c=S.computeConv3DInfo(n.shape,s.shape,i,l,a),{filterDepth:u,filterHeight:p,filterWidth:m,dilationDepth:f,dilationHeight:h,dilationWidth:d,padInfo:g}=c,x=g.front,b=g.left,C=g.top,w=new jt(c.outShape,n.dtype),I=e.data.get(n.dataId).values,E=e.data.get(s.dataId).values,A=w.values,$=y.computeStrides(n.shape),_=y.computeStrides(s.shape);for(let L=0;L<c.batchSize;++L){let M=L*$[0],V=L*w.strides[0];for(let G=0;G<c.outDepth;++G){let W=V+G*w.strides[1],U=G*c.strideDepth-x;for(let K=0;K<u;++K){let Z=U+K*f;if(Z<0||Z>=c.inDepth)continue;let q=K*_[0],J=M+Z*$[1];for(let rt=0;rt<c.outHeight;++rt){let ot=W+rt*w.strides[2],it=rt*c.strideHeight-C;for(let st=0;st<p;++st){let pt=it+st*h;if(pt<0||pt>=c.inHeight)continue;let at=q+st*_[1],ft=J+pt*$[2];for(let Nt=0;Nt<c.outWidth;++Nt){let $t=ot+Nt*c.outChannels,Tt=Nt*c.strideWidth-b;for(let zt=0;zt<m;++zt){let Bt=Tt+zt*d;if(Bt<0||Bt>=c.inWidth)continue;let oe=at+zt*_[2],pe=ft+Bt*c.inChannels,Ae=oe;for(let me=0;me<c.inChannels;++me){let ae=I[pe+me];for(let Te=0;Te<c.outChannels;++Te)A[$t+Te]+=ae*E[Ae+Te];Ae+=c.outChannels}}}}}}}}return e.makeTensorInfo(w.shape,w.dtype,w.values)}var IA={kernelName:pi,backendName:"cpu",kernelFunc:AH};function $H(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:s}=t,{strides:i,pad:a,filterShape:l}=o;X([n,s],"conv3dBackpropFilterV2");let c=y.computeStrides(n.shape),u=y.computeStrides(s.shape),p=S.computeConv3DInfo(n.shape,l,i,1,a),m=p.strideDepth,f=p.strideHeight,h=p.strideWidth,d=p.filterDepth,g=p.filterHeight,x=p.filterWidth,b=new jt(p.filterShape,"float32"),C=b.values,[w,I,E,A]=b.strides,$=e.data.get(s.dataId).values,[_,L,M,V]=u,G=e.data.get(n.dataId).values,[W,U,K,Z]=c,q=p.padInfo.front,J=p.padInfo.left,rt=p.padInfo.top;for(let ot=0;ot<d;++ot){let it=Math.max(0,Math.ceil((q-ot)/m)),st=Math.min(p.outDepth,(p.inDepth+q-ot)/m),pt=ot*w;for(let at=0;at<g;++at){let ft=Math.max(0,Math.ceil((rt-at)/f)),Nt=Math.min(p.outHeight,(p.inHeight+rt-at)/f),$t=at*I+pt;for(let Tt=0;Tt<x;++Tt){let zt=Math.max(0,Math.ceil((J-Tt)/h)),Bt=Math.min(p.outWidth,(p.inWidth+J-Tt)/h),oe=Tt*E+$t;for(let pe=0;pe<p.inChannels;++pe){let Ae=pe*A+oe;for(let me=0;me<p.outChannels;++me){let ae=0;for(let Te=0;Te<p.batchSize;++Te){let Ce=Te*W,En=Te*_;for(let or=it;or<st;++or){let Qr=(ot+or*m-q)*U+Ce,ya=or*L+En;for(let Fo=ft;Fo<Nt;++Fo){let js=(at+Fo*f-rt)*K+Qr,Xs=Fo*M+ya;for(let Ys=zt;Ys<Bt;++Ys){let Qy=(Tt+Ys*h-J)*Z+js,tb=Ys*V+Xs;ae+=G[Qy+pe]*$[tb+me]}}}}C[Ae+me]=ae}}}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}var SA={kernelName:Kl,backendName:"cpu",kernelFunc:$H};function DH(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:s}=t,{pad:i,strides:a,inputShape:l}=o;X([n],"conv3dBackpropInputV2");let c=y.computeStrides(n.shape),u=y.computeStrides(s.shape),p=S.computeConv3DInfo(l,s.shape,a,1,i),m=new jt(p.inShape,"float32"),f=m.values,[h,d,g,x]=m.strides,b=e.data.get(n.dataId).values,[C,w,I,E]=c,A=e.data.get(s.dataId).values,[$,_,L,M]=u,{batchSize:V,filterDepth:G,filterHeight:W,filterWidth:U,inChannels:K,inDepth:Z,inHeight:q,inWidth:J,outChannels:rt,outDepth:ot,outHeight:it,outWidth:st,strideDepth:pt,strideHeight:at,strideWidth:ft}=p,Nt=G-1-p.padInfo.front,$t=W-1-p.padInfo.top,Tt=U-1-p.padInfo.left;for(let zt=0;zt<V;++zt)for(let Bt=0;Bt<K;++Bt)for(let oe=0;oe<Z;++oe){let pe=oe-Nt,Ae=Math.max(0,Math.ceil(pe/pt)),me=Math.min(ot,(G+pe)/pt);for(let ae=0;ae<q;++ae){let Te=ae-$t,Ce=Math.max(0,Math.ceil(Te/at)),En=Math.min(it,(W+Te)/at);for(let or=0;or<J;++or){let Ks=or-Tt,Qr=Math.max(0,Math.ceil(Ks/ft)),ya=Math.min(st,(U+Ks)/ft),Fo=0;for(let An=Ae;An<me;++An){let js=An*pt-pe;for(let Xs=Ce;Xs<En;++Xs){let Ys=Xs*at-Te;for(let op=Qr;op<ya;++op){let Qy=op*ft-Ks,tb=C*zt+w*An+I*Xs+E*op,CL=$*(G-1-js)+_*(W-1-Ys)+L*(U-1-Qy)+M*Bt;for(let oh=0;oh<rt;++oh){let IL=b[tb+oh],SL=A[CL+oh];Fo+=IL*SL}}}}f[h*zt+d*oe+g*ae+x*or+Bt]=Fo}}}return e.makeTensorInfo(m.shape,m.dtype,m.values)}var vA={kernelName:jl,backendName:"cpu",kernelFunc:DH};var RH=It(Vn,r=>Math.cos(r)),NA={kernelName:Vn,backendName:"cpu",kernelFunc:RH};var FH=It(Gn,r=>Math.cosh(r)),TA={kernelName:Gn,backendName:"cpu",kernelFunc:FH};function _H(r){let{inputs:t,backend:e,attrs:o}=r,{image:n,boxes:s,boxInd:i}=t,{cropSize:a,method:l,extrapolationValue:c}=o,[u,p,m,f]=n.shape,h=s.shape[0],[d,g]=a,x=dt([h,d,g,f],"float32"),b=e.data.get(s.dataId).values,C=e.data.get(i.dataId).values,w=e.data.get(n.dataId).values,I=y.computeStrides(n.shape),E=y.computeStrides(x.shape);for(let A=0;A<h;A++){let $=A*4,_=b[$],L=b[$+1],M=b[$+2],V=b[$+3],G=C[A];if(G>=u)continue;let W=d>1?(M-_)*(p-1)/(d-1):0,U=g>1?(V-L)*(m-1)/(g-1):0;for(let K=0;K<d;K++){let Z=d>1?_*(p-1)+K*W:.5*(_+M)*(p-1);if(Z<0||Z>p-1){for(let q=0;q<g;q++)for(let J=0;J<f;J++){let rt=J+q*E[2]+K*E[1]+A*E[0];x.values[rt]=c}continue}if(l==="bilinear"){let q=Math.floor(Z),J=Math.ceil(Z),rt=Z-q;for(let ot=0;ot<g;ot++){let it=g>1?L*(m-1)+ot*U:.5*(L+V)*(m-1);if(it<0||it>m-1){for(let ft=0;ft<f;ft++){let Nt=ft+ot*E[2]+K*E[1]+A*E[0];x.values[Nt]=c}continue}let st=Math.floor(it),pt=Math.ceil(it),at=it-st;for(let ft=0;ft<f;ft++){let Nt=ft+st*I[2]+q*I[1]+G*I[0],$t=w[Nt];Nt=ft+pt*I[2]+q*I[1]+G*I[0];let Tt=w[Nt];Nt=ft+st*I[2]+J*I[1]+G*I[0];let zt=w[Nt];Nt=ft+pt*I[2]+J*I[1]+G*I[0];let Bt=w[Nt],oe=$t+(Tt-$t)*at,pe=zt+(Bt-zt)*at;Nt=ft+ot*E[2]+K*E[1]+A*E[0],x.values[Nt]=oe+(pe-oe)*rt}}}else for(let q=0;q<g;++q){let J=g>1?L*(m-1)+q*U:.5*(L+V)*(m-1);if(J<0||J>m-1){for(let it=0;it<f;it++){let st=it+q*E[2]+K*E[1]+A*E[0];x.values[st]=c}continue}let rt=Math.round(J),ot=Math.round(Z);for(let it=0;it<f;it++){let st=it+rt*I[2]+ot*I[1]+G*I[0],pt=it+q*E[2]+K*E[1]+A*E[0];x.values[pt]=w[st]}}}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}var kA={kernelName:Yl,backendName:"cpu",kernelFunc:_H};function OH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,exclusive:i,reverse:a}=o;X(n,"cumprod");let l=S.getAxesPermutation([s],n.shape.length),c=n;l!=null&&(c=ge({inputs:{x:n},backend:e,attrs:{perm:l}}));let u=S.getInnerMostAxes(1,n.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);let p=$e(c.dtype,"int32"),m=y.makeOnesTypedArray(y.sizeFromShape(c.shape),p),f=e.data.get(c.dataId).values,h=c.shape[c.shape.length-1],d=a?(x,b)=>x+h-b-1:(x,b)=>x+b;for(let x=0;x<f.length;x+=h)for(let b=0;b<h;b++){let C=d(x,b);if(b===0)m[C]=i?1:f[C];else{let w=d(x,b-1);m[C]=i?f[w]*m[w]:f[C]*m[w]}}let g=e.makeTensorInfo(c.shape,p,m);if(l!=null){let x=S.getUndoAxesPermutation(l),b=ge({inputs:{x:g},backend:e,attrs:{perm:x}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(c),b}return g}var EA={kernelName:Xl,backendName:"cpu",kernelFunc:OH};function LH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,exclusive:i,reverse:a}=o;X(n,"cumsum");let l=S.getAxesPermutation([s],n.shape.length),c=n;l!=null&&(c=ge({inputs:{x:n},backend:e,attrs:{perm:l}}));let u=S.getInnerMostAxes(1,n.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);let p=$e(c.dtype,"int32"),m=y.makeZerosTypedArray(y.sizeFromShape(c.shape),p),f=e.data.get(c.dataId).values,h=c.shape[c.shape.length-1],d=a?(x,b)=>x+h-b-1:(x,b)=>x+b;for(let x=0;x<f.length;x+=h)for(let b=0;b<h;b++){let C=d(x,b);if(b===0)m[C]=i?0:f[C];else{let w=d(x,b-1);m[C]=i?f[w]+m[w]:f[C]+m[w]}}let g=e.makeTensorInfo(c.shape,p,m);if(l!=null){let x=S.getUndoAxesPermutation(l),b=ge({inputs:{x:g},backend:e,attrs:{perm:x}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(c),b}return g}var AA={kernelName:mi,backendName:"cpu",kernelFunc:LH};function PH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:s}=t,{size:i,binaryOutput:a}=o;if(n.shape.length===1){let l=e.data.get(n.dataId).values,c=e.data.get(s.dataId).values,u=Ou(l,c,s.dtype,s.shape,i);return e.makeTensorInfo([i],s.dtype,u)}else if(n.shape.length===2){let l=e.bufferSync(n),c=e.bufferSync(s),u=Rg(l,c,i,a);return e.makeTensorInfo(u.shape,s.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${n.shape.length}.`)}var $A={kernelName:Zl,backendName:"cpu",kernelFunc:PH};function zH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockSize:s,dataFormat:i}=o;y.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let a=n.shape[0],l=n.shape[1],c=n.shape[2],u=n.shape[3],p=l*s,m=c*s,f=u/(s*s),h=e.data.get(n.dataId).values,d=new Float32Array(a*p*m*f),g=0;for(let x=0;x<a;++x)for(let b=0;b<p;++b){let C=Math.floor(b/s),w=b%s;for(let I=0;I<m;++I){let E=Math.floor(I/s),A=I%s,$=(w*s+A)*f;for(let _=0;_<f;++_){let M=_+$+u*(E+c*(C+l*x));d[g++]=h[M]}}}return e.makeTensorInfo([a,p,m,f],n.dtype,d)}var DA={kernelName:Jl,backendName:"cpu",kernelFunc:zH};function kC(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s}=t,{strides:i,pad:a,dilations:l,dimRoundingMode:c}=o;X([n,s],"depthwiseConv2DNative");let u=y.computeStrides(n.shape),p=y.computeStrides(s.shape),m=l;m==null&&(m=[1,1]),y.assert(S.eitherStridesOrDilationsAreOne(i,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${m}'`);let f=S.computeConv2DInfo(n.shape,s.shape,i,m,a,c,!0),{filterHeight:h,filterWidth:d,dilationHeight:g,dilationWidth:x,padInfo:b}=f,C=b.left,w=b.top,I=f.outChannels/f.inChannels,E=new jt(f.outShape,n.dtype),A=e.data.get(n.dataId).values,$=e.data.get(s.dataId).values,_=E.values;for(let L=0;L<f.batchSize;++L){let M=L*u[0],V=L*E.strides[0];for(let G=0;G<f.outHeight;++G){let W=V+G*E.strides[1],U=G*f.strideHeight-w;for(let K=0;K<h;++K){let Z=U+K*g;if(Z<0||Z>=f.inHeight)continue;let q=K*p[0],J=M+Z*u[1];for(let rt=0;rt<f.outWidth;++rt){let ot=W+rt*E.strides[2],it=rt*f.strideWidth-C;for(let st=0;st<d;++st){let pt=it+st*x;if(pt<0||pt>=f.inWidth)continue;let at=q+st*p[1],ft=J+pt*f.inChannels,Nt=ot,$t=at;for(let Tt=0;Tt<f.inChannels;++Tt){let zt=A[ft+Tt];for(let Bt=0;Bt<I;++Bt)_[Nt+Bt]+=zt*$[$t+Bt];Nt+=I,$t+=I}}}}}}return e.makeTensorInfo(E.shape,E.dtype,E.values)}var RA={kernelName:fi,backendName:"cpu",kernelFunc:kC};function BH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:s}=t,{strides:i,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=o;X([n,s],"depthwiseConv2dNativeBackpropFilter");let p=S.computeConv2DInfo(n.shape,u,i,a,l,c,!0),{strideHeight:m,strideWidth:f,filterHeight:h,filterWidth:d}=p,g=new jt(p.filterShape,"float32"),x=p.padInfo.left,b=p.padInfo.top,C=p.outChannels/p.inChannels,w=e.data.get(n.dataId).values,I=new jt(n.shape,n.dtype,w),E=e.data.get(s.dataId).values,A=new jt(s.shape,s.dtype,E);for(let $=0;$<h;++$){let _=Math.max(0,Math.ceil((b-$)/m)),L=Math.min(p.outHeight,(p.inHeight+b-$)/m);for(let M=0;M<d;++M){let V=Math.max(0,Math.ceil((x-M)/f)),G=Math.min(p.outWidth,(p.inWidth+x-M)/f);for(let W=0;W<p.outChannels;++W){let U=Math.trunc(W/C),K=W%C,Z=0;for(let q=0;q<p.batchSize;++q)for(let J=_;J<L;++J){let rt=$+J*m-b;for(let ot=V;ot<G;++ot){let it=M+ot*f-x;Z+=I.get(q,rt,it,U)*A.get(q,J,ot,W)}}g.set(Z,$,M,U,K)}}}return e.makeTensorInfo(g.shape,g.dtype,g.values)}var FA={kernelName:Ql,backendName:"cpu",kernelFunc:BH};function MH(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:s}=t,{strides:i,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=o;X([n,s],"depthwiseConv2DNativeBackpropInput");let p=y.computeStrides(n.shape),m=y.computeStrides(s.shape),f=S.computeConv2DInfo(u,s.shape,i,a,l,c,!0),h=new jt(f.inShape,"float32"),d=h.values,[g,x,b]=h.strides,C=e.data.get(n.dataId).values,[w,I,E]=p,A=e.data.get(s.dataId).values,[$,_,L]=m,{batchSize:M,filterHeight:V,filterWidth:G,inChannels:W,inHeight:U,inWidth:K,outChannels:Z,outHeight:q,outWidth:J,strideHeight:rt,strideWidth:ot}=f,it=V-1-f.padInfo.top,st=G-1-f.padInfo.left,pt=Z/W;for(let at=0;at<M;++at)for(let ft=0;ft<W;++ft)for(let Nt=0;Nt<U;++Nt){let $t=Nt-it,Tt=Math.max(0,Math.ceil($t/rt)),zt=Math.min(q,(V+$t)/rt);for(let Bt=0;Bt<K;++Bt){let oe=Bt-st,pe=Math.max(0,Math.ceil(oe/ot)),Ae=Math.min(J,(G+oe)/ot),me=0;for(let ae=Tt;ae<zt;++ae){let Te=ae*rt-$t;for(let Ce=pe;Ce<Ae;++Ce){let En=Ce*ot-oe,or=w*at+I*ae+E*Ce,Ks=$*(V-1-Te)+_*(G-1-En)+L*ft;for(let Qr=0;Qr<pt;++Qr){let ya=ft*pt+Qr,Fo=C[or+ya],An=A[Ks+Qr];me+=Fo*An}}}d[g*at+x*Nt+b*Bt+ft]=me}}return e.makeTensorInfo(h.shape,h.dtype,h.values)}var _A={kernelName:tc,backendName:"cpu",kernelFunc:MH};function VH(r){let{inputs:t,backend:e}=r,{x:o}=t,n=y.sizeFromShape(o.shape),s=e.data.get(o.dataId).values,i=dt([n,n],o.dtype),a=i.values;for(let c=0;c<s.length;c++)a[c*n+c]=s[c];let l=[...o.shape,...o.shape];return e.makeTensorInfo(l,i.dtype,i.values)}var OA={kernelName:ch,backendName:"cpu",kernelFunc:VH};var LA={kernelName:hi,backendName:"cpu",kernelFunc:({inputs:r,backend:t,attrs:e})=>{let{x:o,filter:n}=r,{strides:s,pad:i,dilations:a}=e,l=t,c=l.data.get(o.dataId).values,u=o.shape.length,p=l.data.get(n.dataId).values,m=n.shape.length,{batchSize:f,inHeight:h,inWidth:d,inChannels:g,outHeight:x,outWidth:b,padInfo:C,strideHeight:w,strideWidth:I,filterHeight:E,filterWidth:A,dilationHeight:$,dilationWidth:_,outShape:L}=S.computeDilation2DInfo(o.shape,n.shape,s,i,"NHWC",a),M=y.sizeFromShape(L),V=L.length,G=y.getArrayFromDType(o.dtype,M);for(let U=0;U<f;++U)for(let K=0;K<x;++K){let Z=K*w-C.top;for(let q=0;q<b;++q){let J=q*I-C.left;for(let rt=0;rt<g;++rt){let ot=Number.MIN_SAFE_INTEGER;for(let st=0;st<E;++st){let pt=Z+st*$;if(pt>=0&&pt<h)for(let at=0;at<A;++at){let ft=J+at*_;if(ft>=0&&ft<d){let Nt=y.locToIndex([U,pt,ft,rt],u,y.computeStrides(o.shape)),$t=y.locToIndex([st,at,rt],m,y.computeStrides(n.shape)),Tt=c[Nt]+p[$t];Tt>ot&&(ot=Tt)}}}let it=y.locToIndex([U,K,q,rt],V,y.computeStrides(L));G[it]=ot}}}return{dataId:l.write(y.toTypedArray(G,o.dtype),L,o.dtype),shape:L,dtype:o.dtype}}};var PA={kernelName:mp,backendName:"cpu",kernelFunc:({inputs:r,backend:t,attrs:e})=>{let{x:o,filter:n,dy:s}=r,{strides:i,pad:a,dilations:l}=e,c=t,u=y.toNestedArray(o.shape,c.data.get(o.dataId).values),p=y.toNestedArray(n.shape,c.data.get(n.dataId).values),{batchSize:m,inHeight:f,inWidth:h,inChannels:d,outHeight:g,outWidth:x,padInfo:b,strideHeight:C,strideWidth:w,filterHeight:I,filterWidth:E,dilationHeight:A,dilationWidth:$,outShape:_}=S.computeDilation2DInfo(o.shape,n.shape,i,a,"NHWC",l);y.assert(s.rank===_.length,()=>`Error in ${mp}, dy must have the same rank as output ${_.length}, but got ${s.rank}`);let L=y.toNestedArray(_,c.data.get(s.dataId).values),M=y.makeZerosNestedTypedArray(n.shape,n.dtype);for(let G=0;G<m;++G)for(let W=0;W<g;++W){let U=W*C-b.top;for(let K=0;K<x;++K){let Z=K*w-b.left;for(let q=0;q<d;++q){let J=Number.MIN_SAFE_INTEGER,rt=0,ot=0;for(let it=0;it<I;++it){let st=U+it*A;if(st>=0&&st<f)for(let pt=0;pt<E;++pt){let at=Z+pt*$;if(at>=0&&at<h){let ft=u[G][st][at][q]+p[it][pt][q];ft>J&&(J=ft,rt=it,ot=pt)}}}M[rt][ot][q]+=L[G][W][K][q]}}}return{dataId:c.write(y.toTypedArray(M,o.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var zA={kernelName:pp,backendName:"cpu",kernelFunc:({inputs:r,backend:t,attrs:e})=>{let{x:o,filter:n,dy:s}=r,{strides:i,pad:a,dilations:l}=e,c=t,u=y.toNestedArray(o.shape,c.data.get(o.dataId).values),p=y.toNestedArray(n.shape,c.data.get(n.dataId).values),{batchSize:m,inHeight:f,inWidth:h,inChannels:d,outHeight:g,outWidth:x,padInfo:b,strideHeight:C,strideWidth:w,filterHeight:I,filterWidth:E,dilationHeight:A,dilationWidth:$,outShape:_}=S.computeDilation2DInfo(o.shape,n.shape,i,a,"NHWC",l);y.assert(s.rank===_.length,()=>`Error in ${pp}, dy must have the same rank as output ${_.length}, but got ${s.rank}`);let L=y.toNestedArray(_,c.data.get(s.dataId).values),M=y.makeZerosNestedTypedArray(o.shape,o.dtype);for(let G=0;G<m;++G)for(let W=0;W<g;++W){let U=W*C-b.top;for(let K=0;K<x;++K){let Z=K*w-b.left;for(let q=0;q<d;++q){let J=Number.MIN_SAFE_INTEGER,rt=U<0?0:U,ot=Z<0?0:Z;for(let it=0;it<I;++it){let st=U+it*A;if(st>=0&&st<f)for(let pt=0;pt<E;++pt){let at=Z+pt*$;if(at>=0&&at<h){let ft=u[G][st][at][q]+p[it][pt][q];ft>J&&(J=ft,rt=st,ot=at)}}}M[G][rt][ot][q]+=L[G][W][K][q]}}}return{dataId:c.write(y.toTypedArray(M,o.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};function GH(r){let{inputs:t,backend:e,attrs:o}=r,{image:n}=t,{canvas:s,options:i}=o,{contextOptions:a,imageOptions:l}=i||{},c=l?.alpha||1,u=a?.contextType||"2d";if(u!=="2d")throw new Error(`Context type ${a.contextType} is not supported by the CPU backend.`);let p=s.getContext(u,a?.contextAttributes||{});if(p==null)throw new Error(`Could not get the context with ${u} type.`);let[m,f]=n.shape.slice(0,2),h=n.shape.length===2?1:n.shape[2],d=e.data.get(n.dataId).values,g=n.dtype==="float32"?255:1,x=new Uint8ClampedArray(f*m*4);for(let C=0;C<m*f;++C){let w=[0,0,0,255*c];for(let E=0;E<h;E++){let A=d[C*h+E];if(n.dtype==="float32"){if(A<0||A>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${A}.`)}else if(n.dtype==="int32"&&(A<0||A>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${A}.`);h===1?(w[0]=A*g,w[1]=A*g,w[2]=A*g):w[E]=A*g}let I=C*4;x[I+0]=Math.round(w[0]),x[I+1]=Math.round(w[1]),x[I+2]=Math.round(w[2]),x[I+3]=Math.round(w[3])}s.width=f,s.height=m;let b=new ImageData(x,f,m);return p.putImageData(b,0,0),n}var BA={kernelName:WI,backendName:"cpu",kernelFunc:GH};function Gs(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o;X(n,"sum");let a;n.dtype==="bool"?a=Ao({inputs:{x:n},backend:e,attrs:{dtype:"int32"}}):a=cr({inputs:{x:n},backend:e});let l=a.shape.length,c=y.parseAxisParam(s,a.shape),u=S.getAxesPermutation(c,l),p=c,m=a;u!=null&&(m=ge({inputs:{x:a},backend:e,attrs:{perm:u}}),p=S.getInnerMostAxes(p.length,l)),S.assertAxesAreInnerMostDims("sum",p,m.shape.length);let[f,h]=S.computeOutAndReduceShapes(m.shape,p),d=S.upcastType(m.dtype,"int32"),g=Fu(e,f,d),x=y.sizeFromShape(h),b=e.data.get(g.dataId).values,C=e.data.get(m.dataId).values;for(let w=0;w<b.length;++w){let I=w*x,E=0;for(let A=0;A<x;++A)E+=C[I+A];b[w]=E}if(i){let w=S.expandShapeToKeepDim(g.shape,c),I=g;g=Lt({inputs:{x:g},backend:e,attrs:{shape:w}}),e.disposeIntermediateTensorInfo(I)}return e.disposeIntermediateTensorInfo(a),u!=null&&e.disposeIntermediateTensorInfo(m),g}var MA={kernelName:Bi,backendName:"cpu",kernelFunc:Gs};function UH(r){let{inputs:t,backend:e,attrs:o}=r,{equation:n}=o,s=t,{allDims:i,summedDims:a,idDims:l}=S.decodeEinsumEquation(n,s.length);S.checkEinsumDimSizes(i.length,l,s);let{path:c,steps:u}=S.getEinsumComputePath(a,l),p=u.length,m=null,f=i.length,h=[];for(let d=0;d<p;++d){for(let g of u[d]){let{permutationIndices:x,expandDims:b}=S.getEinsumPermutation(f,l[g]),C;S.isIdentityPermutation(x)?C=s[g]:(C=ge({inputs:{x:s[g]},backend:e,attrs:{perm:x}}),h.push(C));let w=C.shape.slice();for(let I=0;I<b.length;++I)w.splice(b[I],0,1);y.arraysEqual(C.shape,w)||(C=Lt({inputs:{x:C},backend:e,attrs:{shape:w}}),h.push(C)),m===null?m=C:(m=wl({inputs:{a:C,b:m},backend:e}),h.push(m))}d<p-1&&(c[d]>=0&&(m=Gs({inputs:{x:m},backend:e,attrs:{axis:c[d]-(i.length-f),keepDims:!1}}),h.push(m)),f--)}for(let d of h)d!==m&&e.disposeIntermediateTensorInfo(d);return m}var VA={kernelName:ec,backendName:"cpu",kernelFunc:UH};function WH(r){let{inputs:t,backend:e}=r,{dy:o,y:n}=t;X([o,n],"eluGrad");let s=new Float32Array(y.sizeFromShape(n.shape)),i=e.data.get(n.dataId).values,a=e.data.get(o.dataId).values;for(let l=0;l<i.length;++l){let c=i[l];c>=0?s[l]=a[l]:s[l]=a[l]*(c+1)}return e.makeTensorInfo(n.shape,"float32",s)}var GA={kernelName:rc,backendName:"cpu",kernelFunc:WH};var HH=S.ERF_P,qH=S.ERF_A1,KH=S.ERF_A2,jH=S.ERF_A3,XH=S.ERF_A4,YH=S.ERF_A5,ZH=It(Hn,r=>{let t=Math.sign(r),e=Math.abs(r),o=1/(1+HH*e);return t*(1-((((YH*o+XH)*o+jH)*o+KH)*o+qH)*o*Math.exp(-e*e))}),UA={kernelName:Hn,backendName:"cpu",kernelFunc:ZH};function Bu(r){let{inputs:t,backend:e,attrs:o}=r,{input:n}=t,{dim:s}=o,i=n.shape.length,a=n.shape.slice(),l=s;return s<0&&(y.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),a.splice(l,0,1),Lt({inputs:{x:n},backend:e,attrs:{shape:a}})}var WA={kernelName:di,backendName:"cpu",kernelFunc:Bu};var JH=Ot((r,t)=>r/t),Lf=Gt(Un,JH),Pf={kernelName:Un,backendName:"cpu",kernelFunc:Lf};function Qg(r,t,e){let o=r.shape,n=o[0],s=o[1],i=e.data.get(r.dataId),a=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,c=[n,s],u=y.sizeFromShape(c),p=y.getTypedArrayFromDType("float32",u),m=y.getTypedArrayFromDType("float32",u);for(let g=0;g<n;g++){let x=Do({inputs:{x:a},backend:e,attrs:{begin:[g,0],size:[1,s]}}),b=Do({inputs:{x:l},backend:e,attrs:{begin:[g,0],size:[1,s]}}),C=ze({inputs:{real:x,imag:b},backend:e}),{real:w,imag:I}=QH(C,t,e),E=S.mergeRealAndImagArrays(w,I);for(let A=0;A<s;A++){let $=S.getComplexWithIndex(E,A);p[g*s+A]=$.real,m[g*s+A]=$.imag}e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(C)}let f=e.makeTensorInfo(c,"float32",p),h=e.makeTensorInfo(c,"float32",m),d=ze({inputs:{real:f,imag:h},backend:e});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),d}function QH(r,t,e){let o=y.sizeFromShape(r.shape),n=e.data.get(r.dataId),s=e.data.get(n.complexTensorInfos.real.dataId).values,i=e.data.get(n.complexTensorInfos.imag.dataId).values;if(tq(o)){let a=EC(s,i,o,t,e),l=[r.shape[0],r.shape[1]];if(t){let c=e.makeTensorInfo(l,"float32",a.real),u=e.makeTensorInfo(l,"float32",a.imag),p=e.makeTensorInfo([],"float32",y.createScalarValue(o,"float32")),m=cr({inputs:{x:p},backend:e}),f=Pf.kernelFunc({inputs:{a:c,b:p},backend:e}),h=Pf.kernelFunc({inputs:{a:u,b:m},backend:e}),d=e.data.get(f.dataId).values,g=e.data.get(h.dataId).values;return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),{real:d,imag:g}}return a}else{let a=S.mergeRealAndImagArrays(s,i),l=eq(a,o,t);return S.splitRealAndImagArrays(l)}}function tq(r){return(r&r-1)===0}function EC(r,t,e,o,n){if(e===1)return{real:r,imag:t};let s=S.mergeRealAndImagArrays(r,t),i=e/2,a=S.complexWithEvenIndex(s),l=a.real,c=a.imag,u=[l.length],p=n.makeTensorInfo(u,"float32",l),m=n.makeTensorInfo(u,"float32",c),f=ze({inputs:{real:p,imag:m},backend:n}),h=S.complexWithOddIndex(s),d=h.real,g=h.imag,x=[d.length],b=n.makeTensorInfo(x,"float32",d),C=n.makeTensorInfo(x,"float32",g),w=ze({inputs:{real:b,imag:C},backend:n}),I=EC(l,c,i,o,n),E=I.real,A=I.imag,$=[E.length],_=n.makeTensorInfo($,"float32",E),L=n.makeTensorInfo($,"float32",A),M=ze({inputs:{real:_,imag:L},backend:n}),V=EC(d,g,i,o,n),G=V.real,W=V.imag,U=[G.length],K=n.makeTensorInfo(U,"float32",G),Z=n.makeTensorInfo(U,"float32",W),q=ze({inputs:{real:K,imag:Z},backend:n}),J=S.exponents(e,o),rt=[J.real.length],ot=n.makeTensorInfo(rt,"float32",J.real),it=n.makeTensorInfo(rt,"float32",J.imag),st=ze({inputs:{real:ot,imag:it},backend:n}),pt=wl({inputs:{a:st,b:q},backend:n}),at=Sn({inputs:{a:M,b:pt},backend:n}),ft=_f({inputs:{a:M,b:pt},backend:n}),Nt=Eo({inputs:{input:at},backend:n}),$t=Eo({inputs:{input:ft},backend:n}),Tt=vn({inputs:{input:at},backend:n}),zt=vn({inputs:{input:ft},backend:n}),Bt=ua({inputs:[Nt,$t],backend:n,attrs:{axis:0}}),oe=ua({inputs:[Tt,zt],backend:n,attrs:{axis:0}}),pe=n.data.get(Bt.dataId).values,Ae=n.data.get(oe.dataId).values;return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(C),n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(_),n.disposeIntermediateTensorInfo(L),n.disposeIntermediateTensorInfo(M),n.disposeIntermediateTensorInfo(K),n.disposeIntermediateTensorInfo(Z),n.disposeIntermediateTensorInfo(q),n.disposeIntermediateTensorInfo(ot),n.disposeIntermediateTensorInfo(it),n.disposeIntermediateTensorInfo(st),n.disposeIntermediateTensorInfo(pt),n.disposeIntermediateTensorInfo(at),n.disposeIntermediateTensorInfo(ft),n.disposeIntermediateTensorInfo(Nt),n.disposeIntermediateTensorInfo(Tt),n.disposeIntermediateTensorInfo($t),n.disposeIntermediateTensorInfo(zt),n.disposeIntermediateTensorInfo(Bt),n.disposeIntermediateTensorInfo(oe),{real:pe,imag:Ae}}function eq(r,t,e){let o=new Float32Array(t*2);for(let n=0;n<t;n++){let s=0,i=0;for(let a=0;a<t;a++){let l=S.exponent(n*a,t,e),c=S.getComplexWithIndex(r,a);s+=c.real*l.real-c.imag*l.imag,i+=c.real*l.imag+c.imag*l.real}e&&(s/=t,i/=t),S.assignToTypedArray(o,s,i,n)}return o}function rq(r){let{inputs:t,backend:e}=r,{input:o}=t,n=y.sizeFromShape(o.shape),s=o.shape[o.shape.length-1],i=n/s,a=Lt({inputs:{x:o},backend:e,attrs:{shape:[i,s]}}),l=Qg(a,!1,e),c=Lt({inputs:{x:l},backend:e,attrs:{shape:o.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),c}var HA={kernelName:oc,backendName:"cpu",kernelFunc:rq};function zf(r){let{backend:t,attrs:e}=r,{shape:o,value:n,dtype:s}=e,i=s||y.inferDtype(n),a=y.getArrayFromDType(i,y.sizeFromShape(o));return oq(a,n,i),t.makeTensorInfo(o,i,a)}var qA={kernelName:nc,backendName:"cpu",kernelFunc:zf};function oq(r,t,e){r.fill(t)}var KA={kernelName:sc,backendName:"cpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:o}=r,n=e,s=y.getTypedArrayFromDType(o.dtype,y.sizeFromShape(o.shape)),[i,a,l,c]=o.shape,u=n.data.get(o.dataId).values;for(let m=0;m<i;m++){let f=m*l*a*c;for(let h=0;h<a;h++){let d=h*(l*c);for(let g=0;g<l;g++){let x=g*c;for(let b=0;b<c;b++){let C=Math.round(l-g-1),w=f+d+x+b,I=u[w];if(C>=0&&C<l){let E=C*c,A=f+d+E+b;I=u[A]}s[w]=I}}}}return{dataId:n.write(s,o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};function nq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s,bias:i,preluActivationWeights:a}=t,{strides:l,pad:c,dataFormat:u,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:h}=o,d=TC({inputs:{x:n,filter:s},backend:e,attrs:{strides:l,pad:c,dataFormat:u,dilations:p,dimRoundingMode:m}});if(i){let g=d;if(u==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){let x=Lt({inputs:{x:i},backend:e,attrs:{shape:[i.shape[0],1,1]}});d=Sn({inputs:{a:d,b:x},backend:e}),e.disposeIntermediateTensorInfo(x)}else d=Sn({inputs:{a:d,b:i},backend:e});e.disposeIntermediateTensorInfo(g)}if(f){let g=d;if(u==="NCHW"&&f==="prelu"&&a.shape.length===1&&a.shape[0]!==1){let x=Lt({inputs:{x:a},backend:e,attrs:{shape:[a.shape[0],1,1]}});d=Cl(e,d,f,x,h),e.disposeIntermediateTensorInfo(x)}else d=Cl(e,d,f,a,h);e.disposeIntermediateTensorInfo(g)}return d}var jA={kernelName:Fa,backendName:"cpu",kernelFunc:nq};function sq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s,bias:i,preluActivationWeights:a}=t,{strides:l,pad:c,dataFormat:u,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:h}=o,d=kC({inputs:{x:n,filter:s},backend:e,attrs:{strides:l,pad:c,dataFormat:u,dilations:p,dimRoundingMode:m}});if(i){let g=d;d=Sn({inputs:{a:d,b:i},backend:e}),e.disposeIntermediateTensorInfo(g)}if(f){let g=d;d=Cl(e,d,f,a,h),e.disposeIntermediateTensorInfo(g)}return d}var XA={kernelName:_a,backendName:"cpu",kernelFunc:sq};function iq(r){let{inputs:t,backend:e}=r,{params:o,indices:n}=t,s=y.sizeFromShape(o.shape),i=n.shape,a=i[i.length-1],[l,c,u,p]=S.prepareAndValidate(o,n);if(c===0)return e.makeTensorInfo(l,o.dtype,[]);let m=e.data.get(n.dataId).values,f=e.bufferSync(o),h=_g(m,f,o.dtype,c,a,u,p,o.shape,s);return e.makeTensorInfo(l,o.dtype,h.values)}var YA={kernelName:uh,backendName:"cpu",kernelFunc:iq};function aq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,indices:s}=t,{axis:i,batchDims:a}=o;X([n,s],"gatherV2");let l=y.parseAxisParam(i,n.shape)[0],c=e.data.get(s.dataId).values,u=n.shape[l];for(let w=0;w<c.length;++w){let I=c[w];y.assert(I<=u-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${u-1}]`)}let p=a;a==null&&(p=0);let m=y.sizeFromShape(s.shape),f=S.segment_util.collectGatherOpShapeInfo(n,s,l,p),h=Lt({inputs:{x:n},backend:e,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),d=Lt({inputs:{x:s},backend:e,attrs:{shape:[f.batchSize,m/f.batchSize]}}),g=[f.batchSize,f.outerSize,m/f.batchSize,f.sliceSize],x=e.bufferSync(d),b=e.bufferSync(h),C=Og(b,x,g);return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.makeTensorInfo(f.outputShape,C.dtype,C.values)}var ZA={kernelName:xi,backendName:"cpu",kernelFunc:aq};function lq(r){let{inputs:t,backend:e}=r,{input:o}=t,n=y.sizeFromShape(o.shape),s=o.shape[o.shape.length-1],i=n/s,a=Lt({inputs:{x:o},backend:e,attrs:{shape:[i,s]}}),l=Qg(a,!0,e),c=Lt({inputs:{x:l},backend:e,attrs:{shape:o.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),c}var JA={kernelName:ic,backendName:"cpu",kernelFunc:lq};var cq=It(Zn,r=>Number.isFinite(r)?1:0,"bool"),QA={kernelName:Zn,backendName:"cpu",kernelFunc:cq};var uq=It(Jn,r=>Math.abs(r)===1/0?1:0,"bool"),t2={kernelName:Jn,backendName:"cpu",kernelFunc:uq};var pq=It(Qn,r=>Number.isNaN(r)?1:0,"bool"),e2={kernelName:Qn,backendName:"cpu",kernelFunc:pq};function mq(r){let{backend:t,attrs:e}=r,{start:o,stop:n,num:s}=e,i=Lg(o,n,s);return t.makeTensorInfo([i.length],"float32",i)}var r2={kernelName:ph,backendName:"cpu",kernelFunc:mq};var fq=It(es,r=>Math.log1p(r)),o2={kernelName:es,backendName:"cpu",kernelFunc:fq};var hq=Ot((r,t)=>r&&t),dq=Gt(Ea,hq,null,"bool"),n2={kernelName:Ea,backendName:"cpu",kernelFunc:dq};var gq=It(Aa,r=>r?0:1,"bool"),s2={kernelName:Aa,backendName:"cpu",kernelFunc:gq};var xq=Ot((r,t)=>r||t),yq=Gt($a,xq,null,"bool"),i2={kernelName:$a,backendName:"cpu",kernelFunc:yq};function bq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{depthRadius:s,bias:i,alpha:a,beta:l}=o;X(n,"LRN");let c=n.shape[3],u=c-1,p=e.data.get(n.dataId).values,m=y.sizeFromShape(n.shape),f=new Float32Array(m);function h(d){let g=d%c,x=d-g+Math.max(0,g-s),b=d-g+Math.min(g+s,u),C=0;for(;x<=b;x++){let w=p[x];C+=w*w}return C}for(let d=0;d<m;d++){let g=h(d),x=p[d]*Math.pow(i+a*g,-l);f[d]=x}return e.makeTensorInfo(n.shape,n.dtype,f)}var a2={kernelName:bi,backendName:"cpu",kernelFunc:bq};function wq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,y:s,dy:i}=t,{depthRadius:a,bias:l,alpha:c,beta:u}=o;X(i,"LRNGrad");let p=y.sizeFromShape(i.shape),m=i.shape[3],f=e.data.get(i.dataId).values,h=e.data.get(n.dataId).values,d=e.data.get(s.dataId).values,g=new Float32Array(p),x=p;for(let b=0;b<x;b++){let C=b%m,w=b-C+Math.max(0,C-a),I=b-C+Math.min(m,C+a+1),E=0;for(let A=w;A<I;A++)E+=Math.pow(h[A],2);E=c*E+l;for(let A=w;A<I;A++){let $=-2*c*u*h[A]*d[b]/E;b===A&&($+=Math.pow(E,-u)),$*=f[b],g[A]+=$}}return e.makeTensorInfo(i.shape,n.dtype,g)}var l2={kernelName:lc,backendName:"cpu",kernelFunc:wq};function AC(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reductionIndices:s,keepDims:i}=o,a=e,l=n.shape,c=l.length,u=y.parseAxisParam(s,l),p=u,m=S.getAxesPermutation(p,c),f=a.data.get(n.dataId).values;if(m!=null){let w=new Array(c);for(let I=0;I<w.length;I++)w[I]=l[m[I]];f=Lu(f,l,n.dtype,m,w),p=S.getInnerMostAxes(p.length,c),l=w}X(n,"max"),S.assertAxesAreInnerMostDims("max",p,c);let[h,d]=S.computeOutAndReduceShapes(l,p),g=y.sizeFromShape(d),x=Pg(f,g,h,n.dtype),b=a.write(x,h,n.dtype),C=h;return i&&(C=S.expandShapeToKeepDim(h,u)),{dataId:b,shape:C,dtype:n.dtype}}var c2={kernelName:wi,backendName:"cpu",kernelFunc:AC};function Cq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t;X(n,"maxPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:l}=o,c=1;y.assert(S.eitherStridesOrDilationsAreOne(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let u=S.computePool2DInfo(n.shape,s,i,c,a,l),p;if(u.filterWidth===1&&u.filterHeight===1&&y.arraysEqual(u.inShape,u.outShape))p=cr({inputs:{x:n},backend:e});else{let m=e.data.get(n.dataId).values,f=y.computeStrides(n.shape),h=zu(m,n.shape,n.dtype,f,u,"max");p=e.makeTensorInfo(u.outShape,n.dtype,h.values)}return p}var u2={kernelName:Ci,backendName:"cpu",kernelFunc:Cq};function Iq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:s,strides:i,pad:a,dimRoundingMode:l,dataFormat:c}=o;X(n,"maxPool3d");let u=S.computePool3DInfo(n.shape,s,i,1,a,l,c),p=e.data.get(n.dataId).values,m=Jg(p,n.shape,n.dtype,y.computeStrides(n.shape),u,"max");return e.makeTensorInfo(m.shape,"float32",m.values)}var p2={kernelName:Ii,backendName:"cpu",kernelFunc:Iq};function Sq(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:s}=t,{filterSize:i,strides:a,pad:l,dimRoundingMode:c}=o;X([n,s],"maxPool3DGrad");let u=S.computePool3DInfo(s.shape,i,a,1,l,c),p=e.bufferSync(s),m=iA(p,u),f=u.strideDepth,h=u.strideHeight,d=u.strideWidth,g=u.dilationDepth,x=u.dilationHeight,b=u.dilationWidth,C=u.effectiveFilterDepth,w=u.effectiveFilterHeight,I=u.effectiveFilterWidth,E=C-1-u.padInfo.front,A=I-1-u.padInfo.left,$=w-1-u.padInfo.top,_=dt(s.shape,"float32"),L=e.bufferSync(n);for(let M=0;M<u.batchSize;++M)for(let V=0;V<u.inChannels;++V)for(let G=0;G<u.inDepth;++G)for(let W=0;W<u.inHeight;++W)for(let U=0;U<u.inWidth;++U){let K=G-E,Z=W-$,q=U-A,J=0;for(let rt=0;rt<C;rt+=g){let ot=(K+rt)/f;if(!(ot<0||ot>=u.outDepth||Math.floor(ot)!==ot))for(let it=0;it<w;it+=x){let st=(Z+it)/h;if(!(st<0||st>=u.outHeight||Math.floor(st)!==st))for(let pt=0;pt<I;pt+=b){let at=(q+pt)/d;if(at<0||at>=u.outWidth||Math.floor(at)!==at)continue;let ft=C*w*I-1-m.get(M,ot,st,at,V),Nt=rt*w*I+it*I+pt,$t=ft===Nt?1:0;if($t===0)continue;let Tt=L.get(M,ot,st,at,V);J+=Tt*$t}}}_.set(J,M,G,W,U,V)}return e.makeTensorInfo(_.shape,_.dtype,_.values)}var m2={kernelName:uc,backendName:"cpu",kernelFunc:Sq};function vq(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:s,output:i}=t,a=s;X([s,i],"maxPoolGrad");let{filterSize:l,strides:c,pad:u,dimRoundingMode:p}=o,m=S.computePool2DInfo(a.shape,l,c,1,u,p),f=e.data.get(a.dataId).values,h=dt(m.outShape,a.dtype,Zg(f,a.shape,a.dtype,m).values),d=m.strideHeight,g=m.strideWidth,x=m.dilationHeight,b=m.dilationWidth,C=m.effectiveFilterHeight,w=m.effectiveFilterWidth,I=w-1-m.padInfo.left,E=C-1-m.padInfo.top,A=dt(a.shape,"float32"),$=e.data.get(n.dataId).values,_=dt(n.shape,"float32",$);for(let L=0;L<m.batchSize;++L)for(let M=0;M<m.inChannels;++M)for(let V=0;V<m.inHeight;++V)for(let G=0;G<m.inWidth;++G){let W=V-E,U=G-I,K=0;for(let Z=0;Z<C;Z+=x){let q=(W+Z)/d;if(!(q<0||q>=m.outHeight||Math.floor(q)!==q))for(let J=0;J<w;J+=b){let rt=(U+J)/g;if(rt<0||rt>=m.outWidth||Math.floor(rt)!==rt)continue;let ot=C*w-1-h.get(L,q,rt,M),it=Z*w+J,st=ot===it?1:0;if(st===0)continue;let pt=_.get(L,q,rt,M);K+=pt*st}}A.set(K,L,V,G,M)}return e.makeTensorInfo(A.shape,A.dtype,A.values)}var f2={kernelName:cc,backendName:"cpu",kernelFunc:vq};function h2(r,t,e,o,n){let s=y.computeStrides(t),i=zu(r,t,e,s,n,"max"),a=Zg(r,t,e,n,!0,o);return[i.values,a.values]}var d2={kernelName:mh,backendName:"cpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:o}=r,{filterSize:n,strides:s,pad:i,includeBatchInIndex:a}=t,l=e;X(o,"MaxPoolWithArgmax");let c=l.data.get(o.dataId).values,u=S.computePool2DInfo(o.shape,n,s,[1,1],i),[p,m]=h2(c,o.shape,o.dtype,a,u),f=l.write(p,u.outShape,o.dtype),h=l.write(m,u.outShape,o.dtype);return[{dataId:f,shape:u.outShape,dtype:o.dtype},{dataId:h,shape:u.outShape,dtype:"int32"}]}};function Nq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o,a=y.parseAxisParam(s,n.shape),c=S.computeOutAndReduceShapes(n.shape,a)[1],u=y.sizeFromShape(c),p=[],m=e.makeTensorInfo([],"float32",new Float32Array([u]));p.push(m);let f=Ao({inputs:{x:n},backend:e,attrs:{dtype:"float32"}});p.push(f);let h=Lf({inputs:{a:f,b:m},backend:e});p.push(h);let d=Gs({inputs:{x:h},backend:e,attrs:{axis:s,keepDims:i}});return p.forEach(g=>e.disposeIntermediateTensorInfo(g)),d}var g2={kernelName:Si,backendName:"cpu",kernelFunc:Nq};function Tq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o;X(n,"min");let a=y.parseAxisParam(s,n.shape),l=a,c=S.getAxesPermutation(l,n.shape.length),u=n;c!=null&&(u=ge({inputs:{x:n},backend:e,attrs:{perm:c}}),l=S.getInnerMostAxes(l.length,n.shape.length)),S.assertAxesAreInnerMostDims("min",l,u.shape.length);let[p,m]=S.computeOutAndReduceShapes(u.shape,l),f=y.sizeFromShape(m),h=y.makeZerosTypedArray(y.sizeFromShape(p),u.dtype),d=e.data.get(u.dataId).values;for(let x=0;x<h.length;++x){let b=x*f,C=d[b];for(let w=0;w<f;++w){let I=d[b+w];(Number.isNaN(I)||I<C)&&(C=I)}h[x]=C}c!=null&&e.disposeIntermediateTensorInfo(u);let g=e.makeTensorInfo(p,u.dtype,h);if(i){let x=S.expandShapeToKeepDim(p,a),b=Lt({inputs:{x:g},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(g),b}return g}var x2={kernelName:vi,backendName:"cpu",kernelFunc:Tq};function kq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{paddings:s,mode:i}=o;X(n,"mirrorPad");let a=s.map((C,w)=>C[0]+n.shape[w]+C[1]),l=s.map(C=>C[0]),c=s.map((C,w)=>C[0]+n.shape[w]),u=i==="reflect"?0:1,p=e.data.get(n.dataId).values,m=n.shape.length,f=y.computeStrides(n.shape),h=y.sizeFromShape(a),d=a.length,g=y.computeStrides(a),x=y.getTypedArrayFromDType(n.dtype,h);for(let C=0;C<h;C++){let w=y.indexToLoc(C,d,g);for(let E=0;E<d;E++)w[E]<l[E]?w[E]=l[E]*2-w[E]-u:w[E]>=c[E]&&(w[E]=(c[E]-1)*2-w[E]+u);w=w.map((E,A)=>E-l[A]);let I=y.locToIndex(w,m,f);x[C]=p[I]}return{dataId:e.write(x,a,n.dtype),shape:a,dtype:n.dtype}}var y2={kernelName:Ni,backendName:"cpu",kernelFunc:kq};var Eq=Ot((r,t)=>{let e=r%t;return r<0&&t<0||r>=0&&t>=0?e:(e+t)%t}),Aq=Gt(ns,Eq),b2={kernelName:ns,backendName:"cpu",kernelFunc:Aq};var C2=np(_p());function $C(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{dim:s}=o,i=n.shape.length,a=s;if(a===-1&&(a=i-1),a!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${a}`);let l=y.parseAxisParam([a],n.shape),c=AC({inputs:{x:n},backend:e,attrs:{reductionIndices:l,keepDims:!1}}),u=S.expandShapeToKeepDim(c.shape,l),p=Lt({inputs:{x:c},backend:e,attrs:{shape:u}}),m=_f({inputs:{a:n,b:p},backend:e}),f=Zw({inputs:{x:m},backend:e}),h=Gs({inputs:{x:f},backend:e,attrs:{axis:l,keepDims:!1}}),d=Lt({inputs:{x:h},backend:e,attrs:{shape:u}}),g=Lf({inputs:{a:f,b:d},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),g}var w2={kernelName:Gi,backendName:"cpu",kernelFunc:$C};function $q(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{numSamples:s,seed:i,normalized:a}=o;X(n,"multinomial");let l=a?n:$C({inputs:{logits:n},backend:e,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],p=e.data.get(l.dataId).values,m=[c,s],f=y.makeZerosTypedArray(y.sizeFromShape(m),"int32");for(let h=0;h<c;++h){let d=h*u,g=new Float32Array(u-1);g[0]=p[d];for(let C=1;C<g.length;++C)g[C]=g[C-1]+p[d+C];let x=C2.alea(i.toString()),b=h*s;for(let C=0;C<s;++C){let w=x();f[b+C]=g.length;for(let I=0;I<g.length;I++)if(w<g[I]){f[b+C]=I;break}}}return a||e.disposeIntermediateTensorInfo(l),e.makeTensorInfo(m,"int32",f)}var I2={kernelName:fh,backendName:"cpu",kernelFunc:$q};var Dq=ar.nonMaxSuppressionV3Impl;function Rq(r){let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=o;X(n,"NonMaxSuppression");let c=e.data.get(n.dataId).values,u=e.data.get(s.dataId).values,{selectedIndices:p}=Dq(c,u,i,a,l);return e.makeTensorInfo([p.length],"int32",new Int32Array(p))}var S2={kernelName:pc,backendName:"cpu",kernelFunc:Rq};var Fq=ar.nonMaxSuppressionV4Impl;function _q(r){let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=o;X(n,"NonMaxSuppressionPadded");let u=e.data.get(n.dataId).values,p=e.data.get(s.dataId).values,{selectedIndices:m,validOutputs:f}=Fq(u,p,i,a,l,c);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([],"int32",new Int32Array([f]))]}var v2={kernelName:mc,backendName:"cpu",kernelFunc:_q};var Oq=ar.nonMaxSuppressionV5Impl;function Lq(r){let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=o;X(n,"NonMaxSuppressionWithScore");let u=e.data.get(n.dataId).values,p=e.data.get(s.dataId).values,m=i,f=a,h=l,d=c,{selectedIndices:g,selectedScores:x}=Oq(u,p,m,f,h,d);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([x.length],"float32",new Float32Array(x))]}var N2={kernelName:fc,backendName:"cpu",kernelFunc:Lq};function Pq(r){let{inputs:t,backend:e,attrs:o}=r,{indices:n}=t,{dtype:s,depth:i,onValue:a,offValue:l}=o;X(n,"oneHot");let c=y.sizeFromShape(n.shape),u=new Float32Array(c*i);u.fill(l);let p=e.data.get(n.dataId).values;for(let m=0;m<c;++m)p[m]>=0&&p[m]<i&&(u[m*i+p[m]]=a);return e.makeTensorInfo([...n.shape,i],s,u)}var T2={kernelName:Ei,backendName:"cpu",kernelFunc:Pq};function Bf(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(o.dtype==="complex64"){let n=Eo({inputs:{input:o},backend:e}),s=Bf({inputs:{x:n},backend:e}),i=vn({inputs:{input:o},backend:e}),a=Bf({inputs:{x:i},backend:e}),l=ze({inputs:{real:s,imag:a},backend:e});return e.disposeIntermediateTensorInfo(n),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),l}else return zf({backend:e,attrs:{shape:o.shape,value:0,dtype:o.dtype}})}var k2={kernelName:Hi,backendName:"cpu",kernelFunc:Bf};function E2(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(o.dtype==="complex64"){let n=Eo({inputs:{input:o},backend:e}),s=E2({inputs:{x:n},backend:e}),i=vn({inputs:{input:o},backend:e}),a=Bf({inputs:{x:i},backend:e}),l=ze({inputs:{real:s,imag:a},backend:e});return e.disposeIntermediateTensorInfo(n),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),l}else return zf({backend:e,attrs:{shape:o.shape,value:1,dtype:o.dtype}})}var A2={kernelName:ki,backendName:"cpu",kernelFunc:E2};function DC(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o;if(t.length===1)return Bu({inputs:{input:t[0]},backend:e,attrs:{dim:n}});let s=t[0].shape,i=t[0].dtype;t.forEach(u=>{y.assertShapesMatch(s,u.shape,"All tensors passed to stack must have matching shapes"),y.assert(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],l=t.map(u=>{let p=Bu({inputs:{input:u},backend:e,attrs:{dim:n}});return a.push(p),p}),c=ua({inputs:l,backend:e,attrs:{axis:n}});return a.forEach(u=>e.disposeIntermediateTensorInfo(u)),c}var $2={kernelName:Ai,backendName:"cpu",kernelFunc:DC};function zq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{paddings:s,constantValue:i}=o;X(n,"pad");let a=s.map((b,C)=>b[0]+n.shape[C]+b[1]),l=s.map(b=>b[0]),c=e.data.get(n.dataId).values,u=y.sizeFromShape(n.shape),p=n.shape.length,m=y.computeStrides(n.shape),f=y.sizeFromShape(a),h=a.length,d=y.computeStrides(a),g=y.getTypedArrayFromDType(n.dtype,f);i!==0&&g.fill(i);for(let b=0;b<u;b++){let w=y.indexToLoc(b,p,m).map((E,A)=>E+l[A]),I=y.locToIndex(w,h,d);g[I]=c[b]}return{dataId:e.write(g,a,n.dtype),shape:a,dtype:n.dtype}}var tx={kernelName:$i,backendName:"cpu",kernelFunc:zq};var Bq=Ot((r,t)=>Math.pow(r,t)),Mq=Gt(is,Bq),D2={kernelName:is,backendName:"cpu",kernelFunc:Mq};function Vq(r){let{inputs:t,backend:e,attrs:o}=r,{paramsNestedSplits:n,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:a}=o,l=n.map(x=>e.data.get(x.dataId).values),c=n.map(x=>x.shape),u=e.data.get(s.dataId).values,p=e.data.get(i.dataId).values,[m,f,h]=zg(l,c,u,s.shape,s.dtype,p,i.shape,a),d=m.map(x=>e.makeTensorInfo([x.length],"int32",x)),g=e.makeTensorInfo(h,s.dtype,f);return d.concat([g])}var R2={kernelName:hh,backendName:"cpu",kernelFunc:Vq};function Gq(r){let{inputs:t,backend:e}=r,{starts:o,limits:n,deltas:s}=t,i=e.data.get(o.dataId).values,a=e.data.get(n.dataId).values,l=e.data.get(s.dataId).values,[c,u]=Bg(i,o.shape,o.dtype,a,n.shape,l,s.shape),p=e.makeTensorInfo([c.length],"int32",c),m=e.makeTensorInfo([u.length],o.dtype,u);return[p,m]}var F2={kernelName:dh,backendName:"cpu",kernelFunc:Gq};function Uq(r){let{inputs:t,backend:e,attrs:o}=r,{shape:n,values:s,defaultValue:i,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=o,c=e.data.get(n.dataId).values,u=e.data.get(s.dataId).values,p=e.data.get(i.dataId).values,m=a.map(g=>e.data.get(g.dataId).values),f=a.map(g=>g.shape),[h,d]=Mg(c,n.shape,u,s.shape,s.dtype,p,i.shape,m,f,l);return e.makeTensorInfo(h,s.dtype,d)}var _2={kernelName:gh,backendName:"cpu",kernelFunc:Uq};function Wq(r){let{backend:t,attrs:e}=r,{start:o,stop:n,dtype:s,step:i}=e,a=Vg(o,n,i,s);return t.makeTensorInfo([a.length],s,a)}var O2={kernelName:hc,backendName:"cpu",kernelFunc:Wq};var Hq=It(as,r=>1/r),L2={kernelName:as,backendName:"cpu",kernelFunc:Hq};function qq(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:s,halfPixelCenters:i,size:a}=o;X(n,"resizeBilinear");let l=y.computeStrides(n.shape),[c,u]=a,[p,m,f,h]=n.shape,d=e.data.get(n.dataId).values,g=new Float32Array(y.sizeFromShape([p,c,u,h])),x=[s&&c>1?m-1:m,s&&u>1?f-1:f],b=[s&&c>1?c-1:c,s&&u>1?u-1:u],C=0,w=x[0]/b[0],I=x[1]/b[1];for(let E=0;E<p;E++)for(let A=0;A<c;A++){let $;i?$=w*(A+.5)-.5:$=w*A;let _=Math.max(0,Math.floor($)),L=$-_,M=Math.min(m-1,Math.ceil($)),V=E*l[0]+_*l[1],G=E*l[0]+M*l[1];for(let W=0;W<u;W++){let U;i?U=I*(W+.5)-.5:U=I*W;let K=Math.max(0,Math.floor(U)),Z=U-K,q=Math.min(f-1,Math.ceil(U)),J=V+K*l[2],rt=G+K*l[2],ot=V+q*l[2],it=G+q*l[2];for(let st=0;st<h;st++){let pt=d[J+st],at=d[rt+st],ft=d[ot+st],Nt=d[it+st],$t=pt+(ft-pt)*Z,Tt=at+(Nt-at)*Z,zt=$t+(Tt-$t)*L;g[C++]=zt}}}return e.makeTensorInfo([p,c,u,h],"float32",g)}var P2={kernelName:Oi,backendName:"cpu",kernelFunc:qq};function Kq(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:s}=t,{alignCorners:i}=o;X([s,n],"resizeBilinearGrad");let a=y.computeStrides(n.shape),[l,c,u,p]=n.shape,[,m,f]=s.shape,h=new Float32Array(l*c*u*p),d=[i&&m>1?c-1:c,i&&f>1?u-1:u],g=[i&&m>1?m-1:m,i&&f>1?f-1:f],x=d[0]/g[0],b=d[1]/g[1],C=e.data.get(s.dataId).values,w=0;for(let I=0;I<l;I++){let E=I*a[0];for(let A=0;A<m;A++){let $=A*x,_=Math.floor($),L=Math.min(Math.ceil($),c-1),M=E+_*a[1],V=E+L*a[1],G=$-_,W=1-G;for(let U=0;U<f;U++){let K=U*b,Z=Math.floor(K),q=Math.min(Math.ceil(K),u-1),J=K-Z,rt=1-J,ot=M+Z*a[2],it=M+q*a[2],st=V+Z*a[2],pt=V+q*a[2],at=W*rt,ft=W*J,Nt=G*rt,$t=G*J;for(let Tt=0;Tt<p;Tt++){let zt=C[w++];h[ot+Tt]+=zt*at,h[it+Tt]+=zt*ft,h[st+Tt]+=zt*Nt,h[pt+Tt]+=zt*$t}}}}return e.makeTensorInfo([l,u,c,p],"float32",h)}var z2={kernelName:xc,backendName:"cpu",kernelFunc:Kq};function jq(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:s,halfPixelCenters:i,size:a}=o;X(n,"resizeNearestNeighbor");let l=y.computeStrides(n.shape),[c,u]=a,[p,m,f,h]=n.shape,d=e.data.get(n.dataId).values,g=new Float32Array(p*c*u*h),x=[s&&c>1?m-1:m,s&&u>1?f-1:f],b=[s&&c>1?c-1:c,s&&u>1?u-1:u],C=x[0]/b[0],w=x[1]/b[1],I=0;for(let E=0;E<p;E++){let A=E*l[0];for(let $=0;$<c;$++){let _=i?C*($+.5):C*$,L=Math.min(m-1,s?Math.round(_):Math.floor(_));i&&(L=Math.max(0,L));let M=A+L*l[1];for(let V=0;V<u;V++){let G=i?w*(V+.5):w*V,W=Math.min(f-1,s?Math.round(G):Math.floor(G));i&&(W=Math.max(0,W));let U=M+W*l[2];for(let K=0;K<h;K++){let Z=d[U+K];g[I++]=Z}}}}return e.makeTensorInfo([p,c,u,h],n.dtype,g)}var B2={kernelName:_i,backendName:"cpu",kernelFunc:jq};function Xq(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:s}=t,{alignCorners:i}=o;X([s,n],"resizeNearestNeighborGrad");let a=y.computeStrides(n.shape),l=y.computeStrides(s.shape),[c,u,p,m]=n.shape,[,f,h]=s.shape,d=new Float32Array(c*u*p*m),g=e.data.get(s.dataId).values,x=[i&&f>1?u-1:u,i&&h>1?p-1:p],b=[i&&f>1?f-1:f,i&&h>1?h-1:h],C=x[0]/b[0],w=x[1]/b[1],I=1/C,E=1/w,A=Math.ceil(I)*2+2,$=Math.ceil(E)*2+2;for(let _=0;_<c;_++){let L=_*a[0];for(let M=0;M<u;M++){let V=L+M*a[1],G=Math.floor(M*I),W=Math.floor(G-A/2);for(let U=0;U<p;U++){let K=V+U*a[2],Z=Math.floor(U*E),q=Math.floor(Z-$/2);for(let J=0;J<m;J++){let rt=0;for(let ot=0;ot<A;ot++){let it=ot+W;if(it<0||it>=f)continue;let st=L+it*l[1],pt=it*C,at=Math.min(u-1,i?Math.round(pt):Math.floor(pt));if(M===at)for(let ft=0;ft<$;ft++){let Nt=ft+q;if(Nt<0||Nt>=h)continue;let $t=st+Nt*l[2],Tt=Nt*w,zt=Math.min(p-1,i?Math.round(Tt):Math.floor(Tt));U===zt&&(rt+=g[$t+J])}}d[K+J]=rt}}}}return e.makeTensorInfo(n.shape,n.dtype,d)}var M2={kernelName:gc,backendName:"cpu",kernelFunc:Xq};function Yq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dims:s}=o;X(n,"reverse");let i=n.shape.length,a=y.parseAxisParam(s,n.shape);if(i===0)return cr({inputs:{x:n},backend:e});let l=new jt(n.shape,n.dtype),c=e.bufferSync(n);for(let u=0;u<l.size;u++){let p=l.indexToLoc(u),m=p.slice();a.forEach(f=>m[f]=n.shape[f]-1-m[f]),l.set(c.get(...m),...p)}return e.makeTensorInfo(l.shape,l.dtype,l.values)}var V2={kernelName:Li,backendName:"cpu",kernelFunc:Yq};var G2={kernelName:Sc,backendName:"cpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:o}=r,{radians:n,fillValue:s,center:i}=t,a=e,l=y.getTypedArrayFromDType(o.dtype,y.sizeFromShape(o.shape)),[c,u,p,m]=o.shape,[f,h]=S.getImageCenter(i,u,p),d=255,g=Math.sin(n),x=Math.cos(n),b=a.data.get(o.dataId).values;for(let w=0;w<c;w++){let I=w*p*u*m;for(let E=0;E<u;E++){let A=E*(p*m);for(let $=0;$<p;$++){let _=$*m;for(let L=0;L<m;L++){let M=[c,E,$,L],V=M[2],G=M[1],W=(V-f)*x-(G-h)*g,U=(V-f)*g+(G-h)*x;W=Math.round(W+f),U=Math.round(U+h);let K=s;if(typeof s!="number"&&(L===3?K=d:K=s[L]),W>=0&&W<p&&U>=0&&U<u){let q=U*(p*m),J=W*m,rt=I+q+J+L;K=b[rt]}let Z=I+A+_+L;l[Z]=K}}}}return{dataId:a.write(l,o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};var Zq=It(us,r=>{let t=Math.floor(r);return r-t<.5?Math.floor(r):r-t>.5?Math.ceil(r):t%2===0?t:t+1}),U2={kernelName:us,backendName:"cpu",kernelFunc:Zq};function Jq(r){let{inputs:t,backend:e,attrs:o}=r,{indices:n,updates:s}=t,{shape:i}=o,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:p}=S.calculateShapes(s,n,i),m=!0,f=e.bufferSync(n),h=e.bufferSync(s),d=Xo(f,h,i,p,c,l,a,u,0,m);return e.makeTensorInfo(i,d.dtype,d.values)}var W2={kernelName:xh,backendName:"cpu",kernelFunc:Jq};function Qq(r,t){let e=0,o=r.length,n=0;for(;e<o;)n=Math.floor((e+o)/2),r[n]<t?e=n+1:o=n;return o}function tK(r,t){let e=0,o=r.length,n=0;for(;e<o;)n=Math.floor((e+o)/2),r[n]<=t?e=n+1:o=n;return o}function H2(r,t,e,o,n,s){let i=y.getArrayFromDType("int32",e*n);for(let a=0;a<e;++a){let l=r.slice(a*o,(a+1)*o),c=a*n;for(let u=0;u<n;++u)i[c+u]=s==="left"?Qq(l,t[u+c]):tK(l,t[u+c])}return i}function eK(r){let{inputs:t,backend:e,attrs:o}=r,{sortedSequence:n,values:s}=t,{side:i}=o,a=e.data.get(n.dataId).values,l=e.data.get(s.dataId).values,c=H2(a,l,n.shape[0],n.shape[1],s.shape[1],i);return e.makeTensorInfo(s.shape,"int32",c)}var q2={kernelName:bh,backendName:"cpu",kernelFunc:eK};function rK(r){let{inputs:t,backend:e}=r,{condition:o,t:n,e:s}=t;X([o,n,s],"select");let i=o.shape.length,a=e.data.get(o.dataId).values,l=e.data.get(n.dataId).values,c=e.data.get(s.dataId).values,u=$e(n.dtype,s.dtype),p=y.makeZerosTypedArray(y.sizeFromShape(n.shape),u),m=0,f=i===0||i>1||n.shape.length===1?1:y.sizeFromShape(n.shape.slice(1));for(let h=0;h<a.length;h++)for(let d=0;d<f;d++)a[h]===1?p[m++]=l[h]:p[m++]=c[h];return e.makeTensorInfo(n.shape,u,p)}var K2={kernelName:Pi,backendName:"cpu",kernelFunc:rK};var oK=S.SELU_SCALEALPHA,nK=S.SELU_SCALE,sK=It(ms,r=>r>=0?nK*r:oK*(Math.exp(r)-1)),j2={kernelName:ms,backendName:"cpu",kernelFunc:sK};var iK=It(ds,r=>r<0?-1:r>0?1:0),X2={kernelName:ds,backendName:"cpu",kernelFunc:iK};var aK=It(fs,r=>Math.sin(r)),Y2={kernelName:fs,backendName:"cpu",kernelFunc:aK};var lK=It(hs,r=>Math.sinh(r)),Z2={kernelName:hs,backendName:"cpu",kernelFunc:lK};var cK=11920928955078125e-23,J2=Math.log(cK)+2,uK=It(xs,r=>{let t=r>-J2,e=r<J2,o=Math.exp(r),n;return e?n=o:t?n=r:n=Math.log(1+o),n}),Q2={kernelName:xs,backendName:"cpu",kernelFunc:uK};function pK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:s,paddings:i}=o;X([n],"spaceToBatchND");let a=y.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let E=1+s.length;E<n.shape.length;++E)l.push([0,0]);let c=tx.kernelFunc({inputs:{x:n},backend:e,attrs:{paddings:l,constantValue:0}}),u=S.getReshaped(c.shape,s,a,!1),p=S.getPermuted(u.length,s.length,!1),m=S.getReshapedPermuted(c.shape,s,a,!1),d=Lt({inputs:{x:c},backend:e,attrs:{shape:u}}),b=ge({inputs:{x:d},backend:e,attrs:{perm:p}}),I=Lt({inputs:{x:b},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(b),I}var t$={kernelName:Mi,backendName:"cpu",kernelFunc:pK};function mK(r){let{inputs:t,backend:e}=r,{indices:o,values:n,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(o.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${o.shape}`);if(n.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${n.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let a=e.data.get(o.dataId).values,l=e.data.get(n.dataId).values,c=e.data.get(s.dataId).values,u=e.data.get(i.dataId).values[0],[p,m,f,h,d]=Gg(a,o.shape,o.dtype,l,n.dtype,c,u);return[e.makeTensorInfo(m,o.dtype,p),e.makeTensorInfo([m[0]],n.dtype,f),e.makeTensorInfo([h.length],"bool",new Uint8Array(h.map(g=>Number(g)))),e.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}var e$={kernelName:wh,backendName:"cpu",kernelFunc:mK};function fK(r){let{inputs:t,backend:e}=r,{inputIndices:o,inputShape:n,newShape:s}=t;if(o.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${o.shape}`);if(n.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${n.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(e.data.get(n.dataId).values),a=e.data.get(o.dataId).values,l=Array.from(e.data.get(s.dataId).values),[c,u,p]=Ug(a,o.shape,o.dtype,i,l);return[e.makeTensorInfo(u,o.dtype,c),e.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}var r$={kernelName:Ch,backendName:"cpu",kernelFunc:fK};function hK(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:s}=t;if(o.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${n.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(n.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=e.data.get(o.dataId).values,a=e.data.get(n.dataId).values,l=e.data.get(s.dataId).values,[c,u]=Pu(i,o.shape,o.dtype,a,l,!0);return e.makeTensorInfo(u,o.dtype,c)}var o$={kernelName:Ih,backendName:"cpu",kernelFunc:hK};function dK(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:s}=t;if(o.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${n.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(n.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=e.data.get(o.dataId).values,a=e.data.get(n.dataId).values,l=e.data.get(s.dataId).values,[c,u]=Pu(i,o.shape,o.dtype,a,l);return e.makeTensorInfo(u,o.dtype,c)}var n$={kernelName:Sh,backendName:"cpu",kernelFunc:dK};function gK(r){let{inputs:t,backend:e,attrs:o}=r,{sparseIndices:n,sparseValues:s,defaultValue:i}=t,{outputShape:a}=o,{sliceRank:l,numUpdates:c,sliceSize:u,strides:p,outputSize:m}=S.calculateShapes(s,n,a),f=!1,h=e.bufferSync(n),d;switch(s.dtype){case"bool":{let g=e.bufferSync(s),x=!!e.data.get(i.dataId).values[0];d=Xo(h,g,a,m,u,c,l,p,x,f);break}case"float32":{let g=e.bufferSync(s),x=e.data.get(i.dataId).values[0];d=Xo(h,g,a,m,u,c,l,p,x,f);break}case"int32":{let g=e.bufferSync(s),x=e.data.get(i.dataId).values[0];d=Xo(h,g,a,m,u,c,l,p,x,f);break}case"string":{let g=e.bufferSync(s),x=y.decodeString(e.data.get(i.dataId).values[0]);d=Xo(h,g,a,m,u,c,l,p,x,f);break}default:throw new Error(`Unsupported type ${s.dtype}`)}return e.makeTensorInfo(a,d.dtype,d.values)}var s$={kernelName:vh,backendName:"cpu",kernelFunc:gK};function xK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{numOrSizeSplits:s,axis:i}=o,a=y.parseAxisParam(i,n.shape)[0],l=S.prepareSplitSize(n,s,a),c=new Array(n.shape.length).fill(0),u=n.shape.slice();return l.map(p=>{let m=[...u];m[a]=p;let f=Do({inputs:{x:n},backend:e,attrs:{begin:c,size:m}});return c[a]+=p,f})}var i$={kernelName:Vi,backendName:"cpu",kernelFunc:xK};var a$={kernelName:yc,backendName:"cpu",kernelFunc:({inputs:r,backend:t})=>{let{x:e}=r,o=t;X(e,"square");let n=o.data.get(e.dataId).values,s=new Float32Array(n.length);for(let a=0;a<n.length;++a){let l=n[a];s[a]=l*l}return{dataId:o.write(s,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}};var yK=It(Ss,(r,t)=>{let e=t;return isNaN(r)?NaN:r>0?1:e.alpha}),l$={kernelName:Ss,backendName:"cpu",kernelFunc:yK};function bK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:s,end:i,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:p,shrinkAxisMask:m}=o;X(n,"stridedSlice");let{finalShapeSparse:f,finalShape:h,isIdentity:d,sliceDim0:g,isSimpleSlice:x,begin:b,end:C,strides:w}=Ue.sliceInfo(n.shape,s,i,a,l,c,u,p,m),I;if(d)I=Lt({inputs:{x:n},backend:e,attrs:{shape:h}});else if(g||x){y.assert(n.shape.length>=1,()=>`Input must have rank at least 1, got: ${n.shape.length}`);let E=Ue.computeOutShape(b,C,w),A=Do({inputs:{x:n},backend:e,attrs:{begin:b,size:E}});I=Lt({inputs:{x:A},backend:e,attrs:{shape:h}}),e.disposeIntermediateTensorInfo(A)}else{let E=e.bufferSync(n),A=Wg(f,E,w,b);I=e.makeTensorInfo(h,A.dtype,A.values)}return I}var c$={kernelName:bc,backendName:"cpu",kernelFunc:bK};function wK(r){let{inputs:t,backend:e,attrs:o}=r,{separator:n,nGramWidths:s,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:c}=o,{data:u,dataSplits:p}=t,m=e.data.get(u.dataId).values,f=e.data.get(p.dataId).values,[h,d]=Hg(m,f,n,s,i,a,l,c);return[e.makeTensorInfo([h.length],"string",h),e.makeTensorInfo(p.shape,"int32",d)]}var u$={kernelName:Nh,backendName:"cpu",kernelFunc:wK};function CK(r){let{inputs:t,backend:e,attrs:o}=r,{skipEmpty:n}=o,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let a=e.data.get(s.dataId).values,l=e.data.get(i.dataId).values[0],[c,u,p]=qg(a,l,n),m=u.length;return[e.makeTensorInfo([m,2],"int32",c),e.makeTensorInfo([m],"string",u),e.makeTensorInfo([2],"int32",new Int32Array(p))]}var p$={kernelName:Th,backendName:"cpu",kernelFunc:CK};function IK(r){let{inputs:t,backend:e,attrs:o}=r,{numBuckets:n}=o,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(n<=0)throw new Error("Number of buckets must be at least 1");let i=e.data.get(s.dataId).values,a=Kg(i,n);return e.makeTensorInfo(s.shape,"int32",a)}var m$={kernelName:kh,backendName:"cpu",kernelFunc:IK};var SK=It(Cs,r=>Math.tan(r)),f$={kernelName:Cs,backendName:"cpu",kernelFunc:SK};var vK=It(Is,r=>Math.tanh(r)),h$={kernelName:Is,backendName:"cpu",kernelFunc:vK};function NK(r){let{inputs:t,backend:e}=r,{tensor:o,indices:n,updates:s}=t,{sliceRank:i,numUpdates:a,sliceSize:l,strides:c,outputSize:u}=S.calculateShapes(s,n,o.shape),p=!1,m=e.bufferSync(n),f=e.bufferSync(s),h=e.bufferSync(o),d=Xo(m,f,o.shape,u,l,a,i,c,h,p);return e.makeTensorInfo(o.shape,d.dtype,d.values)}var d$={kernelName:yh,backendName:"cpu",kernelFunc:NK};function TK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reps:s}=o;X(n,"tile");let i=jg(e.bufferSync(n),s);return e.makeTensorInfo(i.shape,i.dtype,i.values)}var g$={kernelName:nn,backendName:"cpu",kernelFunc:TK};function kK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{k:s,sorted:i}=o;X(n,"topk");let a=e.data.get(n.dataId).values,[l,c]=Xg(a,n.shape,n.dtype,s,i);return[e.makeTensorInfo(l.shape,l.dtype,l.values),e.makeTensorInfo(c.shape,c.dtype,c.values)]}var x$={kernelName:wc,backendName:"cpu",kernelFunc:kK};function EK(r){let{inputs:t,attrs:e,backend:o}=r,{image:n,transforms:s}=t,{interpolation:i,fillMode:a,fillValue:l,outputShape:c}=e,[u,p,m,f]=n.shape,[h,d]=c??[p,m],g=[u,h,d,f],x=y.computeStrides(n.shape),b=x[0],C=x[1],w=x[2],I=y.computeStrides(g),E=I[0],A=I[1],$=I[2],_=y.getTypedArrayFromDType(n.dtype,y.sizeFromShape(g));_.fill(l);let L=o.data.get(n.dataId).values,M=o.data.get(s.dataId).values;for(let G=0;G<u;++G){let W=s.shape[0]===1?M:M.subarray(G*8,G*8+8);for(let U=0;U<h;++U)for(let K=0;K<d;++K)for(let Z=0;Z<f;++Z){let q,J=W[6]*K+W[7]*U+1;if(J===0)continue;let rt=(W[0]*K+W[1]*U+W[2])/J,ot=(W[3]*K+W[4]*U+W[5])/J,it=y$(rt,m,a),st=y$(ot,p,a);switch(i){case"nearest":q=FK(L,p,m,b,C,w,G,st,it,Z,l);break;case"bilinear":q=_K(L,p,m,b,C,w,G,st,it,Z,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let pt=G*E+U*A+K*$+Z;_[pt]=q}return o.makeTensorInfo(g,n.dtype,_)}return{dataId:o.write(_,g,n.dtype),shape:n.shape,dtype:n.dtype}}var b$={kernelName:Cc,backendName:"cpu",kernelFunc:EK};function y$(r,t,e){switch(e){case"reflect":return AK(r,t);case"wrap":return $K(r,t);case"nearest":return RK(r,t);case"constant":default:return DK(r,t)}}function AK(r,t){let e=r;if(e<0)if(t<=1)e=0;else{let o=2*t;e<o&&(e=o*Math.trunc(-e/o)+e),e=e<-t?e+o:-e-1}else if(e>t-1)if(t<=1)e=0;else{let o=2*t;e-=o*Math.trunc(e/o),e>=t&&(e=o-e-1)}return y.clamp(0,e,t-1)}function $K(r,t){let e=r;if(e<0)if(t<=1)e=0;else{let o=t-1;e+=t*(Math.trunc(-e/o)+1)}else if(e>t-1)if(t<=1)e=0;else{let o=t-1;e-=t*Math.trunc(e/o)}return y.clamp(0,e,t-1)}function DK(r,t){return r}function RK(r,t){return y.clamp(0,r,t-1)}function Mf(r,t,e,o,n,s,i,a,l,c,u){let p=i*o+a*n+l*s+c;return 0<=a&&a<t&&0<=l&&l<e?r[p]:u}function FK(r,t,e,o,n,s,i,a,l,c,u){let p=Math.round(a),m=Math.round(l);return Mf(r,t,e,o,n,s,i,p,m,c,u)}function _K(r,t,e,o,n,s,i,a,l,c,u){let p=Math.floor(a),m=Math.floor(l),f=p+1,h=m+1,d=(h-l)*Mf(r,t,e,o,n,s,i,p,m,c,u)+(l-m)*Mf(r,t,e,o,n,s,i,p,h,c,u),g=(h-l)*Mf(r,t,e,o,n,s,i,f,m,c,u)+(l-m)*Mf(r,t,e,o,n,s,i,f,h,c,u);return(f-a)*d+(a-p)*g}function OK(r){let{inputs:t,attrs:e,backend:o}=r,{axis:n}=e,{x:s}=t;X(s,"unique");let i=o.data.get(s.dataId).values,{outputValues:a,outputShape:l,indices:c}=Yg(i,n,s.shape,s.dtype);return[o.makeTensorInfo(l,s.dtype,a),o.makeTensorInfo([c.length],"int32",c)]}var w$={kernelName:Ic,backendName:"cpu",kernelFunc:OK};function LK(r){let{inputs:t,backend:e,attrs:o}=r,{value:n}=t,{axis:s}=o;s<0&&(s+=n.shape.length);let i=n.shape.length,a=n.shape[s],l=new Array(i-1),c=0;for(let f=0;f<i;f++)f!==s&&(l[c++]=n.shape[f]);let u=new Array(i).fill(0),p=n.shape.slice();p[s]=1;let m=new Array(a);for(let f=0;f<m.length;f++){u[s]=f;let h=Do({inputs:{x:n},backend:e,attrs:{begin:u,size:p}});m[f]=Lt({inputs:{x:h},backend:e,attrs:{shape:l}}),e.disposeIntermediateTensorInfo(h)}return m}var C$={kernelName:Ui,backendName:"cpu",kernelFunc:LK};function PK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,segmentIds:s}=t,{numSegments:i}=o;X(n,"unsortedSegmentSum");let a=n.shape.length,l=s.shape.length,c=[],u=[],p=a-l,m=s;for(let h=0;h<p;++h){let d=Bu({inputs:{input:m},backend:e,attrs:{dim:h+1}});m=d,u.push(d)}for(let h=0;h<i;++h){let d=y.createScalarValue(h,"int32"),g=e.makeTensorInfo([],"int32",d),x=Xw({inputs:{a:g,b:m},backend:e}),b=Ao({inputs:{x},backend:e,attrs:{dtype:"float32"}}),C=wl({inputs:{a:b,b:n},backend:e}),w=Gs({inputs:{x:C},backend:e,attrs:{axis:0,keepDims:!1}});c.push(w),u.push(g),u.push(x),u.push(b),u.push(C),u.push(w)}let f=DC({inputs:c,backend:e,attrs:{axis:0}});return u.forEach(h=>e.disposeIntermediateTensorInfo(h)),f}var I$={kernelName:Wi,backendName:"cpu",kernelFunc:PK};var zK=[KE,eE,jE,XE,iE,YE,ZE,JE,QE,tA,eA,rA,oA,nA,sA,aA,lA,cA,uA,qE,pA,mA,fA,aE,hA,sE,lE,dA,rE,gA,yA,bA,wA,CA,IA,SA,vA,NA,TA,kA,EA,AA,$A,DA,RA,FA,_A,OA,LA,PA,zA,BA,VA,ME,GA,cE,UA,uE,WA,pE,HA,qA,KA,mE,fE,jA,XA,YA,ZA,hE,dE,oE,JA,xA,QA,t2,e2,VE,gE,xE,r2,yE,o2,n2,s2,i2,a2,l2,c2,bE,u2,p2,m2,f2,d2,g2,x2,wE,y2,b2,I2,CE,IE,S2,v2,N2,SE,T2,A2,$2,tx,D2,GE,NE,R2,F2,_2,O2,nE,Pf,L2,UE,WE,HE,P2,z2,B2,M2,V2,G2,U2,$E,W2,q2,K2,j2,RE,X2,Y2,Z2,FE,w2,Q2,t$,e$,r$,o$,n$,s$,i$,OE,a$,LE,PE,l$,c$,u$,p$,m$,zE,MA,f$,h$,d$,g$,x$,b$,vE,w$,C$,I$,k2];for(let r of zK)Ah(r);var Il={},ex={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function S$(r,t){Il[r]=t}function Xr(r,t){if(!(r in Il)||t!=null){let o=MK(r,t);if(o!==null)Il[r]=o;else return console.log("Could not get context for WebGL version",r),null}let e=Il[r];return e==null||e.isContextLost()?(delete Il[r],Xr(r)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Il[r])}function BK(r){if(!P().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&r===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function MK(r,t){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let e=t??BK(r);return e.addEventListener("webglcontextlost",o=>{o.preventDefault(),delete Il[r]},!1),P().getBool("SOFTWARE_WEBGL_ENABLED")&&(ex.failIfMajorPerformanceCaveat=!1),r===1?e.getContext("webgl",ex)||e.getContext("experimental-webgl",ex):e.getContext("webgl2",ex)}var pa;(function(r){r[r.DENSE=0]="DENSE",r[r.SHARED_BATCH=1]="SHARED_BATCH"})(pa||(pa={}));var ur;(function(r){r[r.RENDER=0]="RENDER",r[r.UPLOAD=1]="UPLOAD",r[r.PIXELS=2]="PIXELS",r[r.DOWNLOAD=3]="DOWNLOAD"})(ur||(ur={}));var er;(function(r){r[r.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",r[r.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",r[r.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",r[r.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",r[r.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(er||(er={}));function Sl(r,t){return[t,r]}function v$(r,t){return r*t}function Vf(r){let t=y.sizeFromShape(r),e=Math.ceil(t/4);return y.sizeToSquarishShape(e)}function Nn(r,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(r/2))]}function N$(r,t){let[e,o]=Nn(r,t);return e*o*4}function Gf(r,t){let e=r,o,n,s,i,a,l,c,u,p,m;return P().getNumber("WEBGL_VERSION")===2?(o=e.R32F,n=e.R16F,s=e.RGBA16F,i=e.RGBA32F,a=e.RED,c=4,u=1,p=e.HALF_FLOAT,m=e.FLOAT,l=e.RGBA8):(o=r.RGBA,n=r.RGBA,s=r.RGBA,i=e.RGBA,a=r.RGBA,c=4,u=4,p=t!=null?t.HALF_FLOAT_OES:null,m=r.FLOAT,l=r.RGBA),{internalFormatFloat:o,internalFormatHalfFloat:n,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:p,textureTypeFloat:m}}function mt(r,t){let e=t();return P().getBool("DEBUG")&&VK(r),e}function VK(r){let t=r.getError();if(t!==r.NO_ERROR)throw new Error("WebGL Error: "+WK(r,t))}var GK=596e-10,UK=65504;function T$(r){return!!(P().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||GK<Math.abs(r)&&Math.abs(r)<UK)}function WK(r,t){switch(t){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Uf(r,t){return Us(r,()=>r.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function k$(r,t){let e=Us(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(mt(r,()=>r.shaderSource(e,t)),mt(r,()=>r.compileShader(e)),r.getShaderParameter(e,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function E$(r,t){let e=Us(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(mt(r,()=>r.shaderSource(e,t)),mt(r,()=>r.compileShader(e)),P().get("ENGINE_COMPILE_ONLY"))return e;if(r.getShaderParameter(e,r.COMPILE_STATUS)===!1)throw LC(t,r.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}var HK=/ERROR: [0-9]+:([0-9]+):/g;function LC(r,t){let e=HK.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(r);return}let o=+e[1],n=r.split(`
`),s=n.length.toString().length+2,i=n.map((p,m)=>y.rightPad((m+1).toString(),s)+p),a=0;for(let p=0;p<i.length;p++)a=Math.max(i[p].length,a);let l=i.slice(0,o-1),c=i.slice(o-1,o),u=i.slice(o);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${y.rightPad(c[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function A$(r){return Us(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function $$(r,t){if(mt(r,()=>r.linkProgram(t)),!P().get("ENGINE_COMPILE_ONLY")&&r.getProgramParameter(t,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function ox(r,t){if(mt(r,()=>r.validateProgram(t)),r.getProgramParameter(t,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function D$(r,t){let e=Us(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return mt(r,()=>r.bindBuffer(r.ARRAY_BUFFER,e)),mt(r,()=>r.bufferData(r.ARRAY_BUFFER,t,r.STATIC_DRAW)),e}function R$(r,t){let e=Us(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return mt(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e)),mt(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,t,r.STATIC_DRAW)),e}function F$(r){return Us(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function _$(r,t){let e=P().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||t<=0){let o=`[${r}x${t}]`;throw new Error("Requested texture size "+o+" is invalid.")}if(r>e||t>e){let o=`[${r}x${t}]`,n=`[${e}x${e}]`;throw new Error("Requested texture size "+o+" greater than WebGL maximum on this browser / GPU "+n+".")}}function O$(r){return Us(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function PC(r,t,e,o,n,s,i){let a=r.getAttribLocation(t,e);return a===-1?!1:(mt(r,()=>r.bindBuffer(r.ARRAY_BUFFER,o)),mt(r,()=>r.vertexAttribPointer(a,n,r.FLOAT,!1,s,i)),mt(r,()=>r.enableVertexAttribArray(a)),!0)}function qK(r,t,e){jK(r,e),mt(r,()=>r.activeTexture(r.TEXTURE0+e)),mt(r,()=>r.bindTexture(r.TEXTURE_2D,t))}function L$(r,t,e){return Us(r,()=>r.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function P$(r,t,e){return r.getUniformLocation(t,e)}function z$(r,t,e,o){mt(r,()=>qK(r,t,o)),mt(r,()=>r.uniform1i(e,o))}function nx(r,t,e){mt(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),mt(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0))}function zC(r,t){mt(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),mt(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function Wf(r){let t=r.checkFramebufferStatus(r.FRAMEBUFFER);if(t!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+KK(r,t))}function KK(r,t){switch(t){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Us(r,t,e){let o=mt(r,()=>t());if(o==null)throw new Error(e);return o}function jK(r,t){let e=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,o=t+r.TEXTURE0;if(o<r.TEXTURE0||o>e){let n=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${n}.`)}}function ma(r,t=2){return y.sizeFromShape(r.slice(0,r.length-t))}function fa(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function Hf(r){let t=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(t=[ma(r),...fa(r)]),t}function B$(r,t=!1){let e=P().getNumber("WEBGL_MAX_TEXTURE_SIZE"),o=P().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");o===1/0&&P().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(o=e/2),t&&(e=e*2,o=o*2,r=r.map((a,l)=>l>=r.length-2?y.nearestLargerEven(r[l]):r[l]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=y.squeezeShape(r).newShape);let n=y.sizeFromShape(r),s=null;r.length<=1&&n<=e?s=[1,n]:r.length===2&&r[0]<=e&&r[1]<=e?s=r:r.length===3&&r[0]*r[1]<=e&&r[2]<=e?s=[r[0]*r[1],r[2]]:r.length===3&&r[0]<=e&&r[1]*r[2]<=e?s=[r[0],r[1]*r[2]]:r.length===4&&r[0]*r[1]*r[2]<=e&&r[3]<=e?s=[r[0]*r[1]*r[2],r[3]]:r.length===4&&r[0]<=e&&r[1]*r[2]*r[3]<=e&&(s=[r[0],r[1]*r[2]*r[3]]);let i=s!=null&&Math.max(...s)>o&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(s==null||i)if(t){let a=ma(r),l=2,c=2;r.length&&([l,c]=fa(r)),n=a*(l/2)*(c/2),s=y.sizeToSquarishShape(n).map(u=>u*2)}else s=y.sizeToSquarishShape(n);return s}function rx(r){return r%2===0}function vl(r,t){if(r=r.slice(-2),t=t.slice(-2),y.arraysEqual(r,t)||!r.length||!t.length||r[0]===0||r[1]===0||t[0]===0||t[1]===0)return!0;if(r.length!==t.length){let e=r[r.length-1],o=t[t.length-1];if(e===o||rx(e)&&rx(o)&&(r[0]===1||t[0]===1))return!0}return r[1]===t[1]&&rx(r[0])&&rx(t[0])}var FC,_C;function M$(r){if(FC==null){let t=Xr(r);FC=t.getParameter(t.MAX_TEXTURE_SIZE)}return FC}function V$(r){if(_C==null){let t=Xr(r);_C=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,_C)}function G$(r){if(r===0)return 0;let t,e=Xr(r);return lo(e,"EXT_disjoint_timer_query_webgl2")&&r===2?t=2:lo(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function lo(r,t){return r.getExtension(t)!=null}function BC(r){try{if(Xr(r)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function U$(r){if(r===0)return!1;let t=Xr(r);if(r===1){if(!lo(t,"OES_texture_float"))return!1}else if(!lo(t,"EXT_color_buffer_float"))return!1;return OC(t)}function W$(r){if(r===0)return!1;let t=Xr(r);if(r===1){if(!lo(t,"OES_texture_float")||!lo(t,"WEBGL_color_buffer_float"))return!1}else{if(lo(t,"EXT_color_buffer_float"))return OC(t);let o="EXT_color_buffer_half_float";if(lo(t,o)){let n=t.getExtension(o);return XK(t,n)}return!1}return OC(t)}function OC(r){let t=Gf(r),e=r.createTexture();r.bindTexture(r.TEXTURE_2D,e),r.texImage2D(r.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0);let i=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(e),r.deleteFramebuffer(s),i}function XK(r,t){let e=Gf(r,t),o=r.createTexture();r.bindTexture(r.TEXTURE_2D,o),r.texImage2D(r.TEXTURE_2D,0,e.internalFormatHalfFloat,1,1,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);let i=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,i),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,o,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(o),r.deleteFramebuffer(i),a}function H$(r){return r!==2?!1:Xr(r).fenceSync!=null}function Tn(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&y.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var yt=P();yt.registerFlag("HAS_WEBGL",()=>yt.getNumber("WEBGL_VERSION")>0);yt.registerFlag("WEBGL_VERSION",()=>BC(2)?2:BC(1)?1:0);yt.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);yt.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>yt.get("WEBGL_VERSION")===2);yt.registerFlag("WEBGL_CPU_FORWARD",()=>!0);yt.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);yt.registerFlag("WEBGL_PACK",()=>yt.getBool("HAS_WEBGL"));yt.registerFlag("WEBGL_PACK_NORMALIZATION",()=>yt.getBool("WEBGL_PACK"));yt.registerFlag("WEBGL_PACK_CLIP",()=>yt.getBool("WEBGL_PACK"));yt.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>yt.getBool("WEBGL_PACK"));yt.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>yt.getBool("WEBGL_PACK"));yt.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>yt.getBool("WEBGL_PACK"));yt.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>yt.getBool("WEBGL_PACK"));yt.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>yt.getBool("WEBGL_PACK"));yt.registerFlag("WEBGL_PACK_REDUCE",()=>yt.getBool("WEBGL_PACK"));yt.registerFlag("WEBGL_LAZILY_UNPACK",()=>yt.getBool("WEBGL_PACK"));yt.registerFlag("WEBGL_CONV_IM2COL",()=>yt.getBool("WEBGL_PACK"));yt.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>yt.getBool("WEBGL_PACK"));yt.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>M$(yt.getNumber("WEBGL_VERSION")));yt.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>V$(yt.getNumber("WEBGL_VERSION")));yt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=yt.getNumber("WEBGL_VERSION");return r===0?0:G$(r)});yt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>yt.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ji.isMobile());yt.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>U$(yt.getNumber("WEBGL_VERSION")));yt.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>yt.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:yt.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));yt.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>W$(yt.getNumber("WEBGL_VERSION")));yt.registerFlag("WEBGL_FENCE_API_ENABLED",()=>H$(yt.getNumber("WEBGL_VERSION")));yt.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>yt.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);yt.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(typeof r!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${r}.`);if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});yt.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>ji.isMobile()?1:-1,r=>{if(typeof r!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${r}.`);if(r<0&&r!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${r}.`)});yt.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);yt.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);yt.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);yt.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);yt.registerFlag("WEBGL_EXP_CONV",()=>!1);yt.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>yt.getBool("IS_TEST"));yt.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);yt.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);yt.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);yt.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function xe(){let r,t,e,o,n,s,i,a,l,c;return P().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",t="in",e="out",o="in",n="texture",s="outputColor",i="out vec4 outputColor;",a=P().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",t="attribute",e="varying",o="varying",n="texture2D",s="gl_FragColor",i="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:t,varyingVs:e,varyingFs:o,texture2D:n,output:s,defineOutput:i,defineSpecialNaN:a,defineSpecialInf:l,defineRound:c}}function Yo(r,t,e="index"){let o=y.computeStrides(t);return o.map((n,s)=>{let i=`int ${r[s]} = ${e} / ${n}`,a=s===o.length-1?`int ${r[s+1]} = ${e} - ${r[s]} * ${n}`:`index -= ${r[s]} * ${n}`;return`${i}; ${a};`}).join("")}function Nl(r,t,e="index"){let o=y.computeStrides(t);return o.map((n,s)=>{let i=`int ${r[s]} = ${e} / outShapeStrides[${s}]`,a=s===o.length-1?`int ${r[s+1]} = ${e} - ${r[s]} * outShapeStrides[${s}]`:`index -= ${r[s]} * outShapeStrides[${s}]`;return`${i}; ${a};`}).join("")}function YK(r,t){let e=r.length,o=r.map(s=>`${t}[${s}]`),n=new Array(e-1);n[e-2]=o[e-1];for(let s=e-3;s>=0;--s)n[s]=`(${n[s+1]} * ${o[s+1]})`;return n}function q$(r,t,e="index"){let o=r.map((s,i)=>i),n=YK(o,t);return n.map((s,i)=>{let a=`int ${r[i]} = ${e} / ${n[i]}`,l=i===n.length-1?`int ${r[i+1]} = ${e} - ${r[i]} * ${n[i]}`:`index -= ${r[i]} * ${n[i]}`;return`${a}; ${l};`}).join("")}function Mu(r){let t=y.computeStrides(r).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Vu(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var ix=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var{getBroadcastDims:K$}=S;function j$(r,t,e){let o=[];if(r.forEach(f=>{let h=y.sizeFromShape(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?o.push(`uniform float ${f.name}${h>1?`[${h}]`:""};`):(o.push(`uniform sampler2D ${f.name};`),o.push(`uniform int offset${f.name};`)),e.enableShapeUniforms){let{uniformShape:d}=ax(e.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(d.length){case 1:o.push(`uniform int ${f.name}Shape;`);break;case 2:o.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:o.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:o.push(`uniform ivec4 ${f.name}Shape;`);break;default:break}o.push(`uniform ivec2 ${f.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:o.push("uniform int outShape;");break;case 2:o.push("uniform ivec2 outShape;"),o.push("uniform int outShapeStrides;");break;case 3:o.push("uniform ivec3 outShape;"),o.push("uniform ivec2 outShapeStrides;");break;case 4:o.push("uniform ivec4 outShape;"),o.push("uniform ivec3 outShapeStrides;");break;default:break}o.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(f=>{o.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});let n=o.join(`
`),s=r.map(f=>ZK(f,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),i=t.texShape,a=xe(),l=tj(a),c,u,p=oj(a);return t.isPacked?(c=JK(t.logicalShape,i,e.enableShapeUniforms),u=rj(a)):(c=QK(t.logicalShape,i,e.enableShapeUniforms),u=ej(a)),e.packedInputs&&(p+=aj),[p,l,u,n,c,s,e.userCode].join(`
`)}function Uu(r,t=!1){let e=r.shapeInfo.logicalShape;switch(e.length){case 0:return bj(r,t);case 1:return Cj(r,t);case 2:return Sj(r,t);case 3:return Nj(r,t);case 4:return kj(r,t);case 5:return Ej(r);case 6:return Aj(r);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function X$(r,t){switch(r.shapeInfo.logicalShape.length){case 0:return yj(r);case 1:return wj(r,t);case 2:return Ij(r,t);case 3:return vj(r,t);default:return Tj(r,t)}}function ZK(r,t,e=!1,o){let n="";e?n+=X$(r,o):n+=Uu(r,o);let s=r.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(e?n+=$j(r,t):n+=Dj(r,t)),n}function JK(r,t,e){switch(r.length){case 0:return Y$();case 1:return lj(r,t,e);case 2:return gj(r,t,e);case 3:return uj(r,t,e);default:return mj(r,t,e)}}function QK(r,t,e){switch(r.length){case 0:return Y$();case 1:return cj(r,t,e);case 2:return xj(r,t,e);case 3:return pj(r,t,e);case 4:return fj(r,t,e);case 5:return hj(r,t);case 6:return dj(r,t);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function tj(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function ej(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function rj(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function oj(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${nj}
    ${sj}
    ${ij}
  `}var nj=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,sj=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,ij=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,aj=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function Y$(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function lj(r,t,e){let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return o[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${o[1]}.0);
      }
    `:o[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${o[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));
      return 2 * (resTexRC.x * ${o[1]} + resTexRC.y);
    }
  `}function cj(r,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function uj(r,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],n=Math.ceil(r[2]/2),s=n*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));
      int index = resTexRC.x * ${o[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec3(b, r, c);
    }
  `}function pj(r,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Nl(["r","c","d"],r)}
    return ivec3(r, c, d);
  }
`;let o=Yo(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${o}
      return ivec3(r, c, d);
    }
  `}function mj(r,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],n=Math.ceil(r[r.length-1]/2),s=n*Math.ceil(r[r.length-2]/2),i=s,a="",l="b, r, c";for(let c=2;c<r.length-1;c++)i*=r[r.length-c-1],a=`
      int b${c} = index / ${i};
      index -= b${c} * ${i};
    `+a,l=`b${c}, `+l;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));
      int index = resTexRC.x * ${o[1]} + resTexRC.y;

      ${a}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec${r.length}(${l});
    }
  `}function fj(r,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Nl(["r","c","d","d2"],r)}
      return ivec4(r, c, d, d2);
    }
  `;let o=Yo(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${o}
      return ivec4(r, c, d, d2);
    }
  `}function hj(r,t){let e=Yo(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function dj(r,t){let e=Yo(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function gj(r,t,e){let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(y.arraysEqual(r,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${o[0]}, ${o[1]}));
      }
    `;let n=Math.ceil(r[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));

      int index = resTexRC.x * ${o[1]} + resTexRC.y;
      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec2(r, c);
    }
  `}function xj(r,t,e){return y.arraysEqual(r,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:r[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function Tl(r){return`offset${r}`}function yj(r){let t=r.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),o=xe();return`
    vec4 ${e}() {
      return ${o.texture2D}(${t}, halfCR);
    }
  `}function bj(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`float ${o}() {return ${e};}`;let[n,s]=r.shapeInfo.texShape;if(n===1&&s===1)return`
      float ${o}() {
        return sampleTexture(${e}, halfCR);
      }
    `;let i=Tl(e);if(t)return`
    float ${o}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${i});
      return sampleTexture(${e}, uv);
    }
  `;let[a,l]=r.shapeInfo.texShape;return`
    float ${o}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${i});
      return sampleTexture(${e}, uv);
    }
  `}function wj(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),n=r.shapeInfo.texShape,s=xe();if(t)return`
    vec4 ${o}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${e}, uv);
    }
  `;let i=[Math.ceil(n[0]/2),Math.ceil(n[1]/2)];return`
    vec4 ${o}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${s.texture2D}(${e}, uv);
    }
  `}function Cj(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`
      float ${o}(int index) {
        ${Wu(r)}
      }
    `;let n=r.shapeInfo.texShape,s=n[0],i=n[1];if(i===1&&s===1)return`
      float ${o}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;let a=Tl(e);return i===1?t?`
      float ${o}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${o}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${s}.0);
        return sampleTexture(${e}, uv);
      }
    `:s===1?t?`
      float ${o}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${o}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${o}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${a});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${o}(int index) {
      vec2 uv = uvFromFlat(${s}, ${i}, index + ${a});
      return sampleTexture(${e}, uv);
    }
  `}function Ij(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),s=r.shapeInfo.texShape,i=s[0],a=s[1],l=xe();if(s!=null&&y.arraysEqual(e,s))return t?`
      vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}TexShape[1], ${o}TexShape[0]);

        return ${l.texture2D}(${o}, uv);
      }
    `:`
      vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);

        return ${l.texture2D}(${o}, uv);
      }
    `;if(t)return`
    vec4 ${n}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${o}TexShape[0]) / 2.0), ceil(float(${o}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${o}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${o}, uv);
    }
  `;let c=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],u=Math.ceil(e[1]/2);return`
    vec4 ${n}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${c[0]}, ${c[1]}, row, col);
      return ${l.texture2D}(${o}, uv);
    }
  `}function Sj(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),s=r.shapeInfo.texShape;if(s!=null&&y.arraysEqual(e,s)){if(t)return`
      float ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `;let m=s[0],f=s[1];return`
    float ${n}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${m}.0);
      return sampleTexture(${o}, uv);
    }
  `}let{newShape:i,keptDims:a}=y.squeezeShape(e),l=i;if(l.length<e.length){let m=Hu(r,l),f=["row","col"];return`
      ${Uu(m,t)}
      float ${n}(int row, int col) {
        return ${n}(${qu(f,a)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${Wu(r)}
      }
    `;let c=s[0],u=s[1],p=Tl(o);return u===1?t?`
      float ${n}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${o}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${o}TexShape[0]));
        return sampleTexture(${o}, uv);
      }
    `:`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${o}, uv);
    }
  `:c===1?t?`
      float ${n}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${o}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${o}TexShape[1]), 0.5);
        return sampleTexture(${o}, uv);
      }
    `:`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${o}, uv);
    }
  `:t?`
      float ${n}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o}Shape[1] + col + ${p};
        vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], index);
        return sampleTexture(${o}, uv);
      }
    `:`
  float ${n}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${p};
    vec2 uv = uvFromFlat(${c}, ${u}, index);
    return sampleTexture(${o}, uv);
  }
`}function vj(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),s=r.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(e[0]===1){let m=e.slice(1),f=[1,2],h=Hu(r,m),d=["b","row","col"];return`
        ${X$(h,t)}
        vec4 ${n}(int b, int row, int col) {
          return ${n}(${qu(d,f)});
        }
      `}let a=xe();if(t)return`
    vec4 ${n}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${o}TexShape[0]) / 2.0), ceil(float(${o}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${o}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${o}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${o}, uv);
    }
  `;let l=i[0],c=i[1],u=Math.ceil(e[2]/2),p=u*Math.ceil(e[1]/2);return`
    vec4 ${n}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${c}, ${p}, ${u}, b, row, col);
      return ${a.texture2D}(${o}, uv);
    }
  `}function Nj(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),s=e[1]*e[2],i=e[2],{newShape:a,keptDims:l}=y.squeezeShape(e),c=a;if(c.length<e.length){let d=Hu(r,c),g=["row","col","depth"];return`
        ${Uu(d,t)}
        float ${n}(int row, int col, int depth) {
          return ${n}(${qu(g,l)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${i}, 1)));
        ${Wu(r)}
      }
    `;let u=r.shapeInfo.texShape,p=u[0],m=u[1],f=r.shapeInfo.flatOffset;if(m===s&&f==null)return t?`
      float ${n}(int row, int col, int depth) {
        int stride1 = ${o}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
        float ${n}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${m}.0, ${p}.0);
          return sampleTexture(${o}, uv);
        }
      `;if(m===i&&f==null)return t?`
      float ${n}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${o}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
    float ${n}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${m}.0, ${p}.0);
      return sampleTexture(${o}, uv);
    }
  `;let h=Tl(o);return t?`
    float ${n}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${o}Shape[1] * ${o}Shape[2];
      int stride1 = ${o}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${h};
      vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], index);
      return sampleTexture(${o}, uv);
    }
    `:`
      float ${n}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${i} + depth + ${h};
        vec2 uv = uvFromFlat(${p}, ${m}, index);
        return sampleTexture(${o}, uv);
      }
  `}function Tj(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),n=xe();if(t)return`
    vec4 ${o}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${n.texture2D}(${e}, uv);
    }
  `;let s=r.shapeInfo.logicalShape,i=s.length,a=r.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=l[0],u=l[1],p=Math.ceil(s[i-1]/2),m=p*Math.ceil(s[i-2]/2),f="int b, int row, int col",h=`b * ${m} + (row / 2) * ${p} + (col / 2)`;for(let d=2;d<i-1;d++)f=`int b${d}, `+f,m*=s[i-d-1],h=`b${d} * ${m} + `+h;return`
    vec4 ${o}(${f}) {
      int index = ${h};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${c});
      return ${n.texture2D}(${e}, uv);
    }
  `}function kj(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),s=e[3],i=e[2]*s,a=e[1]*i,{newShape:l,keptDims:c}=y.squeezeShape(e);if(l.length<e.length){let b=Hu(r,l),C=["row","col","depth","depth2"];return`
      ${Uu(b,t)}
      float ${n}(int row, int col, int depth, int depth2) {
        return ${n}(${qu(C,c)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${i}, ${s}, 1)));
        ${Wu(r)}
      }
    `;let u=r.shapeInfo.flatOffset,p=r.shapeInfo.texShape,m=p[0],f=p[1],h=`int stride2 = ${o}Shape[3];`,d=`int stride1 = ${o}Shape[2] * stride2;`,g=`int stride0 = ${o}Shape[1] * stride1;`;if(f===a&&u==null)return t?`
      float ${n}(int row, int col, int depth, int depth2) {
        ${h}
        ${d}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${o}, uv);
      }
    `;if(f===s&&u==null)return t?`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${o}Shape[1] * ${o}Shape[2], ${o}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${o}, uv);
      }
    `;let x=Tl(o);return t?`
    float ${n}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${h}
      ${d}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], index + ${x});
      return sampleTexture(${o}, uv);
    }
  `:`
    float ${n}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${m}, ${f}, index + ${x});
      return sampleTexture(${o}, uv);
    }
  `}function Ej(r){let t=r.shapeInfo.logicalShape,e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),n=t[4],s=t[3]*n,i=t[2]*s,a=t[1]*i,{newShape:l,keptDims:c}=y.squeezeShape(t);if(l.length<t.length){let d=Hu(r,l),g=["row","col","depth","depth2","depth3"];return`
      ${Uu(d)}
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        return ${o}(${qu(g,c)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${i}, ${s}, ${n})) +
          depth3;
        ${Wu(r)}
      }
    `;let u=r.shapeInfo.flatOffset,p=r.shapeInfo.texShape,m=p[0],f=p[1];if(f===a&&u==null)return`
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${s}, ${n}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(f===n&&u==null)return`
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;let h=Tl(e);return`
    float ${o}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} + depth * ${s} +
          depth2 * ${n} + depth3 + ${h};
      vec2 uv = uvFromFlat(${m}, ${f}, index);
      return sampleTexture(${e}, uv);
    }
  `}function Aj(r){let t=r.shapeInfo.logicalShape,e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:n,keptDims:s}=y.squeezeShape(t);if(n.length<t.length){let g=Hu(r,n),x=["row","col","depth","depth2","depth3","depth4"];return`
      ${Uu(g)}
      float ${o}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${o}(${qu(x,s)});
      }
    `}let i=t[5],a=t[4]*i,l=t[3]*a,c=t[2]*l,u=t[1]*c;if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${c}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${Wu(r)}
      }
    `;let p=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,f=m[0],h=m[1];if(h===u&&p==null)return`
      float ${o}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${a}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${f}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(h===i&&p==null)return`
      float ${o}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${f}.0);
        return sampleTexture(${e}, uv);
      }
    `;let d=Tl(e);return`
    float ${o}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} + depth * ${l} +
          depth2 * ${a} + depth3 * ${i} + depth4 + ${d};
      vec2 uv = uvFromFlat(${f}, ${h}, index);
      return sampleTexture(${e}, uv);
    }
  `}function Wu(r){let t=r.name,e=y.sizeFromShape(r.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function $j(r,t){let e=r.name,o=e.charAt(0).toUpperCase()+e.slice(1),n="get"+o+"AtOutCoords",s=r.shapeInfo.logicalShape.length,i=t.logicalShape.length,a=K$(r.shapeInfo.logicalShape,t.logicalShape),l=At(i),c=i-s,u,p=["x","y","z","w","u","v"];s===0?u="":i<2&&a.length>=1?u="coords = 0;":u=a.map(b=>`coords.${p[b+c]} = 0;`).join(`
`);let m="";i<2&&s>0?m="coords":m=r.shapeInfo.logicalShape.map((b,C)=>`coords.${p[C+c]}`).join(", ");let f="return outputValue;",d=y.sizeFromShape(r.shapeInfo.logicalShape)===1,x=y.sizeFromShape(t.logicalShape)===1;if(s===1&&!d&&!x)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(d&&!x)i===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(a.length){let b=s-2,C=s-1;a.indexOf(b)>-1&&a.indexOf(C)>-1?f="return vec4(outputValue.x);":a.indexOf(b)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(C)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${n}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${o}(${m});
      ${f}
    }
  `}function Dj(r,t){let e=r.name,o=e.charAt(0).toUpperCase()+e.slice(1),n="get"+o+"AtOutCoords",s=t.texShape,i=r.shapeInfo.texShape,a=r.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!r.shapeInfo.isUniform&&a===l&&r.shapeInfo.flatOffset==null&&y.arraysEqual(i,s))return`
      float ${n}() {
        return sampleTexture(${e}, resultUV);
      }
    `;let c=At(l),u=K$(r.shapeInfo.logicalShape,t.logicalShape),p=l-a,m,f=["x","y","z","w","u","v"];a===0?m="":l<2&&u.length>=1?m="coords = 0;":m=u.map(d=>`coords.${f[d+p]} = 0;`).join(`
`);let h="";return l<2&&a>0?h="coords":h=r.shapeInfo.logicalShape.map((d,g)=>`coords.${f[g+p]}`).join(", "),`
    float ${n}() {
      ${c} coords = getOutputCoords();
      ${m}
      return get${o}(${h});
    }
  `}function At(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function ax(r,t,e){let{newShape:o,keptDims:n}=y.squeezeShape(t),s=t.length,i=r&&s===3&&t[0]===1,a=i?t.slice(1):o,l=!r&&s>1&&!y.arraysEqual(t,e)&&o.length<s||i;return{useSqueezeShape:l,uniformShape:l?a:t,keptDims:n}}function Hu(r,t){let e=JSON.parse(JSON.stringify(r));return e.shapeInfo.logicalShape=t,e}function qu(r,t){return t.map(e=>r[e]).join(", ")}function J$(r,t,e,o){let n=e.map((u,p)=>{let m={logicalShape:u.shape,texShape:u.isUniform?null:u.texData.texShape,isUniform:u.isUniform,isPacked:u.isUniform?!1:u.texData.isPacked,flatOffset:null};return u.texData!=null&&u.texData.slice!=null&&u.texData.slice.flatOffset>0&&(m.flatOffset=u.texData.slice.flatOffset),{name:t.variableNames[p],shapeInfo:m}}),s=n.map(u=>u.shapeInfo),i={logicalShape:o.shape,texShape:o.texData.texShape,isUniform:!1,isPacked:o.texData.isPacked,flatOffset:null},a=j$(n,i,t),l=E$(r.gl,a),c=r.createProgram(l);return P().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:s,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(r.buildVao(c),Object.assign({program:t,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:s,outShapeInfo:i},MC(r,t,c)))}function MC(r,t,e){let o=[],n=[],s,i,a,l=null,c=null;c=r.getUniformLocation(e,"NAN",!1),P().getNumber("WEBGL_VERSION")===1&&(l=r.getUniformLocation(e,"INFINITY",!1));let u=!1;for(let p of t.variableNames){let m={name:p,uniform:r.getUniformLocation(e,p,u),offset:r.getUniformLocation(e,`offset${p}`,u)};t.enableShapeUniforms&&(m.shape=r.getUniformLocation(e,`${p}Shape`,u),m.texShape=r.getUniformLocation(e,`${p}TexShape`,u)),o.push(m)}if(t.enableShapeUniforms&&(s=r.getUniformLocation(e,"outShape",u),a=r.getUniformLocation(e,"outShapeStrides",u),i=r.getUniformLocation(e,"outTexShape",u)),t.customUniforms)for(let p of t.customUniforms)n.push(r.getUniformLocation(e,p.name,u));return{variablesLocations:o,customUniformLocations:n,infLoc:l,nanLoc:c,outShapeLocation:s,outShapeStridesLocation:a,outTexShapeLocation:i}}function Z$(r,t){if(r.length!==t.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${t.length} inputs`);r.forEach((e,o)=>{let n=e.logicalShape,s=t[o],i=s.shape;if(!y.arraysEqual(n,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${n} and ${i} must match`);if(e.isUniform&&s.isUniform)return;let a=e.texShape,l=s.isUniform?null:s.texData.texShape;if(!y.arraysEqual(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function Q$(r,t,e,o,n){t.program.enableShapeUniforms||(Z$(t.inShapeInfos,e),Z$([t.outShapeInfo],[o]));let s=o.texData.texture,i=o.texData.texShape;o.texData.isPacked?r.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):r.setOutputMatrixTexture(s.texture,i[0],i[1]),r.setProgram(t.webGLProgram),r.bindVertexArray(t.webGLProgram.vao),P().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&r.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&r.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<e.length;++l){let c=e[l],{uniform:u,offset:p,shape:m,texShape:f}=t.variablesLocations[l];if(m){let{uniformShape:h}=ax(t.program.packedInputs,c.shape,c.texData.texShape);switch(h.length){case 1:r.gl.uniform1iv(m,new Int32Array(h));break;case 2:r.gl.uniform2iv(m,new Int32Array(h));break;case 3:r.gl.uniform3iv(m,new Int32Array(h));break;case 4:r.gl.uniform4iv(m,new Int32Array(h));break;default:break}}if(f&&r.gl.uniform2i(f,c.texData.texShape[0],c.texData.texShape[1]),u!=null){if(c.isUniform){if(y.sizeFromShape(c.shape)<2)r.gl.uniform1f(u,c.uniformValues[0]);else{let h=c.uniformValues;h instanceof Float32Array||(h=new Float32Array(h)),r.gl.uniform1fv(u,h)}continue}c.texData.slice!=null&&p!=null&&r.gl.uniform1i(p,c.texData.slice.flatOffset),r.setInputMatrixTexture(c.texData.texture.texture,u,l)}}let a=t.outShapeLocation;if(a)switch(o.shape.length){case 1:r.gl.uniform1iv(a,new Int32Array(o.shape));break;case 2:r.gl.uniform2iv(a,new Int32Array(o.shape));break;case 3:r.gl.uniform3iv(a,new Int32Array(o.shape));break;case 4:r.gl.uniform4iv(a,new Int32Array(o.shape));break;default:break}if(t.outShapeStridesLocation){let l=y.computeStrides(o.shape);switch(o.shape.length){case 2:r.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:r.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:r.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break;default:break}}if(t.outTexShapeLocation&&r.gl.uniform2i(t.outTexShapeLocation,o.texData.texShape[0],o.texData.texShape[1]),t.program.customUniforms&&n)for(let l=0;l<t.program.customUniforms.length;++l){let c=t.program.customUniforms[l],u=t.customUniformLocations[l],p=n[l];if(c.type==="float")r.gl.uniform1fv(u,p);else if(c.type==="vec2")r.gl.uniform2fv(u,p);else if(c.type==="vec3")r.gl.uniform3fv(u,p);else if(c.type==="vec4")r.gl.uniform4fv(u,p);else if(c.type==="int")r.gl.uniform1iv(u,p);else if(c.type==="ivec2")r.gl.uniform2iv(u,p);else if(c.type==="ivec3")r.gl.uniform3iv(u,p);else if(c.type==="ivec4")r.gl.uniform4iv(u,p);else throw Error(`uniform type ${c.type} is not supported yet.`)}r.executeProgram()}function tD(r,t,e){let o="";t.concat(e).forEach(i=>{let a=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(r.enableShapeUniforms&&!i.isUniform){let l=i.texData.texShape,{useSqueezeShape:c,uniformShape:u,keptDims:p}=ax(r.packedInputs,i.shape,l),m="",f="",h="";if(u.length===1&&r.packedInputs){let I=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];m=`${I[0]>1}_${I[1]>1}`}else if(u.length===2&&!r.packedInputs)f=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!r.packedInputs){let I=y.computeStrides(u);h=`${I[0]===l[1]}_${I[I.length-1]===l[1]}`}let d=i.shape.length,g=u.length===2&&y.arraysEqual(i.shape,l),x=y.sizeFromShape(i.shape)===1,b=S.getBroadcastDims(i.shape,e.shape),C=!r.packedInputs&&d===e.shape.length&&y.arraysEqual(l,e.texData.texShape),w=r.packedInputs||u.length>2?"":`${l[0]>1}_${l[1]>1}`;o+=`${d}_${C}_${c?p:""}_${u.length}_${x}_${b}_${g}_${m}_${f}_${h}_${w}_${a}`}else{let l=i.isUniform?"uniform":i.texData.texShape;o+=`${i.shape}_${l}_${a}`}});let n=r.userCode,s=r.constructor.name;return s+="_"+o+"_"+n+`${P().getNumber("WEBGL_VERSION")}`,s}function Xt(r){return P().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&r<=4}var lx=class{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=pa.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=xe();this.outputShape=t,this.enableShapeUniforms=Xt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Nl(["r","c","d"],t):Yo(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}};var cx=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=pa.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=xe();this.outputShape=t,this.enableShapeUniforms=Xt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Nl(["r","c","d"],t):Yo(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}};var ux=class{constructor(t){this.variableNames=["A"],this.outTexUsage=ur.DOWNLOAD;let e=xe();this.outputShape=t,this.userCode=`
      ${ix}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}};var px=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=ur.DOWNLOAD;let e=xe();this.outputShape=t,this.userCode=`
      ${ix}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}};var _j={R:0,G:1,B:2,A:3},qf=class{constructor(t,e=!1,o="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=xe();this.outputShape=t,this.enableShapeUniforms=Xt(this.outputShape.length);let s="result";e&&(s="floor(result * 255. + 0.5)");let i="";for(let a=0;a<o.length;a++){let l=o[a];i+=`
          if(offset == ${a}) {
            result = values[${_j[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Vu():Mu(t)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${o.length});

        flatIndex = idiv(flatIndex, ${o.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${n.texture2D}(A, uv);
          ${i}
        }
        ${n.output} = vec4(${s}, 0., 0., 0.);
      }
    `}};var mx=class{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let o=xe();this.outputShape=t,this.enableShapeUniforms=Xt(this.outputShape.length);let n="",s="result";e&&(s="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let a=0;a<=1;a++){let l=i*2+a;n+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${o.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Vu():Mu(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${n}

          ${o.output} = ${s};
        }
    `}};function eD(r){let t=xe(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return k$(r,e)}function rD(r){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return D$(r,t)}function oD(r){let t=new Uint16Array([0,1,2,2,1,3]);return R$(r,t)}function Kf(r,t,e,o,n,s){_$(t,e);let i=F$(r),a=r.TEXTURE_2D;return mt(r,()=>r.bindTexture(a,i)),mt(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),mt(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),mt(r,()=>r.texParameteri(a,r.TEXTURE_MIN_FILTER,r.NEAREST)),mt(r,()=>r.texParameteri(a,r.TEXTURE_MAG_FILTER,r.NEAREST)),P().getNumber("WEBGL_VERSION")===1?mt(r,()=>r.texImage2D(a,0,o,t,e,0,n,s,null)):mt(r,()=>r.texStorage2D(a,1,o,t,e)),mt(r,()=>r.bindTexture(r.TEXTURE_2D,null)),{texture:i,texShape:[e,t]}}function VC(r){return r.internalFormatFloat}function nD(r,t,e,o){let[n,s]=Sl(t,e);return Kf(r,n,s,VC(o),o.textureFormatFloat,r.FLOAT)}function GC(r){return r.internalFormatHalfFloat}function sD(r,t,e,o){let[n,s]=Sl(t,e);return Kf(r,n,s,GC(o),o.textureFormatFloat,o.textureTypeHalfFloat)}function UC(r){return r.downloadTextureFormat}function iD(r,t,e,o){let[n,s]=Sl(t,e);return Kf(r,n,s,UC(o),r.RGBA,r.UNSIGNED_BYTE)}function WC(r){return r.internalFormatPackedFloat}function aD(r,t,e,o){let[n,s]=Nn(t,e);return Kf(r,n,s,WC(o),r.RGBA,r.FLOAT)}function HC(r){return r.internalFormatPackedHalfFloat}function lD(r,t,e,o){let[n,s]=Nn(t,e);return Kf(r,n,s,HC(o),r.RGBA,o.textureTypeHalfFloat)}function cD(r,t,e){return mt(r,()=>r.bindBuffer(r.ARRAY_BUFFER,e)),PC(r,t,"clipSpacePos",e,3,20,0)&&PC(r,t,"uv",e,2,20,12)}function uD(r,t,e,o,n,s){mt(r,()=>r.bindTexture(r.TEXTURE_2D,t));let i,a,l;n instanceof Uint8Array?(i=new Uint8Array(e*o*4),a=r.UNSIGNED_BYTE,l=r.RGBA):(i=new Float32Array(e*o*4),a=r.FLOAT,l=s.internalFormatPackedFloat),i.set(n),P().getNumber("WEBGL_VERSION")===2?mt(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,e,o,r.RGBA,a,i)):mt(r,()=>r.texImage2D(r.TEXTURE_2D,0,l,e,o,0,r.RGBA,a,i)),mt(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function pD(r,t,e){mt(r,()=>r.bindTexture(r.TEXTURE_2D,t)),e.data instanceof Uint8Array?P().getNumber("WEBGL_VERSION")===2?mt(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,e.width,e.height,r.RGBA,r.UNSIGNED_BYTE,e.data)):mt(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,e.width,e.height,0,r.RGBA,r.UNSIGNED_BYTE,e.data)):P().getNumber("WEBGL_VERSION")===2?mt(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,r.RGBA,r.UNSIGNED_BYTE,e)):mt(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,e)),mt(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function mD(r,t,e,o){let n=r.createBuffer();mt(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,n));let a=4*4*t*e;return mt(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,a,r.STREAM_READ)),mt(r,()=>r.readPixels(0,0,e,t,r.RGBA,r.FLOAT,0)),mt(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),n}function fD(r,t,e){let o=r,n=new Float32Array(e);return o.bindBuffer(o.PIXEL_PACK_BUFFER,t),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,n),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),n}function hD(r,t,e,o){let[n,s]=Sl(t,e),i=4,a=new Uint8Array(v$(t*e,i));return mt(r,()=>r.readPixels(0,0,n,s,o.downloadTextureFormat,r.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function dD(r,t,e,o,n,s,i,a){let l=r,c=new Float32Array(N$(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function gD(r,t,e){let o=new Float32Array(t*e*4);return mt(r,()=>r.readPixels(0,0,e,t,r.RGBA,r.FLOAT,o)),o}var Ku=class{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let e=P().getNumber("WEBGL_VERSION");if(t!=null?(this.gl=t,S$(e,t)):this.gl=Xr(e),t=this.gl,P().getNumber("WEBGL_VERSION")===2){let s=t;this.createVertexArray=()=>mt(s,()=>s.createVertexArray()),this.bindVertexArray=i=>mt(s,()=>s.bindVertexArray(i)),this.deleteVertexArray=i=>mt(s,()=>s.deleteVertexArray(i)),this.getVertexArray=()=>mt(s,()=>s.getParameter(s.VERTEX_ARRAY_BINDING))}else if(t!=null){let s=t.getExtension("OES_vertex_array_object");if(s==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>mt(t,()=>s.createVertexArrayOES()),this.bindVertexArray=i=>mt(t,()=>s.bindVertexArrayOES(i)),this.deleteVertexArray=i=>mt(t,()=>s.deleteVertexArrayOES(i)),this.getVertexArray=()=>mt(t,()=>t.getParameter(s.VERTEX_ARRAY_BINDING_OES))}let o="WEBGL_color_buffer_float",n="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),P().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=Uf(this.gl,s),lo(this.gl,i))this.textureHalfFloatExtension=Uf(this.gl,i);else if(P().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(o),lo(this.gl,n))this.colorBufferHalfFloatExtension=Uf(this.gl,n);else if(P().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(o="EXT_color_buffer_float",lo(this.gl,o))this.colorBufferFloatExtension=this.gl.getExtension(o);else if(lo(this.gl,n))this.colorBufferHalfFloatExtension=this.gl.getExtension(n);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=rD(this.gl),this.indexBuffer=oD(this.gl),this.framebuffer=O$(this.gl),this.textureConfig=Gf(this.gl,this.textureHalfFloatExtension)}get debug(){return P().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let t=this.gl;mt(t,()=>t.finish()),mt(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),mt(t,()=>t.deleteFramebuffer(this.framebuffer)),mt(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),mt(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),mt(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),nD(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),sD(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),iD(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),pD(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,o,n){this.throwIfDisposed(),uD(this.gl,t,e,o,n,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),lD(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),aD(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(zC(this.gl,this.framebuffer),this.outputTexture=null),mt(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,o){return this.downloadMatrixDriver(t,()=>hD(this.gl,e,o,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,o,n,s,i){return dD(this.gl,t,e,o,n,s,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return fD(this.gl,t,e)}createBufferFromTexture(t,e,o){this.bindTextureToFrameBuffer(t);let n=mD(this.gl,e,o,this.textureConfig);return this.unbindTextureToFrameBuffer(),n}createAndWaitForFence(){let t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,o;if(P().getBool("WEBGL_FENCE_API_ENABLED")){let n=t,s=n.fenceSync(n.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),o=()=>{let i=n.clientWaitSync(s,0,0);return i===n.ALREADY_SIGNALED||i===n.CONDITION_SATISFIED},e=s}else P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),o=()=>this.isQueryAvailable(e,P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):o=()=>!0;return{query:e,isFencePassed:o}}downloadMatrixFromPackedTexture(t,e,o){return this.downloadMatrixDriver(t,()=>gD(this.gl,e,o))}createProgram(t){this.throwIfDisposed();let e=this.gl;this.vertexShader==null&&(this.vertexShader=eD(e));let o=A$(e);mt(e,()=>e.attachShader(o,this.vertexShader)),mt(e,()=>e.attachShader(o,t)),$$(e,o);let n=Object.assign(o,{vao:this.createVertexArray()});return this.debug&&ox(e,n),n}buildVao(t){this.setProgram(t),this.bindVertexArray(t.vao);let e=this.gl;mt(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),cD(e,t,this.vertexBuffer)}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&(mt(this.gl,()=>this.gl.deleteProgram(t)),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&ox(this.gl,this.program),mt(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,o=!0){return this.throwIfDisposed(),o?L$(this.gl,t,e):P$(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),mt(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,o){this.throwIfDisposed(),this.throwIfNoProgram(),z$(this.gl,t,e,o)}setOutputMatrixTexture(t,e,o){this.setOutputMatrixTextureDriver(t,o,e)}setOutputPackedMatrixTexture(t,e,o){this.throwIfDisposed();let[n,s]=Nn(e,o);this.setOutputMatrixTextureDriver(t,n,s)}setOutputMatrixWriteRegion(t,e,o,n){this.setOutputMatrixWriteRegionDriver(o,t,n,e)}setOutputPackedMatrixWriteRegion(t,e,o,n){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&ox(this.gl,this.program),Wf(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let t=this.gl;if(this.debug){let e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}mt(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),mt(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Uf(this.gl,P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let o=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=o.createQuery();return o.beginQuery(n.TIME_ELAPSED_EXT,s),s}let t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let e=this.gl,o=this.getQueryTimerExtensionWebGL2();e.endQuery(o.TIME_ELAPSED_EXT);return}let t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}waitForQueryAndGetTime(t){return B(this,null,function*(){return yield y.repeatedTry(()=>this.disposed||this.isQueryAvailable(t,P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))})}getQueryTime(t,e){if(e===0)return null;if(e===2){let o=this.gl;return o.getQueryParameter(t,o.QUERY_RESULT)/1e6}else{let o=this.getQueryTimerExtensionWebGL1();return o.getQueryObjectEXT(t,o.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){let o=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=o.getQueryParameter(t,o.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let o=this.getQueryTimerExtensionWebGL1(),n=o.getQueryObjectEXT(t,o.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){let t=Lj(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){let{resolveFn:o}=this.itemsToPoll[e];o()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let o;"setTimeoutCustom"in P().platform&&(o=P().platform.setTimeoutCustom.bind(P().platform)),y.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,o)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),nx(this.gl,t,this.framebuffer),this.debug&&Wf(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(nx(this.gl,this.outputTexture,this.framebuffer),this.debug&&Wf(this.gl)):zC(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);let o=e();return this.unbindTextureToFrameBuffer(),o}setOutputMatrixTextureDriver(t,e,o){this.throwIfDisposed();let n=this.gl;nx(n,t,this.framebuffer),this.debug&&Wf(n),this.outputTexture=t,mt(n,()=>n.viewport(0,0,e,o)),mt(n,()=>n.scissor(0,0,e,o))}setOutputMatrixWriteRegionDriver(t,e,o,n){this.throwIfDisposed(),mt(this.gl,()=>this.gl.scissor(t,e,o,n))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function Lj(r){let t=0;for(;t<r.length&&r[t]();++t);return t-1}var{addImpl:xD,bincountImpl:fx,bincountReduceImpl:yD,bitwiseAndImpl:bD,castImpl:wD,ceilImpl:CD,concatImpl:ID,equalImpl:SD,expImpl:vD,expm1Impl:ND,floorImpl:TD,gatherNdImpl:kD,gatherV2Impl:ED,greaterImpl:AD,greaterEqualImpl:$D,lessImpl:DD,lessEqualImpl:RD,linSpaceImpl:FD,logImpl:_D,maxImpl:OD,maximumImpl:LD,minimumImpl:PD,multiplyImpl:zD,negImpl:BD,notEqualImpl:MD,prodImpl:VD,raggedGatherImpl:GD,raggedRangeImpl:UD,raggedTensorToTensorImpl:WD,rangeImpl:HD,rsqrtImpl:qD,scatterImpl:KD,sigmoidImpl:jD,simpleAbsImpl:hx,sliceImpl:XD,sparseFillEmptyRowsImpl:YD,sparseReshapeImpl:ZD,sparseSegmentReductionImpl:dx,sqrtImpl:JD,staticRegexReplaceImpl:QD,stridedSliceImpl:tR,stringNGramsImpl:eR,stringSplitImpl:rR,stringToHashBucketFastImpl:oR,subImpl:nR,tileImpl:sR,topKImpl:iR,transposeImpl:kl,uniqueImpl:aR}=bC;function qC(r,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${r}.${e}`)}function ve(r,t){return t===1?[r]:qC(r,t)}function lR(r,t){if(r===1)return"rc";let e="";for(let o=0;o<r;o++)e+=t[o],o<r-1&&(e+=",");return e}var gx=class{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=Xt(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let e=ve("rc",this.rank),o=At(this.rank),n=this.getOutOfBoundsCondition(e),s=this.getSetup(e),i=this.getOutput(e);this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();

          if(${n}) {
            setOutput(vec4(0));
          } else {
            ${s}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(t){let e=[];for(let o=0;o<=1;o++)for(let n=0;n<=1;n++){let s=`${o===0?"r":"rp1"}, ${n===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)s=`${t[t.length-1-i]},`+s;e.push(s)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let o=this.rank-2;o<this.rank;o++)e+=`${t[o]} >= ${this.enableShapeUniforms?`outShape[${o}]`:this.outputShape[o]}`,o<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";let e=t.slice(-2),o=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],n=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${o};
      bool rEdge = rp1 >= ${n};
    `}getOutput(t){let e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}};var ju=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=Xt(this.outputShape.length);let o="";for(let n=0;n<4;n++){let s="thisRC = rc;";n%2===1&&(s+="thisRC.z += 1;"),n>1&&(s+="thisRC.y += 1;"),o+=`
        ${s}
        ${n>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${n}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${n>0?"}":""}
      `}this.userCode=`
      ${Pj(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Vu():Mu(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${o}

        setOutput(result);
      }
    `}};function Pj(r,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?q$(["r","c","d"],"inputShape"):Yo(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var xx=class{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(t,e,o){let n=uR(e,o),s=pR(t,n,o);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let i=cR(t,n,this.gpgpu.gl,this.gpgpu.textureConfig,o);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let l=this.freeTextures[s].pop();return this.usedTextures[s].push(l),l}let a;return n===er.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):n===er.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):n===er.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):n===er.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):n===er.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(t,e,o,n){if(this.freeTextures==null)return;let s=uR(o,n),i=pR(e,s,n);i in this.freeTextures||(this.freeTextures[i]=[]);let a=cR(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n),l=P().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;let c=this.usedTextures[i],u=c&&c.indexOf(t);if(u==null||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[u]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;let t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);let e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(let t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function zj(r,t){let e=r;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===r.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function cR(r,t,e,o,n){let s=Bj(t,o),i;if(n){let[l,c]=Nn(r[0],r[1]);i=l*c}else{let[l,c]=Sl(r[0],r[1]);i=l*c}let a=zj(e,s);return i*a}function Bj(r,t){switch(r){case er.PACKED_2X2_FLOAT32:return WC(t);case er.PACKED_2X2_FLOAT16:return HC(t);case er.UNPACKED_FLOAT32:return VC(t);case er.UNPACKED_FLOAT16:return GC(t);case er.PACKED_4X1_UNSIGNED_BYTE:return UC(t);default:throw new Error(`Unknown physical texture type ${r}`)}}function Mj(r){return P().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?er.PACKED_2X2_FLOAT32:er.UNPACKED_FLOAT32:r?er.PACKED_2X2_FLOAT16:er.UNPACKED_FLOAT16}function uR(r,t){if(r===ur.UPLOAD)return er.PACKED_2X2_FLOAT32;if(r===ur.RENDER||r==null)return Mj(t);if(r===ur.DOWNLOAD||r===ur.PIXELS)return er.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${r}`)}function pR(r,t,e){return`${r[0]}_${r[1]}_${t}_${e}`}var rr=class{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=Xt(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},Le="if (isnan(x)) return x;",mR="return x;",KC="return abs(x);";var fR="return (x >= 0.0) ? x : (exp(x) - 1.0);",hR=Le+`
  return (x < 0.0) ? 0.0 : x;
`,dR=Le+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,kn="return x;",gR="return 1.0 / (1.0 + exp(-1.0 * x));";var yR="return x;",bR=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,wR=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,CR=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,IR="return 1.0 / (1.0 + exp(-1.0 * x));",_r=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=Xt(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var yx=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=Xt(this.outputShape.length);let e=t.length,o=ve("rc",e),n=At(e),s=lR(e,o),i=o.slice(-2),a=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${n} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}};var Gj=ar.whereImpl,Uj=1e-7,Wj=1e-4,bx={};function Hj(r){return r in bx||(bx[r]={}),bx[r]}var qj=P().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),Kj=600;function jj(){return P().global.screen==null?1024:P().global.screen.height*P().global.screen.width*window.devicePixelRatio*Kj/1024/1024}var jf=class r extends $n{nextDataId(){return r.nextDataId++}constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!P().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(t!=null){if(t instanceof Ku)e=t;else{let o=Xr(P().getNumber("WEBGL_VERSION"),t);e=new Ku(o)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let o=Xr(P().getNumber("WEBGL_VERSION"));e=new Ku(o),this.binaryCache=Hj(P().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new xx(this.gpgpu),this.numMBBeforeWarning=jj(),this.texData=new wa(this,ho())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,e,o,n,s,i){let a=this.makeTensorInfo(e,o),l=this.texData.get(a.dataId);l.isPacked=!1,l.texture={texture:t,texShape:[n,s]},l.texShape=[n,s];let c=Hf(e),u=new qf(c,!1,i),p=this.runWebGLProgram(u,[a],o,[[n,s]]);return p.shape=e,l.texture=null,this.disposeIntermediateTensorInfo(a),p.dataId}write(t,e,o){if((P().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||P().getBool("DEBUG"))&&this.checkNumericalProblems(t),o==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let n={id:this.nextDataId()};return this.texData.set(n,{shape:e,dtype:o,values:t,usage:ur.UPLOAD,refCount:1}),n}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){let e=this.texData.get(t);e.refCount++}decRef(t){if(this.texData.has(t)){let e=this.texData.get(t);e.refCount--}}move(t,e,o,n,s){if(P().getBool("DEBUG")&&this.checkNumericalProblems(e),n==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:o,dtype:n,values:e,usage:ur.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){let e=this.texData.get(t),{values:o,dtype:n,complexTensorInfos:s,slice:i,shape:a,isPacked:l}=e;if(i!=null){let m;l?m=new _r(a,kn):m=new rr(a,kn);let f=this.runWebGLProgram(m,[{dataId:t,shape:a,dtype:n}],n),h=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),h}if(o!=null)return this.convertAndCacheOnCPU(t);if(n==="string")return o;let c=this.activeTimers!=null,u;c&&(u=y.now());let p;if(n==="complex64"){let m=this.readSync(s.real.dataId),f=this.readSync(s.imag.dataId);p=S.mergeRealAndImagArrays(m,f)}else p=this.getValuesFromTexture(t);return c&&(this.downloadWaitMs+=y.now()-u),this.convertAndCacheOnCPU(t,p)}read(t){return B(this,null,function*(){if(this.pendingRead.has(t)){let h=this.pendingRead.get(t);return new Promise(d=>h.push(d))}let e=this.texData.get(t),{values:o,shape:n,slice:s,dtype:i,complexTensorInfos:a,isPacked:l}=e;if(s!=null){let h;l?h=new _r(n,kn):h=new rr(n,kn);let d=this.runWebGLProgram(h,[{dataId:t,shape:n,dtype:i}],i),g=this.read(d.dataId);return this.disposeIntermediateTensorInfo(d),g}if(o!=null)return this.convertAndCacheOnCPU(t);if(P().getBool("DEBUG")&&!P().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&P().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,u;if(i!=="complex64"&&P().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);let h=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(h.texture.texture,...Vf(n))}this.pendingRead.set(t,[]),i!=="complex64"&&(yield this.gpgpu.createAndWaitForFence());let p;if(i==="complex64"){let h=yield Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),d=h[0],g=h[1];p=S.mergeRealAndImagArrays(d,g)}else if(c==null)p=this.getValuesFromTexture(t);else{let h=y.sizeFromShape(n);p=this.gpgpu.downloadFloat32MatrixFromBuffer(c,h)}if(u!=null&&this.disposeIntermediateTensorInfo(u),c!=null){let h=this.gpgpu.gl;mt(h,()=>h.deleteBuffer(c))}let m=this.convertAndCacheOnCPU(t,p),f=this.pendingRead.get(t);return this.pendingRead.delete(t),f.forEach(h=>h(m)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&ho().removeDataId(t,this),this.pendingDeletes--),m})}readToGPU(t,e={}){let o=this.texData.get(t),{values:n,shape:s,slice:i,dtype:a,isPacked:l,texture:c}=o;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let f;l?f=new _r(s,kn):f=new rr(s,kn);let h=this.runWebGLProgram(f,[{dataId:t,shape:s,dtype:a}],a),d=this.readToGPU(h,e);return this.disposeIntermediateTensorInfo(h),d}if(c==null)throw n!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(t,e.customTexShape),p=ho().makeTensorFromTensorInfo(u),m=this.texData.get(u.dataId);return Object.assign({tensorRef:p},m.texture)}bufferSync(t){let e=this.readSync(t.dataId);if(t.dtype==="string")try{let o=e.map(n=>y.decodeString(n));return dt(t.shape,t.dtype,o)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return dt(t.shape,t.dtype,e)}checkNumericalProblems(t){if(t!=null)for(let e=0;e<t.length;e++){let o=t[e];if(!T$(o))throw P().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${o} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${o} cannot be represented on this device.`)}}getValuesFromTexture(t){let{shape:e,dtype:o,isPacked:n}=this.texData.get(t),s=y.sizeFromShape(e);if(P().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let m=this.decode(t),f=this.texData.get(m.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...Vf(e)).subarray(0,s);return this.disposeIntermediateTensorInfo(m),h}let i=P().getBool("WEBGL_PACK")&&n===!0,a=i?Hf(e):e,l=i?new px(a):new ux(a),c=this.runWebGLProgram(l,[{shape:a,dtype:o,dataId:t}],"float32"),u=this.texData.get(c.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(c),p}timerAvailable(){return P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){let e=this.activeTimers,o=[],n=!1;this.programTimersStack==null?(this.programTimersStack=o,n=!0):this.activeTimers.push(o),this.activeTimers=o,t();let s=y.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),i=y.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=e,n&&(this.programTimersStack=null);let a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return B(this,null,function*(){if(P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let l=yield Promise.all(s);a.kernelMs=y.sum(l),a.getExtraProfileInfo=()=>l.map((c,u)=>({name:i[u],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:y.now(),endMs:null}}endTimer(t){return P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=y.now(),t)}getQueryTime(t){return B(this,null,function*(){if(P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);let e=t;return e.endMs-e.startMs})}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);let{complexTensorInfos:o}=this.texData.get(t);return o!=null&&(this.disposeData(o.real.dataId,e),this.disposeData(o.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){let{texture:e,dtype:o,texShape:n,usage:s,isPacked:i,slice:a}=this.texData.get(t),l=a&&a.origDataId||t,c=this.dataRefCount.get(l);c>1?this.dataRefCount.set(l,c-1):(this.dataRefCount.delete(l),e!=null&&(this.numBytesInGPU-=this.computeBytes(n,o),this.textureManager.releaseTexture(e,n,s,i)));let u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=qj){return P().getBool("WEBGL_CPU_FORWARD")&&t.every(o=>this.texData.get(o.dataId).texture==null&&y.sizeFromShape(o.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){S.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let e=t.dataSync();return Gj(t.shape,e)}packedUnaryOp(t,e,o){let n=new _r(t.shape,e),s=this.compileAndRun(n,[t],o);return ho().makeTensorFromTensorInfo(s)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){let n=hx(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,n)}if(P().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,KC,t.dtype);let e=new rr(t.shape,KC),o=this.compileAndRun(e,[t]);return ho().makeTensorFromTensorInfo(o)}makeTensorInfo(t,e,o){let n;if(e==="string"&&o!=null&&o.length>0&&y.isString(o[0])){let s=o.map(i=>y.encodeString(i));n=this.write(s,t,e)}else n=this.write(o,t,e);return this.texData.get(n).usage=null,{dataId:n,shape:t,dtype:e}}makeOutput(t,e,o){return ho().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,o),this)}unpackTensor(t){let e=new yx(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){let e=new gx(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){let o=[ma(t.shape),...fa(t.shape)],n={dtype:t.dtype,shape:o,dataId:t.dataId},s=[ma(e),...fa(e)],i=new ju(s,o),a=!0,l=[o],c=this.runWebGLProgram(i,[n],t.dtype,l,a);return{dataId:c.dataId,shape:e,dtype:c.dtype}}decode(t,e){let o=this.texData.get(t),{isPacked:n,shape:s,dtype:i}=o;if(e!=null){let m=y.sizeFromShape(s),f=e[0]*e[1]*4;y.assert(m<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let a=Hf(s),l;n?l=new cx(a):l=new lx(a);let c=!0,u=[e??Vf(a)],p=this.runWebGLProgram(l,[{shape:a,dtype:i,dataId:t}],i,u,c,e);return{dtype:i,shape:s,dataId:p.dataId}}runWebGLProgram(t,e,o,n,s=!1,i){let a=this.makeTensorInfo(t.outputShape,o),l=this.texData.get(a.dataId);if(t.packedOutput&&(l.isPacked=!0),t.outPackingScheme===pa.DENSE){let x=i??Vf(t.outputShape);l.texShape=x.map(b=>b*2)}if(t.outTexUsage!=null&&(l.usage=t.outTexUsage),y.sizeFromShape(a.shape)===0)return l.values=y.getTypedArrayFromDType(a.dtype,0),a;let c=[],u=e.map(x=>{if(x.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(x.dataId);if(b.texture==null){if(!t.packedInputs&&y.sizeFromShape(x.shape)<=P().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:x.shape,texData:null,isUniform:!0,uniformValues:b.values};t.packedInputs&&(b.isPacked=!0,b.shape=x.shape)}if(this.uploadToGPU(x.dataId),!!b.isPacked!=!!t.packedInputs)x=b.isPacked?this.unpackTensor(x):this.packTensor(x),c.push(x),b=this.texData.get(x.dataId);else if(b.isPacked&&!vl(b.shape,x.shape)){let C=x,w=x.shape;x.shape=b.shape,x=this.packedReshape(x,w),c.push(x),b=this.texData.get(x.dataId),C.shape=w}return{shape:x.shape,texData:b,isUniform:!1}});this.uploadToGPU(a.dataId);let p={shape:a.shape,texData:l,isUniform:!1},m=tD(t,u,p),f=this.getAndSaveBinary(m,()=>J$(this.gpgpu,t,u,p)),h=this.activeTimers!=null,d;h&&(d=this.startTimer()),P().get("ENGINE_COMPILE_ONLY")||Q$(this.gpgpu,f,u,p,n),c.forEach(x=>this.disposeIntermediateTensorInfo(x)),h&&(d=this.endTimer(d),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(d)}));let g=P().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){let x=y.now();x-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=x)}if(!P().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&s===!1){let x=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),x}return a}compileAndRun(t,e,o,n,s=!1){return o=o||e[0].dtype,this.runWebGLProgram(t,e,o,n,s)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(P().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=z(()=>{if(!P().get("WEBGL_RENDER_FLOAT32_ENABLED")){let t=P().getBool("DEBUG");P().set("DEBUG",!1);let e=this.abs(bt(1e-8)).dataSync()[0];if(P().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Uj:Wj}uploadToGPU(t){let e=this.texData.get(t),{shape:o,dtype:n,values:s,texture:i,usage:a,isPacked:l}=e;if(i!=null)return;let c=this.activeTimers!=null,u;c&&(u=y.now());let p=e.texShape;if(p==null&&(p=B$(o,l),e.texShape=p),s!=null){let m=Hf(o),f,h=p[1],d=p[0],g=s instanceof Uint8Array||s instanceof Uint8ClampedArray;(l||!g)&&([h,d]=Nn(p[0],p[1])),l?f=new mx(m,g):f=new qf(m,g);let x=g?[d,h]:p,b=this.makeTensorInfo(x,n),C=this.texData.get(b.dataId);g?C.usage=ur.PIXELS:C.usage=ur.UPLOAD,C.texShape=x,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),h,d,s);let w=[[d,h]],E=this.runWebGLProgram(f,[b],n,w,!0),A=this.texData.get(E.dataId);e.texShape=A.texShape,e.isPacked=A.isPacked,e.usage=A.usage,P().get("ENGINE_COMPILE_ONLY")?this.disposeData(E.dataId):(e.texture=A.texture,e.values=null,this.texData.delete(E.dataId)),this.disposeIntermediateTensorInfo(b),c&&(this.uploadWaitMs+=y.now()-u)}else{let m=this.acquireTexture(p,a,n,l);e.texture=m}}convertAndCacheOnCPU(t,e){let o=this.texData.get(t),{dtype:n}=o;return e!=null&&(o.values=Xj(e,n)),o.values}acquireTexture(t,e,o,n){if(this.numBytesInGPU+=this.computeBytes(t,o),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,n)}computeBytes(t,e){return t[0]*t[1]*y.bytesPerElement(e)}checkCompileCompletion(){for(let[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}checkCompileCompletionAsync(){return B(this,null,function*(){let t=[];if(this.gpgpu.parallelCompilationExtension){for(let[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}else{for(let[,e]of Object.entries(this.binaryCache)){let o=new Promise(n=>{try{this.checkCompletion_(e),n(!0)}catch(s){throw s}});t.push(o)}return Promise.all(t)}})}checkCompletionAsync_(t){return B(this,null,function*(){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(yield jp(),this.checkCompletionAsync_(t))})}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(LC(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let t of Object.values(this.binaryCache)){this.gpgpu.buildVao(t.webGLProgram);let{variablesLocations:e,customUniformLocations:o,infLoc:n,nanLoc:s,outShapeLocation:i,outShapeStridesLocation:a,outTexShapeLocation:l}=MC(this.gpgpu,t.program,t.webGLProgram);t.variablesLocations=e,t.customUniformLocations=o,t.infLoc=n,t.nanLoc=s,t.outShapeLocation=i,t.outShapeStridesLocation=a,t.outTexShapeLocation=l}}createTensorFromGPUData(t,e,o){t.channels=t.channels||"RGBA";let{texture:n,height:s,width:i,channels:a}=t,l=ho().backend;if(!l.gpgpu.gl.isTexture(n))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let c=l.writeTexture(n,e,o,s,i,a);return ho().makeTensorFromDataId(c,e,o,l)}};jf.nextDataId=0;function Xj(r,t){if(t==="float32"||t==="complex64")return r;if(t==="int32"||t==="bool"){let e=t==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let o=0;o<e.length;++o)e[o]=Math.round(r[o]);return e}else throw new Error(`Unknown dtype ${t}`)}ji.isBrowser()&&Bh("webgl",()=>new jf,2);var Xu=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var Or=class{constructor(t,e,o){this.variableNames=["A","B"],this.outputShape=S.assertAndGetBroadcastShape(e,o),this.enableShapeUniforms=Xt(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var Zr=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;var Yr=class{constructor(t,e,o,n=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=S.assertAndGetBroadcastShape(e,o);let s=this.outputShape.length;this.enableShapeUniforms=Xt(s);let i="";if(n)if(s===0||y.sizeFromShape(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${At(s)} coords = getOutputCoords();
        `,s===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let l=ve("coords",s);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${l[s-2]} + 1) >= outShape[${s} - 2];
            bool nextColOutOfBounds =
              (${l[s-1]} + 1) >= outShape[${s} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${l[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${l[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}};function Ne(r){let{inputs:t,backend:e}=r,{x:o}=t;return e.incRef(o.dataId),{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}var SR={kernelName:on,backendName:"webgl",kernelFunc:Ne};function Lr(r){let{inputs:t,backend:e}=r,{real:o,imag:n}=t,s=e.makeTensorInfo(o.shape,"complex64"),i=e.texData.get(s.dataId),a=Ne({inputs:{x:o},backend:e}),l=Ne({inputs:{x:n},backend:e});return i.complexTensorInfos={real:a,imag:l},s}var vR={kernelName:Hl,backendName:"webgl",kernelFunc:Lr};var jC="return (a < 0.) ? b * a : a;",XC=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Yj(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{alpha:s}=o,i=e.makeTensorInfo([],"float32",y.createScalarValue(s,"float32")),a=P().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Yr(XC,n.shape,i.shape):new Or(jC,n.shape,i.shape),l=e.runWebGLProgram(a,[n,i],"float32");return e.disposeIntermediateTensorInfo(i),l}var NR={kernelName:yi,backendName:"webgl",kernelFunc:Yj};var YC="return (a < 0.) ? b * a : a;",ZC=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Zj(r){let{inputs:t,backend:e}=r,{x:o,alpha:n}=t,s=P().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Yr(ZC,o.shape,n.shape):new Or(YC,o.shape,n.shape);return e.runWebGLProgram(s,[o,n],"float32")}var TR={kernelName:Di,backendName:"webgl",kernelFunc:Zj};var Ro="if (isnan(x)) return x;";function ht({opSnippet:r,packedOpSnippet:t,cpuKernelImpl:e,dtype:o}){return({inputs:n,backend:s})=>{let{x:i}=n,a=s,l=o||i.dtype;if(a.shouldExecuteOnCPU([i])&&e!=null){let p=a.texData.get(i.dataId),m=e(p.values,l);return a.makeTensorInfo(i.shape,l,m)}let c=P().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,u;return c?u=new _r(i.shape,t):u=new rr(i.shape,r),a.runWebGLProgram(u,[i],l)}}function qt({opSnippet:r,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:o=!1,cpuKernelImpl:n,dtype:s}){return({inputs:i,backend:a})=>{let{a:l,b:c}=i,u=a;if(o&&l.dtype==="complex64"){let h=u.texData.get(l.dataId),d=u.texData.get(c.dataId),[g,x]=[[h.complexTensorInfos.real,d.complexTensorInfos.real],[h.complexTensorInfos.imag,d.complexTensorInfos.imag]].map(C=>{let[w,I]=C,E={dataId:w.dataId,dtype:w.dtype,shape:l.shape},A={dataId:I.dataId,dtype:I.dtype,shape:c.shape},$=new Or(r,l.shape,c.shape);return u.runWebGLProgram($,[E,A],$e(w.dtype,I.dtype))}),b=Lr({inputs:{real:g,imag:x},backend:u});return u.disposeIntermediateTensorInfo(g),u.disposeIntermediateTensorInfo(x),b}let p=s||$e(l.dtype,c.dtype);if((l.dtype==="string"||c.dtype==="string"||u.shouldExecuteOnCPU([l,c]))&&n!=null){let h=u.texData.get(l.dataId).values,d=u.texData.get(c.dataId).values,g=l.dtype==="string"?S.fromUint8ToStringArray(h):h,x=l.dtype==="string"?S.fromUint8ToStringArray(d):d,[b,C]=n(l.shape,c.shape,g,x,p),w=u.makeTensorInfo(C,p),I=u.texData.get(w.dataId);return I.values=b,w}let m=P().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,f;return m?f=new Yr(t,l.shape,c.shape,e):f=new Or(r,l.shape,c.shape),u.runWebGLProgram(f,[l,c],p)}}function Ws(r,t=!1){if(r==="linear")return t?yR:mR;if(r==="relu")return t?wR:hR;if(r==="elu")return t?bR:fR;if(r==="relu6")return t?CR:dR;if(r==="prelu")return t?ZC:YC;if(r==="leakyrelu")return t?XC:jC;if(r==="sigmoid")return t?IR:gR;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var Yu=class{constructor(t,e,o,n=!1,s=!1,i=!1,a=null,l=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o,this.enableShapeUniforms=Xt(this.outputShape.length);let u=n?t[1]:t[2],p=Math.ceil(u/2),m=n?"i * 2, rc.y":"rc.y, i * 2",f=s?"rc.z, i * 2":"i * 2, rc.z",h=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],d=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],g="",x="";a&&(l?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:c?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:g=`vec4 activation(vec4 x) {
          ${a}
        }`,x="result = activation(result);");let b=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let C="rc.x",w="rc.x";t[0]<e[0]?C=`imod(rc.x, ${t[0]})`:e[0]<t[0]&&(w=`imod(rc.x, ${e[0]})`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${p}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${C};
        int batchB = ${w};
        for (int i = 0; i < ${p}; i++) {
          vec4 a = getMatrixA(batchA, ${m});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${d[0]});
          result += (${h[1]} * ${d[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${x}

        setOutput(result);
      }
    `}};var JC={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},Xf=class{constructor(t,e,o){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=S.assertAndGetBroadcastShape(e,o),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var kR="return a * b;";function Yf(r){let{inputs:t,backend:e}=r,{a:o,b:n}=t,s=S.upcastType(o.dtype,n.dtype);if(o.dtype==="complex64"){let a=e.texData.get(o.dataId),l=e.texData.get(n.dataId),c=new Xf(JC.REAL,o.shape,n.shape),u=new Xf(JC.IMAG,o.shape,n.shape),p=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:o.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:n.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:n.shape}],m=e.runWebGLProgram(c,p,"float32"),f=e.runWebGLProgram(u,p,"float32"),h=Lr({inputs:{real:m,imag:f},backend:e});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),h}if(e.shouldExecuteOnCPU([o,n])){let a=e.texData.get(o.dataId),l=e.texData.get(n.dataId),[c,u]=zD(o.shape,n.shape,a.values,l.values,s),p=e.makeTensorInfo(u,s),m=e.texData.get(p.dataId);return m.values=c,p}let i;return P().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Yr(kR,o.shape,n.shape):i=new Or(kR,o.shape,n.shape),e.runWebGLProgram(i,[o,n],s)}var ER={kernelName:ss,backendName:"webgl",kernelFunc:Yf};function AR(r,t,e){let o=[ma(r.shape),...fa(r.shape)],n={dtype:r.dtype,shape:o,dataId:r.dataId},s=[ma(t),...fa(t)],i=new ju(s,o),a=!0,l=[o],c=e.runWebGLProgram(i,[n],r.dtype,l,a);return{dataId:c.dataId,shape:t,dtype:c.dtype}}function tt(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{shape:s}=o,i=e,a=y.sizeFromShape(n.shape),l=y.inferFromImplicitShape(s,a),c=y.sizeFromShape(l);y.assert(a===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${n.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);let u=i.texData.get(n.dataId);return u.isPacked&&!vl(n.shape,l)&&!(u.texture!==null&&vl(u.shape,l))?AR(n,l,i):(i.incRef(n.dataId),{dataId:n.dataId,shape:l,dtype:n.dtype})}var $R={kernelName:Fi,backendName:"webgl",kernelFunc:tt};var Zf=class{constructor(t,e){this.variableNames=["x"];let{windowSize:o,batchSize:n,inSize:s,outSize:i}=t;this.outputShape=[n,i];let a=Math.floor(o/4)*4,l=o%4,c="sumValue += dot(values, ones);";if(e!=null){let p=1/e;c=`sumValue += dot(values * ${y.isInt(p)?p.toPrecision(2):p}, ones);`}let u="";s%o>0&&(u=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}};var wx=class{constructor(t,e){this.variableNames=["x"];let{windowSize:o,batchSize:n,inSize:s,outSize:i}=t;this.outputShape=[n,i];let a="0.0",l="";e==="prod"?a="1.0":e==="min"?(a="1.0 / 1e-20",l="min"):e==="max"&&(a="-1.0 / 1e-20",l="max");let c=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?c="sumValue":e==="prod"?c="prodValue":e==="all"?c="allValue":e==="any"&&(c="anyValue");let u=Math.floor(o/4)*4,p=o%4,m=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";e==="all"?(a="1.0",m=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):e==="any"&&(a="0.0",m=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let h="";s%o>0&&(h=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${m}
        }

        int inIdx = inOffset + ${u};
        if (${p===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${m}
        }
        setOutput(${c});
      }
    `}};function Qj(r){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let e=t.length?t[t.length-1].outSize:r[1],o=S.computeOptimalWindowSize(e);t.push({inSize:e,windowSize:o,outSize:Math.ceil(e/o)})}return t}function Jr(r,t,e,o){let n=Qj(r.shape),s=r;for(let i=0;i<n.length;i++){let{inSize:a,windowSize:l,outSize:c}=n[i],u,p;e==="mean"?u=i===0?new Zf({windowSize:l,inSize:a,batchSize:r.shape[0],outSize:c},a):new Zf({windowSize:l,inSize:a,batchSize:r.shape[0],outSize:c}):u=new wx({windowSize:l,inSize:a,batchSize:r.shape[0],outSize:c},e),p=s,s=o.runWebGLProgram(u,[s],t),p.dataId!==r.dataId&&o.disposeIntermediateTensorInfo(p)}return s}var Cx=class{constructor(t,e){this.variableNames=["A"];let o=new Array(t.length);for(let i=0;i<o.length;i++)o[i]=t[e[i]];this.outputShape=o,this.rank=o.length;let n=At(this.rank),s=t6(e);this.userCode=`
    void main() {
      ${n} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function t6(r){let t=r.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],o=new Array(t);for(let n=0;n<r.length;n++)o[r[n]]=e[n];return o.join()}var Ix=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let o=new Array(t.length);for(let u=0;u<o.length;u++)o[u]=t[e[u]];if(this.outputShape=o,this.rank=o.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let n=At(this.rank),s=qC("rc",this.rank),i=new Array(this.rank);for(let u=0;u<e.length;u++)i[e[u]]=s[u];let a=`vec2(${i.slice(-2).join()})`,l=`++${s[this.rank-1]} < ${o[this.rank-1]}`,c=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`
    void main() {
      ${n} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${l}) {
        result[1] = ${c};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${o[this.rank-2]}) {
        result[2] = ${c};
        if(${l}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}};function ha(r,t,e){let o=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ix(r.shape,t):new Cx(r.shape,t);return e.runWebGLProgram(o,[r],r.dtype)}function DR(r,t,e,o){let n=t,s=r.shape.length,i=y.parseAxisParam(n,r.shape),a=i,l=S.getAxesPermutation(a,s),c=l!=null,u=r;c&&(u=ha(r,l,o),a=S.getInnerMostAxes(a.length,s)),S.assertAxesAreInnerMostDims("sum",a,s);let[p,m]=S.computeOutAndReduceShapes(u.shape,a),f=p;e&&(f=S.expandShapeToKeepDim(p,i));let h=y.sizeFromShape(m),g=y.sizeFromShape(r.shape)/h,x=tt({inputs:{x:u},attrs:{shape:[g,h]},backend:o}),b=Ma(r.dtype),C=Jr(x,b,"sum",o),w=tt({inputs:{x:C},attrs:{shape:f},backend:o});return o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(C),c&&o.disposeIntermediateTensorInfo(u),w}function El(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o;return DR(n,s,i,e)}var RR={kernelName:Bi,backendName:"webgl",kernelFunc:El};function ue(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{perm:s}=o,i=e,a=n.shape.length,l=new Array(a);for(let u=0;u<l.length;u++)l[u]=n.shape[s[u]];let c;if(i.shouldExecuteOnCPU([n])){let p=i.texData.get(n.dataId).values,m=kl(p,n.shape,n.dtype,s,l);c=i.makeTensorInfo(l,n.dtype);let f=i.texData.get(c.dataId);f.values=m}else c=ha(n,s,i);return c}var FR={kernelName:sn,backendName:"webgl",kernelFunc:ue};var QC=1e3;function Al({a:r,b:t,transposeA:e,transposeB:o,backend:n,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:l=null}){let c=r.shape.length,u=t.shape.length,p=e?r.shape[c-2]:r.shape[c-1],m=o?t.shape[u-1]:t.shape[u-2],f=e?r.shape[c-1]:r.shape[c-2],h=o?t.shape[u-2]:t.shape[u-1],d=r.shape.slice(0,-2),g=t.shape.slice(0,-2),x=y.sizeFromShape(d),b=y.sizeFromShape(g),w=Ur.assertAndGetBroadcastShape(r.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,h]);y.assert(p===m,()=>`Error in matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${r.shape} and ${t.shape} and transposeA=${e} and transposeB=${o} must match.`);let I=e?[x,p,f]:[x,f,p],E=o?[b,h,m]:[b,m,h],A=tt({inputs:{x:r},backend:n,attrs:{shape:I}}),$=tt({inputs:{x:t},backend:n,attrs:{shape:E}}),_=[A,$],L=Math.max(x,b),M=e?A.shape[1]:A.shape[2],V=s!=null,G=i!=null,W=l==="leakyrelu",U=l!=null?Ws(l,!0):null,K=V||G||W||U!=null,Z;if((f===1||h===1)&&M>QC&&K===!1){let J=A,rt=$;e&&(J=ue({inputs:{x:A},backend:n,attrs:{perm:[0,2,1]}}),_.push(J)),o&&(rt=ue({inputs:{x:$},backend:n,attrs:{perm:[0,2,1]}}),_.push(rt));let ot=h!==1,it=h===1,st=J;ot&&(st=tt({inputs:{x:J},backend:n,attrs:{shape:[L,M,1]}}),_.push(st));let pt=h===1?2:1,at=rt;it&&(at=tt({inputs:{x:rt},backend:n,attrs:{shape:[L,1,M]}}),_.push(at));let ft=Yf({inputs:{a:st,b:at},backend:n});Z=El({inputs:{x:ft},backend:n,attrs:{axis:pt,keepDims:!0}}),_.push(ft)}else{let J=$e(r.dtype,t.dtype),rt=new Yu(I,E,[L,f,h],e,o,V,U,G,W),ot=[A,$];if(s!=null&&ot.push(s),G&&ot.push(i),W){let it=n.makeTensorInfo([],"float32",y.createScalarValue(a,"float32"));ot.push(it),_.push(it)}Z=n.runWebGLProgram(rt,ot,J)}let q=tt({inputs:{x:Z},backend:n,attrs:{shape:w}});_.push(Z);for(let J of _)n.disposeIntermediateTensorInfo(J);return q}function e6(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:s,bias:i,preluActivationWeights:a}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:p}=o;return Al({a:n,b:s,transposeA:l,transposeB:c,backend:e,bias:i,preluActivationWeights:a,leakyreluAlpha:p,activation:u})}var _R={kernelName:Ra,backendName:"webgl",kernelFunc:e6};var OR="return abs(x);";function r6(r){let{inputs:t,backend:e}=r,{x:o}=t;if(e.shouldExecuteOnCPU([o])&&o.dtype!=="complex64"){let s=e.texData.get(o.dataId),i=hx(s.values);return e.makeTensorInfo(o.shape,o.dtype,i)}let n;return P().getBool("WEBGL_PACK_UNARY_OPERATIONS")?n=new _r(o.shape,OR):n=new rr(o.shape,OR),e.runWebGLProgram(n,[o],o.dtype)}var LR={kernelName:ti,backendName:"webgl",kernelFunc:r6};var o6=Le+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,n6=ht({opSnippet:o6}),PR={kernelName:Rn,backendName:"webgl",kernelFunc:n6};var s6=Le+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,i6=ht({opSnippet:s6}),zR={kernelName:Fn,backendName:"webgl",kernelFunc:i6};var BR="return a + b;",a6=qt({opSnippet:BR,packedOpSnippet:BR,supportsComplex:!0,cpuKernelImpl:xD}),MR={kernelName:_o,backendName:"webgl",kernelFunc:a6};var Sx=class{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((s,i)=>`T${i}`);let o=[];this.variableNames.forEach(s=>{o.push(`float v${s} = get${s}AtOutCoords();`)});let n=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${o.join(`
        `)}

        float result = ${n};
        setOutput(result);
      }
    `}};var vx=class{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((s,i)=>`T${i}`);let o=[];this.variableNames.forEach(s=>{o.push(`vec4 v${s} = get${s}AtOutCoords();`)});let n=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${o.join(`
        `)}

        vec4 result = ${n};
        setOutput(result);
      }
    `}};function Nx(r){let{inputs:t,backend:e}=r,o=t;if(o.length===1)return Ne({inputs:{x:o[0]},backend:e});if(o.length>P().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(o.length/2),c=Nx({inputs:o.slice(0,l),backend:e}),u=Nx({inputs:o.slice(l),backend:e});return Nx({inputs:[c,u],backend:e})}let n=o.map(l=>l.dtype).reduce((l,c)=>$e(l,c)),s=o.map(l=>l.shape),a=P().getBool("WEBGL_PACK")?new vx(o[0].shape,s):new Sx(o[0].shape,s);return e.runWebGLProgram(a,o,n)}var VR={kernelName:Bl,backendName:"webgl",kernelFunc:Nx};function l6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o,a=n.shape.length,l=y.parseAxisParam(s,n.shape),c=l,u=S.getAxesPermutation(c,a),p=n;u!=null&&(p=ue({inputs:{x:n},backend:e,attrs:{perm:u}}),c=S.getInnerMostAxes(c.length,a)),S.assertAxesAreInnerMostDims("all",c,a);let[m,f]=S.computeOutAndReduceShapes(p.shape,c),h=y.sizeFromShape(f),d=tt({inputs:{x:p},backend:e,attrs:{shape:[-1,h]}}),g=Jr(d,d.dtype,"all",e),x;if(i){let b=S.expandShapeToKeepDim(m,l);x=tt({inputs:{x:g},backend:e,attrs:{shape:b}})}else x=tt({inputs:{x:g},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(g),u!=null&&e.disposeIntermediateTensorInfo(p),x}var GR={kernelName:Ml,backendName:"webgl",kernelFunc:l6};function c6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o,a=n.shape.length,l=y.parseAxisParam(s,n.shape),c=l,u=S.getAxesPermutation(c,a),p=n;u!=null&&(p=ue({inputs:{x:n},backend:e,attrs:{perm:u}}),c=S.getInnerMostAxes(c.length,a)),S.assertAxesAreInnerMostDims("any",c,a);let[m,f]=S.computeOutAndReduceShapes(p.shape,c),h=y.sizeFromShape(f),d=tt({inputs:{x:p},backend:e,attrs:{shape:[-1,h]}}),g=Jr(d,d.dtype,"any",e),x;if(i){let b=S.expandShapeToKeepDim(m,l);x=tt({inputs:{x:g},backend:e,attrs:{shape:b}})}else x=tt({inputs:{x:g},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(g),u!=null&&e.disposeIntermediateTensorInfo(p),x}var UR={kernelName:Vl,backendName:"webgl",kernelFunc:c6};var Tx=class{constructor(t,e,o){this.variableNames=["A"];let{windowSize:n,batchSize:s,outSize:i}=t;o||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];let a=e==="max"?">":"<",l=o?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${n}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var kx=class{constructor(t,e,o,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,y.assert(t.length>2,()=>`Packed arg${o.charAt(0).toUpperCase()+o.slice(1)} supports only inputs with rank above 2.`);let s=t[t.length-1],i=Math.ceil(s/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),n||this.variableNames.push("bestIndicesA");let a=this.outputShape,l=a.length,c=At(l),u=ve("coords",l),p,m;if(i===1){m=l+1;let $=At(m);p=`
        ${$} sourceLocR = ${$}(${u.join()}, 0);
        ++${u[l-1]};
        ${$} sourceLocG = ${$}(${u.join()}, 0);
        ++${u[l-2]};
        ${$} sourceLocA = ${$}(${u.join()}, 0);
        --${u[l-1]};
        ${$} sourceLocB = ${$}(${u.join()}, 0);
        --${u[l-2]};`}else m=l,p=`
        ${c} sourceLocR = coords;
        ++${u[l-1]};
        ${c} sourceLocG = coords;
        ++${u[l-2]};
        ${c} sourceLocA = coords;
        --${u[l-1]};
        ${c} sourceLocB = coords;
        --${u[l-2]};`;let f=["x","y","z","w","u","v"].slice(0,m),h="."+f[m-1],d=f.map($=>"int "+$),g=ve("sourceLocR",m-1).concat("inIdx.r"),x=ve("sourceLocG",m-1).concat("inIdx.g"),b=ve("sourceLocB",m-1).concat("inIdx.b"),C=ve("sourceLocA",m-1).concat("inIdx.a"),w=o==="max"?"greaterThan":"lessThan",I=n?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${C.join()})));`,E=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${x.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${C.join()}) : 0.)`,A=n?"":`
      float getBestIndicesAChannel(${d.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${d.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${A}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${u[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${u[l-2]} < ${a[l-2]-1};
        ${p}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${E};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${I}
          vec4 candidate = ${E};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function WR(r,t,e,o=null){let n=t.shape[0],s=t.shape[1];o!=null&&(n=o.shape[0],s=o.shape[1]);let i=S.computeOptimalWindowSize(s),a={windowSize:i,inSize:s,batchSize:n,outSize:Math.ceil(s/i)},l=new Tx(a,e,o==null),c=[t];o!=null&&c.push(o);let u=r.runWebGLProgram(l,c,"int32");if(u.shape[1]===1)return u;let p=WR(r,t,e,u);return r.disposeIntermediateTensorInfo(u),p}function HR(r,t,e,o=null){let n=o!=null?o.shape:t.shape,s=n[n.length-1],i=S.computeOptimalWindowSize(s),a=new kx(n,i,e,o==null),l=o==null?[t]:[t,o],c=r.runWebGLProgram(a,l,"int32");if(c.shape.length===t.shape.length){let u=HR(r,t,e,c);return r.disposeIntermediateTensorInfo(c),u}return c}function Ex(r,t,e,o){let n=[e];if(S.assertAxesAreInnerMostDims("arg"+o.charAt(0).toUpperCase()+o.slice(1),n,t.shape.length),!P().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let s=[],i=r.texData.get(t.dataId),a=i!==null&&i.isPacked,l=t;a&&(l=r.unpackTensor(t),s.push(l));let[c,u]=S.computeOutAndReduceShapes(l.shape,n),p=y.sizeFromShape(u),m=tt({inputs:{x:l},backend:r,attrs:{shape:[-1,p]}});s.push(m);let f=WR(r,m,o);s.push(f);let h=tt({inputs:{x:f},backend:r,attrs:{shape:c}});return s.forEach(d=>r.disposeIntermediateTensorInfo(d)),h}return HR(r,t,o)}function u6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s}=o,i=y.parseAxisParam(s,n.shape),a=S.getAxesPermutation(i,n.shape.length),l=n,c=[];a!=null&&(l=ue({inputs:{x:n},backend:e,attrs:{perm:a}}),c.push(l),i=S.getInnerMostAxes(i.length,l.shape.length)),S.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let u=Ex(e,l,i[0],"max");return c.forEach(p=>e.disposeIntermediateTensorInfo(p)),u}var qR={kernelName:ei,backendName:"webgl",kernelFunc:u6};function p6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s}=o,i=y.parseAxisParam(s,n.shape),a=S.getAxesPermutation(i,n.shape.length),l=n,c=[];a!=null&&(l=ue({inputs:{x:n},backend:e,attrs:{perm:a}}),c.push(l),i=S.getInnerMostAxes(i.length,l.shape.length)),S.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let u=Ex(e,l,i[0],"min");return c.forEach(p=>e.disposeIntermediateTensorInfo(p)),u}var KR={kernelName:ri,backendName:"webgl",kernelFunc:p6};var m6=Le+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,f6=ht({opSnippet:m6}),jR={kernelName:_n,backendName:"webgl",kernelFunc:f6};var h6=Le+"return log(x + sqrt(x * x + 1.0));",d6=ht({opSnippet:h6}),XR={kernelName:On,backendName:"webgl",kernelFunc:d6};var g6=Le+`
  return atan(x);
`,x6=ht({opSnippet:g6}),YR={kernelName:Ln,backendName:"webgl",kernelFunc:x6};var y6=Xu+`
  return atan(a, b);
`,b6=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Zr+`
  return result;
`,w6=qt({opSnippet:y6,packedOpSnippet:b6}),ZR={kernelName:zn,backendName:"webgl",kernelFunc:w6};var C6=Le+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,I6=ht({opSnippet:C6}),JR={kernelName:Pn,backendName:"webgl",kernelFunc:I6};var Zo=class{constructor(t,e,o,n=!1,s=!1){if(this.variableNames=["x"],e==="avg"&&o)throw new Error("Cannot compute positions for average pool.");let i=t.filterWidth,a=t.strideHeight,l=t.strideWidth,c=t.dilationHeight,u=t.dilationWidth,p=t.effectiveFilterHeight,m=t.effectiveFilterWidth,f=t.padInfo.top,h=t.padInfo.left;this.outputShape=t.outShape;let d=e==="avg",g=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,x=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`,b="0.0";if(d||(b="-1.0 / 1e-20"),o){let $=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${f}, ${h});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${p};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${$} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${n?s?g:x:`wR * ${m} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let C="max",w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(w="avgValue / max(count, 1.0)");let I=Math.floor(i/4)*4,E=i%4,A=`
      if (${d}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${C}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${f}, ${h});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${p};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${I}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${A}
          }

          int xC = xCCorner + ${I};
          if (${E===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${A}
          } else if (${E===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${A}
          } else if (${E===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${A}
          }
        }
        setOutput(${w});
      }
    `}},da=class{constructor(t,e,o,n=!1,s=!1){if(this.variableNames=["x"],e==="avg"&&o)throw new Error("Cannot compute positions for average pool.");let i=t.filterWidth,a=t.strideDepth,l=t.strideHeight,c=t.strideWidth,u=t.dilationDepth,p=t.dilationHeight,m=t.dilationWidth,f=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,g=t.padInfo.front,x=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;let C=e==="avg",w="0.0";if(C||(w="-1.0 / 1e-20"),o){let L=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${c});
        const ivec3 pads = ivec3(${g}, ${x}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${h};
                wR += ${p}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${d};
                  wC += ${m}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${L} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${n?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${h} * ${d} +
                      wR * ${d} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let I="max",E=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(E="avgValue / max(count, 1.0)");let A=Math.floor(i/4)*4,$=i%4,_=`
      if (${C}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${I}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${c});
      const ivec3 pads = ivec3(${g}, ${x}, ${b});
      const float initializationValue = ${w};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${w});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h};
            wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${A}; wC += 4) {
              int xC = xCCorner + wC * ${m};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                getValue(batch, xD, xR, xC + 3 * ${m}, ch)
              );

              ${_}
            }

            int xC = xCCorner + ${A};
            if (${$===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${_}
            } else if (${$===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                initializationValue,
                initializationValue
              );

              ${_}
            } else if (${$===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                initializationValue
              );

              ${_}
            }
          }
        }
        setOutput(${E});
      }
    `}};function S6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t;Tn(n,"avgPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:l}=o,c=1;y.assert(S.eitherStridesOrDilationsAreOne(i,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let u=S.computePool2DInfo(n.shape,s,i,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&y.arraysEqual(u.inShape,u.outShape))return Ne({inputs:{x:n},backend:e});let p=new Zo(u,"avg",!1);return e.runWebGLProgram(p,[n],"float32")}var QR={kernelName:oi,backendName:"webgl",kernelFunc:S6};function v6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:s,strides:i,pad:a,dimRoundingMode:l,dataFormat:c}=o,u=[1,1,1],p=S.computePool3DInfo(n.shape,s,i,u,a,l,c),m=new da(p,"avg",!1);return e.runWebGLProgram(m,[n],"float32")}var tF={kernelName:ni,backendName:"webgl",kernelFunc:v6};var Ax=class{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;let e=t.filterHeight,o=t.filterWidth,n=t.strideHeight,s=t.strideWidth,i=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterHeight,c=t.effectiveFilterWidth,u=l-1-t.padInfo.top,p=c-1-t.padInfo.left,m=1/(e*o);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${p});
      const float avgMultiplier = float(${m});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},$x=class{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;let e=t.filterDepth,o=t.filterHeight,n=t.filterWidth,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,p=t.effectiveFilterDepth,m=t.effectiveFilterHeight,f=t.effectiveFilterWidth,h=p-1-t.padInfo.front,d=m-1-t.padInfo.top,g=f-1-t.padInfo.left,x=1/(e*o*n);this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${g});
      const float avgMultiplier = float(${x});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${m};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function N6(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:s}=t,i=s,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=o,p=[1,1,1],m=S.computePool3DInfo(i.shape,a,l,p,c,u),f=new $x(m);return e.runWebGLProgram(f,[n],i.dtype)}var eF={kernelName:Ul,backendName:"webgl",kernelFunc:N6};function T6(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:s}=t,i=s;Tn([n,s],"avgPoolGrad");let{filterSize:a,strides:l,pad:c}=o,u=S.computePool2DInfo(i.shape,a,l,1,c),p=new Ax(u);return e.runWebGLProgram(p,[n],i.dtype)}var rF={kernelName:Gl,backendName:"webgl",kernelFunc:T6};function k6(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:s}=t,{transposeA:i,transposeB:a}=o;return Al({a:n,b:s,transposeA:i,transposeB:a,backend:e})}var oF={kernelName:si,backendName:"webgl",kernelFunc:k6};var Dx=class{constructor(t,e,o,n,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],S.assertAndGetBroadcastShape(t,e),S.assertAndGetBroadcastShape(t,o);let a="0.0";n!=null&&(S.assertAndGetBroadcastShape(t,n),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";s!=null&&(S.assertAndGetBroadcastShape(t,s),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var Rx=class{constructor(t,e,o,n,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],S.assertAndGetBroadcastShape(t,e),S.assertAndGetBroadcastShape(t,o);let a="vec4(0.0)";n!=null&&(S.assertAndGetBroadcastShape(t,n),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";s!=null&&(S.assertAndGetBroadcastShape(t,s),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var E6=({inputs:r,backend:t,attrs:e})=>{let{x:o,mean:n,variance:s,offset:i,scale:a}=r;y.assert(n.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),y.assert(i==null||n.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),y.assert(a==null||n.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=e;l==null&&(l=.001);let c=[o,n,s],u=null;i!=null&&(u=i.shape,c.push(i));let p=null;a!=null&&(p=a.shape,c.push(a));let m=P().getBool("WEBGL_PACK_NORMALIZATION")?new Rx(o.shape,n.shape,s.shape,u,p,l):new Dx(o.shape,n.shape,s.shape,u,p,l);return t.runWebGLProgram(m,c,c[0].dtype)},nF={kernelName:gi,backendName:"webgl",kernelFunc:E6};var Fx=class{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;let e=At(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let o=A6(this.rank),n,s=t.map((i,a)=>`sourceLoc.${tI[a]} = start[${a}] + coords.${tI[a]};`);n=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      void main() {
        ${n}
        setOutput(getSource(${o}));
      }
    `}},tI=["x","y","z","w","u","v"];function A6(r){if(r===1)return"sourceLoc";if(r<=6)return tI.slice(0,r).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var _x=class{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let e=At(this.rank),o=ve("coords",this.rank),n=ve("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${n.slice(-2).join()})`,i=`getChannel(getSource(${n.join()}), ${s})`,a=`
      result.x = ${i};
      if (++${o[this.rank-1]} < ${t[this.rank-1]}) {
        ++${n[this.rank-1]};
        result.y = ${i};
        --${n[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${o[this.rank-1]};
      if (++${o[this.rank-2]} < ${t[this.rank-2]}) {
        ++${n[this.rank-2]};
        result.z = ${i};
        if (++${o[this.rank-1]} < ${t[this.rank-1]}) {
          ++${n[this.rank-1]};
          result.w = ${i};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((u,p)=>`start[${p}]`).join()});`:t.map((u,p)=>`${n[p]} = ${o[p]} + start[${p}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}};function $6(r,t,e,o){let n=o.texData.get(r.dataId),s=o.makeTensorInfo(e,r.dtype),i=o.texData.get(s.dataId);Object.assign(i,n),i.refCount=1,i.shape=e,i.dtype=r.dtype;let a=Ue.computeFlatOffset(t,y.computeStrides(r.shape));n.slice&&(a+=n.slice.flatOffset),i.slice={flatOffset:a,origDataId:n.slice&&n.slice.origDataId||r.dataId};let l=o.dataRefCount.get(i.slice.origDataId)||1;return o.dataRefCount.set(i.slice.origDataId,l+1),s}function Jo(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:s,size:i}=o,[a,l]=Ue.parseSliceParams(n,s,i);if(Ue.assertParamsValid(n,a,l),y.sizeFromShape(l)===0)return e.makeTensorInfo(l,n.dtype,[]);if(e.shouldExecuteOnCPU([n])||n.dtype==="string"){let p=e.texData.get(n.dataId),m=XD(p.values,a,l,n.shape,n.dtype);return e.makeTensorInfo(l,n.dtype,m)}let{isPacked:c}=e.texData.get(n.dataId),u=Ue.isSliceContinous(n.shape,a,l);if(c||!u){let p=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _x(l):new Fx(l),m=[a];return e.runWebGLProgram(p,[n],n.dtype,m)}return e.uploadToGPU(n.dataId),$6(n,a,l,e)}var sF={kernelName:zi,backendName:"webgl",kernelFunc:Jo};var D6=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:s,crops:i}=o;y.assert(n.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let a=s.reduce((b,C)=>b*C),l=S.getReshaped(n.shape,s,a),c=S.getPermuted(l.length,s.length),u=S.getReshapedPermuted(n.shape,s,a),p=S.getSliceBeginCoords(i,s.length),m=S.getSliceSize(u,i,s.length),f=[],h=tt({inputs:{x:n},backend:e,attrs:{shape:l}}),d=ue({inputs:{x:h},backend:e,attrs:{perm:c}}),g=tt({inputs:{x:d},backend:e,attrs:{shape:u}}),x=Jo({inputs:{x:g},backend:e,attrs:{begin:p,size:m}});return f.push(h),f.push(d),f.push(g),f.forEach(b=>e.disposeIntermediateTensorInfo(b)),x},iF={kernelName:ii,backendName:"webgl",kernelFunc:D6};function R6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:s}=t,{size:i}=o,a=e.readSync(n.dataId),l=e.readSync(s.dataId),c=fx(a,l,s.dtype,s.shape,i);return e.makeTensorInfo([i],s.dtype,c)}var aF={kernelName:Wl,backendName:"webgl",kernelFunc:R6};var F6=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,_6=`
  return float(int(a.r) & int(b.r));
`;function O6(r){let{inputs:t,backend:e}=r,{a:o,b:n}=t,s=P().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=P().getNumber("WEBGL_VERSION");if(e.shouldExecuteOnCPU([o,n])||i===1){let l=e.texData.get(o.dataId).values,c=e.texData.get(n.dataId).values,[u,p]=bD(o.shape,n.shape,l,c,o.dtype),m=e.makeTensorInfo(p,o.dtype),f=e.texData.get(m.dataId);return f.values=u,m}let a;return s?a=new Yr(F6,o.shape,n.shape,!1):a=new Or(_6,o.shape,n.shape),e.runWebGLProgram(a,[o,n],o.dtype)}var lF={kernelName:up,backendName:"webgl",kernelFunc:O6};function L6(r){let{inputs:t,backend:e}=r,{s0:o,s1:n}=t,s=e.readSync(o.dataId),i=e.readSync(n.dataId),a=S.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}var cF={kernelName:lh,backendName:"webgl",kernelFunc:L6};var P6="return float(a != b);",eI=qt({opSnippet:P6,cpuKernelImpl:MD,dtype:"bool"}),uF={kernelName:Da,backendName:"webgl",kernelFunc:eI};function Hs(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.texData.get(o.dataId);return Ne({inputs:{x:n.complexTensorInfos.real},backend:e})}var pF={kernelName:dc,backendName:"webgl",kernelFunc:Hs};var z6="return float(int(x));";function mF(r,t){let e=new rr(r.shape,z6),o=t.runWebGLProgram(e,[r],"int32");return{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}function rI(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dtype:s}=o;if(s==="complex64"){if(n.dtype==="complex64")return Ne({inputs:{x:n},backend:e});let i=ie(n.shape),a=rI({inputs:{x:n},backend:e,attrs:{dtype:"float32"}}),l=Lr({inputs:{real:a,imag:i},backend:e});return i.dispose(),e.disposeIntermediateTensorInfo(a),l}if(n.dtype==="complex64"){let i=Hs({inputs:{input:n},backend:e}),a=rI({inputs:{x:i},backend:e,attrs:{dtype:s}});return e.disposeIntermediateTensorInfo(i),a}if(!y.hasEncodingLoss(n.dtype,s)){let i=Ne({inputs:{x:n},backend:e});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(e.shouldExecuteOnCPU([n])){let i=e.texData.get(n.dataId).values,[a,l,c]=wD(i,n.shape,n.dtype,s);return e.makeTensorInfo(a,l,c)}if(s==="int32")return mF(n,e);if(s==="bool"){let i=e.makeTensorInfo([],"bool",y.getTypedArrayFromDType("bool",1)),l=eI({inputs:{a:n,b:i},backend:e});return e.disposeIntermediateTensorInfo(i),l}throw new Error(`Error in Cast: failed to cast ${n.dtype} to ${s}`)}var fF={kernelName:rn,backendName:"webgl",kernelFunc:rI};var hF="return ceil(x);",B6=ht({opSnippet:hF,packedOpSnippet:hF,cpuKernelImpl:CD}),dF={kernelName:Bn,backendName:"webgl",kernelFunc:B6};var Ox=class{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};var Lx=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function M6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{clipValueMin:s,clipValueMax:i}=o,a;P().getBool("WEBGL_PACK_CLIP")?a=new Lx(n.shape):a=new Ox(n.shape);let l=[[s],[i]];return e.runWebGLProgram(a,[n],n.dtype,l)}var gF={kernelName:Mn,backendName:"webgl",kernelFunc:M6};var Px=class{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function xF(r,t){return{dataId:t.dataId,dtype:t.dtype,shape:r.shape}}function V6(r){let{inputs:t,backend:e}=r,{x:o}=t,n=e.texData.get(o.dataId),s=new Px(o.shape),i=[xF(o,n.complexTensorInfos.real),xF(o,n.complexTensorInfos.imag)];return e.runWebGLProgram(s,i,i[0].dtype)}var yF={kernelName:ai,backendName:"webgl",kernelFunc:V6};var zx=class{constructor(t){this.outputShape=[],this.outputShape=S.computeOutShape(t,1),this.variableNames=t.map((i,a)=>`T${a}`);let e=new Array(t.length-1);e[0]=t[0][1];for(let i=1;i<e.length;i++)e[i]=e[i-1]+t[i][1];let o=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<e.length;i++){let a=e[i-1];o.push(`else if (yC < ${e[i]}) setOutput(getT${i}(yR, yC-${a}));`)}let n=e.length,s=e[e.length-1];o.push(`else setOutput(getT${n}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${o.join(`
        `)}
      }
    `}};var Mx=class{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=S.computeOutShape(t,e);let o=this.outputShape,n=o.length,s=At(n),i=ve("coords",n),a=["x","y","z","w","u","v"].slice(0,n);this.variableNames=t.map((d,g)=>`T${g}`);let l=new Array(t.length-1);l[0]=t[0][e];for(let d=1;d<l.length;d++)l[d]=l[d-1]+t[d][e];let c=a[e],u=a.slice(-2),p=a.join(),m=`if (${c} < ${l[0]}) {
        return getChannel(
            getT0(${p}), vec2(${u.join()}));
        }`;for(let d=1;d<l.length;d++){let g=l[d-1];m+=`
        if (${c} < ${l[d]}  && ${c} >= ${l[d-1]}) {
          return getChannel(
            getT${d}(${Bx(a,c,g)}),
            vec2(${Bx(u,c,g)}));
        }`}let f=l.length,h=l[l.length-1];m+=`
        return getChannel(
          getT${f}(${Bx(a,c,h)}),
          vec2(${Bx(u,c,h)}));`,this.userCode=`
      float getValue(${a.map(d=>"int "+d)}) {
        ${m}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[n-1]} = ${i[n-1]} + 1;
        if (${i[n-1]} < ${o[n-1]}) {
          result.g = getValue(${i});
        }

        ${i[n-2]} = ${i[n-2]} + 1;
        if (${i[n-2]} < ${o[n-2]}) {
          result.a = getValue(${i});
        }

        ${i[n-1]} = ${i[n-1]} - 1;
        if (${i[n-2]} < ${o[n-2]} &&
            ${i[n-1]} < ${o[n-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}};function Bx(r,t,e){let o=r.indexOf(t);return r.map((s,i)=>i===o?`${s} - ${e}`:s).join()}function $l(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.texData.get(o.dataId);return Ne({inputs:{x:n.complexTensorInfos.imag},backend:e})}var bF={kernelName:ac,backendName:"webgl",kernelFunc:$l};function Zu(r,t,e){let o=r[0].dtype;if(o==="complex64"){let f=r.map(b=>Hs({inputs:{input:b},backend:e})),h=r.map(b=>$l({inputs:{input:b},backend:e})),d=Zu(f,t,e),g=Zu(h,t,e),x=Lr({inputs:{real:d,imag:g},backend:e});return f.forEach(b=>e.disposeIntermediateTensorInfo(b)),h.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(g),x}let n=e.shouldExecuteOnCPU(r);if(o==="string"&&(n=!0),n){let f=r.map(w=>{let E=[-1,y.sizeFromShape(w.shape.slice(t))];return tt({inputs:{x:w},backend:e,attrs:{shape:E}})}),h=f.map(w=>({vals:e.readSync(w.dataId),shape:w.shape})),d=S.computeOutShape(f.map(w=>w.shape),1),g=f[0].shape[0]===1,x=ID(h,d,o,g),b=S.computeOutShape(r.map(w=>w.shape),t),C=e.makeTensorInfo(b,o,x);return f.forEach(w=>e.disposeIntermediateTensorInfo(w)),C}let s=r.filter(f=>y.sizeFromShape(f.shape)>0),i=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(s.length===1){let f=i?new rr(r[0].shape,kn):new _r(r[0].shape,kn);return e.runWebGLProgram(f,r,o)}let a=P().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>a){let f=[];for(let d=0;d<s.length;d+=a){let g=s.slice(d,d+a);f.push(Zu(g,t,e))}let h=Zu(f,t,e);for(let d of f)e.disposeIntermediateTensorInfo(d);return h}if(i){let f=new Mx(s.map(h=>h.shape),t);return e.runWebGLProgram(f,s,o)}let{tensors2D:l,outShape:c}=G6(s,t,e),u=new zx(l.map(f=>f.shape)),p=e.runWebGLProgram(u,l,o);l.forEach(f=>e.disposeIntermediateTensorInfo(f));let m=tt({inputs:{x:p},attrs:{shape:c},backend:e});return e.disposeIntermediateTensorInfo(p),m}function G6(r,t,e){let o=S.computeOutShape(r.map(s=>s.shape),t);return{tensors2D:r.map(s=>tt({inputs:{x:s},attrs:{shape:[-1,y.sizeFromShape(s.shape.slice(t))]},backend:e})),outShape:o}}function oI(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o,s=y.parseAxisParam(n,t[0].shape)[0],i=t.map(c=>c.shape);S.assertParamsConsistent(i,s);let a=S.computeOutShape(t.map(c=>c.shape),s);if(y.sizeFromShape(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);let l=t.filter(c=>y.sizeFromShape(c.shape)>0);return l.length===1?Ne({inputs:{x:l[0]},backend:e}):Zu(l,s,e)}var wF={kernelName:li,backendName:"webgl",kernelFunc:oI};var Ju=class{constructor(t,e=!1,o=null,n=!1,s=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;let i=t.padInfo.top,a=t.padInfo.left,l=t.strideHeight,c=t.strideWidth,u=t.dilationHeight,p=t.dilationWidth,m=t.filterHeight,f=t.filterWidth,h=Math.floor(t.inChannels/4)*4,d=t.inChannels%4,g=t.dataFormat==="channelsLast",x=g?1:2,b=g?2:3,C=g?3:1,w="",I="";o&&(n?w=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:s?w=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:w=`
          float activation(float x) {
            ${o}
          }
        `,I="result = activation(result);");let E=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${w}

      const ivec2 strides = ivec2(${l}, ${c});
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${C}];

        ivec2 xRCCorner =
            ivec2(coords[${x}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${m}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${h}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${d===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${h}) *
                    getW(wR, wC, ${h}, d2);
              } else {
                dotProd +=
                    getX(batch, ${h}, xR, xC) *
                    getW(wR, wC, ${h}, d2);
              }

            } else if (${d===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${d===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2),
                getW(wR, wC, ${h} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1),
                  getX(batch, xR, xC, ${h} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC),
                  getX(batch, ${h} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${E}
        ${I}
        setOutput(result);
      }
    `}},Vx=class{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;let e=t.padInfo.front,o=t.padInfo.top,n=t.padInfo.left,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,p=t.filterDepth,m=t.filterHeight,f=t.filterWidth,h=Math.floor(t.inChannels/4)*4,d=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${i}, ${a});
      const ivec3 pads = ivec3(${e}, ${o}, ${n});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${p}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${h}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${d===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${h}) *
                  getW(wF, wR, wC, ${h}, d2);
              } else if (${d===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${d===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1),
                  getX(batch, xF, xR, xC, ${h} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2),
                  getW(wF, wR, wC, ${h} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var Qu=class{constructor(t,e=!1,o=null,n=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Xt(this.outputShape.length);let i=t.padInfo.left,a=t.strideWidth,l=t.dilationWidth,c=t.filterHeight,u=t.filterWidth,p=u,m=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<u;g++)m+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;m+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let g=0;g<u;g++)m+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;m+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(p+1)/2;g++){let x=g*2;if(m+=`
           xC = xCCorner + ${x*l};
           `,a===1){if(x<u&&(i%2===1?(m+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }
               `,l===1&&x>0?m+=`
                 xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                 `:m+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                   } else {
                     xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                   }
                   `):m+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xC${x} = xTexelC${x};
                 `,x+1<u)){let b=i%2===0?y.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(m+=`
                   xCOffset = xC + imod(pads[1], 2) + ${b};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                     xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${x+1}.zw = vec2(0.0);
                     }
                     xTexelC${x+1}Ready = 1;
                   }
                   `,l>1?m+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                     } else {
                      xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                     }
                     `:m+=`
                     xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                     `):b===1?m+=`
                     xC${x+1} = xTexelC${x};
                     `:m+=`
                     xCOffset = xC + ${b};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                       xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${x+1}.zw = vec2(0.0);
                       }
                       xTexelC${x+1}Ready = 1;
                     }

                     xC${x+1} = xTexelC${x+1};
                     `}}else x<u&&(i%2===1?(m+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.0);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
               `,x+1<u&&(m+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                 `)):(m+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(
                   xTexelC${x}.xy, xTexelC${x+1}.xy);
               `,x+1<u&&(m+=`
                   xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                 `)));x<u&&(m+=`
             wTexel = getW(r, ${x}, d1, d2);
             dotProd += xC${x}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${x}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,x+1<u&&(m+=`
               wTexel = getW(r, ${x+1}, d1, d2);
               dotProd += xC${x+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${x+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}m+=`
     }
   `,m+=`
     }
   `,m+=`
     }
   `;let f="",h="";o&&(n?f=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${o}
         }`:s?f=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${o}
         }`:f=`vec4 activation(vec4 x) {
           ${o}
         }`,h="result = activation(result);");let d=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${f}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${m}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${d}
         ${h}
         setOutput(result);
       }
     `}};var Gx=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=Xt(this.outputShape.length);let{dataFormat:o}=e,n=xe(),s=o==="channelsLast",i=s?1:2,a=s?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`,c="";for(let u=0;u<=1;u++)for(let p=0;p<=1;p++)c+=`
          blockIndex = rc.z + ${p};
          pos = rc.y + ${u};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${s}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+p}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+p}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${n.output} = result;
      }
    `}};function Ux(r,t){let e=r.length;return e>=3?t?[...r.slice(0,-3),r[e-3]*r[e-2],r[e-1]]:[...r.slice(0,-3),r[e-3],r[e-2]*r[e-1]]:!t&&e===1&&r[0]>1?[r[0],1]:null}function Wx({x:r,filter:t,convInfo:e,backend:o,bias:n=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let l=r.shape,c=o.texData.get(r.dataId),u=e.inChannels,p=l[0]*l[1]*l[2],m=e.outChannels,f=e.dataFormat==="channelsLast",h=!1,d=!1,g,x=[];if(s!=null){let w=Ux(s.shape,f);w!=null&&(s=tt({inputs:{x:s},backend:o,attrs:{shape:w}}),x.push(s))}if(n!=null){let w=Ux(n.shape,f);w!=null&&(n=tt({inputs:{x:n},backend:o,attrs:{shape:w}}),x.push(n))}if(!((p===1||m===1)&&u>QC)&&c.isPacked&&f&&c.texture!=null&&l[2]%2!==0&&y.arraysEqual(c.shape.slice(-3),l.slice(-3))){let w=l[0]*l[1]*(l[2]+1),I={dataId:r.dataId,shape:[1,w,e.inChannels],dtype:r.dtype},E=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,y.assert(vl(c.shape,I.shape),()=>`packed reshape ${c.shape} to ${I.shape} isn't free`);let A=tt({inputs:{x:t},backend:o,attrs:{shape:[1,e.inChannels,e.outChannels]}});x.push(A);let $=Al({a:I,b:A,backend:o,transposeA:h,transposeB:d,bias:n,activation:a,preluActivationWeights:s,leakyreluAlpha:i}),_=o.texData.get($.dataId);y.assert(_.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=E,_.shape=e.outShape,g=Ne({inputs:{x:$},backend:o}),g.shape=e.outShape,x.push($)}else{let w=e.outHeight*e.outWidth,I=tt({inputs:{x:r},backend:o,attrs:{shape:f?[e.batchSize,w,e.inChannels]:[e.batchSize,e.inChannels,w]}}),E=tt({inputs:{x:t},backend:o,attrs:{shape:[1,e.inChannels,e.outChannels]}}),A=Al({a:f?I:E,b:f?E:I,transposeA:!f,transposeB:d,backend:o,bias:n,activation:a,preluActivationWeights:s,leakyreluAlpha:i});g=tt({inputs:{x:A},backend:o,attrs:{shape:e.outShape}}),x.push(I),x.push(E),x.push(A)}for(let w of x)o.disposeIntermediateTensorInfo(w);return g}function Hx({x:r,filter:t,convInfo:e,backend:o,bias:n=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let{filterWidth:l,filterHeight:c,inChannels:u,outWidth:p,outHeight:m,dataFormat:f}=e,h=f==="channelsLast",d=l*c*u,g=m*p,x=[e.batchSize,d,g],b=!0,C=!1,w=[];if(s!=null){let q=Ux(s.shape,h);q!=null&&(s=tt({inputs:{x:s},backend:o,attrs:{shape:q}}),w.push(s))}if(n!=null){let q=Ux(n.shape,h);q!=null&&(n=tt({inputs:{x:n},backend:o,attrs:{shape:q}}),w.push(n))}let I=tt({inputs:{x:t},backend:o,attrs:{shape:[1,d,y.sizeFromShape(t.shape)/d]}});w.push(I);let E=new Gx(x,e),A=[r.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],$=o.runWebGLProgram(E,[r],"float32",A),_=tt({inputs:{x:$},backend:o,attrs:{shape:x}});w.push($),w.push(_);let L=n!=null,M=s!=null,V=a==="leakyrelu",G=a?Ws(a,!0):null,W=new Yu(h?_.shape:I.shape,h?I.shape:_.shape,h?[e.batchSize,g,e.outChannels]:[e.batchSize,e.outChannels,g],b,C,L,G,M,V),U=h?[_,I]:[I,_];if(n&&U.push(n),M&&U.push(s),V){let q=o.makeTensorInfo([],"float32",y.createScalarValue(i,"float32"));U.push(q),w.push(q)}let K=o.runWebGLProgram(W,U,"float32"),Z=tt({inputs:{x:K},backend:o,attrs:{shape:e.outShape}});w.push(K);for(let q of w)o.disposeIntermediateTensorInfo(q);return Z}function U6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s}=t,{strides:i,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=o,p=S.convertConv2DDataFormat(l),m=S.computeConv2DInfo(n.shape,s.shape,i,c,a,u,!1,p),f;if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))f=Wx({x:n,filter:s,convInfo:m,backend:e});else if(m.strideWidth<=2&&p==="channelsLast"&&P().getBool("WEBGL_EXP_CONV")){let d=new Qu(m),g=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]];f=e.runWebGLProgram(d,[n,s],"float32",g)}else if(P().getBool("WEBGL_CONV_IM2COL"))f=Hx({x:n,filter:s,convInfo:m,backend:e});else{let d=new Ju(m);f=e.runWebGLProgram(d,[n,s],"float32")}let h=tt({inputs:{x:f},backend:e,attrs:{shape:m.outShape}});return e.disposeIntermediateTensorInfo(f),h}var CF={kernelName:ci,backendName:"webgl",kernelFunc:U6};var qx=class{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideHeight,o=t.strideWidth,n=t.padInfo.top,s=t.padInfo.left,i=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${n};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${o} - ${s};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              ${i?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Kx=class{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterHeight,o=t.filterWidth,n=t.strideHeight,s=t.strideWidth,i=t.dataFormat==="channelsLast",a=e-1-t.padInfo.top,l=o-1-t.padInfo.left,c=i?1:2,u=i?2:3,p=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${p}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${o} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},jx=class{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideDepth,o=t.strideHeight,n=t.strideWidth,s=t.padInfo.front,i=t.padInfo.top,a=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${s};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${o} - ${i};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${n} - ${a};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Xx=class{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterDepth,o=t.filterHeight,n=t.filterWidth,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,l=e-1-t.padInfo.front,c=o-1-t.padInfo.top,u=n-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${c}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${o}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${o} - 1 - wR;

            for (int wC = 0; wC < ${n}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${n} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function W6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:s}=t,{strides:i,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=o,p=S.convertConv2DDataFormat(l),m=S.computeConv2DInfo(n.shape,u,i,1,a,c,!1,p),f=new qx(m);return e.runWebGLProgram(f,[n,s],"float32")}var IF={kernelName:ql,backendName:"webgl",kernelFunc:W6};var Yx=class{constructor(t){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=t.inShape,this.enableShapeUniforms=Xt(this.outputShape.length);let e=t.filterHeight,o=t.filterWidth,n=e-1-t.padInfo.top,s=o-1-t.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${n}, ${s});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${o}; wC++) {
            int wCPerm = ${o} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${t.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${t.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}};function H6(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:s}=t,{inputShape:i,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=o,p=S.convertConv2DDataFormat(c),m=S.computeConv2DInfo(i,s.shape,a,1,l,u,!1,p);if(P().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&p==="channelsLast"){let f=[[m.strideHeight,m.strideWidth]],h=new Yx(m);return e.runWebGLProgram(h,[n,s],"float32",f)}else{let f=new Kx(m);return e.runWebGLProgram(f,[n,s],"float32")}}var SF={kernelName:ui,backendName:"webgl",kernelFunc:H6};function q6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s}=t,{strides:i,pad:a,dilations:l}=o,c=S.computeConv3DInfo(n.shape,s.shape,i,l,a),u=new Vx(c);return e.runWebGLProgram(u,[n,s],"float32")}var vF={kernelName:pi,backendName:"webgl",kernelFunc:q6};function K6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:s}=t,{strides:i,pad:a,filterShape:l}=o,c=S.computeConv3DInfo(n.shape,l,i,1,a),u=new jx(c);return e.runWebGLProgram(u,[n,s],"float32")}var NF={kernelName:Kl,backendName:"webgl",kernelFunc:K6};function j6(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:s}=t,{pad:i,strides:a,inputShape:l}=o,c=S.computeConv3DInfo(l,s.shape,a,1,i),u=new Xx(c);return e.runWebGLProgram(u,[n,s],"float32")}var TF={kernelName:jl,backendName:"webgl",kernelFunc:j6};var X6=Ro+`
  return cos(x);
`,Y6=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Zr}
  return result;
`,Z6=ht({opSnippet:X6,packedOpSnippet:Y6}),kF={kernelName:Vn,backendName:"webgl",kernelFunc:Z6};var J6=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Q6=ht({opSnippet:J6}),EF={kernelName:Gn,backendName:"webgl",kernelFunc:Q6};var Zx=class{constructor(t,e,o,n,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[i,a,l,c]=t,[u]=e,[p,m]=o;this.outputShape=[u,p,m,c];let f=n==="bilinear"?1:0,[h,d]=[`${a-1}.0`,`${l-1}.0`],[g,x,b]=p>1?[`${(a-1)/(p-1)}`,"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[C,w,I]=m>1?[`${(l-1)/(m-1)}`,"(x2-x1) * width_ratio",`x1*${d} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${d}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${C});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${w};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${h} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${I};
        if( in_x < 0.0 || in_x > ${d} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var tX=r=>{let{inputs:t,backend:e,attrs:o}=r,{image:n,boxes:s,boxInd:i}=t,{cropSize:a,method:l,extrapolationValue:c}=o,u=new Zx(n.shape,s.shape,a,l,c);return e.runWebGLProgram(u,[n,s,i],"float32")},AF={kernelName:Yl,backendName:"webgl",kernelFunc:tX};var Dl;(function(r){r.Prod="*",r.Sum="+"})(Dl||(Dl={}));var Jf=class{constructor(t,e,o,n){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let s=this.outputShape.length,i=this.op===Dl.Prod?"1.0":"0.0",a=o?i:`getX(${$F(s,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1],c="",u="";o?(c=n?`end != ${l-1}`:"end != 0",u=n?"end + 1":"end - 1"):(c=n?`end + pow2 < ${l}`:"end >= pow2",u=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${At(s)} coords = getOutputCoords();
        int end = ${DF(s,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${u};
          ${DF(s,"coords",this.op)} = idx;
          val ${this.op}= getX(${$F(s,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function $F(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.x, ${t}.y`;if(r===3)return`${t}.x, ${t}.y, ${t}.z`;if(r===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function DF(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.y`;if(r===3)return`${t}.z`;if(r===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function Jx(r,t,e,o,n,s){let i=t.shape.length,a=S.getAxesPermutation([o],i),l=t;a!=null&&(l=ue({inputs:{x:t},backend:e,attrs:{perm:a}}));let c=S.getInnerMostAxes(1,i)[0];if(c!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${o}`);let u=l.shape[c],p=Ne({inputs:{x:l},backend:e});for(let m=0;m<=Math.ceil(Math.log2(u))-1;m++){let f=new Jf(r,l.shape,!1,s),h=[[m]],d=p;p=e.runWebGLProgram(f,[p],p.dtype,h),e.disposeIntermediateTensorInfo(d)}if(n){let m=new Jf(r,l.shape,n,s),f=p;p=e.runWebGLProgram(m,[p],p.dtype),e.disposeIntermediateTensorInfo(f)}if(a!=null){let m=S.getUndoAxesPermutation(a),f=ue({inputs:{x:p},backend:e,attrs:{perm:m}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(l),f}return p}function eX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,exclusive:i,reverse:a}=o;return Jx(Dl.Prod,n,e,s,i,a)}var RF={kernelName:Xl,backendName:"webgl",kernelFunc:eX};function rX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,exclusive:i,reverse:a}=o;return Jx(Dl.Sum,n,e,s,i,a)}var FF={kernelName:mi,backendName:"webgl",kernelFunc:rX};function oX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:s}=t,{size:i,binaryOutput:a}=o;if(n.shape.length===1){let l=e.readSync(n.dataId),c=e.readSync(s.dataId),u=fx(l,c,s.dtype,s.shape,i);return e.makeTensorInfo([i],s.dtype,u)}else if(n.shape.length===2){let l=e.bufferSync(n),c=e.bufferSync(s),u=yD(l,c,i,a);return e.makeTensorInfo(u.shape,s.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${n.shape.length}.`)}var _F={kernelName:Zl,backendName:"webgl",kernelFunc:oX};var Qx=class{constructor(t,e,o){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=o,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function nX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockSize:s,dataFormat:i}=o,a=n.shape[0],l=i==="NHWC"?n.shape[1]:n.shape[2],c=i==="NHWC"?n.shape[2]:n.shape[3],u=i==="NHWC"?n.shape[3]:n.shape[1],p=l*s,m=c*s,f=u/(s*s),h=i==="NHWC"?[a,p,m,f]:[a,f,p,m],d=new Qx(h,s,i);return e.runWebGLProgram(d,[n],n.dtype)}var OF={kernelName:Jl,backendName:"webgl",kernelFunc:nX};var tp=class{constructor(t,e=!1,o=null,n=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Xt(this.outputShape.length);let i=t.filterHeight,a=t.filterWidth,l=t.outChannels/t.inChannels,c="",u="";o&&(n?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:s?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:c=`
          float activation(float x) {
            ${o}
          }
        `,u="result = activation(result);");let p=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${p}
        ${u}
        setOutput(result);
      }
    `}};var ep=class{constructor(t,e=!1,o=null,n=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Xt(this.outputShape.length);let i=t.outChannels/t.inChannels,a=t.padInfo.left,l=t.strideWidth,c=t.dilationWidth,u=t.filterHeight,p=t.filterWidth,m=p,f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<p;x++)f+=`
          vec4 xTexelC${x*2};
          int xTexelC${x*2}Ready;
          vec4 xTexelC${x*2+1};
          int xTexelC${x*2+1}Ready;
          vec4 xC${x};`;f+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let x=0;x<p;x++)f+=`
          xTexelC${x*2} = vec4(0.0);
          xTexelC${x*2}Ready = 0;
          xTexelC${x*2+1} = vec4(0.0);
          xTexelC${x*2+1}Ready = 0;
          xC${x} = vec4(0.0);`;f+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let x=0;x<(m+1)/2;x++){let b=x*2;if(f+=`
          xC = xCCorner + ${b*c};
          `,l===1){if(b<p&&(a%2===1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,c===1&&b>0?f+=`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<p)){let C=a%2===0?y.nearestLargerEven(c):c;c%2===0&&a%2===1||c%2!==0&&a%2!==1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${C};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,c>1?f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                    } else {
                     xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                    }
                    `:f+=`
                    xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                    `):C===1?f+=`
                    xC${b+1} = xTexelC${b};
                    `:f+=`
                    xCOffset = xC + ${C};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<p&&(a%2===1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<p&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<p&&(f+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<p&&(f+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<p&&(f+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
    }
  `,f+=`
      }
    `;let h="",d="";o&&(n?h=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:s?h=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:h=`vec4 activation(vec4 x) {
          ${o}
        }`,d="result = activation(result);");let g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${h}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${d}
        setOutput(result);
      }
    `}};function sX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s}=t,{strides:i,pad:a,dilations:l,dimRoundingMode:c}=o,u=l;u==null&&(u=[1,1]),y.assert(S.eitherStridesOrDilationsAreOne(i,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let p=S.computeConv2DInfo(n.shape,s.shape,i,u,a,c,!0),m;P().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?m=new ep(p):m=new tp(p);let f=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return e.runWebGLProgram(m,[n,s],"float32",f)}var LF={kernelName:fi,backendName:"webgl",kernelFunc:sX};var ty=class{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideHeight,o=t.strideWidth,n=t.padInfo.top,s=t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${n};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${o} - ${s};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},ey=class{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterHeight,o=t.filterWidth,n=t.strideHeight,s=t.strideWidth,i=e-1-t.padInfo.top,a=o-1-t.padInfo.left,l=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${o} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function iX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:s}=t,{strides:i,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=o,p=S.computeConv2DInfo(n.shape,u,i,a,l,c,!0),m=new ty(p);return e.runWebGLProgram(m,[n,s],"float32")}var PF={kernelName:Ql,backendName:"webgl",kernelFunc:iX};function aX(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:s}=t,{strides:i,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=o,p=S.computeConv2DInfo(u,s.shape,i,a,l,c,!0),m=new ey(p);return e.runWebGLProgram(m,[n,s],"float32")}var zF={kernelName:tc,backendName:"webgl",kernelFunc:aX};var ry=class{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function lX(r){let{inputs:t,backend:e}=r,{x:o}=t,n=[...o.shape,...o.shape],s=y.sizeFromShape(o.shape),i=tt({inputs:{x:o},backend:e,attrs:{shape:[s]}}),a=new ry(s),l=e.runWebGLProgram(a,[i],i.dtype),c=tt({inputs:{x:l},backend:e,attrs:{shape:n}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),c}var BF={kernelName:ch,backendName:"webgl",kernelFunc:lX};var oy=class{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;let{inHeight:e,inWidth:o,padInfo:n,strideHeight:s,strideWidth:i,filterHeight:a,filterWidth:l,dilationHeight:c,dilationWidth:u}=t,{top:p,left:m}=n;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${i});
      const ivec2 pads = ivec2(${p}, ${m});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${o}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function cX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s}=t,{strides:i,pad:a,dilations:l}=o,c=S.computeDilation2DInfo(n.shape,s.shape,i,a,"NHWC",l),u,p=new oy(c);u=e.runWebGLProgram(p,[n,s],"float32");let m=tt({inputs:{x:u},backend:e,attrs:{shape:c.outShape}});return e.disposeIntermediateTensorInfo(u),m}var MF={kernelName:hi,backendName:"webgl",kernelFunc:cX};function uX(r){let{inputs:t,backend:e,attrs:o}=r,{equation:n}=o,s=t,{allDims:i,summedDims:a,idDims:l}=S.decodeEinsumEquation(n,s.length);S.checkEinsumDimSizes(i.length,l,s);let{path:c,steps:u}=S.getEinsumComputePath(a,l),p=u.length,m=null,f=i.length,h=[];for(let d=0;d<p;++d){for(let g of u[d]){let{permutationIndices:x,expandDims:b}=S.getEinsumPermutation(f,l[g]),C;S.isIdentityPermutation(x)?C=s[g]:(C=ue({inputs:{x:s[g]},backend:e,attrs:{perm:x}}),h.push(C));let w=C.shape.slice();for(let I=0;I<b.length;++I)w.splice(b[I],0,1);y.arraysEqual(C.shape,w)||(C=tt({inputs:{x:C},backend:e,attrs:{shape:w}}),h.push(C)),m===null?m=C:(m=Yf({inputs:{a:C,b:m},backend:e}),h.push(m))}d<p-1&&(c[d]>=0&&(m=El({inputs:{x:m},backend:e,attrs:{axis:c[d]-(i.length-f),keepDims:!1}}),h.push(m)),f--)}for(let d of h)d!==m&&e.disposeIntermediateTensorInfo(d);return m}var VF={kernelName:ec,backendName:"webgl",kernelFunc:uX};var pX="return (x >= 0.0) ? x : (exp(x) - 1.0);",mX=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,fX=ht({opSnippet:pX,packedOpSnippet:mX}),GF={kernelName:Wn,backendName:"webgl",kernelFunc:fX};var hX="return (b >= 0.0) ? a : a * (b + 1.0);",dX=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,gX=r=>{let{inputs:t,backend:e}=r,{dy:o,y:n}=t,s=P().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Yr(dX,o.shape,n.shape):new Or(hX,o.shape,n.shape);return e.runWebGLProgram(s,[o,n],o.dtype)},UF={kernelName:rc,backendName:"webgl",kernelFunc:gX};var xX=`
  return vec4(equal(a, b));
`,yX="return float(a == b);",bX=qt({opSnippet:yX,packedOpSnippet:xX,dtype:"bool",cpuKernelImpl:SD}),WF={kernelName:va,backendName:"webgl",kernelFunc:bX};var wX=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${S.ERF_P};
  float a1 = ${S.ERF_A1};
  float a2 = ${S.ERF_A2};
  float a3 = ${S.ERF_A3};
  float a4 = ${S.ERF_A4};
  float a5 = ${S.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,CX=ht({opSnippet:wX}),HF={kernelName:Hn,backendName:"webgl",kernelFunc:CX};var IX=Ro+`
  return exp(x);
`,SX=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,nI=ht({opSnippet:IX,packedOpSnippet:SX,cpuKernelImpl:vD,dtype:"float32"}),qF={kernelName:qn,backendName:"webgl",kernelFunc:nI};function ny(r){let{inputs:t,attrs:e,backend:o}=r,{dim:n}=e,{input:s}=t,i=s.shape.length,a=s.shape.slice(),l=n;return n<0&&(y.assert(-(i+1)<=n,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+n+1),a.splice(l,0,1),tt({inputs:{x:s},backend:o,attrs:{shape:a}})}var KF={kernelName:di,backendName:"webgl",kernelFunc:ny};var jF="return exp(x) - 1.0;",vX=ht({opSnippet:jF,packedOpSnippet:jF,cpuKernelImpl:ND}),XF={kernelName:Kn,backendName:"webgl",kernelFunc:vX};var Qf=class{constructor(t,e,o){this.variableNames=["real","imag"];let n=e[1];this.outputShape=e;let s=o?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=o?`${n}.0`:"1.0",a;if(t==="real")a="return real * expR - imag * expI;";else if(t==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${n});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${n}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function sy(r,t,e){let o=e.texData.get(r.dataId),n=y.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=n/s,a=tt({inputs:{x:r},backend:e,attrs:{shape:[i,s]}}),l=a.shape,c=new Qf("real",l,t),u=new Qf("imag",l,t),p=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:l},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:l}],m=e.runWebGLProgram(c,p,"float32"),f=e.runWebGLProgram(u,p,"float32"),h=Lr({inputs:{real:m,imag:f},backend:e});e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f);let d=tt({inputs:{x:h},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(h),d}function NX(r){let{inputs:t,backend:e}=r,{input:o}=t;return sy(o,!1,e)}var YF={kernelName:oc,backendName:"webgl",kernelFunc:NX};var iy=class{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function qs(r){let{backend:t,attrs:e}=r,{shape:o,value:n}=e,{dtype:s}=e;if(s=s||y.inferDtype(n),s==="string"){let i=y.getArrayFromDType(s,y.sizeFromShape(o));return i.fill(n),t.makeTensorInfo(o,s,i)}else{let i=new iy(o,n),a=[[n]];return t.runWebGLProgram(i,[],s,a)}}var ZF={kernelName:nc,backendName:"webgl",kernelFunc:qs};var ay=class{constructor(t){this.variableNames=["Image"],this.outputShape=[];let e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var JF={kernelName:sc,backendName:"webgl",kernelFunc:({inputs:r,backend:t})=>{let{image:e}=r,o=t,n=new ay(e.shape);return o.runWebGLProgram(n,[e],e.dtype)}};var QF="return floor(x);",TX=ht({opSnippet:QF,packedOpSnippet:QF,cpuKernelImpl:TD}),t_={kernelName:jn,backendName:"webgl",kernelFunc:TX};var kX=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,EX=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,AX=qt({opSnippet:kX,packedOpSnippet:EX,dtype:"int32"}),e_={kernelName:Xn,backendName:"webgl",kernelFunc:AX};var ly=class{constructor(t){this.variableNames=["A"];let e=xe(),[o,n]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}.0, ${o}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var cy=class{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let e=xe(),[o,n]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${n}.0, ${o}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}};var r_={kernelName:qI,backendName:"webgl",kernelFunc:$X},rp,sI=P().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function $X(r){let{inputs:t,backend:e,attrs:o}=r,{pixels:n}=t,{numChannels:s}=o,i=typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement,[l,c]=i?[n.videoWidth,n.videoHeight]:[n.width,n.height],u=[c,l],p=[c,l,s];if(a||i){let d=P().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(rp==null||d!==sI)&&(sI=d,rp=document.createElement("canvas").getContext("2d",{willReadFrequently:sI})),rp.canvas.width=l,rp.canvas.height=c,rp.drawImage(n,0,0,l,c),n=rp.canvas}let m=e.makeTensorInfo(u,"int32");e.texData.get(m.dataId).usage=ur.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(m.dataId),n);let f=P().getBool("WEBGL_PACK")?new cy(p):new ly(p),h=e.runWebGLProgram(f,[m],"int32");return e.disposeData(m.dataId),h}function DX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s,bias:i,preluActivationWeights:a}=t,{strides:l,pad:c,dataFormat:u,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:h}=o,d=S.convertConv2DDataFormat(u),g=S.computeConv2DInfo(n.shape,s.shape,l,p,c,m,!1,d),x,b=[],C=i!=null,w=a!=null,I=f==="leakyrelu",E=()=>{let $=[n,s],_=(L,M)=>{if(M==="NCHW"&&L.shape.length===1&&L.shape[0]!==1){let V=tt({inputs:{x:L},backend:e,attrs:{shape:[L.shape[0],1,1]}});return b.push(V),V}return L};if(C&&$.push(_(i,u)),w&&$.push(_(a,u)),I){let L=e.makeTensorInfo([],"float32",y.createScalarValue(h,"float32"));$.push(L),b.push(L)}return $};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))x=Wx({x:n,filter:s,convInfo:g,backend:e,bias:i,activation:f,preluActivationWeights:a,leakyreluAlpha:h});else if(g.strideWidth<=2&&d==="channelsLast"&&P().getBool("WEBGL_EXP_CONV")){let $=f?Ws(f,!0):null,_=new Qu(g,C,$,w,I),L=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],M=E();x=e.runWebGLProgram(_,M,"float32",L)}else if(P().getBool("WEBGL_CONV_IM2COL"))x=Hx({x:n,filter:s,convInfo:g,backend:e,bias:i,activation:f,preluActivationWeights:a,leakyreluAlpha:h});else{let $=f?Ws(f,!1):null,_=new Ju(g,C,$,w,I),L=E();x=e.runWebGLProgram(_,L,"float32")}let A=tt({inputs:{x},backend:e,attrs:{shape:g.outShape}});return b.push(x),b.forEach($=>e.disposeIntermediateTensorInfo($)),A}var o_={kernelName:Fa,backendName:"webgl",kernelFunc:DX};function RX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s,bias:i,preluActivationWeights:a}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:p,activation:m,leakyreluAlpha:f}=o,h=[],d=u;d==null&&(d=[1,1]),y.assert(S.eitherStridesOrDilationsAreOne(l,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${d}'`);let g=S.computeConv2DInfo(n.shape,s.shape,l,d,c,p,!0),x=P().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=m?Ws(m,x):null,C=[n,s],w=i!=null,I=a!=null,E=m==="leakyrelu";if(w&&C.push(i),I&&C.push(a),E){let L=e.makeTensorInfo([],"float32",y.createScalarValue(f,"float32"));C.push(L),h.push(L)}let A;x?A=new ep(g,w,b,I,E):A=new tp(g,w,b,I,E);let $=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],_=e.runWebGLProgram(A,C,"float32",$);return h.forEach(L=>e.disposeIntermediateTensorInfo(L)),_}var n_={kernelName:_a,backendName:"webgl",kernelFunc:RX};var uy=class{constructor(t,e,o,n){this.sliceDim=t,this.strides=e,this.paramsShape=n,this.variableNames=["x","indices"],this.outputShape=o;let s=At(o.length),i=`
    int index;`;for(let a=0;a<this.sliceDim;a++)i+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function FX(r){let{inputs:t,backend:e}=r,{params:o,indices:n}=t,s=n.shape,i=s[s.length-1],a=y.sizeFromShape(o.shape),[l,c,u,p]=S.prepareAndValidate(o,n),m=tt({inputs:{x:n},backend:e,attrs:{shape:[c,i]}}),f=tt({inputs:{x:o},backend:e,attrs:{shape:[y.sizeFromShape(o.shape)/u,u]}});if(e.shouldExecuteOnCPU([o,n])||o.dtype==="string"){let x=e.readSync(n.dataId),b=e.bufferSync(o),C=kD(x,b,o.dtype,c,i,u,p,o.shape,a);return e.makeTensorInfo(l,o.dtype,C.values)}let h=new uy(i,p,[c,u],o.shape),d=e.runWebGLProgram(h,[f,m],f.dtype),g=tt({inputs:{x:d},backend:e,attrs:{shape:l}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(d),g}var s_={kernelName:uh,backendName:"webgl",kernelFunc:FX};var py=class{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;let o=At(this.rank),n=_X(t,2);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${n}));
      }
    `}};function _X(r,t){let e=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[];for(let n=0;n<r.length;n++)n===2?o.push("index"):o.push(`${e[n]}`);return o.join()}function iI(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,indices:s}=t,{axis:i,batchDims:a}=o,l=y.parseAxisParam(i,n.shape)[0];if(P().get("DEBUG")){let b=e.readSync(s.dataId),C=n.shape[l];for(let w=0;w<b.length;++w){let I=b[w];y.assert(I<=C-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${C-1}]`)}}let c=S.segment_util.collectGatherOpShapeInfo(n,s,l,a),u=y.sizeFromShape(s.shape),p=[],m=tt({inputs:{x:n},backend:e,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=tt({inputs:{x:s},backend:e,attrs:{shape:[c.batchSize,u/c.batchSize]}});p.push(m),p.push(f);let h=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(e.shouldExecuteOnCPU([n,s])||n.dtype==="string"){let b=e.bufferSync(f),C=e.bufferSync(m),w=ED(C,b,h);return p.forEach(I=>e.disposeIntermediateTensorInfo(I)),e.makeTensorInfo(c.outputShape,w.dtype,w.values)}let d=new py(m.shape,h),g=e.runWebGLProgram(d,[m,f],m.dtype);p.push(g);let x=tt({inputs:{x:g},backend:e,attrs:{shape:c.outputShape}});return p.forEach(b=>e.disposeIntermediateTensorInfo(b)),x}var i_={kernelName:xi,backendName:"webgl",kernelFunc:iI};var OX="return float(a > b);",LX=`
  return vec4(greaterThan(a, b));
`,PX=qt({opSnippet:OX,packedOpSnippet:LX,cpuKernelImpl:AD,dtype:"bool"}),a_={kernelName:Na,backendName:"webgl",kernelFunc:PX};var zX="return float(a >= b);",BX=`
  return vec4(greaterThanEqual(a, b));
`,MX=qt({opSnippet:zX,packedOpSnippet:BX,dtype:"bool",cpuKernelImpl:$D}),l_={kernelName:Yn,backendName:"webgl",kernelFunc:MX};function VX(r){let{inputs:t,backend:e}=r,{input:o}=t;return sy(o,!0,e)}var c_={kernelName:ic,backendName:"webgl",kernelFunc:VX};var GX="return float(!isnan(x) && !isinf(x));",UX=ht({opSnippet:GX,dtype:"bool"}),u_={kernelName:Zn,backendName:"webgl",kernelFunc:UX};var WX="return float(isinf(x));",HX=ht({opSnippet:WX,dtype:"bool"}),p_={kernelName:Jn,backendName:"webgl",kernelFunc:HX};var qX="return float(isnan(x));",KX=ht({opSnippet:qX,dtype:"bool"}),m_={kernelName:Qn,backendName:"webgl",kernelFunc:KX};var jX="return float(a < b);",XX=`
  return vec4(lessThan(a, b));
`,YX=qt({opSnippet:jX,packedOpSnippet:XX,cpuKernelImpl:DD,dtype:"bool"}),f_={kernelName:Ta,backendName:"webgl",kernelFunc:YX};var ZX="return float(a <= b);",JX=`
  return vec4(lessThanEqual(a, b));
`,QX=qt({opSnippet:ZX,packedOpSnippet:JX,cpuKernelImpl:RD,dtype:"bool"}),h_={kernelName:ka,backendName:"webgl",kernelFunc:QX};function t8(r){let{backend:t,attrs:e}=r,{start:o,stop:n,num:s}=e,i=FD(o,n,s);return t.makeTensorInfo([i.length],"float32",i)}var d_={kernelName:ph,backendName:"webgl",kernelFunc:t8};var e8=Ro+`
  return x < 0.0 ? 0./0. : log(x);
`,r8=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,o8=ht({opSnippet:e8,packedOpSnippet:r8,cpuKernelImpl:_D}),g_={kernelName:ts,backendName:"webgl",kernelFunc:o8};var n8=Ro+`
  return log(1.0 + x);
`,s8=ht({opSnippet:n8}),x_={kernelName:es,backendName:"webgl",kernelFunc:s8};var i8="return float(a >= 1.0 && b >= 1.0);",a8=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,l8=qt({opSnippet:i8,packedOpSnippet:a8,dtype:"bool"}),y_={kernelName:Ea,backendName:"webgl",kernelFunc:l8};var c8="return float(!(x >= 1.0));",u8=ht({opSnippet:c8}),b_={kernelName:Aa,backendName:"webgl",kernelFunc:u8};var p8="return float(a >= 1.0 || b >= 1.0);",m8=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,f8=qt({opSnippet:p8,packedOpSnippet:m8,dtype:"bool"}),w_={kernelName:$a,backendName:"webgl",kernelFunc:f8};var my=class{constructor(t,e,o,n,s){this.variableNames=["x"],this.outputShape=[];let i=e,a=t[3]-1;this.outputShape=t;let l,c=`float(${o}) + float(${n}) * sum`;s===.5?l=`inversesqrt(${c})`:s===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}};var fy=class{constructor(t,e,o,n,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let i=e,a=t[3]-1;this.outputShape=t;let l,c=`float(${o}) + float(${n}) * sum`;s===.5?l=`inversesqrt(${c})`:s===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}};var h8=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{depthRadius:s,bias:i,alpha:a,beta:l}=o,c=P().getBool("WEBGL_PACK_NORMALIZATION")?new fy(n.shape,s,i,a,l):new my(n.shape,s,i,a,l);return e.runWebGLProgram(c,[n],n.dtype)},C_={kernelName:bi,backendName:"webgl",kernelFunc:h8};var hy=class{constructor(t,e,o,n,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=o,this.alpha=n,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${n}) * norm + float(${o});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${n})
                * float(${s})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var d8=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n,y:s,dy:i}=t,{depthRadius:a,bias:l,alpha:c,beta:u}=o,p=new hy(n.shape,a,l,c,u);return e.runWebGLProgram(p,[n,s,i],n.dtype)},I_={kernelName:lc,backendName:"webgl",kernelFunc:d8};function S_(r,t,e,o){let n=y.sizeFromShape(t),i=y.sizeFromShape(r.shape)/n,a=tt({inputs:{x:r},attrs:{shape:[i,n]},backend:o}),l=Jr(a,r.dtype,"max",o),c=tt({inputs:{x:l},attrs:{shape:e},backend:o});return o.disposeIntermediateTensorInfo(a),o.disposeIntermediateTensorInfo(l),c}function aI(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reductionIndices:s,keepDims:i}=o,a=n.shape.length,l=y.parseAxisParam(s,n.shape),c=l,u=S.getAxesPermutation(c,a),p=u!=null,m=e.shouldExecuteOnCPU([n]),f=n;if(p){if(m){let C=e.texData.get(f.dataId).values,w=new Array(a);for(let A=0;A<w.length;A++)w[A]=n.shape[u[A]];let I=kl(C,n.shape,n.dtype,u,w);f=e.makeTensorInfo(w,n.dtype);let E=e.texData.get(f.dataId);E.values=I}else f=ha(n,u,e);c=S.getInnerMostAxes(c.length,a)}S.assertAxesAreInnerMostDims("max",c,a);let[h,d]=S.computeOutAndReduceShapes(f.shape,c),g=h;i&&(g=S.expandShapeToKeepDim(h,l));let x;if(m){let C=e.texData.get(f.dataId).values,w=OD(C,y.sizeFromShape(d),g,n.dtype);x=e.makeTensorInfo(g,n.dtype);let I=e.texData.get(x.dataId);I.values=w}else x=S_(f,d,g,e);return p&&e.disposeIntermediateTensorInfo(f),x}var v_={kernelName:wi,backendName:"webgl",kernelFunc:aI};var g8=Xu+`
  return max(a, b);
`,x8=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Zr+`
  return result;
`,y8=qt({opSnippet:g8,packedOpSnippet:x8,cpuKernelImpl:LD}),N_={kernelName:rs,backendName:"webgl",kernelFunc:y8};function b8(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t;Tn(n,"maxPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:l}=o,c=1;y.assert(S.eitherStridesOrDilationsAreOne(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let u=S.computePool2DInfo(n.shape,s,i,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&y.arraysEqual(u.inShape,u.outShape))return Ne({inputs:{x:n},backend:e});let p=new Zo(u,"max",!1);return e.runWebGLProgram(p,[n],n.dtype)}var T_={kernelName:Ci,backendName:"webgl",kernelFunc:b8};function w8(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:s,strides:i,pad:a,dataFormat:l,dimRoundingMode:c}=o,u=[1,1,1],p=S.computePool3DInfo(n.shape,s,i,u,a,c,l),m=new da(p,"max",!1);return e.runWebGLProgram(m,[n],n.dtype)}var k_={kernelName:Ii,backendName:"webgl",kernelFunc:w8};var dy=class{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;let e=t.strideHeight,o=t.strideWidth,n=t.dilationHeight,s=t.effectiveFilterHeight,i=t.effectiveFilterWidth,a=s-1-t.padInfo.top,l=i-1-t.padInfo.left,c=s*i-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${n}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},gy=class{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;let e=t.strideDepth,o=t.strideHeight,n=t.strideWidth,s=t.dilationDepth,i=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,u=t.effectiveFilterWidth,p=l-1-t.padInfo.front,m=c-1-t.padInfo.top,f=u-1-t.padInfo.left,h=l*c*u-1;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${m}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${n}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${h} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function C8(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:s}=t,i=s,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=o,p=[1,1,1],m=S.computePool3DInfo(i.shape,a,l,p,c,u),f=new da(m,"max",!0),h=e.runWebGLProgram(f,[i],i.dtype),d=new gy(m),g=e.runWebGLProgram(d,[n,h],i.dtype);return e.disposeIntermediateTensorInfo(h),g}var E_={kernelName:uc,backendName:"webgl",kernelFunc:C8};function I8(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:s,output:i}=t,a=s;Tn([s,i],"maxPoolGrad");let{filterSize:l,strides:c,pad:u,dimRoundingMode:p}=o,m=S.computePool2DInfo(a.shape,l,c,1,u,p),f=!0,h=new Zo(m,"max",f),d=e.runWebGLProgram(h,[a],a.dtype),g=new dy(m),x=e.runWebGLProgram(g,[n,d],a.dtype);return e.disposeIntermediateTensorInfo(d),x}var A_={kernelName:cc,backendName:"webgl",kernelFunc:I8};function $_(r,t,e,o){let n=new Zo(e,"max",!1),s=o.runWebGLProgram(n,[r],"float32");n=new Zo(e,"max",!0,!0,t);let i=o.runWebGLProgram(n,[r],"float32");return[s,i]}var D_={kernelName:mh,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:o}=r,{filterSize:n,strides:s,pad:i,includeBatchInIndex:a}=t,l=e;y.assert(o.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.shape.length}.`);let c=[1,1];y.assert(S.eitherStridesOrDilationsAreOne(s,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${c}'`);let u=S.computePool2DInfo(o.shape,n,s,c,i),[p,m]=$_(o,a,u,l);return[p,m]}};function R_(r,t,e,o){let n=y.sizeFromShape(t),i=y.sizeFromShape(r.shape)/n,a=tt({inputs:{x:r},attrs:{shape:[i,n]},backend:o}),l=Jr(a,"float32","mean",o),c=tt({inputs:{x:l},attrs:{shape:e},backend:o});return o.disposeIntermediateTensorInfo(a),o.disposeIntermediateTensorInfo(l),c}var F_={kernelName:Si,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:o}=r,{keepDims:n,axis:s}=t,i=e,a=o.shape.length,l=y.parseAxisParam(s,o.shape),c=l,u=S.getAxesPermutation(c,a),p=u!=null,m=i.shouldExecuteOnCPU([o]),f=[],h=o;if(p){if(m){let w=i.texData.get(h.dataId).values,I=new Array(a);for(let $=0;$<I.length;$++)I[$]=o.shape[u[$]];let E=kl(w,o.shape,o.dtype,u,I);h=i.makeTensorInfo(I,o.dtype);let A=i.texData.get(h.dataId);A.values=E}else h=ha(o,u,i);f.push(h),c=S.getInnerMostAxes(c.length,a)}S.assertAxesAreInnerMostDims("sum",c,a);let[d,g]=S.computeOutAndReduceShapes(h.shape,c),x=d;n&&(x=S.expandShapeToKeepDim(d,l));let b=R_(h,g,x,i);for(let C of f)i.disposeIntermediateTensorInfo(C);return b}};function S8(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o,a=n.shape.length,l=y.parseAxisParam(s,n.shape),c=l,u=S.getAxesPermutation(c,a),p=n;u!=null&&(p=ue({inputs:{x:n},backend:e,attrs:{perm:u}}),c=S.getInnerMostAxes(c.length,n.shape.length)),S.assertAxesAreInnerMostDims("min",c,a);let[m,f]=S.computeOutAndReduceShapes(p.shape,c),h=y.sizeFromShape(f),d=tt({inputs:{x:p},backend:e,attrs:{shape:[-1,h]}}),g=Jr(d,d.dtype,"min",e),x;if(i){let b=S.expandShapeToKeepDim(m,l);x=tt({inputs:{x:g},backend:e,attrs:{shape:b}})}else x=tt({inputs:{x:g},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(g),u!=null&&e.disposeIntermediateTensorInfo(p),x}var __={kernelName:vi,backendName:"webgl",kernelFunc:S8};var v8=Xu+`
  return min(a, b);
`,N8=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Zr+`
  return result;
`,T8=qt({opSnippet:v8,packedOpSnippet:N8,cpuKernelImpl:PD}),O_={kernelName:os,backendName:"webgl",kernelFunc:T8};var xy=class{constructor(t,e,o){this.variableNames=["x"],this.outputShape=e.map((u,p)=>u[0]+t[p]+u[1]);let n=t.length,s=At(n),i=e.map(u=>u[0]).join(","),a=e.map((u,p)=>u[0]+t[p]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n),c=o==="reflect"?0:1;if(n===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${i});
      ${s} end = ${s}(${a});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${n}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}};var yy=class{constructor(t,e,o){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((h,d)=>h[0]+t[d]+h[1]);let n=t.length,s=At(n),i=e.map(h=>h[0]).join(","),a=e.map((h,d)=>h[0]+t[d]).join(","),l=ve("rc",n),c=ve("source",n),u=`${l[n-1]} < ${this.outputShape[n-1]}`,p=n===1?"source":`vec2(${c.slice(-2).join()})`,m=o==="reflect"?0:1,f="";if(n===1){let h=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${m};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${m};
        }
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${c.join()}), ${p});
        ${l[n-1]} += 1;
        if(${u}) {
          ${h}
          result[1] = getChannel(getX(${c.join()}), ${p});
        }
      `}else{let h=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${m}) +
                gte * ((end - 1) * 2 - source + ${m});
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${c.join()}), ${p});
        ${l[n-1]} += 1;
        if(${u}) {
          ${h}
          result[1] = getChannel(getX(${c.join()}), ${p});
        }
        rc = outputLoc;
        ${l[n-2]} += 1;
        if(${l[n-2]} < ${this.outputShape[n-2]}) {
          ${h}
          result[2] = getChannel(getX(${c.join()}), ${p});
          ${l[n-1]} += 1;
          if(${u}) {
            ${h}
            result[3] = getChannel(getX(${c.join()}), ${p});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${i});
      const ${s} end = ${s}(${a});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var k8=({inputs:r,backend:t,attrs:e})=>{let{x:o}=r,{paddings:n,mode:s}=e,i=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yy(o.shape,n,s):new xy(o.shape,n,s);return t.runWebGLProgram(i,[o],o.dtype)},L_={kernelName:Ni,backendName:"webgl",kernelFunc:k8};var E8=`if (b == 0.0) return NAN;
  return mod(a, b);`,A8=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Zr+`
  return result;
`,$8=qt({opSnippet:E8,packedOpSnippet:A8}),P_={kernelName:ns,backendName:"webgl",kernelFunc:$8};var by=class{constructor(t,e,o){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,o],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}};var D8=`
if (a == b) {
  return 1.0;
};
return a / b;`,R8=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,lI=qt({opSnippet:D8,packedOpSnippet:R8,checkOutOfBounds:!0}),z_={kernelName:Un,backendName:"webgl",kernelFunc:lI};var B_="return a - b;",cI=qt({opSnippet:B_,packedOpSnippet:B_,supportsComplex:!0,cpuKernelImpl:nR}),M_={kernelName:ws,backendName:"webgl",kernelFunc:cI};function uI(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{dim:s}=o,i=y.parseAxisParam([s],n.shape),a=aI({inputs:{x:n},backend:e,attrs:{reductionIndices:i,keepDims:!1}}),l=S.expandShapeToKeepDim(a.shape,i),c=tt({inputs:{x:a},backend:e,attrs:{shape:l}}),u=cI({inputs:{a:n,b:c},backend:e}),p=nI({inputs:{x:u},backend:e}),m=El({inputs:{x:p},backend:e,attrs:{axis:i,keepDims:!1}}),f=tt({inputs:{x:m},backend:e,attrs:{shape:l}}),h=lI({inputs:{a:p,b:f},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),h}var V_={kernelName:Gi,backendName:"webgl",kernelFunc:uI};function F8(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{numSamples:s,seed:i,normalized:a}=o,l=a?n:uI({inputs:{logits:n},backend:e,attrs:{dim:n.shape.length-1}}),c=l.shape[0],u=l.shape[1],p=new by(c,u,s),m=[[i]],f=e.runWebGLProgram(p,[l],"int32",m);return a||e.disposeIntermediateTensorInfo(l),f}var G_={kernelName:fh,backendName:"webgl",kernelFunc:F8};var _8=Le+`
  return -x;
`,O8=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function L8(r){let{inputs:t,backend:e}=r,{x:o}=t;if(e.shouldExecuteOnCPU([o])){let s=e.texData.get(o.dataId),[i,a]=BD(s.values,o.shape,o.dtype);return e.makeTensorInfo(a,o.dtype,i)}let n;return P().getBool("WEBGL_PACK_UNARY_OPERATIONS")?n=new _r(o.shape,O8):n=new rr(o.shape,_8),e.runWebGLProgram(n,[o],o.dtype)}var U_={kernelName:Ti,backendName:"webgl",kernelFunc:L8};var P8=ar.nonMaxSuppressionV3Impl;function z8(r){S.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=o,c=e.readSync(n.dataId),u=e.readSync(s.dataId),{selectedIndices:p}=P8(c,u,i,a,l);return e.makeTensorInfo([p.length],"int32",new Int32Array(p))}var W_={kernelName:pc,backendName:"webgl",kernelFunc:z8};var B8=ar.nonMaxSuppressionV4Impl;function M8(r){S.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=o,u=e.readSync(n.dataId),p=e.readSync(s.dataId),{selectedIndices:m,validOutputs:f}=B8(u,p,i,a,l,c);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([],"int32",new Int32Array([f]))]}var H_={kernelName:mc,backendName:"webgl",kernelFunc:M8};var V8=ar.nonMaxSuppressionV5Impl;function G8(r){S.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=o,u=e.readSync(n.dataId),p=e.readSync(s.dataId),m=i,f=a,h=l,d=c,{selectedIndices:g,selectedScores:x}=V8(u,p,m,f,h,d);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([x.length],"float32",new Float32Array(x))]}var q_={kernelName:fc,backendName:"webgl",kernelFunc:G8};var wy=class{constructor(t,e,o,n){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${n}), float(${o}),
                      float(index == coords.y)));
      }
    `}};var U8=r=>{let{inputs:t,backend:e,attrs:o}=r,{indices:n}=t,{dtype:s,depth:i,onValue:a,offValue:l}=o,c=y.sizeFromShape(n.shape),u=new wy(c,i,a,l),p=tt({inputs:{x:n},backend:e,attrs:{shape:[c]}}),m=e.runWebGLProgram(u,[p],s);e.disposeIntermediateTensorInfo(p);let f=[...n.shape,i],h=tt({inputs:{x:m},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(m),h},K_={kernelName:Ei,backendName:"webgl",kernelFunc:U8};function th(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="complex64"){let n=Hs({inputs:{input:o},backend:e}),s=th({inputs:{x:n},backend:e}),i=$l({inputs:{input:o},backend:e}),a=th({inputs:{x:i},backend:e}),l=Lr({inputs:{real:s,imag:a},backend:e});return e.disposeIntermediateTensorInfo(n),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),l}else return qs({attrs:{shape:o.shape,dtype:o.dtype,value:o.dtype==="string"?"":0},backend:e})}var j_={kernelName:Hi,backendName:"webgl",kernelFunc:th};function X_(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(o.dtype==="complex64"){let n=Hs({inputs:{input:o},backend:e}),s=X_({inputs:{x:n},backend:e}),i=$l({inputs:{input:o},backend:e}),a=th({inputs:{x:i},backend:e}),l=Lr({inputs:{real:s,imag:a},backend:e});return e.disposeIntermediateTensorInfo(n),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),l}else return qs({attrs:{shape:o.shape,dtype:o.dtype,value:1},backend:e})}var Y_={kernelName:ki,backendName:"webgl",kernelFunc:X_};function W8(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o;if(t.length===1)return ny({inputs:{input:t[0]},backend:e,attrs:{dim:n}});let s=t[0].shape,i=t[0].dtype;t.forEach(u=>{y.assertShapesMatch(s,u.shape,"All tensors passed to stack must have matching shapes"),y.assert(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],l=t.map(u=>{let p=ny({inputs:{input:u},backend:e,attrs:{dim:n}});return a.push(p),p}),c=oI({inputs:l,backend:e,attrs:{axis:n}});return a.forEach(u=>e.disposeIntermediateTensorInfo(u)),c}var Z_={kernelName:Ai,backendName:"webgl",kernelFunc:W8};var Cy=class{constructor(t,e,o){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((c,u)=>c[0]+t[u]+c[1]);let n=t.length,s=At(n),i=e.map(c=>c[0]).join(","),a=e.map((c,u)=>c[0]+t[u]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n);if(n===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${i});
      ${s} end = ${s}(${a});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}};var Iy=class{constructor(t,e,o){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((d,g)=>d[0]+t[g]+d[1]);let n=t.length,s=At(n),i=e.map(d=>d[0]).join(","),a=e.map((d,g)=>d[0]+t[g]).join(","),l=ve("rc",n),c=ve("source",n),u=`${l[n-1]} < ${this.outputShape[n-1]}`,p=n===1?"source":`vec2(${c.slice(-2).join()})`,m=[`${s} rc = outputLoc;`,`${l[n-1]} += 1;
       if(${u}) {
      `,n===1?"":`}
       rc = outputLoc;
       ${l[n-2]} += 1;
       if(${l[n-2]} < ${this.outputShape[n-2]}) {`,n===1?"":`  ${l[n-1]} += 1;
         if(${u}) {`],f=n===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",h="";for(let d=0,g=n===1?2:4;d<g;d++)h+=`
        ${m[d]}
        if (${f}) {
          result[${d}] = float(value);
        } else {
          ${s} source = rc - start;
          result[${d}] = getChannel(getX(${c.join()}), ${p});
        }
      `;h+=n===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${i});
      const ${s} end = ${s}(${a});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}};var pI=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{paddings:s,constantValue:i}=o;if(y.sizeFromShape(n.shape)===0){let c=s.map((u,p)=>u[0]+n.shape[p]+u[1]);return qs({backend:e,attrs:{shape:c,value:i,dtype:n.dtype}})}let a=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Iy(n.shape,s,i):new Cy(n.shape,s,i),l=[[i]];return e.runWebGLProgram(a,[n],n.dtype,l)},J_={kernelName:$i,backendName:"webgl",kernelFunc:pI};var H8=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,q8=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Zr+`
  return result;
`,K8=qt({opSnippet:H8,packedOpSnippet:q8}),Q_={kernelName:is,backendName:"webgl",kernelFunc:K8};function j8(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o,a=n.shape.length,l=[],c=y.parseAxisParam(s,n.shape),u=c,p=S.getAxesPermutation(u,a),m=n;p!=null&&(m=ue({inputs:{x:n},backend:e,attrs:{perm:p}}),u=S.getInnerMostAxes(u.length,a),l.push(m)),S.assertAxesAreInnerMostDims("prod",u,a);let f;if(e.shouldExecuteOnCPU([m])){let h=e.texData.get(m.dataId).values,{outVals:d,outShape:g,outDtype:x}=VD(m.shape,m.dtype,h,u);f=e.makeTensorInfo(g,x,d)}else{let[h,d]=S.computeOutAndReduceShapes(m.shape,u),g=y.sizeFromShape(d),x=tt({inputs:{x:m},backend:e,attrs:{shape:[-1,g]}}),b=Ma(n.dtype),C=Jr(x,b,"prod",e);f=tt({inputs:{x:C},backend:e,attrs:{shape:h}}),l.push(x),l.push(C)}if(i){l.push(f);let h=S.expandShapeToKeepDim(f.shape,c);f=tt({inputs:{x:f},backend:e,attrs:{shape:h}})}return l.forEach(h=>e.disposeIntermediateTensorInfo(h)),f}var tO={kernelName:Ri,backendName:"webgl",kernelFunc:j8};function X8(r){let{inputs:t,backend:e,attrs:o}=r,{paramsNestedSplits:n,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:a}=o,l=n.map(x=>e.readSync(x.dataId)),c=n.map(x=>x.shape),u=e.readSync(s.dataId),p=e.readSync(i.dataId),[m,f,h]=GD(l,c,u,s.shape,s.dtype,p,i.shape,a),d=m.map(x=>e.makeTensorInfo([x.length],"int32",x)),g=e.makeTensorInfo(h,s.dtype,f);return d.concat([g])}var eO={kernelName:hh,backendName:"webgl",kernelFunc:X8};function Y8(r){let{inputs:t,backend:e}=r,{starts:o,limits:n,deltas:s}=t,i=e.readSync(o.dataId),a=e.readSync(n.dataId),l=e.readSync(s.dataId),[c,u]=UD(i,o.shape,o.dtype,a,n.shape,l,s.shape),p=e.makeTensorInfo([c.length],"int32",c),m=e.makeTensorInfo([u.length],o.dtype,u);return[p,m]}var rO={kernelName:dh,backendName:"webgl",kernelFunc:Y8};function Z8(r){let{inputs:t,backend:e,attrs:o}=r,{shape:n,values:s,defaultValue:i,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=o,c=e.readSync(n.dataId),u=e.readSync(s.dataId),p=e.readSync(i.dataId),m=a.map(g=>e.readSync(g.dataId)),f=a.map(g=>g.shape),[h,d]=WD(c,n.shape,u,s.shape,s.dtype,p,i.shape,m,f,l);return e.makeTensorInfo(h,s.dtype,d)}var oO={kernelName:gh,backendName:"webgl",kernelFunc:Z8};var mI=r=>{let{backend:t,attrs:e}=r,{start:o,stop:n,step:s,dtype:i}=e,a=HD(o,n,s,i);return t.makeTensorInfo([a.length],i,a)},nO={kernelName:hc,backendName:"webgl",kernelFunc:mI};var J8="return 1.0 / x;",Q8=ht({opSnippet:J8}),sO={kernelName:as,backendName:"webgl",kernelFunc:Q8};var t5=Le+`
  return (x < 0.0) ? 0.0 : x;
`,e5=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,r5=ht({opSnippet:t5,packedOpSnippet:e5}),iO={kernelName:ls,backendName:"webgl",kernelFunc:r5};var o5=Le+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,n5=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,s5=ht({opSnippet:o5,packedOpSnippet:n5}),aO={kernelName:cs,backendName:"webgl",kernelFunc:s5};var Sy=class{constructor(t,e,o,n,s){this.variableNames=["A"],this.outputShape=[];let[i,a,l,c]=t;this.outputShape=[i,e,o,c];let u=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],m;s?m="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/p[0]},
          ${u[1]/p[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var vy=class{constructor(t,e,o,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[i,a,l,c]=t;this.outputShape=[i,e,o,c];let u=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],m;s?m="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":m="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/p[0]},
          ${u[1]/p[1]},
          ${u[1]/p[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${o-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function i5(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:s,halfPixelCenters:i,size:a}=o,[l,c]=a,u=P().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new vy(n.shape,l,c,s,i):new Sy(n.shape,l,c,s,i);return e.runWebGLProgram(u,[n],"float32")}var lO={kernelName:Oi,backendName:"webgl",kernelFunc:i5};var Ny=class{constructor(t,e,o){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;let[,n,s]=e,[,i,a]=t,l=[o&&i>1?n-1:n,o&&a>1?s-1:s],c=[o&&i>1?i-1:i,o&&a>1?a-1:a],u=l[0]/c[0],p=l[1]/c[1],m=1/u,f=1/p,h=Math.ceil(m)*2+2,d=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${h});
        const int winWidth = int(${d});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${n-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function a5(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:s}=t,{alignCorners:i}=o,a=new Ny(s.shape,n.shape,i);return e.runWebGLProgram(a,[s],s.dtype)}var cO={kernelName:xc,backendName:"webgl",kernelFunc:a5};var Ty=class{constructor(t,e,o,n,s){this.variableNames=["A"],this.outputShape=[];let[i,a,l,c]=t;this.outputShape=[i,e,o,c];let u=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],m=n?"0.5":"0.0",f;s?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/p[0]},
          ${u[1]/p[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};var ky=class{constructor(t,e,o,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[i,a,l,c]=t;this.outputShape=[i,e,o,c];let u=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],m=n?"0.5":"0.0",f;s?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/p[0]},
          ${u[1]/p[1]},
          ${u[1]/p[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${o-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function l5(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:s,halfPixelCenters:i,size:a}=o,[l,c]=a,u=P().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ky(n.shape,l,c,s,i):new Ty(n.shape,l,c,s,i);return e.runWebGLProgram(u,[n],n.dtype)}var uO={kernelName:_i,backendName:"webgl",kernelFunc:l5};var Ey=class{constructor(t,e,o){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;let[,n,s]=e,[,i,a]=t,l=[o&&i>1?n-1:n,o&&a>1?s-1:s],c=[o&&i>1?i-1:i,o&&a>1?a-1:a],u=l[0]/c[0],p=l[1]/c[1],m=1/u,f=1/p,h=Math.ceil(m)*2+2,d=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${h});
        const int winWidth = int(${d});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${n}) - 1),
                ${o} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${o} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function c5(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:s}=t,{alignCorners:i}=o,a=new Ey(s.shape,n.shape,i);return e.runWebGLProgram(a,[s],s.dtype)}var pO={kernelName:gc,backendName:"webgl",kernelFunc:c5};var Ay=class{constructor(t,e){this.variableNames=["x"];let o=t.length;if(o>4)throw new Error(`WebGL backend: Reverse of rank-${o} tensor is not yet supported`);if(this.outputShape=t,o===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}let n=a=>e.indexOf(a)!==-1&&t[a]!==1?`${t[a]} - coords[${a}] - 1`:`coords[${a}]`,s=t.map((a,l)=>n(l)).join(","),i=At(o);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}};var $y=class{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let o=t.length;if(o>4)throw new Error(`WebGL backend: Reverse of rank-${o} tensor is not yet supported`);this.outputShape=t;let n=ve("rc",o),s=`${n[o-1]} + 1 < ${this.outputShape[o-1]}`,i=`${n[o-2]} + 1 < ${this.outputShape[o-2]}`,a=At(o);o===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(n.slice())};
          if(${s}){
            result.g = ${c(n.slice())};
          }
          if(${i}) {
            result.b = ${u(n.slice())};
            if(${s}) {
              result.a = ${p(n.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(h){return m(h)}function c(h){return h[o-1]="("+h[o-1]+" + 1)",m(h)}function u(h){return h[o-2]="("+h[o-2]+" + 1)",m(h)}function p(h){return h[o-1]="("+h[o-1]+" + 1)",h[o-2]="("+h[o-2]+" + 1)",m(h)}function m(h){let d=t.map((b,C)=>f(C,h)),g=d.join(","),x=d.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${x}))`}function f(h,d){return e.indexOf(h)!==-1&&t[h]!==1?`${t[h]} - ${d[h]} - 1`:`${d[h]}`}}};function u5(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dims:s}=o,i=n.shape.length,a=y.parseAxisParam(s,n.shape);if(i===0)return Ne({inputs:{x:n},backend:e});let l=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $y(n.shape,a):new Ay(n.shape,a);return e.runWebGLProgram(l,[n],n.dtype)}var mO={kernelName:Li,backendName:"webgl",kernelFunc:u5};var Dy=class{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let o=t[1],n=t[2];this.outputShape=t;let s="";typeof e=="number"?s=`float outputValue = ${e.toFixed(2)};`:s=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${s}
          if(coordX >= 0 && coordX < ${n} && coordY >= 0 && coordY < ${o}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var fO={kernelName:Sc,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:o}=r,{radians:n,fillValue:s,center:i}=t,a=e,l=new Dy(o.shape,s),[c,u]=S.getImageCenter(i,o.shape[1],o.shape[2]),p=[[c,u,Math.sin(n),Math.cos(n)]];return a.runWebGLProgram(l,[o],o.dtype,p)}};var p5=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,m5=ht({opSnippet:p5}),hO={kernelName:us,backendName:"webgl",kernelFunc:m5};var f5="return inversesqrt(x);",h5=ht({opSnippet:f5,cpuKernelImpl:qD}),dO={kernelName:ps,backendName:"webgl",kernelFunc:h5};var ga=class{constructor(t,e,o,n,s,i,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;let c=At(s.length),u=At(i.length),p="";o===1?p="i":o===2&&(p="i, j");let m=`getIndices(${p})`,f="";n===1?f="i":n===2&&(f="i, coords[1]");let h=`getUpdates(${f})`,d="";l&&(d="coords[0], coords[1]");let g=`getDefaultValue(${d})`,x=e>1?"strides[j]":"strides";this.userCode=`
        ${c} strides = ${c}(${s});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${m});
              flattenedIndex += index * ${x};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${h};
              found = true;
            }
          }
          setOutput(mix(${g}, sum, float(found)));
        }
      `}};var Ry=class{constructor(t,e,o,n,s,i,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;let c=At(s.length),u=At(i.length),p="";o===1?p="i":o===2&&(p="i, j");let m=`getIndices(${p})`,f="";n===1?f="i":n===2&&(f="i, coords[1]");let h=`getUpdates(${f})`,d="";l&&(d="coords[0], coords[1]");let g=`getDefaultValue(${d})`,x=e>1?"strides[j]":"strides",b=e>1?"strides[j + 1]":"strides";this.userCode=`
        ${c} strides = ${c}(${s});

        void main() {
          ${u} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${t}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${e}; j+=2) {
              ivec4 index = round(${m});
              flattenedIndex += index.xz * ${x};
              if (j + 1 < ${e}) {
                flattenedIndex += index.yw * ${b};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${h};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${g}, sum, found));
        }
      `}};function d5(r){let{inputs:t,backend:e,attrs:o}=r,{indices:n,updates:s}=t,{shape:i}=o,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:p}=S.calculateShapes(s,n,i),m=[p/c,c];if(p===0)return e.makeTensorInfo(i,n.dtype);let f=tt({inputs:{x:n},backend:e,attrs:{shape:[l,a]}}),h=tt({inputs:{x:s},backend:e,attrs:{shape:[l,c]}}),d=e.makeTensorInfo([],"float32",new Float32Array([0])),g;P().getBool("WEBGL_PACK")?g=new Ry(l,a,f.shape.length,h.shape.length,u,m):g=new ga(l,a,f.shape.length,h.shape.length,u,m);let x=e.runWebGLProgram(g,[h,f,d],h.dtype),b=tt({inputs:{x},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(d),b}var gO={kernelName:xh,backendName:"webgl",kernelFunc:d5};var Fy=class{constructor(t,e,o,n){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,o];let s="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,a=P().getNumber("WEBGL_VERSION")===2?s:i,l=n==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function g5(r){let{inputs:t,backend:e,attrs:o}=r,{sortedSequence:n,values:s}=t,{side:i}=o,a=new Fy(n.shape[0],n.shape[1],s.shape[1],i),l=[[n.shape[1]]];return e.runWebGLProgram(a,[n,s],"int32",l)}var xO={kernelName:bh,backendName:"webgl",kernelFunc:g5};var _y=class{constructor(t,e,o){this.variableNames=["c","a","b"],this.outputShape=e;let n,s;if(o>4)throw Error(`Where for rank ${o} is not yet supported`);if(o===1)s="resRC",n="resRC";else{let a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],c=[];for(let u=0;u<e.length;u++)c.push(`${a[u]}`),u<t&&l.push(`${a[u]}`);n=l.join(),s=c.join()}let i=At(o);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${n});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function x5(r){let{inputs:t,backend:e}=r,{condition:o,t:n,e:s}=t,i=new _y(o.shape.length,n.shape,n.shape.length);return e.runWebGLProgram(i,[o,n,s],$e(n.dtype,s.dtype))}var yO={kernelName:Pi,backendName:"webgl",kernelFunc:x5};var y5=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${S.SELU_SCALEALPHA};
  float scale = ${S.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,b5=ht({opSnippet:y5}),bO={kernelName:ms,backendName:"webgl",kernelFunc:b5};var w5=Ro+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,C5=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,I5=ht({opSnippet:w5,packedOpSnippet:C5,cpuKernelImpl:jD}),wO={kernelName:gs,backendName:"webgl",kernelFunc:I5};var S5=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,v5=ht({opSnippet:S5}),CO={kernelName:ds,backendName:"webgl",kernelFunc:v5};var N5=Ro+`
  return sin(x);
`,T5=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Zr}
  return result;
`,k5=ht({opSnippet:N5,packedOpSnippet:T5}),IO={kernelName:fs,backendName:"webgl",kernelFunc:k5};var E5=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,A5=ht({opSnippet:E5}),SO={kernelName:hs,backendName:"webgl",kernelFunc:A5};var $5=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,D5=ht({opSnippet:$5}),vO={kernelName:xs,backendName:"webgl",kernelFunc:D5};var R5=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:s,paddings:i}=o;y.assert(n.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let a=s.reduce((x,b)=>x*b),l=[[0,0]];l.push(...i);for(let x=1+s.length;x<n.shape.length;++x)l.push([0,0]);let c=[],u=pI({inputs:{x:n},backend:e,attrs:{paddings:l,constantValue:0}}),p=S.getReshaped(u.shape,s,a,!1),m=S.getPermuted(p.length,s.length,!1),f=S.getReshapedPermuted(u.shape,s,a,!1),h=tt({inputs:{x:u},backend:e,attrs:{shape:p}}),d=ue({inputs:{x:h},backend:e,attrs:{perm:m}}),g=tt({inputs:{x:d},backend:e,attrs:{shape:f}});return c.push(u),c.push(h),c.push(d),c.forEach(x=>e.disposeIntermediateTensorInfo(x)),g},NO={kernelName:Mi,backendName:"webgl",kernelFunc:R5};function F5(r){let{inputs:t,backend:e}=r,{indices:o,values:n,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(o.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${o.shape}`);if(n.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${n.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let a=e.readSync(o.dataId),l=e.readSync(n.dataId),c=e.readSync(s.dataId),u=e.readSync(i.dataId)[0],[p,m,f,h,d]=YD(a,o.shape,o.dtype,l,n.dtype,c,u);return[e.makeTensorInfo(m,o.dtype,p),e.makeTensorInfo([m[0]],n.dtype,f),e.makeTensorInfo([h.length],"bool",new Uint8Array(h.map(g=>Number(g)))),e.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}var TO={kernelName:wh,backendName:"webgl",kernelFunc:F5};function _5(r){let{inputs:t,backend:e}=r,{inputIndices:o,inputShape:n,newShape:s}=t;if(o.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${o.shape}`);if(n.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${n.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(e.readSync(n.dataId)),a=e.readSync(o.dataId),l=Array.from(e.readSync(s.dataId)),[c,u,p]=ZD(a,o.shape,o.dtype,i,l);return[e.makeTensorInfo(u,o.dtype,c),e.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}var kO={kernelName:Ch,backendName:"webgl",kernelFunc:_5};function O5(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:s}=t;if(o.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${n.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let i=e.readSync(o.dataId),a=e.readSync(n.dataId),l=e.readSync(s.dataId),[c,u]=dx(i,o.shape,o.dtype,a,l,!0);return e.makeTensorInfo(u,o.dtype,c)}var EO={kernelName:Ih,backendName:"webgl",kernelFunc:O5};function L5(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:s}=t;if(o.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${n.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let i=e.readSync(o.dataId),a=e.readSync(n.dataId),l=e.readSync(s.dataId),[c,u]=dx(i,o.shape,o.dtype,a,l);return e.makeTensorInfo(u,o.dtype,c)}var AO={kernelName:Sh,backendName:"webgl",kernelFunc:L5};function P5(r){let{inputs:t,backend:e,attrs:o}=r,{sparseIndices:n,sparseValues:s,defaultValue:i}=t,{outputShape:a}=o,{sliceRank:l,numUpdates:c,sliceSize:u,strides:p,outputSize:m}=S.calculateShapes(s,n,a),f=!1;if(s.dtype==="string"){let x=e.bufferSync(n),b=e.bufferSync(s),C=y.decodeString(e.readSync(i.dataId)[0]),w=KD(x,b,a,m,u,c,l,p,C,f);return e.makeTensorInfo(a,w.dtype,w.values)}let h=new ga(c,l,n.shape.length,s.shape.length,p,[m,1],f),d=e.runWebGLProgram(h,[s,n,i],s.dtype),g=tt({inputs:{x:d},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(d),g}var $O={kernelName:vh,backendName:"webgl",kernelFunc:P5};function z5(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{numOrSizeSplits:s,axis:i}=o,a=y.parseAxisParam(i,n.shape)[0],l=S.prepareSplitSize(n,s,a),c=n.shape.length,u=new Array(c).fill(0),p=n.shape.slice();return l.map(m=>{let f=[...p];f[a]=m;let h=Jo({inputs:{x:n},backend:e,attrs:{begin:u,size:f}});return u[a]+=m,h})}var DO={kernelName:Vi,backendName:"webgl",kernelFunc:z5};var RO="return sqrt(x);",B5=ht({opSnippet:RO,packedOpSnippet:RO,cpuKernelImpl:JD}),FO={kernelName:ys,backendName:"webgl",kernelFunc:B5};var M5="return x * x;",V5=ht({opSnippet:M5}),_O={kernelName:yc,backendName:"webgl",kernelFunc:V5};var OO="return (a - b) * (a - b);",G5=qt({opSnippet:OO,packedOpSnippet:OO}),LO={kernelName:bs,backendName:"webgl",kernelFunc:G5};function U5(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t;if(n.dtype!=="string")throw new Error("Input must be of datatype string");let s=e.readSync(n.dataId),i=S.fromUint8ToStringArray(s),a=QD(i,"string",o);return e.makeTensorInfo(n.shape,"string",a)}var PO={kernelName:fp,backendName:"webgl",kernelFunc:U5};function W5({inputs:r,attrs:t,backend:e}){let{x:o}=r,n=Le+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new rr(o.shape,n);return e.runWebGLProgram(s,[o],o.dtype)}var zO={kernelName:Ss,backendName:"webgl",kernelFunc:W5};var Oy=class{constructor(t,e,o){this.variableNames=["x"],this.outputShape=o;let n=o.length,s=At(o.length),i=At(o.length),a="";if(n===1)a="coords * strides + begin";else{let l=0;a=o.map((c,u)=>(l++,o.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${l-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${t});
      ${s} strides = ${s}(${e});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}};function H5(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:s,end:i,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:p,shrinkAxisMask:m}=o,{finalShapeSparse:f,finalShape:h,isIdentity:d,sliceDim0:g,isSimpleSlice:x,begin:b,end:C,strides:w}=Ue.sliceInfo(n.shape,s,i,a,l,c,u,p,m),I;if(d)I=tt({inputs:{x:n},backend:e,attrs:{shape:h}});else if(g||x){y.assert(n.shape.length>=1,()=>`Input must have rank at least 1, got: ${n.shape.length}`);let A=Ue.computeOutShape(b,C,w),$=Jo({inputs:{x:n},backend:e,attrs:{begin:b,size:A}});I=tt({inputs:{x:$},backend:e,attrs:{shape:h}}),e.disposeIntermediateTensorInfo($)}else if(e.shouldExecuteOnCPU([n])){let $=e.readSync(n.dataId),_=dt(n.shape,n.dtype,$),L=tR(f,_,w,b);I=e.makeTensorInfo(h,n.dtype,L.values)}else{let $=new Oy(b,w,f);I=e.runWebGLProgram($,[n],n.dtype)}let E=tt({inputs:{x:I},backend:e,attrs:{shape:h}});return e.disposeIntermediateTensorInfo(I),E}var BO={kernelName:bc,backendName:"webgl",kernelFunc:H5};function q5(r){let{inputs:t,backend:e,attrs:o}=r,{separator:n,nGramWidths:s,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:c}=o,{data:u,dataSplits:p}=t,m=e.readSync(u.dataId),f=e.readSync(p.dataId),[h,d]=eR(m,f,n,s,i,a,l,c);return[e.makeTensorInfo([h.length],"string",h),e.makeTensorInfo(p.shape,"int32",d)]}var MO={kernelName:Nh,backendName:"webgl",kernelFunc:q5};function K5(r){let{inputs:t,backend:e,attrs:o}=r,{skipEmpty:n}=o,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let a=e.readSync(s.dataId),l=e.readSync(i.dataId)[0],[c,u,p]=rR(a,l,n),m=u.length;return[e.makeTensorInfo([m,2],"int32",c),e.makeTensorInfo([m],"string",u),e.makeTensorInfo([2],"int32",new Int32Array(p))]}var VO={kernelName:Th,backendName:"webgl",kernelFunc:K5};function j5(r){let{inputs:t,backend:e,attrs:o}=r,{numBuckets:n}=o,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(n<=0)throw new Error("Number of buckets must be at least 1");let i=e.readSync(s.dataId),a=oR(i,n);return e.makeTensorInfo(s.shape,"int32",a)}var GO={kernelName:kh,backendName:"webgl",kernelFunc:j5};var X5="return tan(x);",Y5=ht({opSnippet:X5}),UO={kernelName:Cs,backendName:"webgl",kernelFunc:Y5};var Z5=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,J5=ht({opSnippet:Z5}),WO={kernelName:Is,backendName:"webgl",kernelFunc:J5};function Q5(r){let{inputs:t,backend:e,attrs:o}=r,{tensor:n,indices:s,updates:i}=t,{}=o,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:p}=S.calculateShapes(i,s,n.shape),m=[p/c,c];if(p===0)return e.makeTensorInfo(n.shape,s.dtype);let f=tt({inputs:{x:s},backend:e,attrs:{shape:[l,a]}}),h=tt({inputs:{x:i},backend:e,attrs:{shape:[l,c]}}),d=tt({inputs:{x:n},backend:e,attrs:{shape:m}}),g=new ga(l,a,f.shape.length,h.shape.length,u,m,!1,!0),x=e.runWebGLProgram(g,[h,f,d],d.dtype),b=tt({inputs:{x},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(x),b}var HO={kernelName:yh,backendName:"webgl",kernelFunc:Q5};var Ly=class{constructor(t,e){this.variableNames=["A"];let o=new Array(t.length);for(let i=0;i<o.length;i++)o[i]=t[i]*e[i];this.outputShape=o,this.rank=o.length;let n=At(this.rank),s=tY(t);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function tY(r){let t=r.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${r[0]})`;let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],o=[];for(let n=0;n<r.length;n++)o.push(`imod(${e[n]}, ${r[n]})`);return o.join()}function fI(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reps:s}=o;if(n.dtype==="string"||n.shape.length>5){let l=e.readSync(n.dataId),c=n.dtype==="string"?l.map(m=>y.decodeString(m)):l,u=dt(n.shape,n.dtype,c),p=sR(u,s);return e.makeTensorInfo(p.shape,p.dtype,p.values)}let i=new Ly(n.shape,s);return e.runWebGLProgram(i,[n],n.dtype)}var qO={kernelName:nn,backendName:"webgl",kernelFunc:fI};var Py=class{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},zy=class{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Rl(r,t){t!==null&&r.disposeIntermediateTensorInfo(t)}function KO(r){let t=1;for(;t<r;)t*=2;return t}function eY(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{k:s,sorted:i}=o,a=P().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=P().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=n.shape,u=c[c.length-1];if(e.shouldExecuteOnCPU([n])||u<a||s>l){let L=e.readSync(n.dataId),[M,V]=iR(L,c,n.dtype,s,i);return[e.makeTensorInfo(M.shape,M.dtype,M.values),e.makeTensorInfo(V.shape,V.dtype,V.values)]}if(s===0)return c[c.length-1]=0,[e.makeTensorInfo(c,n.dtype,[]),e.makeTensorInfo(c,"int32",[])];if(u===1)return[n,qs({attrs:{shape:c,dtype:"int32",value:0},backend:e})];let p=e.texData.get(n.dataId),m=p!==null&&p.isPacked,f=m?e.unpackTensor(n):n,d=y.sizeFromShape(c)/u,g=tt({inputs:{x:f},attrs:{shape:[d,u]},backend:e});m&&Rl(e,f);let x=KO(s),b=KO(u),C=null,w=()=>C===null?[g,g]:[g,C],I=(L,M,V)=>{let G=w(),W=new Py(V),K=[[u],[C===null?1:0],[Number.NEGATIVE_INFINITY],[L],[M]],Z=C;C=e.runWebGLProgram(W,G,"int32",K),Rl(e,Z)};for(let L=1;L<x;L*=2){let M=L*2;for(let V=L;V>=1;V/=2)I(M,V,[d,b])}for(let L=b;L>x;L/=2){let M=w(),V=new zy([d,L/2]),W=[[u],[C===null?1:0],[x]],U=C;C=e.runWebGLProgram(V,M,"int32",W),Rl(e,U);let K=x/2,Z=K*2;for(let q=K;q>=1;q/=2)I(Z,q,C.shape)}let E=C;C=Jo({inputs:{x:C},backend:e,attrs:{begin:0,size:[d,s]}}),Rl(e,E);let A=iI({inputs:{x:g,indices:C},backend:e,attrs:{axis:1,batchDims:1}});Rl(e,g);let $=c.slice(0,-1);$.push(s),E=C,C=tt({inputs:{x:C},attrs:{shape:$},backend:e}),Rl(e,E);let _=A;return A=tt({inputs:{x:A},attrs:{shape:$},backend:e}),Rl(e,_),[A,C]}var jO={kernelName:wc,backendName:"webgl",kernelFunc:eY};var By=class{constructor(t,e,o,n,s,i){this.variableNames=["Image","Transforms"],this.outputShape=i;let a=o==="nearest"?1:2,l;switch(n){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${s});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${s});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function rY(r){let{inputs:t,backend:e,attrs:o}=r,{image:n,transforms:s}=t,{interpolation:i,fillMode:a,fillValue:l,outputShape:c}=o,[u,p,m,f]=n.shape,[h,d]=c??[p,m],g=[u,h,d,f],x=new By(p,m,i,a,l,g);return e.runWebGLProgram(x,[n,s],"float32")}var XO={kernelName:Cc,backendName:"webgl",kernelFunc:rY};function oY(r){let{inputs:t,attrs:e,backend:o}=r,{axis:n}=e,{x:s}=t;Tn(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=o.readSync(s.dataId),{outputValues:a,outputShape:l,indices:c}=aR(i,n,s.shape,s.dtype);return[o.makeTensorInfo(l,s.dtype,a),o.makeTensorInfo([c.length],"int32",c)]}var YO={kernelName:Ic,backendName:"webgl",kernelFunc:oY};function nY(r){let{inputs:t,backend:e,attrs:o}=r,{value:n}=t,{axis:s}=o;s<0&&(s+=n.shape.length);let i=n,a=i.shape.length,l=n.shape[s],c=new Array(a-1),u=0;for(let d=0;d<a;d++)d!==s&&(c[u++]=i.shape[d]);let p=[],m=new Array(a).fill(0),f=i.shape.slice();f[s]=1;let h=new Array(l);for(let d=0;d<h.length;d++){m[s]=d;let g=Jo({inputs:{x:i},backend:e,attrs:{begin:m,size:f}}),x=tt({inputs:{x:g},backend:e,attrs:{shape:c}});h[d]=x,p.push(g)}return p.forEach(d=>e.disposeIntermediateTensorInfo(d)),h}var ZO={kernelName:Ui,backendName:"webgl",kernelFunc:nY};var My=class{constructor(t,e){this.variableNames=["x","segmentIds"];let o=t.windowSize,n=t.batchSize,s=t.inSize,i=t.numSegments,a=i*Math.ceil(s/o);this.outputShape=[n,a];let l="0.0",c="sumValue",u=Math.floor(o/4)*4,p=o%4,m=`
        sumValue += dot(values, segFilter);
    `,f="";s%o>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let h="";s%o>0&&(h=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${h}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${o}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${m}
        }

        int inIdx = inOffset + ${u};
        if (${p===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${m}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${m}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${m}
        }
        setOutput(${c});
      }
    `}};function sY(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,segmentIds:s}=t,{numSegments:i}=o,a=n.shape.length,l=[],c=0,u=S.getAxesPermutation([c],a),p=n;u!=null&&(p=ue({inputs:{x:n},backend:e,attrs:{perm:u}}),l.push(p),c=S.getInnerMostAxes(1,a)[0]);let m=S.segment_util.computeOutShape(p.shape,c,i),f=y.sizeFromShape([p.shape[c]]),h=tt({inputs:{x:p},backend:e,attrs:{shape:[-1,f]}});l.push(h);let d=Ma(n.dtype),g=(w,I,E,A,$)=>{let _=w.shape[0],L=w.shape[1],M=S.segment_util.segOpComputeOptimalWindowSize(L,$),V={windowSize:M,inSize:L,batchSize:_,numSegments:$},G=new My(V,I),W=e.compileAndRun(G,[w,E],A);if(l.push(W),W.shape[1]===$)return W;let U=mI({backend:e,attrs:{start:0,stop:$,step:1,dtype:"float32"}}),K=fI({inputs:{x:U},backend:e,attrs:{reps:[L/M]}});return l.push(U),l.push(K),g(W,I,K,A,$)},x=g(h,"unsortedSegmentSum",s,d,i),b=tt({inputs:{x},backend:e,attrs:{shape:m}}),C=b;if(u!=null){l.push(b);let w=S.getUndoAxesPermutation(u);C=ue({inputs:{x:C},backend:e,attrs:{perm:w}})}return l.forEach(w=>e.disposeIntermediateTensorInfo(w)),C}var JO={kernelName:Wi,backendName:"webgl",kernelFunc:sY};var iY=[_R,LR,PR,zR,MR,VR,GR,UR,qR,KR,jR,XR,YR,ZR,JR,QR,tF,eF,rF,oF,nF,iF,aF,lF,cF,fF,dF,gF,vR,yF,wF,CF,IF,SF,vF,NF,TF,kF,EF,AF,RF,FF,_F,OF,LF,PF,zF,BF,MF,VF,GF,UF,WF,HF,qF,KF,XF,YF,ZF,JF,t_,e_,r_,o_,n_,s_,i_,a_,l_,SR,c_,bF,u_,p_,m_,NR,f_,h_,d_,g_,x_,y_,b_,w_,C_,I_,v_,N_,T_,k_,E_,A_,D_,F_,__,O_,L_,P_,G_,ER,U_,W_,H_,q_,uF,K_,Y_,Z_,J_,Q_,TR,tO,eO,rO,oO,nO,pF,z_,sO,iO,aO,$R,lO,cO,uO,pO,mO,fO,hO,dO,gO,xO,yO,bO,wO,CO,IO,SO,sF,V_,vO,NO,TO,kO,EO,AO,$O,DO,FO,_O,LO,PO,zO,BO,MO,VO,GO,M_,RR,UO,WO,HO,qO,jO,XO,FR,YO,ZO,JO,j_];for(let r of iY)Ah(r);function QO(r){switch(r){case"small molecule":return"icon icon-conceptual icon-chemical";case"protein":case"peptide":return"icon icon-conceptual icon-structures-3d";case"stable complex":return"icon icon-conceptual icon-systems";case"molecule set":return"icon icon-generic icon-math";case"single stranded deoxyribonucleic acid":case"double stranded deoxyribonucleic acid":case"small nuclear rna":case"small nucleolar rna":case"ribosomal rna":case"messenger rna":case"transfer rna":case"signal recognition particle rna":case"ribonucleic acid":case"nucleic acid":case"long non-coding ribonucleic acid":return"icon icon-conceptual icon-dna"}}function Vy(r){switch(lY(r)){case"Homo sapiens":return"icon icon-species icon-human";case"Mus musculus":return"icon icon-species icon-mouse";case"Schizosaccharomyces pombe":case"Saccharomyces cerevisiae":return"icon icon-species icon-yeast";case"Escherichia coli":case"Pseudomonas aeruginosa":case"Klebsiella pneumoniae":case"Chlamydomonas reinhardtii":return"icon icon-species icon-ecoli";case"Rattus norvegicus":return"icon icon-species icon-rat";case"Caenorhabditis elegans":return"icon icon-species icon-c-elegans";case"Gallus gallus":return"icon icon-species icon-chicken";case"Drosophila melanogaster":return"icon icon-species icon-fly";case"Bos taurus":return"icon icon-species icon-cow";case"Oryctolagus cuniculus":return"icon icon-species icon-rabbit";case"Ovis aries":return"icon icon-species icon-sheep";case"Xenopus laevis":return"icon icon-species icon-frog";case"Canis lupus":case"Canis familiaris":return"icon icon-species icon-dog";case"Vibrio cholerae":return"assets/images/EMBL_Species_Vibrio_cholerae.svg";case"Crotalus durissus":return"assets/images/EMBL_Species_RattleSnake.svg";case"Sus scrofa":return"icon icon-species icon-pig";case"Torpedo marmorata":case"Tetronarce californica":return"icon icon-species icon-ray";case"Lymnaea stagnalis":return"icon icon-species icon-snail";case"Arabidopsis thaliana":return"icon icon-species icon-brassica";case"Danio rerio":return"icon icon-species icon-zebrafish";case"Severe acute":case"Human SARS":case"SARS-CoV-2":case"Middle East":case"Human betacoronavirus":return"icon icon-species icon-virus"}return""}function lY(r){return(r||"?").split(";")[0].split(" ").slice(0,2).join(" ")}function cY(r,t){let e=new Map;return r.forEach(o=>{let n=o[t];e.has(n)||e.set(n,[]),e.get(n).push(o)}),e}function tL(r,t,e){let o=cY(r,t);return Array.from(o.keys()).sort(e).map(s=>o.get(s))}var uY=function(r,t,e,o){var n=arguments.length,s=n<3?t:o===null?o=Object.getOwnPropertyDescriptor(t,e):o,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")s=Reflect.decorate(r,t,e,o);else for(var a=r.length-1;a>=0;a--)(i=r[a])&&(s=(n<3?i(s):n>3?i(t,e,s):i(t,e))||s);return n>3&&s&&Object.defineProperty(t,e,s),s},hI,Gy=(hI=class{constructor(){et(this,"complexSearch",Et());et(this,"interactors",Et());et(this,"interactorsSorting",Et());et(this,"organismIconDisplay",Et());et(this,"interactorTypeDisplay",Et());et(this,"idDisplay",Et());et(this,"canAddComplexesToBasket",Et());et(this,"canRemoveComplexesFromBasket",Et());et(this,"onComplexRemovedFromBasket",Zs());et(this,"sortedComplexes",Qo(()=>this.sortComplexBySimilarityClustering(this.complexSearch().elements)))}getComponentAsComplex(t){return this.complexSearch().elements.find(e=>e.complexAC===t.identifier)}calculateSimilarity(t,e){if(t===e)return 1;let[o,n]=[t,e].map(this.getComponents.bind(this));return o.intersection(n).size/o.union(n).size}getComponents(t){return t.componentAcs||(t.componentAcs=new Set(this.getAllComponents(t,[],!0).map(e=>e.identifier))),t.componentAcs}getAllComponents(t,e=[],o=!1){for(let n of t.interactors)if(n.interactorType==="stable complex"){let s=this.getComponentAsComplex(n);s?(e.push(...this.getAllComponents(s)),o&&e.push(n)):e.push(n)}else e.push(n);return e}sortComplexBySimilarityClustering(t){return tL(t,"predictedComplex",(o,n)=>o-n).flatMap(o=>{let n=new Array(o.length).fill(null).map(s=>new Array(o.length).fill(null));return o.forEach((s,i)=>o.forEach((a,l)=>{i>=l&&(n[i][l]=this.calculateSimilarity(s,a),n[l][i]=n[i][l])})),this.getSortedIndexFromChainedSimilarity(ra(n)).map(s=>o[s])})}getSortedIndexFromChainedSimilarity(t){let e=[],o=eo(t.sum(0)).arraySync();e.push(o);let n=new Set;for(let s=1;s<t.shape[0];s++){let i=t.bufferSync();for(let l=0;l<t.shape[0];l++)i.set(-1/0,l,o);t=i.toTensor();let a=t.gather([o]).arraySync()[0];o=eo(a).arraySync(),a.forEach((l,c)=>{l>0&&n.add(c)}),a[o]===0&&(n.size!==0?o=n.values().next().value:o=eo(t.sum(0)).arraySync()),e.push(o),n.delete(o)}return e}},et(hI,"propDecorators",{complexSearch:[{type:St,args:[{isSignal:!0,alias:"complexSearch",required:!1,transform:void 0}]}],interactors:[{type:St,args:[{isSignal:!0,alias:"interactors",required:!1,transform:void 0}]}],interactorsSorting:[{type:St,args:[{isSignal:!0,alias:"interactorsSorting",required:!1,transform:void 0}]}],organismIconDisplay:[{type:St,args:[{isSignal:!0,alias:"organismIconDisplay",required:!1,transform:void 0}]}],interactorTypeDisplay:[{type:St,args:[{isSignal:!0,alias:"interactorTypeDisplay",required:!1,transform:void 0}]}],idDisplay:[{type:St,args:[{isSignal:!0,alias:"idDisplay",required:!1,transform:void 0}]}],canAddComplexesToBasket:[{type:St,args:[{isSignal:!0,alias:"canAddComplexesToBasket",required:!1,transform:void 0}]}],canRemoveComplexesFromBasket:[{type:St,args:[{isSignal:!0,alias:"canRemoveComplexesFromBasket",required:!1,transform:void 0}]}],onComplexRemovedFromBasket:[{type:Er,args:["onComplexRemovedFromBasket"]}]}),hI);Gy=uY([_e({selector:"cp-table-structure",template:OI,styles:[LI]})],Gy);var eL=`<div class="Complex-navigator">
  <table class="table CN-table">
    <!-- When table is not overflowing -->
    @if (complexes().length<=6) {
      <thead class="tableHead">
        <tr>
          @if (isInteractorSortingSet()) {
            <th class="spaceHolderSorting"></th>
          }
          <th class="interactorsHeader horizontal">
            Components
          </th>
          @for (complex of complexes(); track complex.complexAC) {
            <th class="horizontal" [class.predicted]="complex.predictedComplex">
              <div>
                <a [routerLink]="['/complex', complex.complexAC]"
                  target="_blank">
                  <div>
                    <span [matTooltip]="complex.complexName+ ' - '+ complex.complexAC + ' - ' + complex.organismName" class="horizontal-label">
                      <div class="line"></div>
                      <i class="{{iconOrganism(complex.organismName)}}"></i>
                      <i class="icon icon-generic small" data-icon="x"></i>
                      {{ complex.complexName }}
                    </span>
                  </div>
                </a>
              </div>
              <div class="basketButton">
                <a class="button" (click)="toggleBasket(complex)">
                  <i class="icon icon-common" [attr.data-icon]="isInBasket(complex.complexAC) ? '\uF1F8':'\uF217'"></i>
                </a>
              </div>
            </th>
          }
        </tr>
      </thead>
    }
    <!-- When table is overflowing -->
    @if (complexes().length > 6) {
      <thead class="tableHeadOverflow"
        [ngClass]="isInteractorSortingSet() ? 'tableHeadOverflowWithSorting' : 'tableHeadOverflow'">
        <tr [style.--cols]="complexes().length"
          [style.--intHeader]="isInteractorSortingSet() ? '156px':''"
          [style.--sizeSpaceHolder]="'185px'">
          <th class="spaceHolderHeaderOverflow"
            [style]="isInteractorSortingSet() ? 'min-width: 156px; max-width: 156px;':''">
          </th>
          @for (complex of complexes(); track complex.complexAC) {
            <th class="rotate"
              [class.predicted]="complex.predictedComplex"
              [style.--cols]="complexes().length">
              <a [routerLink]="['/complex', complex.complexAC]"
                [matTooltip]="complex.complexName+ ' - '+ complex.complexAC"
                target="_blank">
                <div>
                  <span>
                    <div class="tilted-label">
                      <i class="icon icon-generic small" data-icon="x"></i>
                      {{ complex.complexName }}
                    </div>
                  </span>
                </div>
              </a>
            </th>
          }
          <div class="spaceHolder"></div>
        </tr>
        <!-- icons row -->
        <tr [style.--cols]="complexes().length"
          [style.--intHeader]="isInteractorSortingSet() ? '156px':''"
          [style.--sizeSpaceHolder]="'185px'">
          <th class="interactorsHeader overflow"
            [style]="isInteractorSortingSet() ? 'min-width: 156px; max-width: 156px;':''">
            Components
          </th>
          @for ( complex of complexes(); track  complex.complexAC) {
            <th class="iconOrganism" [class.predicted]="complex.predictedComplex">
              <div>
                @if (isInBasket(complex.complexAC)) {
                  <a class="button" (click)="toggleBasket(complex)" [matTooltip]="'Remove from basket'">
                    <i class="icon icon-common" data-icon="\uF1F8"></i>
                  </a>
                } @else {
                  <a class="button" (click)="toggleBasket(complex)" [matTooltip]="'Add to basket'">
                    <i class="icon icon-common" data-icon="\uF217"></i>
                  </a>
                }
              </div>
              <div>
                <i class="{{iconOrganism(complex.organismName)}}" [matTooltip]="complex.organismName | species"></i>
              </div>
            </th>
          }
          <div class="spaceHolder"></div>
        </tr>
      </thead>
    }
  </table>
</div>


`;var rL=`.CN-table{transform:rotateX(180deg)}thead{border:0;background-color:#fff;border-right:0 solid white;overflow:scroll}.CN-table{clip-path:fill-box;overflow:scroll}.spaceHolderSorting{width:3ch;border-bottom:3px solid var(--primary)}.spaceHolderHeaderOverflow{min-width:130px;max-width:130px;position:sticky;left:0;z-index:4;color:var(--primary);background-color:var(--on-primary);padding-top:173px;text-align:right}.iconOrganism{position:sticky;text-align:center;background-color:var(--primary);color:var(--on-primary);border-left:1px solid white;font-size:medium;height:60px}.tilted-label{text-overflow:ellipsis;width:28ch;white-space:nowrap;overflow:hidden}.CN-table .tableHeadOverflow tr{--cols: 1;--intHeader: 130px;--parentWidth: 100%;--sizeSpaceHolder: calc(var(--parentWidth) - 70px * var(--cols) - var(--intHeader));display:grid;grid-template-columns:var(--intHeader) repeat(auto-fit,70px);width:calc(var(--intHeader) + 70px * var(--cols) + var(--sizeSpaceHolder));overflow:hidden}.CN-table .tableHeadOverflowWithSorting tr{--cols: 1;--intHeader: 130px;--parentWidth: 100%;--sizeSpaceHolder: calc(var(--parentWidth) - 70px * var(--cols) - var(--intHeader));display:grid;grid-template-columns:var(--intHeader) repeat(auto-fit,70px);width:calc(var(--intHeader) + 70px * var(--cols) + var(--sizeSpaceHolder) - 3ch);overflow:hidden}.CN-table .tableHeadOverflow th.rotate{position:relative;width:350px;height:51px!important;color:var(--on-primary);font-size:14px;text-align:left;border:1px solid white;top:70px;left:-52px;display:flex;align-items:center;align-content:center;padding:0;transform:rotate(-45deg);border-collapse:collapse}.CN-table .tableHeadOverflow th.rotate a{width:100%;height:100%;align-content:center;background-color:var(--primary);padding:0 0 0 70px;border:none}.spaceHolder{width:183px;background-color:var(--primary);border-left:1px solid white}.interactorsHeader.overflow{min-width:130px;max-width:130px;width:130px;position:sticky;left:0;z-index:4;background-color:var(--on-primary);border-bottom:3px solid var(--primary);height:60px;line-height:70px;text-align:right;color:var(--primary)}.CN-table th.horizontal.interactorsHeader{padding:5px;min-width:130px;max-width:130px;font-size:medium;border-left:none;text-align:right;color:var(--primary);background-color:var(--on-primary);border-bottom:3px solid var(--primary)}.horizontal-label{text-align:center;text-overflow:ellipsis;width:90%;white-space:nowrap;overflow:hidden;margin:auto;display:block}.CN-table th.horizontal{color:#fff;background-color:var(--primary);border-left:1px solid white;min-width:80px;max-width:80px;height:35px;font-size:15px}a:visited,a{color:var(--on-primary)}.basket-icons{margin-left:5px}.button{padding:0;margin:0}.basketButton{text-align:center}
`;var fY=function(r,t,e,o){var n=arguments.length,s=n<3?t:o===null?o=Object.getOwnPropertyDescriptor(t,e):o,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")s=Reflect.decorate(r,t,e,o);else for(var a=r.length-1;a>=0;a--)(i=r[a])&&(s=(n<3?i(s):n>3?i(t,e,s):i(t,e))||s);return n>3&&s&&Object.defineProperty(t,e,s),s},Uy,Wy=(Uy=class{constructor(t){et(this,"basketService");et(this,"complexes",Et());et(this,"interactorsSorting",Et());et(this,"onComplexRemovedFromBasket",Zs());this.basketService=t}isInteractorSortingSet(){return this.interactorsSorting()==="Type"||this.interactorsSorting()==="Organism"}iconOrganism(t){return Vy(t)}toggleBasket(t){this.isInBasket(t.complexAC)?this.removeComplex(t.complexAC):this.saveComplex(t)}saveComplex(t){this.basketService.saveInBasket(t)}removeComplex(t){this.basketService.deleteFromBasket(t),this.onComplexRemovedFromBasket.emit(t)}isInBasket(t){return this.basketService.isInBasket(t)}},et(Uy,"ctorParameters",()=>[{type:kI}]),et(Uy,"propDecorators",{complexes:[{type:St,args:[{isSignal:!0,alias:"complexes",required:!1,transform:void 0}]}],interactorsSorting:[{type:St,args:[{isSignal:!0,alias:"interactorsSorting",required:!1,transform:void 0}]}],onComplexRemovedFromBasket:[{type:Er,args:["onComplexRemovedFromBasket"]}]}),Uy);Wy=fY([_e({selector:"cp-table-header",template:eL,styles:[rL]})],Wy);var oL=`<div class="Complex-navigator">
  <table class="interactors-table"
         [ngClass]="{'inheritedWidth': complexes().length > 6}"
         [style.--cols]="complexes().length">
    @for (interactor of enrichedInteractors; track i; let i = $index) {
      @if (!interactor.hidden) {
        <tr>
          @for (range of ranges; track range.value) {
            @if (range.start === i) {
              <td [attr.rowspan]="range.length" class="interactorSeparation"
                  [matTooltip]="interactorsSorting() === 'Organism' ? (range.value | species) : range.value">
                <div class="interactorNameContainer" [style.--rowspanSize]="range.length">
                  @if (interactorsSorting() === 'Organism') {
                    {{ range.value | species:true }}
                  } @else {
                    {{ range.value }}
                  }
                </div>
              </td>
            }
          }
          <td class="interactorsColumn"
              [ngClass]="complexes().length<=6 ? 'horizontalHeader' : 'interactorsColumnFixedWidth'"
              [style]="ranges.length!=0 ? 'left:3ch':''">
            <cp-table-interactor-name
              [interactorName]="interactor.interactor.name"
              [interactorType]="interactor.interactor.interactorType"
              [interactorId]="interactor.interactor.identifier"
              [interactorOrganism]="interactor.interactor.organismName"
              [identifierLink]="interactor.interactor.identifierLink"
              [organismIconDisplay]="organismIconDisplay()"
              [interactorTypeDisplay]="interactorTypeDisplay()"
              [idDisplay]="idDisplay()"
            ></cp-table-interactor-name>
            <!-- Icon for the expandable -->
            @if (interactor.isSubComplex) {
              <div class="container">
                <a (click)="toggleSubcomplexExpandable(i)"
                   [matTooltip]="interactor.interactor.name + ' components'">
                  Components
                  <i class="icon icon-common" data-icon="&#xf078;"
                     style="font-size:small;
                "></i>
                </a>
              </div>
            }
          </td>
          <!-- Interactors' stoichiometry -->
          @for (complex of enrichedComplexes; track complex.complex.complexAC) {
            <td class="intStoich" [ngClass]="{'intStoichFixedWidth': complexes().length > 6}"
                [class.predicted]="complex.complex.predictedComplex">
              <cp-table-main-interactor
                [complex]="complex"
                [i]="i"
                [enrichedInteractors]="enrichedInteractors"
              ></cp-table-main-interactor>
            </td>
          }
          @if (complexes().length > 6) {
            <div
              [ngClass]="isInteractorSortingSet() ? 'spaceHolderWithSorting' : 'spaceHolder'"></div>
          }
        </tr>
      }
      <!-- Expandable menu for subcomplexes -->
      @if (interactor.expanded) {
        @if (!!interactor.subComponents) {
          @for (el of interactor.subComponents; track el; let j = $index) {
            <tr
              class="expandedRows"
              [ngClass]="getExpandedRowClass(j, interactor.subComponents.length)">
              @if (j === 0 && (interactorsSorting() === 'Type' || interactorsSorting() === 'Organism')) {
                <td [attr.rowspan]="interactor.subComponents.length" class="interactorSeparation"
                    [matTooltip]="interactor.interactor.name + ' components'"
                >
                  <div class="interactorSeparationName"
                       [style.--rowspanSize]="interactor.subComponents.length"> {{ interactor.interactor.name }}
                    components
                  </div>
                </td>
              }
              <td class="subComponentColumn"
                  [ngClass]="complexes().length<=6 ? 'horizontalHeader' : 'interactorsColumnFixedWidth'"
                  [style]="ranges.length!=0 ? 'left:3ch':''">
                <div>
                  <cp-table-interactor-name
                    [interactorName]="el.name"
                    [interactorType]="el.interactorType"
                    [interactorId]="el.identifier"
                    [interactorOrganism]="interactor.interactor.organismName"
                    [identifierLink]="el.identifierLink"
                    [organismIconDisplay]="organismIconDisplay()"
                    [interactorTypeDisplay]="interactorTypeDisplay()"
                    [idDisplay]="idDisplay()"
                  ></cp-table-interactor-name>
                </div>
              </td>
              @for (complex of enrichedComplexes; track complex.complex.complexAC) {
                <td class="intStoich" [ngClass]="{'intStoichFixedWidth': complexes().length > 6}">
                  <cp-table-subcomponent-interactor
                    [complex]="complex"
                    [i]="i"
                    [j]="j"
                    [enrichedInteractors]="enrichedInteractors"
                  ></cp-table-subcomponent-interactor>
                </td>
              }
              @if (enrichedComplexes.length > 6) {
                <div class="spaceHolder"></div>
              }
            </tr>
          }
        }
      }
    }
  </table>
</div>
`;var nL=`table{--cols: 1;height:1px;overflow:scroll}.inheritedWidth{width:calc(130px + var(--cols) * 70px + 183px)}.interactorsColumn{position:sticky;left:0;z-index:5;height:45px;min-width:130px;max-width:130px;padding:5px;text-align:end;color:#0e6f76;font-weight:700;background:inherit}.interactorsColumnFixedWidth{width:130px}.interactorsColumn a{font-weight:400}.intStoich{height:100%;max-width:70px;min-width:70px;font-size:medium;text-align:end;z-index:1}.intStoichFixedWidth{width:70px}i:not(.small){font-size:large}tr:nth-child(2n){background-color:#f7f7f7}tr:nth-child(odd){background-color:#fff}a,a:visited{color:#0e6f76}.spaceHolder{width:183px}.spaceHolderWithSorting{width:calc(183px - 3ch)}.subComponentColumn{left:0;z-index:30;height:45px;min-width:130px;max-width:130px;padding:5px;text-align:end;color:#0e6f76;font-weight:700;background:inherit;position:sticky}.expandedRows{color:#0e6f76;position:relative}.firstExpandedRow:after{z-index:40;content:"";position:absolute;inset:-2px -1px;pointer-events:none;background:linear-gradient(180deg,#0e6f7696 0px,transparent 10px)}.lastExpandedRow:after{z-index:40;content:"";position:absolute;inset:-2px -1px;pointer-events:none;background:linear-gradient(0deg,#0e6f7696 0px,transparent 10px)}.singleExpandedRow:after{z-index:40;content:"";position:absolute;inset:-2px -1px;pointer-events:none;background:linear-gradient(180deg,#0e6f7696 0px,transparent 10px),linear-gradient(0deg,#0e6f7696 0px,transparent 10px)}.interactorSeparation{max-width:3ch;min-width:3ch;background-color:#0e6f76;border:1px solid white;overflow:hidden;width:1%;text-align:-webkit-center;position:sticky;z-index:31;left:0}.interactorNameContainer,.interactorSeparationName{--rowspanSize: 1;writing-mode:vertical-rl;transform:rotate(-180deg);font-size:small;color:#fff;line-height:.8;text-align:center;text-overflow:ellipsis;height:calc(var(--rowspanSize) * 48px);white-space:nowrap;overflow:hidden}.container{font-size:14px}.horizontalHeader{min-width:114px;max-width:114px}@supports (-webkit-hyphens:none){.interactorsColumn{height:45px!important}.intStoich{height:45px;overflow-y:visible}}
`;function xa(r,t,e){let o=sL(r.interactors,t,e);return o?{identifier:o.identifier,stochiometryValue:o.stochiometryValue,stochiometryText:wY(o.stochiometryValue),stochiometryValueFormatted:bY(o.stochiometryValue)}:null}function sL(r,t,e){let o=!1,n=null;for(let s of r){let i=gY(s,t,e);i&&(o=!0,i.stochiometryValue&&(n?n=[n[0]+i.stochiometryValue[0],n[1]+i.stochiometryValue[1]]:n=[i.stochiometryValue[0],i.stochiometryValue[1]]))}return o?{identifier:t,stochiometryValue:n}:null}function gY(r,t,e){let o=yY(r.stochiometry);if(r.identifier===t)return{identifier:t,stochiometryValue:o};if(r.interactorType==="stable complex"){let n=e.find(s=>s.interactor.identifier===r.identifier);if(n&&n.subComponents){let s=sL(n.subComponents,t,e);if(s)return s.stochiometryValue?o?{identifier:t,stochiometryValue:[o[0]*s.stochiometryValue[0],o[1]*s.stochiometryValue[1]]}:{identifier:t,stochiometryValue:s.stochiometryValue}:{identifier:t,stochiometryValue:o}}}return null}function xY(r){return r.match("minValue: ([0-9+]), maxValue: ([0-9+])")}function yY(r){if(r){let t=xY(r);if(t){let e=parseInt(t[1],10),o=parseInt(t[2],10);if(!isNaN(e)&&!isNaN(o))return[e,o]}}return null}function bY(r){if(r){let t=r[0],e=r[1];return t===e?t.toString():`${t}-${e}`}return" "}function wY(r){return r?"Stoichiometry values: minValue: "+r[0]+", maxValue: "+r[1]:"No stoichiometry data available"}var CY=function(r,t,e,o){var n=arguments.length,s=n<3?t:o===null?o=Object.getOwnPropertyDescriptor(t,e):o,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")s=Reflect.decorate(r,t,e,o);else for(var a=r.length-1;a>=0;a--)(i=r[a])&&(s=(n<3?i(s):n>3?i(t,e,s):i(t,e))||s);return n>3&&s&&Object.defineProperty(t,e,s),s};var Hy,qy=(Hy=class{constructor(t,e){et(this,"complexPortalService");et(this,"species");et(this,"complexes",Et([]));et(this,"interactorsSorting",Et());et(this,"interactors",Et([]));et(this,"organismIconDisplay",Et(!0));et(this,"interactorTypeDisplay",Et(!0));et(this,"idDisplay",Et(!0));et(this,"enrichedInteractors");et(this,"enrichedComplexes");et(this,"ranges",[]);et(this,"timesAppearingBy",{interactorType:new Map,organismName:new Map});this.complexPortalService=t,this.species=e}ngOnChanges(t){t.interactors&&(this.enrichInteractors(),this.calculateTimesAppearing()),this.classifyInteractors(),this.calculateAllStartAndEndIndexes()}classifyInteractors(){this.interactorsSorting()&&this.enrichedInteractors&&this.enrichedInteractors.length>0&&(this.interactorsSorting()==="Type"?this.classifyBy("interactorType"):this.interactorsSorting()==="Organism"?this.classifyBy("organismName"):this.classifyInteractorsByOccurrence())}enrichInteractors(){this.enrichedInteractors=[];for(let t of this.interactors()){let e=t.interactorType==="stable complex",o={interactor:t,hidden:!1,isSubComplex:e,expanded:!1,subComponents:null,partOfComplex:[],timesAppearing:0,indexAppearing:this.complexes().findIndex(n=>n.componentAcs?.has(t.identifier))||0};e&&this.loadSubInteractors(o).subscribe(n=>o.subComponents=n),this.enrichedInteractors.push(o)}}toggleSubcomplexExpandable(t){if(this.enrichedInteractors[t].expanded=!this.enrichedInteractors[t].expanded,this.enrichedInteractors[t].expanded){for(let e=0;e<this.enrichedInteractors.length;e++)t!==e&&(this.enrichedInteractors[e].expanded=!1);if(this.enrichedInteractors[t].subComponents){let e=this.enrichedInteractors[t].subComponents.map(o=>o.identifier);for(let o=0;o<this.enrichedInteractors.length;o++)t!==o&&(this.enrichedInteractors[o].hidden=!!e.includes(this.enrichedInteractors[o].interactor.identifier))}}else for(let e=0;e<this.enrichedInteractors.length;e++)this.enrichedInteractors[e].hidden=!1;this.classifyInteractors(),this.calculateAllStartAndEndIndexes()}loadSubInteractors(t){let e=this.complexes().find(o=>o.complexAC===t.interactor.identifier);return e?II(e.interactors):this.complexPortalService.getSimplifiedComplex(t.interactor.identifier).pipe(SI(o=>o?.interactors))}calculateAllStartAndEndIndexes(){this.enrichedComplexes=[];for(let t of this.complexes())this.enrichedComplexes.push(this.calculateStartAndEndIndexes(t))}getMinValue(t,e){return e===null?t:t===null?e:Math.min(t,e)}getMaxValue(t,e){return e===null?t:t===null?e:Math.max(t,e)}calculateStartAndEndIndexes(t){let e={complex:t,startInteractorIndex:null,endInteractorIndex:null,startSubComponentIndex:null,endSubComponentIndex:null,startInteractorIncludedWhenExpanded:!0};for(let o=0;o<this.enrichedInteractors.length;o++)if(!this.enrichedInteractors[o].hidden){if(xa(t,this.enrichedInteractors[o].interactor.identifier,this.enrichedInteractors))e.startInteractorIndex=this.getMinValue(e.startInteractorIndex,o),e.startInteractorIndex===o&&(e.startInteractorIncludedWhenExpanded=!0),e.endInteractorIndex=this.getMaxValue(e.endInteractorIndex,o),this.enrichedInteractors[o].isSubComplex&&this.enrichedInteractors[o].subComponents&&this.enrichedInteractors[o].expanded&&(e.startSubComponentIndex=-1,e.endSubComponentIndex=this.enrichedInteractors[o].subComponents.length-1);else if(this.enrichedInteractors[o].isSubComplex&&this.enrichedInteractors[o].subComponents&&this.enrichedInteractors[o].expanded)for(let n=0;n<this.enrichedInteractors[o].subComponents.length;n++)xa(t,this.enrichedInteractors[o].subComponents[n].identifier,this.enrichedInteractors)&&(e.startInteractorIndex=this.getMinValue(e.startInteractorIndex,o),e.startInteractorIndex===o&&(e.startInteractorIncludedWhenExpanded=!1),e.endInteractorIndex=this.getMaxValue(e.endInteractorIndex,o),e.startSubComponentIndex=this.getMinValue(e.startSubComponentIndex,n),e.endSubComponentIndex=this.getMaxValue(e.endSubComponentIndex,n))}return e}compareFn(t,e){return-(e.indexAppearing-t.indexAppearing)||-(e.timesAppearing-t.timesAppearing)}classifyInteractorsByOccurrence(){this.enrichedInteractors.sort(this.compareFn.bind(this)),this.ranges=[]}classifyBy(t){this.enrichedInteractors.sort((e,o)=>this.timesAppearingBy[t].get(o.interactor[t])-this.timesAppearingBy[t].get(e.interactor[t])||o.interactor[t].localeCompare(e.interactor[t])||this.compareFn(e,o)),this.calculateRangesBy(t)}calculateRangesBy(t){let e=[],o=0,n=null;for(let s=0;s<this.enrichedInteractors.length;s++){this.enrichedInteractors[s].hidden||(o+=1,n===null&&(n=s));let i=this.enrichedInteractors[s].interactor[t];(!this.enrichedInteractors[s+1]||this.enrichedInteractors[s].isSubComplex&&this.enrichedInteractors[s].expanded||i!==this.enrichedInteractors[s+1].interactor[t])&&(n!==null&&(e.push({value:i,start:n,length:o}),n=null),o=0)}this.ranges=e}isInteractorSortingSet(){return this.interactorsSorting()==="Type"||this.interactorsSorting()==="Organism"}getExpandedRowClass(t,e){return t===0?e===1?"singleExpandedRow":"firstExpandedRow":t===e-1?"lastExpandedRow":null}calculateTimesAppearing(){for(let t of Object.values(this.timesAppearingBy))t.clear();for(let t of this.enrichedInteractors){t.timesAppearing=0;for(let e of this.complexes())if(xa(e,t.interactor.identifier,this.enrichedInteractors)){t.timesAppearing+=1;for(let n of Object.keys(this.timesAppearingBy)){let s=this.timesAppearingBy[n],i=t.interactor[n];s.set(i,(s.get(i)||0)+1)}}}}},et(Hy,"ctorParameters",()=>[{type:EI},{type:nh}]),et(Hy,"propDecorators",{complexes:[{type:St,args:[{isSignal:!0,alias:"complexes",required:!1,transform:void 0}]}],interactorsSorting:[{type:St,args:[{isSignal:!0,alias:"interactorsSorting",required:!1,transform:void 0}]}],interactors:[{type:St,args:[{isSignal:!0,alias:"interactors",required:!1,transform:void 0}]}],organismIconDisplay:[{type:St,args:[{isSignal:!0,alias:"organismIconDisplay",required:!1,transform:void 0}]}],interactorTypeDisplay:[{type:St,args:[{isSignal:!0,alias:"interactorTypeDisplay",required:!1,transform:void 0}]}],idDisplay:[{type:St,args:[{isSignal:!0,alias:"idDisplay",required:!1,transform:void 0}]}]}),Hy);qy=CY([_e({selector:"cp-table-interactor-column",template:oL,styles:[nL]})],qy);var iL=`<div class="container">
  <div class="nameAndIcons" [ngClass]="{inlineDisplay: interactorType()==='stable complex'}">
    @if (organismIconDisplay()) {
      <i
        class="{{interactorOrganismIcon}}"
      [matTooltip]="interactorOrganism() | species"></i>
    }

    @if (interactorTypeDisplay()) {
      <i
        class="{{interactorTypeIcon}}"
      [matTooltip]="interactorType()"></i>
    }

    @if (idDisplay()) {
      <div class="name" [matTooltip]="interactorName()">
        {{ interactorName() }}
      </div>
    }
    @if (idDisplay()) {
      <a
        [routerLink]="['/complex/search']"
        [queryParams]="{query: interactorId(), page: 1}"
        target="_blank">
        <i class="icon icon-functional small" data-icon="1"
        [matTooltip]="'More complexes containing ' + interactorName() "></i>
      </a>
    }

    @if (!idDisplay()) {
      <div class="nameCompact">
        @if (!idDisplay()) {
          <div class="name" [matTooltip]="'More information about ' + interactorName()">
            @if (!!identifierLink()) {
              <a [href]="identifierLink()" target="_blank" class="externalLinkContainer">
                {{ interactorName() }}
              </a>
            }
          </div>
        }
        <a [routerLink]="['/complex/search']"
          [queryParams]="{query: interactorId(), page: 1}"
          target="_blank">
          <i class="icon icon-functional small" data-icon="1"
          [matTooltip]="'More complexes containing ' + interactorName() "></i>
        </a>
      </div>
    }
  </div>
  @if (idDisplay()) {
    <cp-table-interactor-external-link
      [interactorId]="interactorId()"
      [identifierLink]="identifierLink()"
      [interactorType]="interactorType()"
      [isMainInteractor]="isMainInteractor()"
      [idDisplay]="idDisplay()"
      (externalLinkVisible)="externalLinkVisibleHandler($event)">
    </cp-table-interactor-external-link>
  }
</div>
`;var aL=`a{font-weight:700}a,a:visited{color:#0e6f76}i:not(.small){font-size:medium}.nameAndIcons{font-size:14px;display:flex;width:inherit;justify-content:flex-end}.inlineDisplay{display:flex;justify-content:flex-end}.name{width:inherit;text-overflow:ellipsis;overflow:hidden;text-wrap:nowrap;text-align:end;padding-right:5px}.nameCompact{display:inline-flex;width:-webkit-fill-available}
`;var vY=function(r,t,e,o){var n=arguments.length,s=n<3?t:o===null?o=Object.getOwnPropertyDescriptor(t,e):o,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")s=Reflect.decorate(r,t,e,o);else for(var a=r.length-1;a>=0;a--)(i=r[a])&&(s=(n<3?i(s):n>3?i(t,e,s):i(t,e))||s);return n>3&&s&&Object.defineProperty(t,e,s),s},dI,Ky=(dI=class{constructor(){et(this,"interactorName",Et());et(this,"interactorType",Et());et(this,"interactorId",Et());et(this,"interactorOrganism",Et());et(this,"identifierLink",Et());et(this,"organismIconDisplay",Et());et(this,"interactorTypeDisplay",Et());et(this,"idDisplay",Et());et(this,"isMainInteractor",Et());et(this,"interactorTypeIcon");et(this,"interactorOrganismIcon");et(this,"externalLinkVisible")}ngOnInit(){this.interactorTypeIcon=QO(this.interactorType()),this.interactorOrganismIcon=Vy(this.interactorOrganism())}externalLinkVisibleHandler(t){this.externalLinkVisible=t}},et(dI,"propDecorators",{interactorName:[{type:St,args:[{isSignal:!0,alias:"interactorName",required:!1,transform:void 0}]}],interactorType:[{type:St,args:[{isSignal:!0,alias:"interactorType",required:!1,transform:void 0}]}],interactorId:[{type:St,args:[{isSignal:!0,alias:"interactorId",required:!1,transform:void 0}]}],interactorOrganism:[{type:St,args:[{isSignal:!0,alias:"interactorOrganism",required:!1,transform:void 0}]}],identifierLink:[{type:St,args:[{isSignal:!0,alias:"identifierLink",required:!1,transform:void 0}]}],organismIconDisplay:[{type:St,args:[{isSignal:!0,alias:"organismIconDisplay",required:!1,transform:void 0}]}],interactorTypeDisplay:[{type:St,args:[{isSignal:!0,alias:"interactorTypeDisplay",required:!1,transform:void 0}]}],idDisplay:[{type:St,args:[{isSignal:!0,alias:"idDisplay",required:!1,transform:void 0}]}],isMainInteractor:[{type:St,args:[{isSignal:!0,alias:"isMainInteractor",required:!1,transform:void 0}]}]}),dI);Ky=vY([_e({selector:"cp-table-interactor-name",template:iL,styles:[aL]})],Ky);var lL=`<div class="externalLinkContainer" [matTooltip]="'More information about ' + interactorId()">
  @if (externalLinkVisible) {
    <a href="{{identifierLink()}}" target="_blank" class="externalLinkContainer">
      {{ interactorId() }}
      <i class="icon icon-generic small" data-icon="x" title="More information about {{ interactorId() }}"></i>
    </a>
  }
</div>
`;var cL=`a{font-weight:400}a,a:visited{color:#0e6f76}i:not(.small){font-size:large}.externalLinkContainer{justify-content:end;grid-gap:5px;font-size:14px;line-break:anywhere;word-break:break-word}
`;var kY=function(r,t,e,o){var n=arguments.length,s=n<3?t:o===null?o=Object.getOwnPropertyDescriptor(t,e):o,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")s=Reflect.decorate(r,t,e,o);else for(var a=r.length-1;a>=0;a--)(i=r[a])&&(s=(n<3?i(s):n>3?i(t,e,s):i(t,e))||s);return n>3&&s&&Object.defineProperty(t,e,s),s},gI,jy=(gI=class{constructor(){et(this,"interactorId",Et());et(this,"identifierLink",Et());et(this,"interactorType",Et());et(this,"isMainInteractor",Et());et(this,"idDisplay",Et());et(this,"externalLinkVisible",Zs())}ngOnInit(){this.showExternalLink()}showExternalLink(){return this.isMainInteractor()&&this.interactorType()==="stable complex"?(this.externalLinkVisible.emit(!1),!1):(this.externalLinkVisible.emit(!!this.identifierLink()),!!this.identifierLink())}},et(gI,"propDecorators",{interactorId:[{type:St,args:[{isSignal:!0,alias:"interactorId",required:!1,transform:void 0}]}],identifierLink:[{type:St,args:[{isSignal:!0,alias:"identifierLink",required:!1,transform:void 0}]}],interactorType:[{type:St,args:[{isSignal:!0,alias:"interactorType",required:!1,transform:void 0}]}],isMainInteractor:[{type:St,args:[{isSignal:!0,alias:"isMainInteractor",required:!1,transform:void 0}]}],idDisplay:[{type:St,args:[{isSignal:!0,alias:"idDisplay",required:!1,transform:void 0}]}],externalLinkVisible:[{type:Er,args:["externalLinkVisible"]}]}),gI);jy=kY([_e({selector:"cp-table-interactor-external-link",template:lL,styles:[cL]})],jy);var uL=`<div class="stoichNum" [matTooltip]="stoichiometryText()">
  {{ stoichiometryValue() }}
</div>
`;var pL=`.stoichNum{width:4ch;height:4ch;border-radius:4ch;background-color:var(--primary);text-align:center;padding-top:.5ch;color:var(--on-primary);font-size:small;margin-left:auto;margin-right:auto;position:relative;z-index:1}
`;var $Y=function(r,t,e,o){var n=arguments.length,s=n<3?t:o===null?o=Object.getOwnPropertyDescriptor(t,e):o,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")s=Reflect.decorate(r,t,e,o);else for(var a=r.length-1;a>=0;a--)(i=r[a])&&(s=(n<3?i(s):n>3?i(t,e,s):i(t,e))||s);return n>3&&s&&Object.defineProperty(t,e,s),s},xI,Xy=(xI=class{constructor(){et(this,"stoichiometryText",Et());et(this,"stoichiometryValue",Et())}},et(xI,"propDecorators",{stoichiometryText:[{type:St,args:[{isSignal:!0,alias:"stoichiometryText",required:!1,transform:void 0}]}],stoichiometryValue:[{type:St,args:[{isSignal:!0,alias:"stoichiometryValue",required:!1,transform:void 0}]}]}),xI);Xy=$Y([_e({selector:"cp-table-interactor-stoichiometry",template:uL,styles:[pL]})],Xy);var mL=`<div [ngClass]="topLineClass()"></div>
@if (!!interactorComponent()) {
  <cp-table-interactor-stoichiometry
    [stoichiometryText]="interactorComponent().stochiometryText"
    [stoichiometryValue]="interactorComponent().stochiometryValueFormatted"
  ></cp-table-interactor-stoichiometry>
}
<div [ngClass]="bottomLineClass()"></div>
`;var fL=`:host{display:flex;flex-direction:column;height:100%;justify-content:center;align-items:center;align-content:center;flex-wrap:nowrap}:host *{flex:1}.verticalLine,.transparentVerticalLine{margin-left:auto;margin-right:auto;min-width:1%;max-width:1%;min-height:50%;z-index:0;position:relative;height:50%}.verticalLine{border-right:3px solid var(--primary)}.transparentVerticalLine{border-right:0}
`;var FY=function(r,t,e,o){var n=arguments.length,s=n<3?t:o===null?o=Object.getOwnPropertyDescriptor(t,e):o,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")s=Reflect.decorate(r,t,e,o);else for(var a=r.length-1;a>=0;a--)(i=r[a])&&(s=(n<3?i(s):n>3?i(t,e,s):i(t,e))||s);return n>3&&s&&Object.defineProperty(t,e,s),s},yI,Yy=(yI=class{constructor(){et(this,"complex",Et());et(this,"i",Et());et(this,"enrichedInteractors",Et());et(this,"interactorComponent",Qo(()=>xa(this.complex().complex,this.interactor.interactor.identifier,this.enrichedInteractors())));et(this,"topLineClass",Qo(()=>this.displayTopLineClass(this.complex(),this.i())));et(this,"bottomLineClass",Qo(()=>this.displayBottomLineClass(this.complex(),this.i())))}get interactor(){return this.enrichedInteractors()[this.i()]}displayTopLineClass(t,e){return this.doesLineCrossInteractorCell(t,e)||this.doesLineEndOnInteractorCell(t,e)&&!this.doesLineStartOnInteractorCell(t,e)?"verticalLine":"transparentVerticalLine"}displayBottomLineClass(t,e){return this.doesLineCrossInteractorCell(t,e)||this.doesLineStartOnInteractorCell(t,e)&&!this.doesLineEndOnInteractorCell(t,e)?"verticalLine":"transparentVerticalLine"}doesLineCrossInteractorCell(t,e){return!!(t.startInteractorIndex!=null&&t.endInteractorIndex!=null&&(t.startInteractorIndex<e&&t.endInteractorIndex>e||t.startInteractorIndex<e&&t.endInteractorIndex===e&&this.enrichedInteractors()[e].isSubComplex&&this.enrichedInteractors()[e].expanded&&t.startSubComponentIndex!=null&&t.endSubComponentIndex!=null))}doesLineStartOnInteractorCell(t,e){return!!(t.startInteractorIndex!=null&&t.startInteractorIndex===e&&(!this.enrichedInteractors()[e].isSubComplex||t.startInteractorIncludedWhenExpanded))}doesLineEndOnInteractorCell(t,e){return t.endInteractorIndex!=null&&t.endInteractorIndex===e?!(this.enrichedInteractors()[e].isSubComplex&&this.enrichedInteractors()[e].expanded&&t.startSubComponentIndex!=null&&t.endSubComponentIndex!=null):!1}},et(yI,"propDecorators",{complex:[{type:St,args:[{isSignal:!0,alias:"complex",required:!1,transform:void 0}]}],i:[{type:St,args:[{isSignal:!0,alias:"i",required:!1,transform:void 0}]}],enrichedInteractors:[{type:St,args:[{isSignal:!0,alias:"enrichedInteractors",required:!1,transform:void 0}]}]}),yI);Yy=FY([_e({selector:"cp-table-main-interactor",template:mL,styles:[fL]})],Yy);var hL=`<div [ngClass]="displayTopLineClass()"></div>
@if (!!interactorComponent()) {
  <cp-table-interactor-stoichiometry
    [stoichiometryText]="interactorComponent().stochiometryText"
    [stoichiometryValue]="interactorComponent().stochiometryValueFormatted"
  ></cp-table-interactor-stoichiometry>
}
<div [ngClass]="displayBottomLineClass()"></div>
`;var dL=`.verticalLine,.transparentVerticalLine{margin-left:auto;margin-right:auto;min-width:1%;max-width:1%;max-height:50%;min-height:50%;z-index:0}.verticalLine{border-right:3px solid #0e6f76}.transparentVerticalLine{border-right:0}
`;var LY=function(r,t,e,o){var n=arguments.length,s=n<3?t:o===null?o=Object.getOwnPropertyDescriptor(t,e):o,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")s=Reflect.decorate(r,t,e,o);else for(var a=r.length-1;a>=0;a--)(i=r[a])&&(s=(n<3?i(s):n>3?i(t,e,s):i(t,e))||s);return n>3&&s&&Object.defineProperty(t,e,s),s},bI,Zy=(bI=class{constructor(){et(this,"complex",Et());et(this,"i",Et());et(this,"j",Et());et(this,"enrichedInteractors",Et());et(this,"interactorComponent",Qo(()=>xa(this.complex().complex,this.el.identifier,this.enrichedInteractors())));et(this,"displayTopLineClass",Qo(()=>this.displayTopLineClassExpanded(this.complex(),this.i(),this.j())));et(this,"displayBottomLineClass",Qo(()=>this.displayBottomLineClassExpanded(this.complex(),this.i(),this.j())))}get interactor(){return this.enrichedInteractors()[this.i()]}get el(){return this.enrichedInteractors()[this.i()].subComponents[this.j()]}displayTopLineClassExpanded(t,e,o){return this.doesLineCrossSubcomponentCell(t,e,o)||this.doesLineEndOnSubcomponentCell(t,e,o)&&!this.doesLineStartOnSubcomponentCell(t,e,o)?"verticalLine":"transparentVerticalLine"}displayBottomLineClassExpanded(t,e,o){return this.doesLineCrossSubcomponentCell(t,e,o)||this.doesLineStartOnSubcomponentCell(t,e,o)&&!this.doesLineEndOnSubcomponentCell(t,e,o)?"verticalLine":"transparentVerticalLine"}doesLineCrossSubcomponentCell(t,e,o){return t.startInteractorIndex!=null&&t.endInteractorIndex!=null&&(t.startInteractorIndex<e&&t.endInteractorIndex>e||t.startSubComponentIndex!=null&&t.endSubComponentIndex!=null&&(t.startSubComponentIndex<o&&t.endSubComponentIndex>o||t.startInteractorIndex<e&&t.endSubComponentIndex>o||t.startSubComponentIndex<o&&t.endInteractorIndex>e))}doesLineStartOnSubcomponentCell(t,e,o){return t.startInteractorIndex!=null&&t.startInteractorIndex===e&&t.startSubComponentIndex!=null&&t.startSubComponentIndex===o?!t.complex.interactors.some(n=>this.enrichedInteractors()[e].interactor.identifier===n.identifier):!1}doesLineEndOnSubcomponentCell(t,e,o){return t.endInteractorIndex!=null&&t.endInteractorIndex===e&&t.endSubComponentIndex!=null&&t.endSubComponentIndex===o}},et(bI,"propDecorators",{complex:[{type:St,args:[{isSignal:!0,alias:"complex",required:!1,transform:void 0}]}],i:[{type:St,args:[{isSignal:!0,alias:"i",required:!1,transform:void 0}]}],j:[{type:St,args:[{isSignal:!0,alias:"j",required:!1,transform:void 0}]}],enrichedInteractors:[{type:St,args:[{isSignal:!0,alias:"enrichedInteractors",required:!1,transform:void 0}]}]}),bI);Zy=LY([_e({selector:"cp-table-subcomponent-interactor",template:hL,styles:[dL]})],Zy);var gL=`<div class="filters">
  <div class="sortingInteractors">
    <input type="submit" name="classificationButton" value="Sort components" class="button">
    <div class="typeOfSorting">
      <input type="button" name="occurrenceClassification" value="Occurrence" class="button"
             (click)="interactorsSortingChanges('Occurrence')">
      <input type="button" name="typeClassification" value="Type" class="button"
             (click)="interactorsSortingChanges('Type')">
      <input type="button" name="organismClassification" value="Organism" class="button"
             (click)="interactorsSortingChanges('Organism')">
      <!--      <input type="submit" name="geneClassification" value="Orthology (Not available yet)" class="button"-->
      <!--             (click)="InteractorsSortingChanges('Orthology')">-->
    </div>
  </div>

  <div class="dropdown">
    <input type="submit" name="classificationButton" value="Display Options" class="button">
    <ul class="displaySize">
      <li>
        <label>
          <input type="radio" name="displayType" value="Compact" class="checkbox compact"
                 (click)="setDisplayType('compact')" [checked]="typeOfDisplay === 'compact'">
          Compact display
        </label>
      </li>
      <li class="detailedDisplay">
        <label>
          <input type="radio" name="displayType" value="Detailed" class="checkbox detailed"
                 (click)="setDisplayType('detailed')" [checked]="typeOfDisplay === 'detailed'">
          Detailed display
        </label>
        <ul class="detailedDisplayOptions">
          <li>
            <input type="checkbox" name="organism" value="organism" class="checkbox" [checked]="organismIconDisplay()"
                   (change)="toggleOrganism()">
            Organism
          </li>
          <li>
            <input type="checkbox" name="type" value="type" class="checkbox" [checked]="interactorTypeDisplay()"
                   (change)="toggleType()">
            Type
          </li>
          <li>
            <input type="checkbox" name="id" value="id" class="checkbox" [checked]="idDisplay()"
                   (change)="toggleId()">
            Interactor ID
          </li>
        </ul>
      </li>
    </ul>
  </div>
</div>
`;var xL=`.typeOfSorting{display:none}.sortingInteractors:hover .typeOfSorting{display:flex;margin-top:-15px;flex-direction:row;position:absolute;z-index:5}.typeOfSorting .button{border-right:1px solid white;font-size:14px}.filters{display:flex;justify-content:center;grid-gap:10px;height:67px;z-index:5;text-align:center}.displaySize,.detailedDisplayOptions{display:none}label{color:var(--on-primary)}.dropdown:hover .displaySize{display:flex;list-style:none;width:300px;background-color:var(--primary);color:var(--on-primary);margin-top:-15px;flex-direction:row;position:absolute;height:40px;align-content:center;z-index:5}.dropdown:hover .displaySize li{width:200px;background-color:var(--primary);margin-left:-21px;text-align:left;padding-left:6px;z-index:5}li{text-align:center;align-items:center;font-size:14px;border-left:1px solid white;padding-top:10px;max-width:171px}.detailedDisplay:hover .detailedDisplayOptions{display:flex;list-style:none;align-content:baseline;flex-direction:column;position:absolute;z-index:5;margin-left:14px}.detailedDisplayOptions li{text-align:left;z-index:5}
`;var BY=function(r,t,e,o){var n=arguments.length,s=n<3?t:o===null?o=Object.getOwnPropertyDescriptor(t,e):o,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")s=Reflect.decorate(r,t,e,o);else for(var a=r.length-1;a>=0;a--)(i=r[a])&&(s=(n<3?i(s):n>3?i(t,e,s):i(t,e))||s);return n>3&&s&&Object.defineProperty(t,e,s),s},wI,Jy=(wI=class{constructor(){et(this,"interactorsSorting",ba());et(this,"organismIconDisplay",ba());et(this,"interactorTypeDisplay",ba());et(this,"idDisplay",ba());et(this,"typeOfDisplay")}ngOnInit(){this.updateDisplay()}interactorsSortingChanges(t){this.interactorsSorting.set(t),this.typeOfDisplay==="detailed"&&(t==="Type"?(this.interactorTypeDisplay.set(!1),this.organismIconDisplay.set(!0)):t==="Organism"&&(this.organismIconDisplay.set(!1),this.interactorTypeDisplay.set(!0)),this.updateDisplay())}toggleOrganism(){this.organismIconDisplay.update(t=>!t),this.updateDisplay()}toggleType(){this.interactorTypeDisplay.update(t=>!t),this.updateDisplay()}toggleId(){this.idDisplay.update(t=>!t),this.updateDisplay()}setDisplayType(t){t==="compact"?this.compactDisplay():t==="detailed"&&this.detailedDisplay()}compactDisplay(){this.organismIconDisplay.set(!1),this.interactorTypeDisplay.set(!1),this.idDisplay.set(!1),this.typeOfDisplay="compact"}detailedDisplay(){this.organismIconDisplay.set(!0),this.interactorTypeDisplay.set(!0),this.idDisplay.set(!0),this.typeOfDisplay="detailed"}updateDisplay(){this.organismIconDisplay()||this.interactorTypeDisplay()||this.idDisplay()?this.typeOfDisplay="detailed":this.typeOfDisplay="compact"}},et(wI,"propDecorators",{interactorsSorting:[{type:St,args:[{isSignal:!0,alias:"interactorsSorting",required:!1}]},{type:Er,args:["interactorsSortingChange"]}],organismIconDisplay:[{type:St,args:[{isSignal:!0,alias:"organismIconDisplay",required:!1}]},{type:Er,args:["organismIconDisplayChange"]}],interactorTypeDisplay:[{type:St,args:[{isSignal:!0,alias:"interactorTypeDisplay",required:!1}]},{type:Er,args:["interactorTypeDisplayChange"]}],idDisplay:[{type:St,args:[{isSignal:!0,alias:"idDisplay",required:!1}]},{type:Er,args:["idDisplayChange"]}]}),wI);Jy=BY([_e({selector:"cp-complex-navigator-buttons",template:gL,styles:[xL]})],Jy);var yL=`<div class="displayButton columns medium-12" [ngClass]="">
  <button class="button view-button"
          (click)="setListView()" [class.selected]="displayType() !== SearchDisplay.navigator">
    View list
  </button>
  <button class="button view-button cnButton"
          (click)="setComplexNavigatorView()" [class.selected]="displayType() === SearchDisplay.navigator">
    View Complex Navigator
    <span class="new-tag">NEW!</span>
  </button>
</div>
`;var bL=`.displayButton{text-align:center}.view-button{width:225px;margin-right:5px;background-color:#fff;color:#555;border:1px dotted var(--primary)}.view-button:hover{color:var(--primary);background-color:#eaeaea;border:transparent;border-bottom:1px dotted var(--primary)}.selected,.selected:hover{background-color:var(--primary);color:#fff}.new-tag{color:red;font-weight:700;font-size:x-small}.selected .new-tag{color:#ff0}.cnButton{outline-offset:0;outline:rgba(0,124,130,.75) solid 1px;animation:animateOutline 4s ease infinite}.cnButton.selected{animation:none}@keyframes animateOutline{0%,50%,to{outline-width:6px;outline-offset:4px;outline-color:#007c8200}10%{outline-color:#007c82bf}}
`;var GY=function(r,t,e,o){var n=arguments.length,s=n<3?t:o===null?o=Object.getOwnPropertyDescriptor(t,e):o,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")s=Reflect.decorate(r,t,e,o);else for(var a=r.length-1;a>=0;a--)(i=r[a])&&(s=(n<3?i(s):n>3?i(t,e,s):i(t,e))||s);return n>3&&s&&Object.defineProperty(t,e,s),s},eh;(function(r){r.list="view_list",r.navigator="view_navigator"})(eh||(eh={}));var CI,rh=(CI=class{constructor(){et(this,"displayType",ba());et(this,"SearchDisplay",eh)}setListView(){this.displayType.set(eh.list)}setComplexNavigatorView(){this.displayType.set(eh.navigator)}},et(CI,"propDecorators",{displayType:[{type:St,args:[{isSignal:!0,alias:"displayType",required:!1}]},{type:Er,args:["displayTypeChange"]}]}),CI);rh=GY([_e({selector:"cp-complex-list-display-buttons",template:yL,styles:[bL]})],rh);var UY=function(r,t,e,o){var n=arguments.length,s=n<3?t:o===null?o=Object.getOwnPropertyDescriptor(t,e):o,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")s=Reflect.decorate(r,t,e,o);else for(var a=r.length-1;a>=0;a--)(i=r[a])&&(s=(n<3?i(s):n>3?i(t,e,s):i(t,e))||s);return n>3&&s&&Object.defineProperty(t,e,s),s},wL=class{};wL=UY([vI({imports:[TI,NI,AI,$I,DI,RI,nh],exports:[sp,rh],declarations:[sp,Gy,Wy,qy,Ky,jy,Xy,Yy,Zy,Jy,rh]})],wL);export{eh as a,QO as b,Vy as c,wL as d};
