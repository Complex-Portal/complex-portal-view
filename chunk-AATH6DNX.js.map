{"version":3,"sources":["node_modules/@angular/animations/fesm2022/animations.mjs","node_modules/ngx-toastr/fesm2022/ngx-toastr.mjs","src/app/shared/notification/service/notification.service.ts","src/app/shared/local-storage/service/local-storage.service.ts","src/app/shared/basket/service/basket.service.ts"],"sourcesContent":["/**\n * @license Angular v18.1.4\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, Injectable, ANIMATION_MODULE_TYPE, ViewEncapsulation, ÉµRuntimeError, Inject } from '@angular/core';\n\n/**\n * @description Constants for the categories of parameters that can be defined for animations.\n *\n * A corresponding function defines a set of parameters for each category, and\n * collects them into a corresponding `AnimationMetadata` object.\n *\n * @publicApi\n */\nvar AnimationMetadataType;\n(function (AnimationMetadataType) {\n  /**\n   * Associates a named animation state with a set of CSS styles.\n   * See [`state()`](api/animations/state)\n   */\n  AnimationMetadataType[AnimationMetadataType[\"State\"] = 0] = \"State\";\n  /**\n   * Data for a transition from one animation state to another.\n   * See `transition()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Transition\"] = 1] = \"Transition\";\n  /**\n   * Contains a set of animation steps.\n   * See `sequence()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Sequence\"] = 2] = \"Sequence\";\n  /**\n   * Contains a set of animation steps.\n   * See `{@link animations/group group()}`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Group\"] = 3] = \"Group\";\n  /**\n   * Contains an animation step.\n   * See `animate()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Animate\"] = 4] = \"Animate\";\n  /**\n   * Contains a set of animation steps.\n   * See `keyframes()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Keyframes\"] = 5] = \"Keyframes\";\n  /**\n   * Contains a set of CSS property-value pairs into a named style.\n   * See `style()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Style\"] = 6] = \"Style\";\n  /**\n   * Associates an animation with an entry trigger that can be attached to an element.\n   * See `trigger()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Trigger\"] = 7] = \"Trigger\";\n  /**\n   * Contains a re-usable animation.\n   * See `animation()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Reference\"] = 8] = \"Reference\";\n  /**\n   * Contains data to use in executing child animations returned by a query.\n   * See `animateChild()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"AnimateChild\"] = 9] = \"AnimateChild\";\n  /**\n   * Contains animation parameters for a re-usable animation.\n   * See `useAnimation()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"AnimateRef\"] = 10] = \"AnimateRef\";\n  /**\n   * Contains child-animation query data.\n   * See `query()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Query\"] = 11] = \"Query\";\n  /**\n   * Contains data for staggering an animation sequence.\n   * See `stagger()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Stagger\"] = 12] = \"Stagger\";\n})(AnimationMetadataType || (AnimationMetadataType = {}));\n/**\n * Specifies automatic styling.\n *\n * @publicApi\n */\nconst AUTO_STYLE = '*';\n/**\n * Creates a named animation trigger, containing a  list of [`state()`](api/animations/state)\n * and `transition()` entries to be evaluated when the expression\n * bound to the trigger changes.\n *\n * @param name An identifying string.\n * @param definitions  An animation definition object, containing an array of\n * [`state()`](api/animations/state) and `transition()` declarations.\n *\n * @return An object that encapsulates the trigger data.\n *\n * @usageNotes\n * Define an animation trigger in the `animations` section of `@Component` metadata.\n * In the template, reference the trigger by name and bind it to a trigger expression that\n * evaluates to a defined animation state, using the following format:\n *\n * `[@triggerName]=\"expression\"`\n *\n * Animation trigger bindings convert all values to strings, and then match the\n * previous and current values against any linked transitions.\n * Booleans can be specified as `1` or `true` and `0` or `false`.\n *\n * ### Usage Example\n *\n * The following example creates an animation trigger reference based on the provided\n * name value.\n * The provided animation value is expected to be an array consisting of state and\n * transition declarations.\n *\n * ```typescript\n * @Component({\n *   selector: \"my-component\",\n *   templateUrl: \"my-component-tpl.html\",\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component makes use of the defined trigger\n * by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ### Using an inline function\n * The `transition` animation method also supports reading an inline function which can decide\n * if its associated animation should be run.\n *\n * ```typescript\n * // this method is run each time the `myAnimationTrigger` trigger value changes.\n * function myInlineMatcherFn(fromState: string, toState: string, element: any, params: {[key:\n string]: any}): boolean {\n *   // notice that `element` and `params` are also available here\n *   return toState == 'yes-please-animate';\n * }\n *\n * @Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger('myAnimationTrigger', [\n *       transition(myInlineMatcherFn, [\n *         // the animation sequence code\n *       ]),\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"yes-please-animate\";\n * }\n * ```\n *\n * ### Disabling Animations\n * When true, the special animation control binding `@.disabled` binding prevents\n * all animations from rendering.\n * Place the  `@.disabled` binding on an element to disable\n * animations on the element itself, as well as any inner animation triggers\n * within the element.\n *\n * The following example shows how to use this feature:\n *\n * ```typescript\n * @Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [@.disabled]=\"isDisabled\">\n *       <div [@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * When `@.disabled` is true, it prevents the `@childAnimation` trigger from animating,\n * along with any inner animations.\n *\n * ### Disable animations application-wide\n * When an area of the template is set to have animations disabled,\n * **all** inner components have their animations disabled as well.\n * This means that you can disable all animations for an app\n * by placing a host binding set on `@.disabled` on the topmost Angular component.\n *\n * ```typescript\n * import {Component, HostBinding} from '@angular/core';\n *\n * @Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   @HostBinding('@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### Overriding disablement of inner animations\n * Despite inner animations being disabled, a parent animation can `query()`\n * for inner elements located in disabled areas of the template and still animate\n * them if needed. This is also the case for when a sub animation is\n * queried by a parent and then later animated using `animateChild()`.\n *\n * ### Detecting when an animation is disabled\n * If a region of the DOM (or the entire application) has its animations disabled, the animation\n * trigger callbacks still fire, but for zero seconds. When the callback fires, it provides\n * an instance of an `AnimationEvent`. If animations are disabled,\n * the `.disabled` flag on the event is true.\n *\n * @publicApi\n */\nfunction trigger(name, definitions) {\n  return {\n    type: AnimationMetadataType.Trigger,\n    name,\n    definitions,\n    options: {}\n  };\n}\n/**\n * Defines an animation step that combines styling information with timing information.\n *\n * @param timings Sets `AnimateTimings` for the parent animation.\n * A string in the format \"duration [delay] [easing]\".\n *  - Duration and delay are expressed as a number and optional time unit,\n * such as \"1s\" or \"10ms\" for one second and 10 milliseconds, respectively.\n * The default unit is milliseconds.\n *  - The easing value controls how the animation accelerates and decelerates\n * during its runtime. Value is one of  `ease`, `ease-in`, `ease-out`,\n * `ease-in-out`, or a `cubic-bezier()` function call.\n * If not supplied, no easing is applied.\n *\n * For example, the string \"1s 100ms ease-out\" specifies a duration of\n * 1000 milliseconds, and delay of 100 ms, and the \"ease-out\" easing style,\n * which decelerates near the end of the duration.\n * @param styles Sets AnimationStyles for the parent animation.\n * A function call to either `style()` or `keyframes()`\n * that returns a collection of CSS style entries to be applied to the parent animation.\n * When null, uses the styles from the destination state.\n * This is useful when describing an animation step that will complete an animation;\n * see \"Animating to the final state\" in `transitions()`.\n * @returns An object that encapsulates the animation step.\n *\n * @usageNotes\n * Call within an animation `sequence()`, `{@link animations/group group()}`, or\n * `transition()` call to specify an animation step\n * that applies given style data to the parent animation for a given amount of time.\n *\n * ### Syntax Examples\n * **Timing examples**\n *\n * The following examples show various `timings` specifications.\n * - `animate(500)` : Duration is 500 milliseconds.\n * - `animate(\"1s\")` : Duration is 1000 milliseconds.\n * - `animate(\"100ms 0.5s\")` : Duration is 100 milliseconds, delay is 500 milliseconds.\n * - `animate(\"5s ease-in\")` : Duration is 5000 milliseconds, easing in.\n * - `animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\")` : Duration is 5000 milliseconds, delay is 10\n * milliseconds, easing according to a bezier curve.\n *\n * **Style examples**\n *\n * The following example calls `style()` to set a single CSS style.\n * ```typescript\n * animate(500, style({ background: \"red\" }))\n * ```\n * The following example calls `keyframes()` to set a CSS style\n * to different values for successive keyframes.\n * ```typescript\n * animate(500, keyframes(\n *  [\n *   style({ background: \"blue\" }),\n *   style({ background: \"red\" })\n *  ])\n * ```\n *\n * @publicApi\n */\nfunction animate(timings, styles = null) {\n  return {\n    type: AnimationMetadataType.Animate,\n    styles,\n    timings\n  };\n}\n/**\n * @description Defines a list of animation steps to be run in parallel.\n *\n * @param steps An array of animation step objects.\n * - When steps are defined by `style()` or `animate()`\n * function calls, each call within the group is executed instantly.\n * - To specify offset styles to be applied at a later time, define steps with\n * `keyframes()`, or use `animate()` calls with a delay value.\n * For example:\n *\n * ```typescript\n * group([\n *   animate(\"1s\", style({ background: \"black\" })),\n *   animate(\"2s\", style({ color: \"white\" }))\n * ])\n * ```\n *\n * @param options An options object containing a delay and\n * developer-defined parameters that provide styling defaults and\n * can be overridden on invocation.\n *\n * @return An object that encapsulates the group data.\n *\n * @usageNotes\n * Grouped animations are useful when a series of styles must be\n * animated at different starting times and closed off at different ending times.\n *\n * When called within a `sequence()` or a\n * `transition()` call, does not continue to the next\n * instruction until all of the inner animation steps have completed.\n *\n * @publicApi\n */\nfunction group(steps, options = null) {\n  return {\n    type: AnimationMetadataType.Group,\n    steps,\n    options\n  };\n}\n/**\n * Defines a list of animation steps to be run sequentially, one by one.\n *\n * @param steps An array of animation step objects.\n * - Steps defined by `style()` calls apply the styling data immediately.\n * - Steps defined by `animate()` calls apply the styling data over time\n *   as specified by the timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 }),\n *   animate(\"1s\", style({ opacity: 1 }))\n * ])\n * ```\n *\n * @param options An options object containing a delay and\n * developer-defined parameters that provide styling defaults and\n * can be overridden on invocation.\n *\n * @return An object that encapsulates the sequence data.\n *\n * @usageNotes\n * When you pass an array of steps to a\n * `transition()` call, the steps run sequentially by default.\n * Compare this to the `{@link animations/group group()}` call, which runs animation steps in\n *parallel.\n *\n * When a sequence is used within a `{@link animations/group group()}` or a `transition()` call,\n * execution continues to the next instruction only after each of the inner animation\n * steps have completed.\n *\n * @publicApi\n **/\nfunction sequence(steps, options = null) {\n  return {\n    type: AnimationMetadataType.Sequence,\n    steps,\n    options\n  };\n}\n/**\n * Declares a key/value object containing CSS properties/styles that\n * can then be used for an animation [`state`](api/animations/state), within an animation\n *`sequence`, or as styling data for calls to `animate()` and `keyframes()`.\n *\n * @param tokens A set of CSS styles or HTML styles associated with an animation state.\n * The value can be any of the following:\n * - A key-value style pair associating a CSS property with a value.\n * - An array of key-value style pairs.\n * - An asterisk (*), to use auto-styling, where styles are derived from the element\n * being animated and applied to the animation when it starts.\n *\n * Auto-styling can be used to define a state that depends on layout or other\n * environmental factors.\n *\n * @return An object that encapsulates the style data.\n *\n * @usageNotes\n * The following examples create animation styles that collect a set of\n * CSS property values:\n *\n * ```typescript\n * // string values for CSS properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical pixel values\n * style({ width: 100, height: 0 })\n * ```\n *\n * The following example uses auto-styling to allow an element to animate from\n * a height of 0 up to its full height:\n *\n * ```\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * @publicApi\n **/\nfunction style(tokens) {\n  return {\n    type: AnimationMetadataType.Style,\n    styles: tokens,\n    offset: null\n  };\n}\n/**\n * Declares an animation state within a trigger attached to an element.\n *\n * @param name One or more names for the defined state in a comma-separated string.\n * The following reserved state names can be supplied to define a style for specific use\n * cases:\n *\n * - `void` You can associate styles with this name to be used when\n * the element is detached from the application. For example, when an `ngIf` evaluates\n * to false, the state of the associated element is void.\n *  - `*` (asterisk) Indicates the default state. You can associate styles with this name\n * to be used as the fallback when the state that is being animated is not declared\n * within the trigger.\n *\n * @param styles A set of CSS styles associated with this state, created using the\n * `style()` function.\n * This set of styles persists on the element once the state has been reached.\n * @param options Parameters that can be passed to the state when it is invoked.\n * 0 or more key-value pairs.\n * @return An object that encapsulates the new state data.\n *\n * @usageNotes\n * Use the `trigger()` function to register states to an animation trigger.\n * Use the `transition()` function to animate between states.\n * When a state is active within a component, its associated styles persist on the element,\n * even when the animation ends.\n *\n * @publicApi\n **/\nfunction state(name, styles, options) {\n  return {\n    type: AnimationMetadataType.State,\n    name,\n    styles,\n    options\n  };\n}\n/**\n * Defines a set of animation styles, associating each style with an optional `offset` value.\n *\n * @param steps A set of animation styles with optional offset data.\n * The optional `offset` value for a style specifies a percentage of the total animation\n * time at which that style is applied.\n * @returns An object that encapsulates the keyframes data.\n *\n * @usageNotes\n * Use with the `animate()` call. Instead of applying animations\n * from the current state\n * to the destination state, keyframes describe how each style entry is applied and at what point\n * within the animation arc.\n * Compare [CSS Keyframe Animations](https://www.w3schools.com/css/css3_animations.asp).\n *\n * ### Usage\n *\n * In the following example, the offset values describe\n * when each `backgroundColor` value is applied. The color is red at the start, and changes to\n * blue when 20% of the total time has elapsed.\n *\n * ```typescript\n * // the provided offset values\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * If there are no `offset` values specified in the style entries, the offsets\n * are calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n *```\n\n * @publicApi\n */\nfunction keyframes(steps) {\n  return {\n    type: AnimationMetadataType.Keyframes,\n    steps\n  };\n}\n/**\n * Declares an animation transition which is played when a certain specified condition is met.\n *\n * @param stateChangeExpr A string with a specific format or a function that specifies when the\n * animation transition should occur (see [State Change Expression](#state-change-expression)).\n *\n * @param steps One or more animation objects that represent the animation's instructions.\n *\n * @param options An options object that can be used to specify a delay for the animation or provide\n * custom parameters for it.\n *\n * @returns An object that encapsulates the transition data.\n *\n * @usageNotes\n *\n * ### State Change Expression\n *\n * The State Change Expression instructs Angular when to run the transition's animations, it can\n *either be\n *  - a string with a specific syntax\n *  - or a function that compares the previous and current state (value of the expression bound to\n *    the element's trigger) and returns `true` if the transition should occur or `false` otherwise\n *\n * The string format can be:\n *  - `fromState => toState`, which indicates that the transition's animations should occur then the\n *    expression bound to the trigger's element goes from `fromState` to `toState`\n *\n *    _Example:_\n *      ```typescript\n *        transition('open => closed', animate('.5s ease-out', style({ height: 0 }) ))\n *      ```\n *\n *  - `fromState <=> toState`, which indicates that the transition's animations should occur then\n *    the expression bound to the trigger's element goes from `fromState` to `toState` or vice versa\n *\n *    _Example:_\n *      ```typescript\n *        transition('enabled <=> disabled', animate('1s cubic-bezier(0.8,0.3,0,1)'))\n *      ```\n *\n *  - `:enter`/`:leave`, which indicates that the transition's animations should occur when the\n *    element enters or exists the DOM\n *\n *    _Example:_\n *      ```typescript\n *        transition(':enter', [\n *          style({ opacity: 0 }),\n *          animate('500ms', style({ opacity: 1 }))\n *        ])\n *      ```\n *\n *  - `:increment`/`:decrement`, which indicates that the transition's animations should occur when\n *    the numerical expression bound to the trigger's element has increased in value or decreased\n *\n *    _Example:_\n *      ```typescript\n *        transition(':increment', query('@counter', animateChild()))\n *      ```\n *\n *  - a sequence of any of the above divided by commas, which indicates that transition's animations\n *    should occur whenever one of the state change expressions matches\n *\n *    _Example:_\n *      ```typescript\n *        transition(':increment, * => enabled, :enter', animate('1s ease', keyframes([\n *          style({ transform: 'scale(1)', offset: 0}),\n *          style({ transform: 'scale(1.1)', offset: 0.7}),\n *          style({ transform: 'scale(1)', offset: 1})\n *        ]))),\n *      ```\n *\n * Also note that in such context:\n *  - `void` can be used to indicate the absence of the element\n *  - asterisks can be used as wildcards that match any state\n *  - (as a consequence of the above, `void => *` is equivalent to `:enter` and `* => void` is\n *    equivalent to `:leave`)\n *  - `true` and `false` also match expression values of `1` and `0` respectively (but do not match\n *    _truthy_ and _falsy_ values)\n *\n * <div class=\"alert is-helpful\">\n *\n *  Be careful about entering end leaving elements as their transitions present a common\n *  pitfall for developers.\n *\n *  Note that when an element with a trigger enters the DOM its `:enter` transition always\n *  gets executed, but its `:leave` transition will not be executed if the element is removed\n *  alongside its parent (as it will be removed \"without warning\" before its transition has\n *  a chance to be executed, the only way that such transition can occur is if the element\n *  is exiting the DOM on its own).\n *\n *\n * </div>\n *\n * ### Animating to a Final State\n *\n * If the final step in a transition is a call to `animate()` that uses a timing value\n * with no `style` data, that step is automatically considered the final animation arc,\n * for the element to reach the final state, in such case Angular automatically adds or removes\n * CSS styles to ensure that the element is in the correct final state.\n *\n *\n * ### Usage Examples\n *\n *  - Transition animations applied based on\n *    the trigger's expression value\n *\n *   ```html\n *   <div [@myAnimationTrigger]=\"myStatusExp\">\n *    ...\n *   </div>\n *   ```\n *\n *   ```typescript\n *   trigger(\"myAnimationTrigger\", [\n *     ..., // states\n *     transition(\"on => off, open => closed\", animate(500)),\n *     transition(\"* <=> error\", query('.indicator', animateChild()))\n *   ])\n *   ```\n *\n *  - Transition animations applied based on custom logic dependent\n *    on the trigger's expression value and provided parameters\n *\n *    ```html\n *    <div [@myAnimationTrigger]=\"{\n *     value: stepName,\n *     params: { target: currentTarget }\n *    }\">\n *     ...\n *    </div>\n *    ```\n *\n *    ```typescript\n *    trigger(\"myAnimationTrigger\", [\n *      ..., // states\n *      transition(\n *        (fromState, toState, _element, params) =>\n *          ['firststep', 'laststep'].includes(fromState.toLowerCase())\n *          && toState === params?.['target'],\n *        animate('1s')\n *      )\n *    ])\n *    ```\n *\n * @publicApi\n **/\nfunction transition(stateChangeExpr, steps, options = null) {\n  return {\n    type: AnimationMetadataType.Transition,\n    expr: stateChangeExpr,\n    animation: steps,\n    options\n  };\n}\n/**\n * Produces a reusable animation that can be invoked in another animation or sequence,\n * by calling the `useAnimation()` function.\n *\n * @param steps One or more animation objects, as returned by the `animate()`\n * or `sequence()` function, that form a transformation from one state to another.\n * A sequence is used by default when you pass an array.\n * @param options An options object that can contain a delay value for the start of the\n * animation, and additional developer-defined parameters.\n * Provided values for additional parameters are used as defaults,\n * and override values can be passed to the caller on invocation.\n * @returns An object that encapsulates the animation data.\n *\n * @usageNotes\n * The following example defines a reusable animation, providing some default parameter\n * values.\n *\n * ```typescript\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *   style({ opacity: '{{ end }}'}))\n *   ],\n *   { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * The following invokes the defined animation with a call to `useAnimation()`,\n * passing in override parameter values.\n *\n * ```js\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If any of the passed-in parameter values are missing from this call,\n * the default values are used. If one or more parameter values are missing before a step is\n * animated, `useAnimation()` throws an error.\n *\n * @publicApi\n */\nfunction animation(steps, options = null) {\n  return {\n    type: AnimationMetadataType.Reference,\n    animation: steps,\n    options\n  };\n}\n/**\n * Executes a queried inner animation element within an animation sequence.\n *\n * @param options An options object that can contain a delay value for the start of the\n * animation, and additional override values for developer-defined parameters.\n * @return An object that encapsulates the child animation data.\n *\n * @usageNotes\n * Each time an animation is triggered in Angular, the parent animation\n * has priority and any child animations are blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations, and run them using this function.\n *\n * Note that this feature is designed to be used with `query()` and it will only work\n * with animations that are assigned using the Angular animation library. CSS keyframes\n * and transitions are not handled by this API.\n *\n * @publicApi\n */\nfunction animateChild(options = null) {\n  return {\n    type: AnimationMetadataType.AnimateChild,\n    options\n  };\n}\n/**\n * Starts a reusable animation that is created using the `animation()` function.\n *\n * @param animation The reusable animation to start.\n * @param options An options object that can contain a delay value for the start of\n * the animation, and additional override values for developer-defined parameters.\n * @return An object that contains the animation parameters.\n *\n * @publicApi\n */\nfunction useAnimation(animation, options = null) {\n  return {\n    type: AnimationMetadataType.AnimateRef,\n    animation,\n    options\n  };\n}\n/**\n * Finds one or more inner elements within the current element that is\n * being animated within a sequence. Use with `animate()`.\n *\n * @param selector The element to query, or a set of elements that contain Angular-specific\n * characteristics, specified with one or more of the following tokens.\n *  - `query(\":enter\")` or `query(\":leave\")` : Query for newly inserted/removed elements (not\n *     all elements can be queried via these tokens, see\n *     [Entering and Leaving Elements](#entering-and-leaving-elements))\n *  - `query(\":animating\")` : Query all currently animating elements.\n *  - `query(\"@triggerName\")` : Query elements that contain an animation trigger.\n *  - `query(\"@*\")` : Query all elements that contain an animation triggers.\n *  - `query(\":self\")` : Include the current element into the animation sequence.\n *\n * @param animation One or more animation steps to apply to the queried element or elements.\n * An array is treated as an animation sequence.\n * @param options An options object. Use the 'limit' field to limit the total number of\n * items to collect.\n * @return An object that encapsulates the query data.\n *\n * @usageNotes\n *\n * ### Multiple Tokens\n *\n * Tokens can be merged into a combined query selector string. For example:\n *\n * ```typescript\n *  query(':self, .record:enter, .record:leave, @subTrigger', [...])\n * ```\n *\n * The `query()` function collects multiple elements and works internally by using\n * `element.querySelectorAll`. Use the `limit` field of an options object to limit\n * the total number of items to be collected. For example:\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * By default, throws an error when zero items are found. Set the\n * `optional` flag to ignore this error. For example:\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Entering and Leaving Elements\n *\n * Not all elements can be queried via the `:enter` and `:leave` tokens, the only ones\n * that can are those that Angular assumes can enter/leave based on their own logic\n * (if their insertion/removal is simply a consequence of that of their parent they\n * should be queried via a different token in their parent's `:enter`/`:leave` transitions).\n *\n * The only elements Angular assumes can enter/leave based on their own logic (thus the only\n * ones that can be queried via the `:enter` and `:leave` tokens) are:\n *  - Those inserted dynamically (via `ViewContainerRef`)\n *  - Those that have a structural directive (which, under the hood, are a subset of the above ones)\n *\n * <div class=\"alert is-helpful\">\n *\n *  Note that elements will be successfully queried via `:enter`/`:leave` even if their\n *  insertion/removal is not done manually via `ViewContainerRef`or caused by their structural\n *  directive (e.g. they enter/exit alongside their parent).\n *\n * </div>\n *\n * <div class=\"alert is-important\">\n *\n *  There is an exception to what previously mentioned, besides elements entering/leaving based on\n *  their own logic, elements with an animation trigger can always be queried via `:leave` when\n * their parent is also leaving.\n *\n * </div>\n *\n * ### Usage Example\n *\n * The following example queries for inner elements and animates them\n * individually using `animate()`.\n *\n * ```typescript\n * @Component({\n *   selector: 'inner',\n *   template: `\n *     <div [@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 }))),\n *        query('.content', animate(1000, style({ opacity: 1 }))),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nfunction query(selector, animation, options = null) {\n  return {\n    type: AnimationMetadataType.Query,\n    selector,\n    animation,\n    options\n  };\n}\n/**\n * Use within an animation `query()` call to issue a timing gap after\n * each queried item is animated.\n *\n * @param timings A delay value.\n * @param animation One ore more animation steps.\n * @returns An object that encapsulates the stagger data.\n *\n * @usageNotes\n * In the following example, a container element wraps a list of items stamped out\n * by an `ngFor`. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * Each time items are added, the opacity fade-in animation runs,\n * and each removed item is faded out.\n * When either of these animations occur, the stagger effect is\n * applied after each item's animation is started.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * Here is the component code:\n *\n * ```typescript\n * import {trigger, transition, style, animate, query, stagger} from '@angular/animations';\n * @Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *     ...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *    }\n *  }\n * ```\n *\n * Here is the animation trigger code:\n *\n * ```typescript\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * @publicApi\n */\nfunction stagger(timings, animation) {\n  return {\n    type: AnimationMetadataType.Stagger,\n    timings,\n    animation\n  };\n}\n\n/**\n * An injectable service that produces an animation sequence programmatically within an\n * Angular component or directive.\n * Provided by the `BrowserAnimationsModule` or `NoopAnimationsModule`.\n *\n * @usageNotes\n *\n * To use this service, add it to your component or directive as a dependency.\n * The service is instantiated along with your component.\n *\n * Apps do not typically need to create their own animation players, but if you\n * do need to, follow these steps:\n *\n * 1. Use the <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code> method\n * to create a programmatic animation. The method returns an `AnimationFactory` instance.\n *\n * 2. Use the factory object to create an `AnimationPlayer` and attach it to a DOM element.\n *\n * 3. Use the player object to control the animation programmatically.\n *\n * For example:\n *\n * ```ts\n * // import the service from BrowserAnimationsModule\n * import {AnimationBuilder} from '@angular/animations';\n * // require the service as a dependency\n * class MyCmp {\n *   constructor(private _builder: AnimationBuilder) {}\n *\n *   makeAnimation(element: any) {\n *     // first define a reusable animation\n *     const myAnimation = this._builder.build([\n *       style({ width: 0 }),\n *       animate(1000, style({ width: '100px' }))\n *     ]);\n *\n *     // use the returned factory object to create a player\n *     const player = myAnimation.create(element);\n *\n *     player.play();\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass AnimationBuilder {\n  static {\n    this.Éµfac = i0.ÉµÉµngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"18.1.4\",\n      ngImport: i0,\n      type: AnimationBuilder,\n      deps: [],\n      target: i0.ÉµÉµFactoryTarget.Injectable\n    });\n  }\n  static {\n    this.Éµprov = i0.ÉµÉµngDeclareInjectable({\n      minVersion: \"12.0.0\",\n      version: \"18.1.4\",\n      ngImport: i0,\n      type: AnimationBuilder,\n      providedIn: 'root',\n      useFactory: () => inject(BrowserAnimationBuilder)\n    });\n  }\n}\ni0.ÉµÉµngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"18.1.4\",\n  ngImport: i0,\n  type: AnimationBuilder,\n  decorators: [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => inject(BrowserAnimationBuilder)\n    }]\n  }]\n});\n/**\n * A factory object returned from the\n * <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code>\n * method.\n *\n * @publicApi\n */\nclass AnimationFactory {}\nclass BrowserAnimationBuilder extends AnimationBuilder {\n  constructor(rootRenderer, doc) {\n    super();\n    this.animationModuleType = inject(ANIMATION_MODULE_TYPE, {\n      optional: true\n    });\n    this._nextAnimationId = 0;\n    const typeData = {\n      id: '0',\n      encapsulation: ViewEncapsulation.None,\n      styles: [],\n      data: {\n        animation: []\n      }\n    };\n    this._renderer = rootRenderer.createRenderer(doc.body, typeData);\n    if (this.animationModuleType === null && !isAnimationRenderer(this._renderer)) {\n      // We only support AnimationRenderer & DynamicDelegationRenderer for this AnimationBuilder\n      throw new ÉµRuntimeError(3600 /* RuntimeErrorCode.BROWSER_ANIMATION_BUILDER_INJECTED_WITHOUT_ANIMATIONS */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Angular detected that the `AnimationBuilder` was injected, but animation support was not enabled. ' + 'Please make sure that you enable animations in your application by calling `provideAnimations()` or `provideAnimationsAsync()` function.');\n    }\n  }\n  build(animation) {\n    const id = this._nextAnimationId;\n    this._nextAnimationId++;\n    const entry = Array.isArray(animation) ? sequence(animation) : animation;\n    issueAnimationCommand(this._renderer, null, id, 'register', [entry]);\n    return new BrowserAnimationFactory(id, this._renderer);\n  }\n  static {\n    this.Éµfac = i0.ÉµÉµngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"18.1.4\",\n      ngImport: i0,\n      type: BrowserAnimationBuilder,\n      deps: [{\n        token: i0.RendererFactory2\n      }, {\n        token: DOCUMENT\n      }],\n      target: i0.ÉµÉµFactoryTarget.Injectable\n    });\n  }\n  static {\n    this.Éµprov = i0.ÉµÉµngDeclareInjectable({\n      minVersion: \"12.0.0\",\n      version: \"18.1.4\",\n      ngImport: i0,\n      type: BrowserAnimationBuilder,\n      providedIn: 'root'\n    });\n  }\n}\ni0.ÉµÉµngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"18.1.4\",\n  ngImport: i0,\n  type: BrowserAnimationBuilder,\n  decorators: [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }],\n  ctorParameters: () => [{\n    type: i0.RendererFactory2\n  }, {\n    type: Document,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }]\n});\nclass BrowserAnimationFactory extends AnimationFactory {\n  constructor(_id, _renderer) {\n    super();\n    this._id = _id;\n    this._renderer = _renderer;\n  }\n  create(element, options) {\n    return new RendererAnimationPlayer(this._id, element, options || {}, this._renderer);\n  }\n}\nclass RendererAnimationPlayer {\n  constructor(id, element, options, _renderer) {\n    this.id = id;\n    this.element = element;\n    this._renderer = _renderer;\n    this.parentPlayer = null;\n    this._started = false;\n    this.totalTime = 0;\n    this._command('create', options);\n  }\n  _listen(eventName, callback) {\n    return this._renderer.listen(this.element, `@@${this.id}:${eventName}`, callback);\n  }\n  _command(command, ...args) {\n    issueAnimationCommand(this._renderer, this.element, this.id, command, args);\n  }\n  onDone(fn) {\n    this._listen('done', fn);\n  }\n  onStart(fn) {\n    this._listen('start', fn);\n  }\n  onDestroy(fn) {\n    this._listen('destroy', fn);\n  }\n  init() {\n    this._command('init');\n  }\n  hasStarted() {\n    return this._started;\n  }\n  play() {\n    this._command('play');\n    this._started = true;\n  }\n  pause() {\n    this._command('pause');\n  }\n  restart() {\n    this._command('restart');\n  }\n  finish() {\n    this._command('finish');\n  }\n  destroy() {\n    this._command('destroy');\n  }\n  reset() {\n    this._command('reset');\n    this._started = false;\n  }\n  setPosition(p) {\n    this._command('setPosition', p);\n  }\n  getPosition() {\n    return unwrapAnimationRenderer(this._renderer)?.engine?.players[this.id]?.getPosition() ?? 0;\n  }\n}\nfunction issueAnimationCommand(renderer, element, id, command, args) {\n  renderer.setProperty(element, `@@${id}:${command}`, args);\n}\n/**\n * The following 2 methods cannot reference their correct types (AnimationRenderer &\n * DynamicDelegationRenderer) since this would introduce a import cycle.\n */\nfunction unwrapAnimationRenderer(renderer) {\n  const type = renderer.Éµtype;\n  if (type === 0 /* AnimationRendererType.Regular */) {\n    return renderer;\n  } else if (type === 1 /* AnimationRendererType.Delegated */) {\n    return renderer.animationRenderer;\n  }\n  return null;\n}\nfunction isAnimationRenderer(renderer) {\n  const type = renderer.Éµtype;\n  return type === 0 /* AnimationRendererType.Regular */ || type === 1 /* AnimationRendererType.Delegated */;\n}\n\n/**\n * An empty programmatic controller for reusable animations.\n * Used internally when animations are disabled, to avoid\n * checking for the null case when an animation player is expected.\n *\n * @see {@link animate}\n * @see {@link AnimationPlayer}\n *\n * @publicApi\n */\nclass NoopAnimationPlayer {\n  constructor(duration = 0, delay = 0) {\n    this._onDoneFns = [];\n    this._onStartFns = [];\n    this._onDestroyFns = [];\n    this._originalOnDoneFns = [];\n    this._originalOnStartFns = [];\n    this._started = false;\n    this._destroyed = false;\n    this._finished = false;\n    this._position = 0;\n    this.parentPlayer = null;\n    this.totalTime = duration + delay;\n  }\n  _onFinish() {\n    if (!this._finished) {\n      this._finished = true;\n      this._onDoneFns.forEach(fn => fn());\n      this._onDoneFns = [];\n    }\n  }\n  onStart(fn) {\n    this._originalOnStartFns.push(fn);\n    this._onStartFns.push(fn);\n  }\n  onDone(fn) {\n    this._originalOnDoneFns.push(fn);\n    this._onDoneFns.push(fn);\n  }\n  onDestroy(fn) {\n    this._onDestroyFns.push(fn);\n  }\n  hasStarted() {\n    return this._started;\n  }\n  init() {}\n  play() {\n    if (!this.hasStarted()) {\n      this._onStart();\n      this.triggerMicrotask();\n    }\n    this._started = true;\n  }\n  /** @internal */\n  triggerMicrotask() {\n    queueMicrotask(() => this._onFinish());\n  }\n  _onStart() {\n    this._onStartFns.forEach(fn => fn());\n    this._onStartFns = [];\n  }\n  pause() {}\n  restart() {}\n  finish() {\n    this._onFinish();\n  }\n  destroy() {\n    if (!this._destroyed) {\n      this._destroyed = true;\n      if (!this.hasStarted()) {\n        this._onStart();\n      }\n      this.finish();\n      this._onDestroyFns.forEach(fn => fn());\n      this._onDestroyFns = [];\n    }\n  }\n  reset() {\n    this._started = false;\n    this._finished = false;\n    this._onStartFns = this._originalOnStartFns;\n    this._onDoneFns = this._originalOnDoneFns;\n  }\n  setPosition(position) {\n    this._position = this.totalTime ? position * this.totalTime : 1;\n  }\n  getPosition() {\n    return this.totalTime ? this._position / this.totalTime : 1;\n  }\n  /** @internal */\n  triggerCallback(phaseName) {\n    const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n    methods.forEach(fn => fn());\n    methods.length = 0;\n  }\n}\n\n/**\n * A programmatic controller for a group of reusable animations.\n * Used internally to control animations.\n *\n * @see {@link AnimationPlayer}\n * @see {@link animations/group group}\n *\n */\nclass AnimationGroupPlayer {\n  constructor(_players) {\n    this._onDoneFns = [];\n    this._onStartFns = [];\n    this._finished = false;\n    this._started = false;\n    this._destroyed = false;\n    this._onDestroyFns = [];\n    this.parentPlayer = null;\n    this.totalTime = 0;\n    this.players = _players;\n    let doneCount = 0;\n    let destroyCount = 0;\n    let startCount = 0;\n    const total = this.players.length;\n    if (total == 0) {\n      queueMicrotask(() => this._onFinish());\n    } else {\n      this.players.forEach(player => {\n        player.onDone(() => {\n          if (++doneCount == total) {\n            this._onFinish();\n          }\n        });\n        player.onDestroy(() => {\n          if (++destroyCount == total) {\n            this._onDestroy();\n          }\n        });\n        player.onStart(() => {\n          if (++startCount == total) {\n            this._onStart();\n          }\n        });\n      });\n    }\n    this.totalTime = this.players.reduce((time, player) => Math.max(time, player.totalTime), 0);\n  }\n  _onFinish() {\n    if (!this._finished) {\n      this._finished = true;\n      this._onDoneFns.forEach(fn => fn());\n      this._onDoneFns = [];\n    }\n  }\n  init() {\n    this.players.forEach(player => player.init());\n  }\n  onStart(fn) {\n    this._onStartFns.push(fn);\n  }\n  _onStart() {\n    if (!this.hasStarted()) {\n      this._started = true;\n      this._onStartFns.forEach(fn => fn());\n      this._onStartFns = [];\n    }\n  }\n  onDone(fn) {\n    this._onDoneFns.push(fn);\n  }\n  onDestroy(fn) {\n    this._onDestroyFns.push(fn);\n  }\n  hasStarted() {\n    return this._started;\n  }\n  play() {\n    if (!this.parentPlayer) {\n      this.init();\n    }\n    this._onStart();\n    this.players.forEach(player => player.play());\n  }\n  pause() {\n    this.players.forEach(player => player.pause());\n  }\n  restart() {\n    this.players.forEach(player => player.restart());\n  }\n  finish() {\n    this._onFinish();\n    this.players.forEach(player => player.finish());\n  }\n  destroy() {\n    this._onDestroy();\n  }\n  _onDestroy() {\n    if (!this._destroyed) {\n      this._destroyed = true;\n      this._onFinish();\n      this.players.forEach(player => player.destroy());\n      this._onDestroyFns.forEach(fn => fn());\n      this._onDestroyFns = [];\n    }\n  }\n  reset() {\n    this.players.forEach(player => player.reset());\n    this._destroyed = false;\n    this._finished = false;\n    this._started = false;\n  }\n  setPosition(p) {\n    const timeAtPosition = p * this.totalTime;\n    this.players.forEach(player => {\n      const position = player.totalTime ? Math.min(1, timeAtPosition / player.totalTime) : 1;\n      player.setPosition(position);\n    });\n  }\n  getPosition() {\n    const longestPlayer = this.players.reduce((longestSoFar, player) => {\n      const newPlayerIsLongest = longestSoFar === null || player.totalTime > longestSoFar.totalTime;\n      return newPlayerIsLongest ? player : longestSoFar;\n    }, null);\n    return longestPlayer != null ? longestPlayer.getPosition() : 0;\n  }\n  beforeDestroy() {\n    this.players.forEach(player => {\n      if (player.beforeDestroy) {\n        player.beforeDestroy();\n      }\n    });\n  }\n  /** @internal */\n  triggerCallback(phaseName) {\n    const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n    methods.forEach(fn => fn());\n    methods.length = 0;\n  }\n}\nconst ÉµPRE_STYLE = '!';\n\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation package.\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTO_STYLE, AnimationBuilder, AnimationFactory, AnimationMetadataType, NoopAnimationPlayer, animate, animateChild, animation, group, keyframes, query, sequence, stagger, state, style, transition, trigger, useAnimation, AnimationGroupPlayer as ÉµAnimationGroupPlayer, BrowserAnimationBuilder as ÉµBrowserAnimationBuilder, ÉµPRE_STYLE };\n","import * as i0 from '@angular/core';\nimport { Directive, InjectionToken, inject, Injectable, ComponentFactoryResolver, ApplicationRef, SecurityContext, Injector, Inject, Component, HostBinding, HostListener, makeEnvironmentProviders, NgModule } from '@angular/core';\nimport { style, state, animate, transition, trigger } from '@angular/animations';\nimport { DOCUMENT, NgIf } from '@angular/common';\nimport { Subject } from 'rxjs';\nimport * as i2 from '@angular/platform-browser';\nclass ToastContainerDirective {\n  el;\n  constructor(el) {\n    this.el = el;\n  }\n  getContainerElement() {\n    return this.el.nativeElement;\n  }\n  static Éµfac = i0.ÉµÉµngDeclareFactory({\n    minVersion: \"12.0.0\",\n    version: \"17.0.3\",\n    ngImport: i0,\n    type: ToastContainerDirective,\n    deps: [{\n      token: i0.ElementRef\n    }],\n    target: i0.ÉµÉµFactoryTarget.Directive\n  });\n  static Éµdir = i0.ÉµÉµngDeclareDirective({\n    minVersion: \"14.0.0\",\n    version: \"17.0.3\",\n    type: ToastContainerDirective,\n    isStandalone: true,\n    selector: \"[toastContainer]\",\n    exportAs: [\"toastContainer\"],\n    ngImport: i0\n  });\n}\ni0.ÉµÉµngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"17.0.3\",\n  ngImport: i0,\n  type: ToastContainerDirective,\n  decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[toastContainer]',\n      exportAs: 'toastContainer',\n      standalone: true\n    }]\n  }],\n  ctorParameters: () => [{\n    type: i0.ElementRef\n  }]\n});\n\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal {\n  _attachedHost;\n  /** The type of the component that will be instantiated for attachment. */\n  component;\n  /**\n   * [Optional] Where the attached component should live in Angular's *logical* component tree.\n   * This is different from where the component *renders*, which is determined by the PortalHost.\n   * The origin necessary when the host is outside of the Angular application context.\n   */\n  viewContainerRef;\n  /** Injector used for the instantiation of the component. */\n  injector;\n  constructor(component, injector) {\n    this.component = component;\n    this.injector = injector;\n  }\n  /** Attach this portal to a host. */\n  attach(host, newestOnTop) {\n    this._attachedHost = host;\n    return host.attach(this, newestOnTop);\n  }\n  /** Detach this portal from its host */\n  detach() {\n    const host = this._attachedHost;\n    if (host) {\n      this._attachedHost = undefined;\n      return host.detach();\n    }\n  }\n  /** Whether this portal is attached to a host. */\n  get isAttached() {\n    return this._attachedHost != null;\n  }\n  /**\n   * Sets the PortalHost reference without performing `attach()`. This is used directly by\n   * the PortalHost when it is performing an `attach()` or `detach()`.\n   */\n  setAttachedHost(host) {\n    this._attachedHost = host;\n  }\n}\n/**\n * Partial implementation of PortalHost that only deals with attaching a\n * ComponentPortal\n */\nclass BasePortalHost {\n  /** The portal currently attached to the host. */\n  _attachedPortal;\n  /** A function that will permanently dispose this host. */\n  _disposeFn;\n  attach(portal, newestOnTop) {\n    this._attachedPortal = portal;\n    return this.attachComponentPortal(portal, newestOnTop);\n  }\n  detach() {\n    if (this._attachedPortal) {\n      this._attachedPortal.setAttachedHost();\n    }\n    this._attachedPortal = undefined;\n    if (this._disposeFn) {\n      this._disposeFn();\n      this._disposeFn = undefined;\n    }\n  }\n  setDisposeFn(fn) {\n    this._disposeFn = fn;\n  }\n}\n\n/**\n * Reference to a toast opened via the Toastr service.\n */\nclass ToastRef {\n  _overlayRef;\n  /** The instance of component opened into the toast. */\n  componentInstance;\n  /** Count of duplicates of this toast */\n  duplicatesCount = 0;\n  /** Subject for notifying the user that the toast has finished closing. */\n  _afterClosed = new Subject();\n  /** triggered when toast is activated */\n  _activate = new Subject();\n  /** notifies the toast that it should close before the timeout */\n  _manualClose = new Subject();\n  /** notifies the toast that it should reset the timeouts */\n  _resetTimeout = new Subject();\n  /** notifies the toast that it should count a duplicate toast */\n  _countDuplicate = new Subject();\n  constructor(_overlayRef) {\n    this._overlayRef = _overlayRef;\n  }\n  manualClose() {\n    this._manualClose.next();\n    this._manualClose.complete();\n  }\n  manualClosed() {\n    return this._manualClose.asObservable();\n  }\n  timeoutReset() {\n    return this._resetTimeout.asObservable();\n  }\n  countDuplicate() {\n    return this._countDuplicate.asObservable();\n  }\n  /**\n   * Close the toast.\n   */\n  close() {\n    this._overlayRef.detach();\n    this._afterClosed.next();\n    this._manualClose.next();\n    this._afterClosed.complete();\n    this._manualClose.complete();\n    this._activate.complete();\n    this._resetTimeout.complete();\n    this._countDuplicate.complete();\n  }\n  /** Gets an observable that is notified when the toast is finished closing. */\n  afterClosed() {\n    return this._afterClosed.asObservable();\n  }\n  isInactive() {\n    return this._activate.isStopped;\n  }\n  activate() {\n    this._activate.next();\n    this._activate.complete();\n  }\n  /** Gets an observable that is notified when the toast has started opening. */\n  afterActivate() {\n    return this._activate.asObservable();\n  }\n  /** Reset the toast timouts and count duplicates */\n  onDuplicate(resetTimeout, countDuplicate) {\n    if (resetTimeout) {\n      this._resetTimeout.next();\n    }\n    if (countDuplicate) {\n      this._countDuplicate.next(++this.duplicatesCount);\n    }\n  }\n}\n\n/**\n * Everything a toast needs to launch\n */\nclass ToastPackage {\n  toastId;\n  config;\n  message;\n  title;\n  toastType;\n  toastRef;\n  _onTap = new Subject();\n  _onAction = new Subject();\n  constructor(toastId, config, message, title, toastType, toastRef) {\n    this.toastId = toastId;\n    this.config = config;\n    this.message = message;\n    this.title = title;\n    this.toastType = toastType;\n    this.toastRef = toastRef;\n    this.toastRef.afterClosed().subscribe(() => {\n      this._onAction.complete();\n      this._onTap.complete();\n    });\n  }\n  /** Fired on click */\n  triggerTap() {\n    this._onTap.next();\n    if (this.config.tapToDismiss) {\n      this._onTap.complete();\n    }\n  }\n  onTap() {\n    return this._onTap.asObservable();\n  }\n  /** available for use in custom toast */\n  triggerAction(action) {\n    this._onAction.next(action);\n  }\n  onAction() {\n    return this._onAction.asObservable();\n  }\n}\nconst DefaultNoComponentGlobalConfig = {\n  maxOpened: 0,\n  autoDismiss: false,\n  newestOnTop: true,\n  preventDuplicates: false,\n  countDuplicates: false,\n  resetTimeoutOnDuplicate: false,\n  includeTitleDuplicates: false,\n  iconClasses: {\n    error: 'toast-error',\n    info: 'toast-info',\n    success: 'toast-success',\n    warning: 'toast-warning'\n  },\n  // Individual\n  closeButton: false,\n  disableTimeOut: false,\n  timeOut: 5000,\n  extendedTimeOut: 1000,\n  enableHtml: false,\n  progressBar: false,\n  toastClass: 'ngx-toastr',\n  positionClass: 'toast-top-right',\n  titleClass: 'toast-title',\n  messageClass: 'toast-message',\n  easing: 'ease-in',\n  easeTime: 300,\n  tapToDismiss: true,\n  onActivateTick: false,\n  progressAnimation: 'decreasing'\n};\nconst TOAST_CONFIG = new InjectionToken('ToastConfig');\n\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n *\n * This is the only part of the portal core that directly touches the DOM.\n */\nclass DomPortalHost extends BasePortalHost {\n  _hostDomElement;\n  _componentFactoryResolver;\n  _appRef;\n  constructor(_hostDomElement, _componentFactoryResolver, _appRef) {\n    super();\n    this._hostDomElement = _hostDomElement;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._appRef = _appRef;\n  }\n  /**\n   * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n   * @param portal Portal to be attached\n   */\n  attachComponentPortal(portal, newestOnTop) {\n    const componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n    let componentRef;\n    // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n    // for the component (in terms of Angular's component tree, not rendering).\n    // When the ViewContainerRef is missing, we use the factory to create the component directly\n    // and then manually attach the ChangeDetector for that component to the application (which\n    // happens automatically when using a ViewContainer).\n    componentRef = componentFactory.create(portal.injector);\n    // When creating a component outside of a ViewContainer, we need to manually register\n    // its ChangeDetector with the application. This API is unfortunately not yet published\n    // in Angular core. The change detector must also be deregistered when the component\n    // is destroyed to prevent memory leaks.\n    this._appRef.attachView(componentRef.hostView);\n    this.setDisposeFn(() => {\n      this._appRef.detachView(componentRef.hostView);\n      componentRef.destroy();\n    });\n    // At this point the component has been instantiated, so we move it to the location in the DOM\n    // where we want it to be rendered.\n    if (newestOnTop) {\n      this._hostDomElement.insertBefore(this._getComponentRootNode(componentRef), this._hostDomElement.firstChild);\n    } else {\n      this._hostDomElement.appendChild(this._getComponentRootNode(componentRef));\n    }\n    return componentRef;\n  }\n  /** Gets the root HTMLElement for an instantiated component. */\n  _getComponentRootNode(componentRef) {\n    return componentRef.hostView.rootNodes[0];\n  }\n}\n\n/** Container inside which all toasts will render. */\nclass OverlayContainer {\n  _document = inject(DOCUMENT);\n  _containerElement;\n  ngOnDestroy() {\n    if (this._containerElement && this._containerElement.parentNode) {\n      this._containerElement.parentNode.removeChild(this._containerElement);\n    }\n  }\n  /**\n   * This method returns the overlay container element. It will lazily\n   * create the element the first time  it is called to facilitate using\n   * the container in non-browser environments.\n   * @returns the container element\n   */\n  getContainerElement() {\n    if (!this._containerElement) {\n      this._createContainer();\n    }\n    return this._containerElement;\n  }\n  /**\n   * Create the overlay container element, which is simply a div\n   * with the 'cdk-overlay-container' class on the document body\n   * and 'aria-live=\"polite\"'\n   */\n  _createContainer() {\n    const container = this._document.createElement('div');\n    container.classList.add('overlay-container');\n    container.setAttribute('aria-live', 'polite');\n    this._document.body.appendChild(container);\n    this._containerElement = container;\n  }\n  static Éµfac = i0.ÉµÉµngDeclareFactory({\n    minVersion: \"12.0.0\",\n    version: \"17.0.3\",\n    ngImport: i0,\n    type: OverlayContainer,\n    deps: [],\n    target: i0.ÉµÉµFactoryTarget.Injectable\n  });\n  static Éµprov = i0.ÉµÉµngDeclareInjectable({\n    minVersion: \"12.0.0\",\n    version: \"17.0.3\",\n    ngImport: i0,\n    type: OverlayContainer,\n    providedIn: 'root'\n  });\n}\ni0.ÉµÉµngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"17.0.3\",\n  ngImport: i0,\n  type: OverlayContainer,\n  decorators: [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }]\n});\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n  _portalHost;\n  constructor(_portalHost) {\n    this._portalHost = _portalHost;\n  }\n  attach(portal, newestOnTop = true) {\n    return this._portalHost.attach(portal, newestOnTop);\n  }\n  /**\n   * Detaches an overlay from a portal.\n   * @returns Resolves when the overlay has been detached.\n   */\n  detach() {\n    return this._portalHost.detach();\n  }\n}\n\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n  _overlayContainer = inject(OverlayContainer);\n  _componentFactoryResolver = inject(ComponentFactoryResolver);\n  _appRef = inject(ApplicationRef);\n  _document = inject(DOCUMENT);\n  // Namespace panes by overlay container\n  _paneElements = new Map();\n  /**\n   * Creates an overlay.\n   * @returns A reference to the created overlay.\n   */\n  create(positionClass, overlayContainer) {\n    // get existing pane if possible\n    return this._createOverlayRef(this.getPaneElement(positionClass, overlayContainer));\n  }\n  getPaneElement(positionClass = '', overlayContainer) {\n    if (!this._paneElements.get(overlayContainer)) {\n      this._paneElements.set(overlayContainer, {});\n    }\n    if (!this._paneElements.get(overlayContainer)[positionClass]) {\n      this._paneElements.get(overlayContainer)[positionClass] = this._createPaneElement(positionClass, overlayContainer);\n    }\n    return this._paneElements.get(overlayContainer)[positionClass];\n  }\n  /**\n   * Creates the DOM element for an overlay and appends it to the overlay container.\n   * @returns Newly-created pane element\n   */\n  _createPaneElement(positionClass, overlayContainer) {\n    const pane = this._document.createElement('div');\n    pane.id = 'toast-container';\n    pane.classList.add(positionClass);\n    pane.classList.add('toast-container');\n    if (!overlayContainer) {\n      this._overlayContainer.getContainerElement().appendChild(pane);\n    } else {\n      overlayContainer.getContainerElement().appendChild(pane);\n    }\n    return pane;\n  }\n  /**\n   * Create a DomPortalHost into which the overlay content can be loaded.\n   * @param pane The DOM element to turn into a portal host.\n   * @returns A portal host for the given DOM element.\n   */\n  _createPortalHost(pane) {\n    return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef);\n  }\n  /**\n   * Creates an OverlayRef for an overlay in the given DOM element.\n   * @param pane DOM element for the overlay\n   */\n  _createOverlayRef(pane) {\n    return new OverlayRef(this._createPortalHost(pane));\n  }\n  static Éµfac = i0.ÉµÉµngDeclareFactory({\n    minVersion: \"12.0.0\",\n    version: \"17.0.3\",\n    ngImport: i0,\n    type: Overlay,\n    deps: [],\n    target: i0.ÉµÉµFactoryTarget.Injectable\n  });\n  static Éµprov = i0.ÉµÉµngDeclareInjectable({\n    minVersion: \"12.0.0\",\n    version: \"17.0.3\",\n    ngImport: i0,\n    type: Overlay,\n    providedIn: 'root'\n  });\n}\ni0.ÉµÉµngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"17.0.3\",\n  ngImport: i0,\n  type: Overlay,\n  decorators: [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }]\n});\nclass ToastrService {\n  overlay;\n  _injector;\n  sanitizer;\n  ngZone;\n  toastrConfig;\n  currentlyActive = 0;\n  toasts = [];\n  overlayContainer;\n  previousToastMessage;\n  index = 0;\n  constructor(token, overlay, _injector, sanitizer, ngZone) {\n    this.overlay = overlay;\n    this._injector = _injector;\n    this.sanitizer = sanitizer;\n    this.ngZone = ngZone;\n    this.toastrConfig = {\n      ...token.default,\n      ...token.config\n    };\n    if (token.config.iconClasses) {\n      this.toastrConfig.iconClasses = {\n        ...token.default.iconClasses,\n        ...token.config.iconClasses\n      };\n    }\n  }\n  /** show toast */\n  show(message, title, override = {}, type = '') {\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show successful toast */\n  success(message, title, override = {}) {\n    const type = this.toastrConfig.iconClasses.success || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show error toast */\n  error(message, title, override = {}) {\n    const type = this.toastrConfig.iconClasses.error || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show info toast */\n  info(message, title, override = {}) {\n    const type = this.toastrConfig.iconClasses.info || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show warning toast */\n  warning(message, title, override = {}) {\n    const type = this.toastrConfig.iconClasses.warning || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /**\n   * Remove all or a single toast by id\n   */\n  clear(toastId) {\n    // Call every toastRef manualClose function\n    for (const toast of this.toasts) {\n      if (toastId !== undefined) {\n        if (toast.toastId === toastId) {\n          toast.toastRef.manualClose();\n          return;\n        }\n      } else {\n        toast.toastRef.manualClose();\n      }\n    }\n  }\n  /**\n   * Remove and destroy a single toast by id\n   */\n  remove(toastId) {\n    const found = this._findToast(toastId);\n    if (!found) {\n      return false;\n    }\n    found.activeToast.toastRef.close();\n    this.toasts.splice(found.index, 1);\n    this.currentlyActive = this.currentlyActive - 1;\n    if (!this.toastrConfig.maxOpened || !this.toasts.length) {\n      return false;\n    }\n    if (this.currentlyActive < this.toastrConfig.maxOpened && this.toasts[this.currentlyActive]) {\n      const p = this.toasts[this.currentlyActive].toastRef;\n      if (!p.isInactive()) {\n        this.currentlyActive = this.currentlyActive + 1;\n        p.activate();\n      }\n    }\n    return true;\n  }\n  /**\n   * Determines if toast message is already shown\n   */\n  findDuplicate(title = '', message = '', resetOnDuplicate, countDuplicates) {\n    const {\n      includeTitleDuplicates\n    } = this.toastrConfig;\n    for (const toast of this.toasts) {\n      const hasDuplicateTitle = includeTitleDuplicates && toast.title === title;\n      if ((!includeTitleDuplicates || hasDuplicateTitle) && toast.message === message) {\n        toast.toastRef.onDuplicate(resetOnDuplicate, countDuplicates);\n        return toast;\n      }\n    }\n    return null;\n  }\n  /** create a clone of global config and apply individual settings */\n  applyConfig(override = {}) {\n    return {\n      ...this.toastrConfig,\n      ...override\n    };\n  }\n  /**\n   * Find toast object by id\n   */\n  _findToast(toastId) {\n    for (let i = 0; i < this.toasts.length; i++) {\n      if (this.toasts[i].toastId === toastId) {\n        return {\n          index: i,\n          activeToast: this.toasts[i]\n        };\n      }\n    }\n    return null;\n  }\n  /**\n   * Determines the need to run inside angular's zone then builds the toast\n   */\n  _preBuildNotification(toastType, message, title, config) {\n    if (config.onActivateTick) {\n      return this.ngZone.run(() => this._buildNotification(toastType, message, title, config));\n    }\n    return this._buildNotification(toastType, message, title, config);\n  }\n  /**\n   * Creates and attaches toast data to component\n   * returns the active toast, or in case preventDuplicates is enabled the original/non-duplicate active toast.\n   */\n  _buildNotification(toastType, message, title, config) {\n    if (!config.toastComponent) {\n      throw new Error('toastComponent required');\n    }\n    // max opened and auto dismiss = true\n    // if timeout = 0 resetting it would result in setting this.hideTime = Date.now(). Hence, we only want to reset timeout if there is\n    // a timeout at all\n    const duplicate = this.findDuplicate(title, message, this.toastrConfig.resetTimeoutOnDuplicate && config.timeOut > 0, this.toastrConfig.countDuplicates);\n    if ((this.toastrConfig.includeTitleDuplicates && title || message) && this.toastrConfig.preventDuplicates && duplicate !== null) {\n      return duplicate;\n    }\n    this.previousToastMessage = message;\n    let keepInactive = false;\n    if (this.toastrConfig.maxOpened && this.currentlyActive >= this.toastrConfig.maxOpened) {\n      keepInactive = true;\n      if (this.toastrConfig.autoDismiss) {\n        this.clear(this.toasts[0].toastId);\n      }\n    }\n    const overlayRef = this.overlay.create(config.positionClass, this.overlayContainer);\n    this.index = this.index + 1;\n    let sanitizedMessage = message;\n    if (message && config.enableHtml) {\n      sanitizedMessage = this.sanitizer.sanitize(SecurityContext.HTML, message);\n    }\n    const toastRef = new ToastRef(overlayRef);\n    const toastPackage = new ToastPackage(this.index, config, sanitizedMessage, title, toastType, toastRef);\n    /** New injector that contains an instance of `ToastPackage`. */\n    const providers = [{\n      provide: ToastPackage,\n      useValue: toastPackage\n    }];\n    const toastInjector = Injector.create({\n      providers,\n      parent: this._injector\n    });\n    const component = new ComponentPortal(config.toastComponent, toastInjector);\n    const portal = overlayRef.attach(component, config.newestOnTop);\n    toastRef.componentInstance = portal.instance;\n    const ins = {\n      toastId: this.index,\n      title: title || '',\n      message: message || '',\n      toastRef,\n      onShown: toastRef.afterActivate(),\n      onHidden: toastRef.afterClosed(),\n      onTap: toastPackage.onTap(),\n      onAction: toastPackage.onAction(),\n      portal\n    };\n    if (!keepInactive) {\n      this.currentlyActive = this.currentlyActive + 1;\n      setTimeout(() => {\n        ins.toastRef.activate();\n      });\n    }\n    this.toasts.push(ins);\n    return ins;\n  }\n  static Éµfac = i0.ÉµÉµngDeclareFactory({\n    minVersion: \"12.0.0\",\n    version: \"17.0.3\",\n    ngImport: i0,\n    type: ToastrService,\n    deps: [{\n      token: TOAST_CONFIG\n    }, {\n      token: Overlay\n    }, {\n      token: i0.Injector\n    }, {\n      token: i2.DomSanitizer\n    }, {\n      token: i0.NgZone\n    }],\n    target: i0.ÉµÉµFactoryTarget.Injectable\n  });\n  static Éµprov = i0.ÉµÉµngDeclareInjectable({\n    minVersion: \"12.0.0\",\n    version: \"17.0.3\",\n    ngImport: i0,\n    type: ToastrService,\n    providedIn: 'root'\n  });\n}\ni0.ÉµÉµngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"17.0.3\",\n  ngImport: i0,\n  type: ToastrService,\n  decorators: [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }],\n  ctorParameters: () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [TOAST_CONFIG]\n    }]\n  }, {\n    type: Overlay\n  }, {\n    type: i0.Injector\n  }, {\n    type: i2.DomSanitizer\n  }, {\n    type: i0.NgZone\n  }]\n});\nclass Toast {\n  toastrService;\n  toastPackage;\n  ngZone;\n  message;\n  title;\n  options;\n  duplicatesCount;\n  originalTimeout;\n  /** width of progress bar */\n  width = -1;\n  /** a combination of toast type and options.toastClass */\n  toastClasses = '';\n  /** controls animation */\n  state;\n  /** hides component when waiting to be displayed */\n  get displayStyle() {\n    if (this.state.value === 'inactive') {\n      return 'none';\n    }\n    return;\n  }\n  timeout;\n  intervalId;\n  hideTime;\n  sub;\n  sub1;\n  sub2;\n  sub3;\n  constructor(toastrService, toastPackage, ngZone) {\n    this.toastrService = toastrService;\n    this.toastPackage = toastPackage;\n    this.ngZone = ngZone;\n    this.message = toastPackage.message;\n    this.title = toastPackage.title;\n    this.options = toastPackage.config;\n    this.originalTimeout = toastPackage.config.timeOut;\n    this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n    this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n      this.activateToast();\n    });\n    this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n      this.remove();\n    });\n    this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\n      this.resetTimeout();\n    });\n    this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(count => {\n      this.duplicatesCount = count;\n    });\n    this.state = {\n      value: 'inactive',\n      params: {\n        easeTime: this.toastPackage.config.easeTime,\n        easing: 'ease-in'\n      }\n    };\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    this.sub1.unsubscribe();\n    this.sub2.unsubscribe();\n    this.sub3.unsubscribe();\n    clearInterval(this.intervalId);\n    clearTimeout(this.timeout);\n  }\n  /**\n   * activates toast and sets timeout\n   */\n  activateToast() {\n    this.state = {\n      ...this.state,\n      value: 'active'\n    };\n    if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') && this.options.timeOut) {\n      this.outsideTimeout(() => this.remove(), this.options.timeOut);\n      this.hideTime = new Date().getTime() + this.options.timeOut;\n      if (this.options.progressBar) {\n        this.outsideInterval(() => this.updateProgress(), 10);\n      }\n    }\n  }\n  /**\n   * updates progress bar width\n   */\n  updateProgress() {\n    if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n      return;\n    }\n    const now = new Date().getTime();\n    const remaining = this.hideTime - now;\n    this.width = remaining / this.options.timeOut * 100;\n    if (this.options.progressAnimation === 'increasing') {\n      this.width = 100 - this.width;\n    }\n    if (this.width <= 0) {\n      this.width = 0;\n    }\n    if (this.width >= 100) {\n      this.width = 100;\n    }\n  }\n  resetTimeout() {\n    clearTimeout(this.timeout);\n    clearInterval(this.intervalId);\n    this.state = {\n      ...this.state,\n      value: 'active'\n    };\n    this.outsideTimeout(() => this.remove(), this.originalTimeout);\n    this.options.timeOut = this.originalTimeout;\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n    this.width = -1;\n    if (this.options.progressBar) {\n      this.outsideInterval(() => this.updateProgress(), 10);\n    }\n  }\n  /**\n   * tells toastrService to remove this toast after animation time\n   */\n  remove() {\n    if (this.state.value === 'removed') {\n      return;\n    }\n    clearTimeout(this.timeout);\n    this.state = {\n      ...this.state,\n      value: 'removed'\n    };\n    this.outsideTimeout(() => this.toastrService.remove(this.toastPackage.toastId), +this.toastPackage.config.easeTime);\n  }\n  tapToast() {\n    if (this.state.value === 'removed') {\n      return;\n    }\n    this.toastPackage.triggerTap();\n    if (this.options.tapToDismiss) {\n      this.remove();\n    }\n  }\n  stickAround() {\n    if (this.state.value === 'removed') {\n      return;\n    }\n    if (this.options.disableTimeOut !== 'extendedTimeOut') {\n      clearTimeout(this.timeout);\n      this.options.timeOut = 0;\n      this.hideTime = 0;\n      // disable progressBar\n      clearInterval(this.intervalId);\n      this.width = 0;\n    }\n  }\n  delayedHideToast() {\n    if (this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut' || this.options.extendedTimeOut === 0 || this.state.value === 'removed') {\n      return;\n    }\n    this.outsideTimeout(() => this.remove(), this.options.extendedTimeOut);\n    this.options.timeOut = this.options.extendedTimeOut;\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n    this.width = -1;\n    if (this.options.progressBar) {\n      this.outsideInterval(() => this.updateProgress(), 10);\n    }\n  }\n  outsideTimeout(func, timeout) {\n    if (this.ngZone) {\n      this.ngZone.runOutsideAngular(() => this.timeout = setTimeout(() => this.runInsideAngular(func), timeout));\n    } else {\n      this.timeout = setTimeout(() => func(), timeout);\n    }\n  }\n  outsideInterval(func, timeout) {\n    if (this.ngZone) {\n      this.ngZone.runOutsideAngular(() => this.intervalId = setInterval(() => this.runInsideAngular(func), timeout));\n    } else {\n      this.intervalId = setInterval(() => func(), timeout);\n    }\n  }\n  runInsideAngular(func) {\n    if (this.ngZone) {\n      this.ngZone.run(() => func());\n    } else {\n      func();\n    }\n  }\n  static Éµfac = i0.ÉµÉµngDeclareFactory({\n    minVersion: \"12.0.0\",\n    version: \"17.0.3\",\n    ngImport: i0,\n    type: Toast,\n    deps: [{\n      token: ToastrService\n    }, {\n      token: ToastPackage\n    }, {\n      token: i0.NgZone\n    }],\n    target: i0.ÉµÉµFactoryTarget.Component\n  });\n  static Éµcmp = i0.ÉµÉµngDeclareComponent({\n    minVersion: \"14.0.0\",\n    version: \"17.0.3\",\n    type: Toast,\n    isStandalone: true,\n    selector: \"[toast-component]\",\n    host: {\n      listeners: {\n        \"click\": \"tapToast()\",\n        \"mouseenter\": \"stickAround()\",\n        \"mouseleave\": \"delayedHideToast()\"\n      },\n      properties: {\n        \"class\": \"this.toastClasses\",\n        \"@flyInOut\": \"this.state\",\n        \"style.display\": \"this.displayStyle\"\n      }\n    },\n    ngImport: i0,\n    template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `,\n    isInline: true,\n    dependencies: [{\n      kind: \"directive\",\n      type: NgIf,\n      selector: \"[ngIf]\",\n      inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"]\n    }],\n    animations: [trigger('flyInOut', [state('inactive', style({\n      opacity: 0\n    })), state('active', style({\n      opacity: 1\n    })), state('removed', style({\n      opacity: 0\n    })), transition('inactive => active', animate('{{ easeTime }}ms {{ easing }}')), transition('active => removed', animate('{{ easeTime }}ms {{ easing }}'))])]\n  });\n}\ni0.ÉµÉµngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"17.0.3\",\n  ngImport: i0,\n  type: Toast,\n  decorators: [{\n    type: Component,\n    args: [{\n      selector: '[toast-component]',\n      template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `,\n      animations: [trigger('flyInOut', [state('inactive', style({\n        opacity: 0\n      })), state('active', style({\n        opacity: 1\n      })), state('removed', style({\n        opacity: 0\n      })), transition('inactive => active', animate('{{ easeTime }}ms {{ easing }}')), transition('active => removed', animate('{{ easeTime }}ms {{ easing }}'))])],\n      preserveWhitespaces: false,\n      standalone: true,\n      imports: [NgIf]\n    }]\n  }],\n  ctorParameters: () => [{\n    type: ToastrService\n  }, {\n    type: ToastPackage\n  }, {\n    type: i0.NgZone\n  }],\n  propDecorators: {\n    toastClasses: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    state: [{\n      type: HostBinding,\n      args: ['@flyInOut']\n    }],\n    displayStyle: [{\n      type: HostBinding,\n      args: ['style.display']\n    }],\n    tapToast: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    stickAround: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    delayedHideToast: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  }\n});\nconst DefaultGlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: Toast\n};\n/**\n * @description\n * Provides the `TOAST_CONFIG` token with the given config.\n *\n * @param config The config to configure toastr.\n * @returns The environment providers.\n *\n * @example\n * ```ts\n * import { provideToastr } from 'ngx-toastr';\n *\n * bootstrap(AppComponent, {\n *   providers: [\n *     provideToastr({\n *       timeOut: 2000,\n *       positionClass: 'toast-top-right',\n *     }),\n *   ],\n * })\n */\nconst provideToastr = (config = {}) => {\n  const providers = [{\n    provide: TOAST_CONFIG,\n    useValue: {\n      default: DefaultGlobalConfig,\n      config\n    }\n  }];\n  return makeEnvironmentProviders(providers);\n};\nclass ToastrModule {\n  static forRoot(config = {}) {\n    return {\n      ngModule: ToastrModule,\n      providers: [provideToastr(config)]\n    };\n  }\n  static Éµfac = i0.ÉµÉµngDeclareFactory({\n    minVersion: \"12.0.0\",\n    version: \"17.0.3\",\n    ngImport: i0,\n    type: ToastrModule,\n    deps: [],\n    target: i0.ÉµÉµFactoryTarget.NgModule\n  });\n  static Éµmod = i0.ÉµÉµngDeclareNgModule({\n    minVersion: \"14.0.0\",\n    version: \"17.0.3\",\n    ngImport: i0,\n    type: ToastrModule,\n    imports: [Toast],\n    exports: [Toast]\n  });\n  static Éµinj = i0.ÉµÉµngDeclareInjector({\n    minVersion: \"12.0.0\",\n    version: \"17.0.3\",\n    ngImport: i0,\n    type: ToastrModule\n  });\n}\ni0.ÉµÉµngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"17.0.3\",\n  ngImport: i0,\n  type: ToastrModule,\n  decorators: [{\n    type: NgModule,\n    args: [{\n      imports: [Toast],\n      exports: [Toast]\n    }]\n  }]\n});\nclass ToastrComponentlessModule {\n  static forRoot(config = {}) {\n    return {\n      ngModule: ToastrModule,\n      providers: [{\n        provide: TOAST_CONFIG,\n        useValue: {\n          default: DefaultNoComponentGlobalConfig,\n          config\n        }\n      }]\n    };\n  }\n  static Éµfac = i0.ÉµÉµngDeclareFactory({\n    minVersion: \"12.0.0\",\n    version: \"17.0.3\",\n    ngImport: i0,\n    type: ToastrComponentlessModule,\n    deps: [],\n    target: i0.ÉµÉµFactoryTarget.NgModule\n  });\n  static Éµmod = i0.ÉµÉµngDeclareNgModule({\n    minVersion: \"14.0.0\",\n    version: \"17.0.3\",\n    ngImport: i0,\n    type: ToastrComponentlessModule\n  });\n  static Éµinj = i0.ÉµÉµngDeclareInjector({\n    minVersion: \"12.0.0\",\n    version: \"17.0.3\",\n    ngImport: i0,\n    type: ToastrComponentlessModule\n  });\n}\ni0.ÉµÉµngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"17.0.3\",\n  ngImport: i0,\n  type: ToastrComponentlessModule,\n  decorators: [{\n    type: NgModule,\n    args: [{}]\n  }]\n});\nclass ToastNoAnimation {\n  toastrService;\n  toastPackage;\n  appRef;\n  message;\n  title;\n  options;\n  duplicatesCount;\n  originalTimeout;\n  /** width of progress bar */\n  width = -1;\n  /** a combination of toast type and options.toastClass */\n  toastClasses = '';\n  /** hides component when waiting to be displayed */\n  get displayStyle() {\n    if (this.state === 'inactive') {\n      return 'none';\n    }\n    return null;\n  }\n  /** controls animation */\n  state = 'inactive';\n  timeout;\n  intervalId;\n  hideTime;\n  sub;\n  sub1;\n  sub2;\n  sub3;\n  constructor(toastrService, toastPackage, appRef) {\n    this.toastrService = toastrService;\n    this.toastPackage = toastPackage;\n    this.appRef = appRef;\n    this.message = toastPackage.message;\n    this.title = toastPackage.title;\n    this.options = toastPackage.config;\n    this.originalTimeout = toastPackage.config.timeOut;\n    this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n    this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n      this.activateToast();\n    });\n    this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n      this.remove();\n    });\n    this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\n      this.resetTimeout();\n    });\n    this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(count => {\n      this.duplicatesCount = count;\n    });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    this.sub1.unsubscribe();\n    this.sub2.unsubscribe();\n    this.sub3.unsubscribe();\n    clearInterval(this.intervalId);\n    clearTimeout(this.timeout);\n  }\n  /**\n   * activates toast and sets timeout\n   */\n  activateToast() {\n    this.state = 'active';\n    if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') && this.options.timeOut) {\n      this.timeout = setTimeout(() => {\n        this.remove();\n      }, this.options.timeOut);\n      this.hideTime = new Date().getTime() + this.options.timeOut;\n      if (this.options.progressBar) {\n        this.intervalId = setInterval(() => this.updateProgress(), 10);\n      }\n    }\n    if (this.options.onActivateTick) {\n      this.appRef.tick();\n    }\n  }\n  /**\n   * updates progress bar width\n   */\n  updateProgress() {\n    if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n      return;\n    }\n    const now = new Date().getTime();\n    const remaining = this.hideTime - now;\n    this.width = remaining / this.options.timeOut * 100;\n    if (this.options.progressAnimation === 'increasing') {\n      this.width = 100 - this.width;\n    }\n    if (this.width <= 0) {\n      this.width = 0;\n    }\n    if (this.width >= 100) {\n      this.width = 100;\n    }\n  }\n  resetTimeout() {\n    clearTimeout(this.timeout);\n    clearInterval(this.intervalId);\n    this.state = 'active';\n    this.options.timeOut = this.originalTimeout;\n    this.timeout = setTimeout(() => this.remove(), this.originalTimeout);\n    this.hideTime = new Date().getTime() + (this.originalTimeout || 0);\n    this.width = -1;\n    if (this.options.progressBar) {\n      this.intervalId = setInterval(() => this.updateProgress(), 10);\n    }\n  }\n  /**\n   * tells toastrService to remove this toast after animation time\n   */\n  remove() {\n    if (this.state === 'removed') {\n      return;\n    }\n    clearTimeout(this.timeout);\n    this.state = 'removed';\n    this.timeout = setTimeout(() => this.toastrService.remove(this.toastPackage.toastId));\n  }\n  tapToast() {\n    if (this.state === 'removed') {\n      return;\n    }\n    this.toastPackage.triggerTap();\n    if (this.options.tapToDismiss) {\n      this.remove();\n    }\n  }\n  stickAround() {\n    if (this.state === 'removed') {\n      return;\n    }\n    clearTimeout(this.timeout);\n    this.options.timeOut = 0;\n    this.hideTime = 0;\n    // disable progressBar\n    clearInterval(this.intervalId);\n    this.width = 0;\n  }\n  delayedHideToast() {\n    if (this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut' || this.options.extendedTimeOut === 0 || this.state === 'removed') {\n      return;\n    }\n    this.timeout = setTimeout(() => this.remove(), this.options.extendedTimeOut);\n    this.options.timeOut = this.options.extendedTimeOut;\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n    this.width = -1;\n    if (this.options.progressBar) {\n      this.intervalId = setInterval(() => this.updateProgress(), 10);\n    }\n  }\n  static Éµfac = i0.ÉµÉµngDeclareFactory({\n    minVersion: \"12.0.0\",\n    version: \"17.0.3\",\n    ngImport: i0,\n    type: ToastNoAnimation,\n    deps: [{\n      token: ToastrService\n    }, {\n      token: ToastPackage\n    }, {\n      token: i0.ApplicationRef\n    }],\n    target: i0.ÉµÉµFactoryTarget.Component\n  });\n  static Éµcmp = i0.ÉµÉµngDeclareComponent({\n    minVersion: \"14.0.0\",\n    version: \"17.0.3\",\n    type: ToastNoAnimation,\n    isStandalone: true,\n    selector: \"[toast-component]\",\n    host: {\n      listeners: {\n        \"click\": \"tapToast()\",\n        \"mouseenter\": \"stickAround()\",\n        \"mouseleave\": \"delayedHideToast()\"\n      },\n      properties: {\n        \"class\": \"this.toastClasses\",\n        \"style.display\": \"this.displayStyle\"\n      }\n    },\n    ngImport: i0,\n    template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `,\n    isInline: true,\n    dependencies: [{\n      kind: \"directive\",\n      type: NgIf,\n      selector: \"[ngIf]\",\n      inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"]\n    }]\n  });\n}\ni0.ÉµÉµngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"17.0.3\",\n  ngImport: i0,\n  type: ToastNoAnimation,\n  decorators: [{\n    type: Component,\n    args: [{\n      selector: '[toast-component]',\n      template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `,\n      standalone: true,\n      imports: [NgIf]\n    }]\n  }],\n  ctorParameters: () => [{\n    type: ToastrService\n  }, {\n    type: ToastPackage\n  }, {\n    type: i0.ApplicationRef\n  }],\n  propDecorators: {\n    toastClasses: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    displayStyle: [{\n      type: HostBinding,\n      args: ['style.display']\n    }],\n    tapToast: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    stickAround: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    delayedHideToast: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  }\n});\nconst DefaultNoAnimationsGlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: ToastNoAnimation\n};\nclass ToastNoAnimationModule {\n  static forRoot(config = {}) {\n    return {\n      ngModule: ToastNoAnimationModule,\n      providers: [{\n        provide: TOAST_CONFIG,\n        useValue: {\n          default: DefaultNoAnimationsGlobalConfig,\n          config\n        }\n      }]\n    };\n  }\n  static Éµfac = i0.ÉµÉµngDeclareFactory({\n    minVersion: \"12.0.0\",\n    version: \"17.0.3\",\n    ngImport: i0,\n    type: ToastNoAnimationModule,\n    deps: [],\n    target: i0.ÉµÉµFactoryTarget.NgModule\n  });\n  static Éµmod = i0.ÉµÉµngDeclareNgModule({\n    minVersion: \"14.0.0\",\n    version: \"17.0.3\",\n    ngImport: i0,\n    type: ToastNoAnimationModule,\n    imports: [ToastNoAnimation],\n    exports: [ToastNoAnimation]\n  });\n  static Éµinj = i0.ÉµÉµngDeclareInjector({\n    minVersion: \"12.0.0\",\n    version: \"17.0.3\",\n    ngImport: i0,\n    type: ToastNoAnimationModule\n  });\n}\ni0.ÉµÉµngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"17.0.3\",\n  ngImport: i0,\n  type: ToastNoAnimationModule,\n  decorators: [{\n    type: NgModule,\n    args: [{\n      imports: [ToastNoAnimation],\n      exports: [ToastNoAnimation]\n    }]\n  }]\n});\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, ComponentPortal, DefaultGlobalConfig, DefaultNoAnimationsGlobalConfig, DefaultNoComponentGlobalConfig, Overlay, OverlayContainer, OverlayRef, TOAST_CONFIG, Toast, ToastContainerDirective, ToastNoAnimation, ToastNoAnimationModule, ToastPackage, ToastRef, ToastrComponentlessModule, ToastrModule, ToastrService, provideToastr };\n","import {Injectable} from '@angular/core';\nimport {ToastrService} from 'ngx-toastr';\n\n\n@Injectable()\nexport class NotificationService {\n  constructor(private toastrService: ToastrService) {\n    toastrService.toastrConfig.closeButton = true; // displayedElements close button\n    toastrService.toastrConfig.timeOut = 5000; // time to live\n    toastrService.toastrConfig.preventDuplicates = true;\n    toastrService.toastrConfig.progressBar = true;\n    toastrService.toastrConfig.tapToDismiss = false;\n    toastrService.toastrConfig.enableHtml = true;\n  }\n\n  private addSuccessNotification(successNotification: string): void {\n    this.toastrService.success(successNotification);\n  }\n\n  private addErrorNotification(errorNotification: string): void {\n    this.toastrService.error(errorNotification, 'Something went wrong :(');\n  }\n\n  private addAnnouncementNotification(announcementNotification: string, options): void {\n    this.toastrService.info(announcementNotification, 'Just to let you know!', options);\n  }\n\n  private addComplexNavigatorAnnouncementNotification(announcement: string) {\n    return this.toastrService.info(announcement, null, {\n      disableTimeOut: false,\n      closeButton: true,\n      progressBar: false,\n      positionClass: 'toast-right-under-header'\n    });\n  }\n\n  private addHintNotification(hintNotification: string): void {\n    this.toastrService.warning(hintNotification, 'Just to let you know!');\n  }\n\n  public onAPIRequestError(resource: string): void {\n    this.addErrorNotification('We couldn\\'t reach the ' + resource + ' webservice. ' +\n      'Please try again later or contact us if issue persists!');\n  }\n\n  public onAddedComplexToBasket(id: string) {\n    this.addSuccessNotification('Added ' + id + ' to your basket!');\n  }\n\n  public onRemovedComplexFromBasket(id: string) {\n    this.addSuccessNotification('Removed ' + id + ' from your basket!');\n  }\n\n  public onFeatureNotAvailableYet() {\n    this.addHintNotification('This feature is not available yet. But it is coming soon! :-)');\n  }\n\n  public complexNavigatorAnnouncement() {\n    return this.addComplexNavigatorAnnouncementNotification(\n      'Try out our new display: \\n ' +\n      'the Complex Navigator!');\n  }\n\n  public closeAnnouncement(toastId: number): void {\n    this.toastrService.clear(toastId);\n  }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class LocalStorageService {\n\n  public static saveInLocalStorage(key: string, value: any): void {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  public static getLocalStorage(key: string) {\n    return JSON.parse(localStorage.getItem(key));\n  }\n}\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {BasketItem} from '../model/basketItem';\nimport {Element} from '../../../complex/shared/model/complex-results/element.model';\nimport {NotificationService} from '../../notification/service/notification.service';\nimport {AnalyticsService} from '../../google-analytics/service/analytics.service';\nimport {LocalStorageService} from '../../local-storage/service/local-storage.service';\nimport {ComplexDetails} from '../../../complex/shared/model/complex-details/complex-details.model';\nimport {SpeciesPipe} from '../../../complex/shared/pipe/species.pipe';\n\nconst COMPLEX_STORE = 'cp_complex_store';\n\n@Injectable()\nexport class BasketService {\n  private _complexBasket: { [name: string]: BasketItem } = {};\n  public onBasketCountChanged$: EventEmitter<number>;\n\n  constructor(\n    private notificationService: NotificationService,\n    private googleAnalyticsService: AnalyticsService,\n    private species: SpeciesPipe\n  ) {\n    this.onBasketCountChanged$ = new EventEmitter<number>();\n    this.initialiseBasket();\n  }\n\n  private initialiseBasket() {\n    const complexStore = LocalStorageService.getLocalStorage(COMPLEX_STORE);\n    if (!complexStore) {\n      LocalStorageService.saveInLocalStorage(COMPLEX_STORE, this._complexBasket);\n      this.initialiseBasket();\n    } else {\n      const keys = Object.keys(complexStore);\n      for (let i = 0; i < keys.length; i++) {\n        const complex = complexStore[keys[i]];\n        if (complex) {\n          this._complexBasket[keys[i]] = complex;\n        }\n      }\n    }\n  }\n\n  private isElement(complex: Element | ComplexDetails): complex is Element {\n    return (complex as Element).complexAC !== undefined;\n  }\n\n  public saveInBasket(complex: Element | ComplexDetails): void {\n    const item: BasketItem = this.isElement(complex) ? {\n      id: complex.complexAC,\n      name: complex.complexName,\n      organism: complex.organismName,\n      predicted: complex.predictedComplex,\n      date: new Date()\n    } : {\n      id: complex.complexAc,\n      name: complex.name,\n      organism: complex.species,\n      predicted: complex.predictedComplex,\n      date: new Date(),\n    };\n\n    item.organism = this.species.transform(item.organism, false);\n\n    if (!this.isInBasket(item.id)) {\n      this._complexBasket[item.id] = item;\n      LocalStorageService.saveInLocalStorage(COMPLEX_STORE, this._complexBasket);\n      this.onBasketCountChanged$.emit(this.getBasketCount());\n\n      this.googleAnalyticsService.fireAddToBasketEvent(item.id);\n      this.notificationService.onAddedComplexToBasket(item.id);\n    }\n  }\n\n  public deleteFromBasket(id: string): void {\n    delete this._complexBasket[id];\n    LocalStorageService.saveInLocalStorage(COMPLEX_STORE, this._complexBasket);\n    this.onBasketCountChanged$.emit(this.getBasketCount());\n\n    this.googleAnalyticsService.fireRemoveFromBasketEvent(id);\n    this.notificationService.onRemovedComplexFromBasket(id);\n  }\n\n  public isInBasket(id: string): boolean {\n    return !!this._complexBasket[id];\n  }\n\n  get complexBasket() {\n    return this._complexBasket;\n  }\n\n  public getBasketCount(): number {\n    return Object.keys(this._complexBasket).length;\n  }\n}\n"],"mappings":"iaAkBA,IAAIA,GACH,SAAUA,EAAuB,CAKhCA,EAAsBA,EAAsB,MAAW,CAAC,EAAI,QAK5DA,EAAsBA,EAAsB,WAAgB,CAAC,EAAI,aAKjEA,EAAsBA,EAAsB,SAAc,CAAC,EAAI,WAK/DA,EAAsBA,EAAsB,MAAW,CAAC,EAAI,QAK5DA,EAAsBA,EAAsB,QAAa,CAAC,EAAI,UAK9DA,EAAsBA,EAAsB,UAAe,CAAC,EAAI,YAKhEA,EAAsBA,EAAsB,MAAW,CAAC,EAAI,QAK5DA,EAAsBA,EAAsB,QAAa,CAAC,EAAI,UAK9DA,EAAsBA,EAAsB,UAAe,CAAC,EAAI,YAKhEA,EAAsBA,EAAsB,aAAkB,CAAC,EAAI,eAKnEA,EAAsBA,EAAsB,WAAgB,EAAE,EAAI,aAKlEA,EAAsBA,EAAsB,MAAW,EAAE,EAAI,QAK7DA,EAAsBA,EAAsB,QAAa,EAAE,EAAI,SACjE,GAAGA,IAA0BA,EAAwB,CAAC,EAAE,EAMxD,IAAMC,GAAa,IAqJnB,SAASC,GAAQC,EAAMC,EAAa,CAClC,MAAO,CACL,KAAMJ,EAAsB,QAC5B,KAAAG,EACA,YAAAC,EACA,QAAS,CAAC,CACZ,CACF,CA2DA,SAASC,EAAQC,EAASC,EAAS,KAAM,CACvC,MAAO,CACL,KAAMP,EAAsB,QAC5B,OAAAO,EACA,QAAAD,CACF,CACF,CA0EA,SAASE,GAASC,EAAOC,EAAU,KAAM,CACvC,MAAO,CACL,KAAMC,EAAsB,SAC5B,MAAAF,EACA,QAAAC,CACF,CACF,CAwCA,SAASE,EAAMC,EAAQ,CACrB,MAAO,CACL,KAAMF,EAAsB,MAC5B,OAAQE,EACR,OAAQ,IACV,CACF,CA8BA,SAASC,EAAMC,EAAMC,EAAQN,EAAS,CACpC,MAAO,CACL,KAAMC,EAAsB,MAC5B,KAAAI,EACA,OAAAC,EACA,QAAAN,CACF,CACF,CAsMA,SAASO,EAAWC,EAAiBC,EAAOC,EAAU,KAAM,CAC1D,MAAO,CACL,KAAMC,EAAsB,WAC5B,KAAMH,EACN,UAAWC,EACX,QAAAC,CACF,CACF,CAqWA,IAAME,EAAN,MAAMA,CAAiB,CAqBvB,EAnBIA,EAAK,UAAUC,EAAmB,CAChC,WAAY,SACZ,QAAS,SACT,SAAUC,EACV,KAAMF,EACN,KAAM,CAAC,EACP,OAAWG,EAAgB,UAC7B,CAAC,EAGDH,EAAK,WAAWI,EAAsB,CACpC,WAAY,SACZ,QAAS,SACT,SAAUF,EACV,KAAMF,EACN,WAAY,OACZ,WAAY,IAAMK,EAAOC,CAAuB,CAClD,CAAC,EAnBL,IAAMC,GAANP,EAsBGQ,EAAyB,CAC1B,WAAY,SACZ,QAAS,SACT,SAAUN,EACV,KAAMK,GACN,WAAY,CAAC,CACX,KAAME,EACN,KAAM,CAAC,CACL,WAAY,OACZ,WAAY,IAAMJ,EAAOC,CAAuB,CAClD,CAAC,CACH,CAAC,CACH,CAAC,EAQD,IAAMI,GAAN,KAAuB,CAAC,EAClBC,EAAN,MAAMA,UAAgCJ,EAAiB,CACrD,YAAYK,EAAcC,EAAK,CAC7B,MAAM,EACN,KAAK,oBAAsBR,EAAOS,GAAuB,CACvD,SAAU,EACZ,CAAC,EACD,KAAK,iBAAmB,EACxB,IAAMC,EAAW,CACf,GAAI,IACJ,cAAeC,GAAkB,KACjC,OAAQ,CAAC,EACT,KAAM,CACJ,UAAW,CAAC,CACd,CACF,EAEA,GADA,KAAK,UAAYJ,EAAa,eAAeC,EAAI,KAAME,CAAQ,EAC3D,KAAK,sBAAwB,MAAQ,CAACE,GAAoB,KAAK,SAAS,EAE1E,MAAM,IAAIC,GAAc,KAAwH,EAA+P,CAEnZ,CACA,MAAMC,EAAW,CACf,IAAMC,EAAK,KAAK,iBAChB,KAAK,mBACL,IAAMC,EAAQ,MAAM,QAAQF,CAAS,EAAIG,GAASH,CAAS,EAAIA,EAC/D,OAAAI,GAAsB,KAAK,UAAW,KAAMH,EAAI,WAAY,CAACC,CAAK,CAAC,EAC5D,IAAIG,GAAwBJ,EAAI,KAAK,SAAS,CACvD,CAwBF,EAtBIT,EAAK,UAAUV,EAAmB,CAChC,WAAY,SACZ,QAAS,SACT,SAAUC,EACV,KAAMS,EACN,KAAM,CAAC,CACL,MAAUc,EACZ,EAAG,CACD,MAAOC,CACT,CAAC,EACD,OAAWvB,EAAgB,UAC7B,CAAC,EAGDQ,EAAK,WAAWP,EAAsB,CACpC,WAAY,SACZ,QAAS,SACT,SAAUF,EACV,KAAMS,EACN,WAAY,MACd,CAAC,EAjDL,IAAML,EAANK,EAoDGH,EAAyB,CAC1B,WAAY,SACZ,QAAS,SACT,SAAUN,EACV,KAAMI,EACN,WAAY,CAAC,CACX,KAAMG,EACN,KAAM,CAAC,CACL,WAAY,MACd,CAAC,CACH,CAAC,EACD,eAAgB,IAAM,CAAC,CACrB,KAASgB,EACX,EAAG,CACD,KAAM,SACN,WAAY,CAAC,CACX,KAAME,EACN,KAAM,CAACD,CAAQ,CACjB,CAAC,CACH,CAAC,CACH,CAAC,EACD,IAAMF,GAAN,cAAsCd,EAAiB,CACrD,YAAYkB,EAAKC,EAAW,CAC1B,MAAM,EACN,KAAK,IAAMD,EACX,KAAK,UAAYC,CACnB,CACA,OAAOC,EAASC,EAAS,CACvB,OAAO,IAAIC,GAAwB,KAAK,IAAKF,EAASC,GAAW,CAAC,EAAG,KAAK,SAAS,CACrF,CACF,EACMC,GAAN,KAA8B,CAC5B,YAAYZ,EAAIU,EAASC,EAASF,EAAW,CAC3C,KAAK,GAAKT,EACV,KAAK,QAAUU,EACf,KAAK,UAAYD,EACjB,KAAK,aAAe,KACpB,KAAK,SAAW,GAChB,KAAK,UAAY,EACjB,KAAK,SAAS,SAAUE,CAAO,CACjC,CACA,QAAQE,EAAWC,EAAU,CAC3B,OAAO,KAAK,UAAU,OAAO,KAAK,QAAS,KAAK,KAAK,EAAE,IAAID,CAAS,GAAIC,CAAQ,CAClF,CACA,SAASC,KAAYC,EAAM,CACzBb,GAAsB,KAAK,UAAW,KAAK,QAAS,KAAK,GAAIY,EAASC,CAAI,CAC5E,CACA,OAAOC,EAAI,CACT,KAAK,QAAQ,OAAQA,CAAE,CACzB,CACA,QAAQA,EAAI,CACV,KAAK,QAAQ,QAASA,CAAE,CAC1B,CACA,UAAUA,EAAI,CACZ,KAAK,QAAQ,UAAWA,CAAE,CAC5B,CACA,MAAO,CACL,KAAK,SAAS,MAAM,CACtB,CACA,YAAa,CACX,OAAO,KAAK,QACd,CACA,MAAO,CACL,KAAK,SAAS,MAAM,EACpB,KAAK,SAAW,EAClB,CACA,OAAQ,CACN,KAAK,SAAS,OAAO,CACvB,CACA,SAAU,CACR,KAAK,SAAS,SAAS,CACzB,CACA,QAAS,CACP,KAAK,SAAS,QAAQ,CACxB,CACA,SAAU,CACR,KAAK,SAAS,SAAS,CACzB,CACA,OAAQ,CACN,KAAK,SAAS,OAAO,EACrB,KAAK,SAAW,EAClB,CACA,YAAYC,EAAG,CACb,KAAK,SAAS,cAAeA,CAAC,CAChC,CACA,aAAc,CACZ,OAAOC,GAAwB,KAAK,SAAS,GAAG,QAAQ,QAAQ,KAAK,EAAE,GAAG,YAAY,GAAK,CAC7F,CACF,EACA,SAAShB,GAAsBiB,EAAUV,EAASV,EAAIe,EAASC,EAAM,CACnEI,EAAS,YAAYV,EAAS,KAAKV,CAAE,IAAIe,CAAO,GAAIC,CAAI,CAC1D,CAKA,SAASG,GAAwBC,EAAU,CACzC,IAAMC,EAAOD,EAAS,WACtB,OAAIC,IAAS,EACJD,EACEC,IAAS,EACXD,EAAS,kBAEX,IACT,CACA,SAASvB,GAAoBuB,EAAU,CACrC,IAAMC,EAAOD,EAAS,WACtB,OAAOC,IAAS,GAAyCA,IAAS,CACpE,CAYA,IAAMC,GAAN,KAA0B,CACxB,YAAYC,EAAW,EAAGC,EAAQ,EAAG,CACnC,KAAK,WAAa,CAAC,EACnB,KAAK,YAAc,CAAC,EACpB,KAAK,cAAgB,CAAC,EACtB,KAAK,mBAAqB,CAAC,EAC3B,KAAK,oBAAsB,CAAC,EAC5B,KAAK,SAAW,GAChB,KAAK,WAAa,GAClB,KAAK,UAAY,GACjB,KAAK,UAAY,EACjB,KAAK,aAAe,KACpB,KAAK,UAAYD,EAAWC,CAC9B,CACA,WAAY,CACL,KAAK,YACR,KAAK,UAAY,GACjB,KAAK,WAAW,QAAQP,GAAMA,EAAG,CAAC,EAClC,KAAK,WAAa,CAAC,EAEvB,CACA,QAAQA,EAAI,CACV,KAAK,oBAAoB,KAAKA,CAAE,EAChC,KAAK,YAAY,KAAKA,CAAE,CAC1B,CACA,OAAOA,EAAI,CACT,KAAK,mBAAmB,KAAKA,CAAE,EAC/B,KAAK,WAAW,KAAKA,CAAE,CACzB,CACA,UAAUA,EAAI,CACZ,KAAK,cAAc,KAAKA,CAAE,CAC5B,CACA,YAAa,CACX,OAAO,KAAK,QACd,CACA,MAAO,CAAC,CACR,MAAO,CACA,KAAK,WAAW,IACnB,KAAK,SAAS,EACd,KAAK,iBAAiB,GAExB,KAAK,SAAW,EAClB,CAEA,kBAAmB,CACjB,eAAe,IAAM,KAAK,UAAU,CAAC,CACvC,CACA,UAAW,CACT,KAAK,YAAY,QAAQA,GAAMA,EAAG,CAAC,EACnC,KAAK,YAAc,CAAC,CACtB,CACA,OAAQ,CAAC,CACT,SAAU,CAAC,CACX,QAAS,CACP,KAAK,UAAU,CACjB,CACA,SAAU,CACH,KAAK,aACR,KAAK,WAAa,GACb,KAAK,WAAW,GACnB,KAAK,SAAS,EAEhB,KAAK,OAAO,EACZ,KAAK,cAAc,QAAQA,GAAMA,EAAG,CAAC,EACrC,KAAK,cAAgB,CAAC,EAE1B,CACA,OAAQ,CACN,KAAK,SAAW,GAChB,KAAK,UAAY,GACjB,KAAK,YAAc,KAAK,oBACxB,KAAK,WAAa,KAAK,kBACzB,CACA,YAAYQ,EAAU,CACpB,KAAK,UAAY,KAAK,UAAYA,EAAW,KAAK,UAAY,CAChE,CACA,aAAc,CACZ,OAAO,KAAK,UAAY,KAAK,UAAY,KAAK,UAAY,CAC5D,CAEA,gBAAgBC,EAAW,CACzB,IAAMC,EAAUD,GAAa,QAAU,KAAK,YAAc,KAAK,WAC/DC,EAAQ,QAAQV,GAAMA,EAAG,CAAC,EAC1BU,EAAQ,OAAS,CACnB,CACF,EAUMC,GAAN,KAA2B,CACzB,YAAYC,EAAU,CACpB,KAAK,WAAa,CAAC,EACnB,KAAK,YAAc,CAAC,EACpB,KAAK,UAAY,GACjB,KAAK,SAAW,GAChB,KAAK,WAAa,GAClB,KAAK,cAAgB,CAAC,EACtB,KAAK,aAAe,KACpB,KAAK,UAAY,EACjB,KAAK,QAAUA,EACf,IAAIC,EAAY,EACZC,EAAe,EACfC,EAAa,EACXC,EAAQ,KAAK,QAAQ,OACvBA,GAAS,EACX,eAAe,IAAM,KAAK,UAAU,CAAC,EAErC,KAAK,QAAQ,QAAQC,GAAU,CAC7BA,EAAO,OAAO,IAAM,CACd,EAAEJ,GAAaG,GACjB,KAAK,UAAU,CAEnB,CAAC,EACDC,EAAO,UAAU,IAAM,CACjB,EAAEH,GAAgBE,GACpB,KAAK,WAAW,CAEpB,CAAC,EACDC,EAAO,QAAQ,IAAM,CACf,EAAEF,GAAcC,GAClB,KAAK,SAAS,CAElB,CAAC,CACH,CAAC,EAEH,KAAK,UAAY,KAAK,QAAQ,OAAO,CAACE,EAAMD,IAAW,KAAK,IAAIC,EAAMD,EAAO,SAAS,EAAG,CAAC,CAC5F,CACA,WAAY,CACL,KAAK,YACR,KAAK,UAAY,GACjB,KAAK,WAAW,QAAQjB,GAAMA,EAAG,CAAC,EAClC,KAAK,WAAa,CAAC,EAEvB,CACA,MAAO,CACL,KAAK,QAAQ,QAAQiB,GAAUA,EAAO,KAAK,CAAC,CAC9C,CACA,QAAQjB,EAAI,CACV,KAAK,YAAY,KAAKA,CAAE,CAC1B,CACA,UAAW,CACJ,KAAK,WAAW,IACnB,KAAK,SAAW,GAChB,KAAK,YAAY,QAAQA,GAAMA,EAAG,CAAC,EACnC,KAAK,YAAc,CAAC,EAExB,CACA,OAAOA,EAAI,CACT,KAAK,WAAW,KAAKA,CAAE,CACzB,CACA,UAAUA,EAAI,CACZ,KAAK,cAAc,KAAKA,CAAE,CAC5B,CACA,YAAa,CACX,OAAO,KAAK,QACd,CACA,MAAO,CACA,KAAK,cACR,KAAK,KAAK,EAEZ,KAAK,SAAS,EACd,KAAK,QAAQ,QAAQiB,GAAUA,EAAO,KAAK,CAAC,CAC9C,CACA,OAAQ,CACN,KAAK,QAAQ,QAAQA,GAAUA,EAAO,MAAM,CAAC,CAC/C,CACA,SAAU,CACR,KAAK,QAAQ,QAAQA,GAAUA,EAAO,QAAQ,CAAC,CACjD,CACA,QAAS,CACP,KAAK,UAAU,EACf,KAAK,QAAQ,QAAQA,GAAUA,EAAO,OAAO,CAAC,CAChD,CACA,SAAU,CACR,KAAK,WAAW,CAClB,CACA,YAAa,CACN,KAAK,aACR,KAAK,WAAa,GAClB,KAAK,UAAU,EACf,KAAK,QAAQ,QAAQA,GAAUA,EAAO,QAAQ,CAAC,EAC/C,KAAK,cAAc,QAAQjB,GAAMA,EAAG,CAAC,EACrC,KAAK,cAAgB,CAAC,EAE1B,CACA,OAAQ,CACN,KAAK,QAAQ,QAAQiB,GAAUA,EAAO,MAAM,CAAC,EAC7C,KAAK,WAAa,GAClB,KAAK,UAAY,GACjB,KAAK,SAAW,EAClB,CACA,YAAYhB,EAAG,CACb,IAAMkB,EAAiBlB,EAAI,KAAK,UAChC,KAAK,QAAQ,QAAQgB,GAAU,CAC7B,IAAMT,EAAWS,EAAO,UAAY,KAAK,IAAI,EAAGE,EAAiBF,EAAO,SAAS,EAAI,EACrFA,EAAO,YAAYT,CAAQ,CAC7B,CAAC,CACH,CACA,aAAc,CACZ,IAAMY,EAAgB,KAAK,QAAQ,OAAO,CAACC,EAAcJ,IAC5BI,IAAiB,MAAQJ,EAAO,UAAYI,EAAa,UACxDJ,EAASI,EACpC,IAAI,EACP,OAAOD,GAAiB,KAAOA,EAAc,YAAY,EAAI,CAC/D,CACA,eAAgB,CACd,KAAK,QAAQ,QAAQH,GAAU,CACzBA,EAAO,eACTA,EAAO,cAAc,CAEzB,CAAC,CACH,CAEA,gBAAgBR,EAAW,CACzB,IAAMC,EAAUD,GAAa,QAAU,KAAK,YAAc,KAAK,WAC/DC,EAAQ,QAAQV,GAAMA,EAAG,CAAC,EAC1BU,EAAQ,OAAS,CACnB,CACF,EACMY,GAAa,IC/7CnB,IAAMC,EAAN,MAAMA,CAAwB,CAE5B,YAAYC,EAAI,CADhBC,EAAA,WAEE,KAAK,GAAKD,CACZ,CACA,qBAAsB,CACpB,OAAO,KAAK,GAAG,aACjB,CAoBF,EAnBEC,EARIF,EAQG,YAAUG,EAAmB,CAClC,WAAY,SACZ,QAAS,SACT,SAAUC,EACV,KAAMJ,EACN,KAAM,CAAC,CACL,MAAUK,EACZ,CAAC,EACD,OAAWC,EAAgB,SAC7B,CAAC,GACDJ,EAlBIF,EAkBG,YAAUO,GAAqB,CACpC,WAAY,SACZ,QAAS,SACT,KAAMP,EACN,aAAc,GACd,SAAU,mBACV,SAAU,CAAC,gBAAgB,EAC3B,SAAUI,CACZ,CAAC,GA1BH,IAAMI,GAANR,EA4BGS,EAAyB,CAC1B,WAAY,SACZ,QAAS,SACT,SAAUL,EACV,KAAMI,GACN,WAAY,CAAC,CACX,KAAME,GACN,KAAM,CAAC,CACL,SAAU,mBACV,SAAU,iBACV,WAAY,EACd,CAAC,CACH,CAAC,EACD,eAAgB,IAAM,CAAC,CACrB,KAASL,EACX,CAAC,CACH,CAAC,EAKD,IAAMM,GAAN,KAAsB,CAYpB,YAAYC,EAAWC,EAAU,CAXjCX,EAAA,sBAEAA,EAAA,kBAMAA,EAAA,yBAEAA,EAAA,iBAEE,KAAK,UAAYU,EACjB,KAAK,SAAWC,CAClB,CAEA,OAAOC,EAAMC,EAAa,CACxB,YAAK,cAAgBD,EACdA,EAAK,OAAO,KAAMC,CAAW,CACtC,CAEA,QAAS,CACP,IAAMD,EAAO,KAAK,cAClB,GAAIA,EACF,YAAK,cAAgB,OACdA,EAAK,OAAO,CAEvB,CAEA,IAAI,YAAa,CACf,OAAO,KAAK,eAAiB,IAC/B,CAKA,gBAAgBA,EAAM,CACpB,KAAK,cAAgBA,CACvB,CACF,EAKME,GAAN,KAAqB,CAArB,cAEEd,EAAA,wBAEAA,EAAA,mBACA,OAAOe,EAAQF,EAAa,CAC1B,YAAK,gBAAkBE,EAChB,KAAK,sBAAsBA,EAAQF,CAAW,CACvD,CACA,QAAS,CACH,KAAK,iBACP,KAAK,gBAAgB,gBAAgB,EAEvC,KAAK,gBAAkB,OACnB,KAAK,aACP,KAAK,WAAW,EAChB,KAAK,WAAa,OAEtB,CACA,aAAaG,EAAI,CACf,KAAK,WAAaA,CACpB,CACF,EAKMC,GAAN,KAAe,CAgBb,YAAYC,EAAa,CAfzBlB,EAAA,oBAEAA,EAAA,0BAEAA,EAAA,uBAAkB,GAElBA,EAAA,oBAAe,IAAImB,GAEnBnB,EAAA,iBAAY,IAAImB,GAEhBnB,EAAA,oBAAe,IAAImB,GAEnBnB,EAAA,qBAAgB,IAAImB,GAEpBnB,EAAA,uBAAkB,IAAImB,GAEpB,KAAK,YAAcD,CACrB,CACA,aAAc,CACZ,KAAK,aAAa,KAAK,EACvB,KAAK,aAAa,SAAS,CAC7B,CACA,cAAe,CACb,OAAO,KAAK,aAAa,aAAa,CACxC,CACA,cAAe,CACb,OAAO,KAAK,cAAc,aAAa,CACzC,CACA,gBAAiB,CACf,OAAO,KAAK,gBAAgB,aAAa,CAC3C,CAIA,OAAQ,CACN,KAAK,YAAY,OAAO,EACxB,KAAK,aAAa,KAAK,EACvB,KAAK,aAAa,KAAK,EACvB,KAAK,aAAa,SAAS,EAC3B,KAAK,aAAa,SAAS,EAC3B,KAAK,UAAU,SAAS,EACxB,KAAK,cAAc,SAAS,EAC5B,KAAK,gBAAgB,SAAS,CAChC,CAEA,aAAc,CACZ,OAAO,KAAK,aAAa,aAAa,CACxC,CACA,YAAa,CACX,OAAO,KAAK,UAAU,SACxB,CACA,UAAW,CACT,KAAK,UAAU,KAAK,EACpB,KAAK,UAAU,SAAS,CAC1B,CAEA,eAAgB,CACd,OAAO,KAAK,UAAU,aAAa,CACrC,CAEA,YAAYE,EAAcC,EAAgB,CACpCD,GACF,KAAK,cAAc,KAAK,EAEtBC,GACF,KAAK,gBAAgB,KAAK,EAAE,KAAK,eAAe,CAEpD,CACF,EAKMC,EAAN,KAAmB,CASjB,YAAYC,EAASC,EAAQC,EAASC,EAAOC,EAAWC,EAAU,CARlE5B,EAAA,gBACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,cAAS,IAAImB,GACbnB,EAAA,iBAAY,IAAImB,GAEd,KAAK,QAAUI,EACf,KAAK,OAASC,EACd,KAAK,QAAUC,EACf,KAAK,MAAQC,EACb,KAAK,UAAYC,EACjB,KAAK,SAAWC,EAChB,KAAK,SAAS,YAAY,EAAE,UAAU,IAAM,CAC1C,KAAK,UAAU,SAAS,EACxB,KAAK,OAAO,SAAS,CACvB,CAAC,CACH,CAEA,YAAa,CACX,KAAK,OAAO,KAAK,EACb,KAAK,OAAO,cACd,KAAK,OAAO,SAAS,CAEzB,CACA,OAAQ,CACN,OAAO,KAAK,OAAO,aAAa,CAClC,CAEA,cAAcC,EAAQ,CACpB,KAAK,UAAU,KAAKA,CAAM,CAC5B,CACA,UAAW,CACT,OAAO,KAAK,UAAU,aAAa,CACrC,CACF,EACMC,GAAiC,CACrC,UAAW,EACX,YAAa,GACb,YAAa,GACb,kBAAmB,GACnB,gBAAiB,GACjB,wBAAyB,GACzB,uBAAwB,GACxB,YAAa,CACX,MAAO,cACP,KAAM,aACN,QAAS,gBACT,QAAS,eACX,EAEA,YAAa,GACb,eAAgB,GAChB,QAAS,IACT,gBAAiB,IACjB,WAAY,GACZ,YAAa,GACb,WAAY,aACZ,cAAe,kBACf,WAAY,cACZ,aAAc,gBACd,OAAQ,UACR,SAAU,IACV,aAAc,GACd,eAAgB,GAChB,kBAAmB,YACrB,EACMC,EAAe,IAAIC,GAAe,aAAa,EAQ/CC,GAAN,cAA4BnB,EAAe,CAIzC,YAAYoB,EAAiBC,EAA2BC,EAAS,CAC/D,MAAM,EAJRpC,EAAA,wBACAA,EAAA,kCACAA,EAAA,gBAGE,KAAK,gBAAkBkC,EACvB,KAAK,0BAA4BC,EACjC,KAAK,QAAUC,CACjB,CAKA,sBAAsBrB,EAAQF,EAAa,CACzC,IAAMwB,EAAmB,KAAK,0BAA0B,wBAAwBtB,EAAO,SAAS,EAC5FuB,EAMJ,OAAAA,EAAeD,EAAiB,OAAOtB,EAAO,QAAQ,EAKtD,KAAK,QAAQ,WAAWuB,EAAa,QAAQ,EAC7C,KAAK,aAAa,IAAM,CACtB,KAAK,QAAQ,WAAWA,EAAa,QAAQ,EAC7CA,EAAa,QAAQ,CACvB,CAAC,EAGGzB,EACF,KAAK,gBAAgB,aAAa,KAAK,sBAAsByB,CAAY,EAAG,KAAK,gBAAgB,UAAU,EAE3G,KAAK,gBAAgB,YAAY,KAAK,sBAAsBA,CAAY,CAAC,EAEpEA,CACT,CAEA,sBAAsBA,EAAc,CAClC,OAAOA,EAAa,SAAS,UAAU,CAAC,CAC1C,CACF,EAGMC,EAAN,MAAMA,CAAiB,CAAvB,cACEvC,EAAA,iBAAYwC,EAAOC,CAAQ,GAC3BzC,EAAA,0BACA,aAAc,CACR,KAAK,mBAAqB,KAAK,kBAAkB,YACnD,KAAK,kBAAkB,WAAW,YAAY,KAAK,iBAAiB,CAExE,CAOA,qBAAsB,CACpB,OAAK,KAAK,mBACR,KAAK,iBAAiB,EAEjB,KAAK,iBACd,CAMA,kBAAmB,CACjB,IAAM0C,EAAY,KAAK,UAAU,cAAc,KAAK,EACpDA,EAAU,UAAU,IAAI,mBAAmB,EAC3CA,EAAU,aAAa,YAAa,QAAQ,EAC5C,KAAK,UAAU,KAAK,YAAYA,CAAS,EACzC,KAAK,kBAAoBA,CAC3B,CAgBF,EAfE1C,EAhCIuC,EAgCG,YAAUtC,EAAmB,CAClC,WAAY,SACZ,QAAS,SACT,SAAUC,EACV,KAAMqC,EACN,KAAM,CAAC,EACP,OAAWnC,EAAgB,UAC7B,CAAC,GACDJ,EAxCIuC,EAwCG,aAAWI,EAAsB,CACtC,WAAY,SACZ,QAAS,SACT,SAAUzC,EACV,KAAMqC,EACN,WAAY,MACd,CAAC,GA9CH,IAAMK,GAANL,EAgDGhC,EAAyB,CAC1B,WAAY,SACZ,QAAS,SACT,SAAUL,EACV,KAAM0C,GACN,WAAY,CAAC,CACX,KAAMC,EACN,KAAM,CAAC,CACL,WAAY,MACd,CAAC,CACH,CAAC,CACH,CAAC,EAMD,IAAMC,GAAN,KAAiB,CAEf,YAAYC,EAAa,CADzB/C,EAAA,oBAEE,KAAK,YAAc+C,CACrB,CACA,OAAOhC,EAAQF,EAAc,GAAM,CACjC,OAAO,KAAK,YAAY,OAAOE,EAAQF,CAAW,CACpD,CAKA,QAAS,CACP,OAAO,KAAK,YAAY,OAAO,CACjC,CACF,EAUMmC,EAAN,MAAMA,CAAQ,CAAd,cACEhD,EAAA,yBAAoBwC,EAAOI,EAAgB,GAC3C5C,EAAA,iCAA4BwC,EAAOS,EAAwB,GAC3DjD,EAAA,eAAUwC,EAAOU,CAAc,GAC/BlD,EAAA,iBAAYwC,EAAOC,CAAQ,GAE3BzC,EAAA,qBAAgB,IAAI,KAKpB,OAAOmD,EAAeC,EAAkB,CAEtC,OAAO,KAAK,kBAAkB,KAAK,eAAeD,EAAeC,CAAgB,CAAC,CACpF,CACA,eAAeD,EAAgB,GAAIC,EAAkB,CACnD,OAAK,KAAK,cAAc,IAAIA,CAAgB,GAC1C,KAAK,cAAc,IAAIA,EAAkB,CAAC,CAAC,EAExC,KAAK,cAAc,IAAIA,CAAgB,EAAED,CAAa,IACzD,KAAK,cAAc,IAAIC,CAAgB,EAAED,CAAa,EAAI,KAAK,mBAAmBA,EAAeC,CAAgB,GAE5G,KAAK,cAAc,IAAIA,CAAgB,EAAED,CAAa,CAC/D,CAKA,mBAAmBA,EAAeC,EAAkB,CAClD,IAAMC,EAAO,KAAK,UAAU,cAAc,KAAK,EAC/C,OAAAA,EAAK,GAAK,kBACVA,EAAK,UAAU,IAAIF,CAAa,EAChCE,EAAK,UAAU,IAAI,iBAAiB,EAC/BD,EAGHA,EAAiB,oBAAoB,EAAE,YAAYC,CAAI,EAFvD,KAAK,kBAAkB,oBAAoB,EAAE,YAAYA,CAAI,EAIxDA,CACT,CAMA,kBAAkBA,EAAM,CACtB,OAAO,IAAIpB,GAAcoB,EAAM,KAAK,0BAA2B,KAAK,OAAO,CAC7E,CAKA,kBAAkBA,EAAM,CACtB,OAAO,IAAIP,GAAW,KAAK,kBAAkBO,CAAI,CAAC,CACpD,CAgBF,EAfErD,EAvDIgD,EAuDG,YAAU/C,EAAmB,CAClC,WAAY,SACZ,QAAS,SACT,SAAUC,EACV,KAAM8C,EACN,KAAM,CAAC,EACP,OAAW5C,EAAgB,UAC7B,CAAC,GACDJ,EA/DIgD,EA+DG,aAAWL,EAAsB,CACtC,WAAY,SACZ,QAAS,SACT,SAAUzC,EACV,KAAM8C,EACN,WAAY,MACd,CAAC,GArEH,IAAMM,EAANN,EAuEGzC,EAAyB,CAC1B,WAAY,SACZ,QAAS,SACT,SAAUL,EACV,KAAMoD,EACN,WAAY,CAAC,CACX,KAAMT,EACN,KAAM,CAAC,CACL,WAAY,MACd,CAAC,CACH,CAAC,CACH,CAAC,EACD,IAAMU,EAAN,MAAMA,CAAc,CAWlB,YAAYC,EAAOC,EAASC,EAAWC,EAAWC,EAAQ,CAV1D5D,EAAA,gBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,eACAA,EAAA,qBACAA,EAAA,uBAAkB,GAClBA,EAAA,cAAS,CAAC,GACVA,EAAA,yBACAA,EAAA,6BACAA,EAAA,aAAQ,GAEN,KAAK,QAAUyD,EACf,KAAK,UAAYC,EACjB,KAAK,UAAYC,EACjB,KAAK,OAASC,EACd,KAAK,aAAeC,IAAA,GACfL,EAAM,SACNA,EAAM,QAEPA,EAAM,OAAO,cACf,KAAK,aAAa,YAAcK,IAAA,GAC3BL,EAAM,QAAQ,aACdA,EAAM,OAAO,aAGtB,CAEA,KAAK/B,EAASC,EAAOoC,EAAW,CAAC,EAAGC,EAAO,GAAI,CAC7C,OAAO,KAAK,sBAAsBA,EAAMtC,EAASC,EAAO,KAAK,YAAYoC,CAAQ,CAAC,CACpF,CAEA,QAAQrC,EAASC,EAAOoC,EAAW,CAAC,EAAG,CACrC,IAAMC,EAAO,KAAK,aAAa,YAAY,SAAW,GACtD,OAAO,KAAK,sBAAsBA,EAAMtC,EAASC,EAAO,KAAK,YAAYoC,CAAQ,CAAC,CACpF,CAEA,MAAMrC,EAASC,EAAOoC,EAAW,CAAC,EAAG,CACnC,IAAMC,EAAO,KAAK,aAAa,YAAY,OAAS,GACpD,OAAO,KAAK,sBAAsBA,EAAMtC,EAASC,EAAO,KAAK,YAAYoC,CAAQ,CAAC,CACpF,CAEA,KAAKrC,EAASC,EAAOoC,EAAW,CAAC,EAAG,CAClC,IAAMC,EAAO,KAAK,aAAa,YAAY,MAAQ,GACnD,OAAO,KAAK,sBAAsBA,EAAMtC,EAASC,EAAO,KAAK,YAAYoC,CAAQ,CAAC,CACpF,CAEA,QAAQrC,EAASC,EAAOoC,EAAW,CAAC,EAAG,CACrC,IAAMC,EAAO,KAAK,aAAa,YAAY,SAAW,GACtD,OAAO,KAAK,sBAAsBA,EAAMtC,EAASC,EAAO,KAAK,YAAYoC,CAAQ,CAAC,CACpF,CAIA,MAAMvC,EAAS,CAEb,QAAWyC,KAAS,KAAK,OACvB,GAAIzC,IAAY,QACd,GAAIyC,EAAM,UAAYzC,EAAS,CAC7ByC,EAAM,SAAS,YAAY,EAC3B,MACF,OAEAA,EAAM,SAAS,YAAY,CAGjC,CAIA,OAAOzC,EAAS,CACd,IAAM0C,EAAQ,KAAK,WAAW1C,CAAO,EAOrC,GANI,CAAC0C,IAGLA,EAAM,YAAY,SAAS,MAAM,EACjC,KAAK,OAAO,OAAOA,EAAM,MAAO,CAAC,EACjC,KAAK,gBAAkB,KAAK,gBAAkB,EAC1C,CAAC,KAAK,aAAa,WAAa,CAAC,KAAK,OAAO,QAC/C,MAAO,GAET,GAAI,KAAK,gBAAkB,KAAK,aAAa,WAAa,KAAK,OAAO,KAAK,eAAe,EAAG,CAC3F,IAAMC,EAAI,KAAK,OAAO,KAAK,eAAe,EAAE,SACvCA,EAAE,WAAW,IAChB,KAAK,gBAAkB,KAAK,gBAAkB,EAC9CA,EAAE,SAAS,EAEf,CACA,MAAO,EACT,CAIA,cAAcxC,EAAQ,GAAID,EAAU,GAAI0C,EAAkBC,EAAiB,CACzE,GAAM,CACJ,uBAAAC,CACF,EAAI,KAAK,aACT,QAAWL,KAAS,KAAK,OAAQ,CAC/B,IAAMM,EAAoBD,GAA0BL,EAAM,QAAUtC,EACpE,IAAK,CAAC2C,GAA0BC,IAAsBN,EAAM,UAAYvC,EACtE,OAAAuC,EAAM,SAAS,YAAYG,EAAkBC,CAAe,EACrDJ,CAEX,CACA,OAAO,IACT,CAEA,YAAYF,EAAW,CAAC,EAAG,CACzB,OAAOD,IAAA,GACF,KAAK,cACLC,EAEP,CAIA,WAAWvC,EAAS,CAClB,QAASgD,EAAI,EAAGA,EAAI,KAAK,OAAO,OAAQA,IACtC,GAAI,KAAK,OAAOA,CAAC,EAAE,UAAYhD,EAC7B,MAAO,CACL,MAAOgD,EACP,YAAa,KAAK,OAAOA,CAAC,CAC5B,EAGJ,OAAO,IACT,CAIA,sBAAsB5C,EAAWF,EAASC,EAAOF,EAAQ,CACvD,OAAIA,EAAO,eACF,KAAK,OAAO,IAAI,IAAM,KAAK,mBAAmBG,EAAWF,EAASC,EAAOF,CAAM,CAAC,EAElF,KAAK,mBAAmBG,EAAWF,EAASC,EAAOF,CAAM,CAClE,CAKA,mBAAmBG,EAAWF,EAASC,EAAOF,EAAQ,CACpD,GAAI,CAACA,EAAO,eACV,MAAM,IAAI,MAAM,yBAAyB,EAK3C,IAAMgD,EAAY,KAAK,cAAc9C,EAAOD,EAAS,KAAK,aAAa,yBAA2BD,EAAO,QAAU,EAAG,KAAK,aAAa,eAAe,EACvJ,IAAK,KAAK,aAAa,wBAA0BE,GAASD,IAAY,KAAK,aAAa,mBAAqB+C,IAAc,KACzH,OAAOA,EAET,KAAK,qBAAuB/C,EAC5B,IAAIgD,EAAe,GACf,KAAK,aAAa,WAAa,KAAK,iBAAmB,KAAK,aAAa,YAC3EA,EAAe,GACX,KAAK,aAAa,aACpB,KAAK,MAAM,KAAK,OAAO,CAAC,EAAE,OAAO,GAGrC,IAAMC,EAAa,KAAK,QAAQ,OAAOlD,EAAO,cAAe,KAAK,gBAAgB,EAClF,KAAK,MAAQ,KAAK,MAAQ,EAC1B,IAAImD,GAAmBlD,EACnBA,GAAWD,EAAO,aACpBmD,GAAmB,KAAK,UAAU,SAASC,GAAgB,KAAMnD,CAAO,GAE1E,IAAMG,EAAW,IAAIX,GAASyD,CAAU,EAClCG,GAAe,IAAIvD,EAAa,KAAK,MAAOE,EAAQmD,GAAkBjD,EAAOC,EAAWC,CAAQ,EAEhGkD,GAAY,CAAC,CACjB,QAASxD,EACT,SAAUuD,EACZ,CAAC,EACKE,GAAgBC,EAAS,OAAO,CACpC,UAAAF,GACA,OAAQ,KAAK,SACf,CAAC,EACKpE,GAAY,IAAID,GAAgBe,EAAO,eAAgBuD,EAAa,EACpEhE,GAAS2D,EAAW,OAAOhE,GAAWc,EAAO,WAAW,EAC9DI,EAAS,kBAAoBb,GAAO,SACpC,IAAMkE,GAAM,CACV,QAAS,KAAK,MACd,MAAOvD,GAAS,GAChB,QAASD,GAAW,GACpB,SAAAG,EACA,QAASA,EAAS,cAAc,EAChC,SAAUA,EAAS,YAAY,EAC/B,MAAOiD,GAAa,MAAM,EAC1B,SAAUA,GAAa,SAAS,EAChC,OAAA9D,EACF,EACA,OAAK0D,IACH,KAAK,gBAAkB,KAAK,gBAAkB,EAC9C,WAAW,IAAM,CACfQ,GAAI,SAAS,SAAS,CACxB,CAAC,GAEH,KAAK,OAAO,KAAKA,EAAG,EACbA,EACT,CA0BF,EAzBEjF,EAvMIuD,EAuMG,YAAUtD,EAAmB,CAClC,WAAY,SACZ,QAAS,SACT,SAAUC,EACV,KAAMqD,EACN,KAAM,CAAC,CACL,MAAOxB,CACT,EAAG,CACD,MAAOuB,CACT,EAAG,CACD,MAAU0B,CACZ,EAAG,CACD,MAAUE,EACZ,EAAG,CACD,MAAUC,CACZ,CAAC,EACD,OAAW/E,EAAgB,UAC7B,CAAC,GACDJ,EAzNIuD,EAyNG,aAAWZ,EAAsB,CACtC,WAAY,SACZ,QAAS,SACT,SAAUzC,EACV,KAAMqD,EACN,WAAY,MACd,CAAC,GA/NH,IAAM6B,EAAN7B,EAiOGhD,EAAyB,CAC1B,WAAY,SACZ,QAAS,SACT,SAAUL,EACV,KAAMkF,EACN,WAAY,CAAC,CACX,KAAMvC,EACN,KAAM,CAAC,CACL,WAAY,MACd,CAAC,CACH,CAAC,EACD,eAAgB,IAAM,CAAC,CACrB,KAAM,OACN,WAAY,CAAC,CACX,KAAMwC,EACN,KAAM,CAACtD,CAAY,CACrB,CAAC,CACH,EAAG,CACD,KAAMuB,CACR,EAAG,CACD,KAAS0B,CACX,EAAG,CACD,KAASE,EACX,EAAG,CACD,KAASC,CACX,CAAC,CACH,CAAC,EACD,IAAMG,EAAN,MAAMA,CAAM,CA6BV,YAAYC,EAAeV,EAAcjB,EAAQ,CA5BjD5D,EAAA,sBACAA,EAAA,qBACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,wBACAA,EAAA,wBAEAA,EAAA,aAAQ,IAERA,EAAA,oBAAe,IAEfA,EAAA,cAQAA,EAAA,gBACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,YACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aAEE,KAAK,cAAgBuF,EACrB,KAAK,aAAeV,EACpB,KAAK,OAASjB,EACd,KAAK,QAAUiB,EAAa,QAC5B,KAAK,MAAQA,EAAa,MAC1B,KAAK,QAAUA,EAAa,OAC5B,KAAK,gBAAkBA,EAAa,OAAO,QAC3C,KAAK,aAAe,GAAGA,EAAa,SAAS,IAAIA,EAAa,OAAO,UAAU,GAC/E,KAAK,IAAMA,EAAa,SAAS,cAAc,EAAE,UAAU,IAAM,CAC/D,KAAK,cAAc,CACrB,CAAC,EACD,KAAK,KAAOA,EAAa,SAAS,aAAa,EAAE,UAAU,IAAM,CAC/D,KAAK,OAAO,CACd,CAAC,EACD,KAAK,KAAOA,EAAa,SAAS,aAAa,EAAE,UAAU,IAAM,CAC/D,KAAK,aAAa,CACpB,CAAC,EACD,KAAK,KAAOA,EAAa,SAAS,eAAe,EAAE,UAAUW,GAAS,CACpE,KAAK,gBAAkBA,CACzB,CAAC,EACD,KAAK,MAAQ,CACX,MAAO,WACP,OAAQ,CACN,SAAU,KAAK,aAAa,OAAO,SACnC,OAAQ,SACV,CACF,CACF,CAzCA,IAAI,cAAe,CACjB,GAAI,KAAK,MAAM,QAAU,WACvB,MAAO,MAGX,CAqCA,aAAc,CACZ,KAAK,IAAI,YAAY,EACrB,KAAK,KAAK,YAAY,EACtB,KAAK,KAAK,YAAY,EACtB,KAAK,KAAK,YAAY,EACtB,cAAc,KAAK,UAAU,EAC7B,aAAa,KAAK,OAAO,CAC3B,CAIA,eAAgB,CACd,KAAK,MAAQC,EAAA5B,EAAA,GACR,KAAK,OADG,CAEX,MAAO,QACT,GACI,EAAE,KAAK,QAAQ,iBAAmB,IAAQ,KAAK,QAAQ,iBAAmB,YAAc,KAAK,QAAQ,UACvG,KAAK,eAAe,IAAM,KAAK,OAAO,EAAG,KAAK,QAAQ,OAAO,EAC7D,KAAK,SAAW,IAAI,KAAK,EAAE,QAAQ,EAAI,KAAK,QAAQ,QAChD,KAAK,QAAQ,aACf,KAAK,gBAAgB,IAAM,KAAK,eAAe,EAAG,EAAE,EAG1D,CAIA,gBAAiB,CACf,GAAI,KAAK,QAAU,GAAK,KAAK,QAAU,KAAO,CAAC,KAAK,QAAQ,QAC1D,OAEF,IAAM6B,EAAM,IAAI,KAAK,EAAE,QAAQ,EACzBC,EAAY,KAAK,SAAWD,EAClC,KAAK,MAAQC,EAAY,KAAK,QAAQ,QAAU,IAC5C,KAAK,QAAQ,oBAAsB,eACrC,KAAK,MAAQ,IAAM,KAAK,OAEtB,KAAK,OAAS,IAChB,KAAK,MAAQ,GAEX,KAAK,OAAS,MAChB,KAAK,MAAQ,IAEjB,CACA,cAAe,CACb,aAAa,KAAK,OAAO,EACzB,cAAc,KAAK,UAAU,EAC7B,KAAK,MAAQF,EAAA5B,EAAA,GACR,KAAK,OADG,CAEX,MAAO,QACT,GACA,KAAK,eAAe,IAAM,KAAK,OAAO,EAAG,KAAK,eAAe,EAC7D,KAAK,QAAQ,QAAU,KAAK,gBAC5B,KAAK,SAAW,IAAI,KAAK,EAAE,QAAQ,GAAK,KAAK,QAAQ,SAAW,GAChE,KAAK,MAAQ,GACT,KAAK,QAAQ,aACf,KAAK,gBAAgB,IAAM,KAAK,eAAe,EAAG,EAAE,CAExD,CAIA,QAAS,CACH,KAAK,MAAM,QAAU,YAGzB,aAAa,KAAK,OAAO,EACzB,KAAK,MAAQ4B,EAAA5B,EAAA,GACR,KAAK,OADG,CAEX,MAAO,SACT,GACA,KAAK,eAAe,IAAM,KAAK,cAAc,OAAO,KAAK,aAAa,OAAO,EAAG,CAAC,KAAK,aAAa,OAAO,QAAQ,EACpH,CACA,UAAW,CACL,KAAK,MAAM,QAAU,YAGzB,KAAK,aAAa,WAAW,EACzB,KAAK,QAAQ,cACf,KAAK,OAAO,EAEhB,CACA,aAAc,CACR,KAAK,MAAM,QAAU,WAGrB,KAAK,QAAQ,iBAAmB,oBAClC,aAAa,KAAK,OAAO,EACzB,KAAK,QAAQ,QAAU,EACvB,KAAK,SAAW,EAEhB,cAAc,KAAK,UAAU,EAC7B,KAAK,MAAQ,EAEjB,CACA,kBAAmB,CACb,KAAK,QAAQ,iBAAmB,IAAQ,KAAK,QAAQ,iBAAmB,mBAAqB,KAAK,QAAQ,kBAAoB,GAAK,KAAK,MAAM,QAAU,YAG5J,KAAK,eAAe,IAAM,KAAK,OAAO,EAAG,KAAK,QAAQ,eAAe,EACrE,KAAK,QAAQ,QAAU,KAAK,QAAQ,gBACpC,KAAK,SAAW,IAAI,KAAK,EAAE,QAAQ,GAAK,KAAK,QAAQ,SAAW,GAChE,KAAK,MAAQ,GACT,KAAK,QAAQ,aACf,KAAK,gBAAgB,IAAM,KAAK,eAAe,EAAG,EAAE,EAExD,CACA,eAAe+B,EAAMC,EAAS,CACxB,KAAK,OACP,KAAK,OAAO,kBAAkB,IAAM,KAAK,QAAU,WAAW,IAAM,KAAK,iBAAiBD,CAAI,EAAGC,CAAO,CAAC,EAEzG,KAAK,QAAU,WAAW,IAAMD,EAAK,EAAGC,CAAO,CAEnD,CACA,gBAAgBD,EAAMC,EAAS,CACzB,KAAK,OACP,KAAK,OAAO,kBAAkB,IAAM,KAAK,WAAa,YAAY,IAAM,KAAK,iBAAiBD,CAAI,EAAGC,CAAO,CAAC,EAE7G,KAAK,WAAa,YAAY,IAAMD,EAAK,EAAGC,CAAO,CAEvD,CACA,iBAAiBD,EAAM,CACjB,KAAK,OACP,KAAK,OAAO,IAAI,IAAMA,EAAK,CAAC,EAE5BA,EAAK,CAET,CAmEF,EAlEE5F,EA1LIsF,EA0LG,YAAUrF,EAAmB,CAClC,WAAY,SACZ,QAAS,SACT,SAAUC,EACV,KAAMoF,EACN,KAAM,CAAC,CACL,MAAOF,CACT,EAAG,CACD,MAAO9D,CACT,EAAG,CACD,MAAU6D,CACZ,CAAC,EACD,OAAW/E,EAAgB,SAC7B,CAAC,GACDJ,EAxMIsF,EAwMG,YAAUQ,GAAqB,CACpC,WAAY,SACZ,QAAS,SACT,KAAMR,EACN,aAAc,GACd,SAAU,oBACV,KAAM,CACJ,UAAW,CACT,MAAS,aACT,WAAc,gBACd,WAAc,oBAChB,EACA,WAAY,CACV,MAAS,oBACT,YAAa,aACb,gBAAiB,mBACnB,CACF,EACA,SAAUpF,EACV,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAkBV,SAAU,GACV,aAAc,CAAC,CACb,KAAM,YACN,KAAM6F,EACN,SAAU,SACV,OAAQ,CAAC,OAAQ,WAAY,UAAU,CACzC,CAAC,EACD,WAAY,CAACC,GAAQ,WAAY,CAACC,EAAM,WAAYC,EAAM,CACxD,QAAS,CACX,CAAC,CAAC,EAAGD,EAAM,SAAUC,EAAM,CACzB,QAAS,CACX,CAAC,CAAC,EAAGD,EAAM,UAAWC,EAAM,CAC1B,QAAS,CACX,CAAC,CAAC,EAAGC,EAAW,qBAAsBC,EAAQ,+BAA+B,CAAC,EAAGD,EAAW,oBAAqBC,EAAQ,+BAA+B,CAAC,CAAC,CAAC,CAAC,CAC9J,CAAC,GA3PH,IAAMC,EAANf,EA6PG/E,EAAyB,CAC1B,WAAY,SACZ,QAAS,SACT,SAAUL,EACV,KAAMmG,EACN,WAAY,CAAC,CACX,KAAMC,GACN,KAAM,CAAC,CACL,SAAU,oBACV,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAkBV,WAAY,CAACN,GAAQ,WAAY,CAACC,EAAM,WAAYC,EAAM,CACxD,QAAS,CACX,CAAC,CAAC,EAAGD,EAAM,SAAUC,EAAM,CACzB,QAAS,CACX,CAAC,CAAC,EAAGD,EAAM,UAAWC,EAAM,CAC1B,QAAS,CACX,CAAC,CAAC,EAAGC,EAAW,qBAAsBC,EAAQ,+BAA+B,CAAC,EAAGD,EAAW,oBAAqBC,EAAQ,+BAA+B,CAAC,CAAC,CAAC,CAAC,EAC5J,oBAAqB,GACrB,WAAY,GACZ,QAAS,CAACL,CAAI,CAChB,CAAC,CACH,CAAC,EACD,eAAgB,IAAM,CAAC,CACrB,KAAMX,CACR,EAAG,CACD,KAAM9D,CACR,EAAG,CACD,KAAS6D,CACX,CAAC,EACD,eAAgB,CACd,aAAc,CAAC,CACb,KAAMoB,EACN,KAAM,CAAC,OAAO,CAChB,CAAC,EACD,MAAO,CAAC,CACN,KAAMA,EACN,KAAM,CAAC,WAAW,CACpB,CAAC,EACD,aAAc,CAAC,CACb,KAAMA,EACN,KAAM,CAAC,eAAe,CACxB,CAAC,EACD,SAAU,CAAC,CACT,KAAMC,EACN,KAAM,CAAC,OAAO,CAChB,CAAC,EACD,YAAa,CAAC,CACZ,KAAMA,EACN,KAAM,CAAC,YAAY,CACrB,CAAC,EACD,iBAAkB,CAAC,CACjB,KAAMA,EACN,KAAM,CAAC,YAAY,CACrB,CAAC,CACH,CACF,CAAC,EACD,IAAMC,GAAsBhB,EAAA5B,EAAA,GACvB/B,IADuB,CAE1B,eAAgBuE,CAClB,GAqBMK,GAAgB,CAAClF,EAAS,CAAC,IAQxBmF,GAPW,CAAC,CACjB,QAAS5E,EACT,SAAU,CACR,QAAS0E,GACT,OAAAjF,CACF,CACF,CAAC,CACwC,EAErCoF,EAAN,MAAMA,CAAa,CACjB,OAAO,QAAQpF,EAAS,CAAC,EAAG,CAC1B,MAAO,CACL,SAAUoF,EACV,UAAW,CAACF,GAAclF,CAAM,CAAC,CACnC,CACF,CAuBF,EAtBExB,EAPI4G,EAOG,YAAU3G,EAAmB,CAClC,WAAY,SACZ,QAAS,SACT,SAAUC,EACV,KAAM0G,EACN,KAAM,CAAC,EACP,OAAWxG,EAAgB,QAC7B,CAAC,GACDJ,EAfI4G,EAeG,YAAUC,GAAoB,CACnC,WAAY,SACZ,QAAS,SACT,SAAU3G,EACV,KAAM0G,EACN,QAAS,CAACP,CAAK,EACf,QAAS,CAACA,CAAK,CACjB,CAAC,GACDrG,EAvBI4G,EAuBG,YAAUE,EAAoB,CACnC,WAAY,SACZ,QAAS,SACT,SAAU5G,EACV,KAAM0G,CACR,CAAC,GA5BH,IAAMG,GAANH,EA8BGrG,EAAyB,CAC1B,WAAY,SACZ,QAAS,SACT,SAAUL,EACV,KAAM6G,GACN,WAAY,CAAC,CACX,KAAMC,EACN,KAAM,CAAC,CACL,QAAS,CAACX,CAAK,EACf,QAAS,CAACA,CAAK,CACjB,CAAC,CACH,CAAC,CACH,CAAC,EACD,IAAMY,EAAN,MAAMA,CAA0B,CAC9B,OAAO,QAAQzF,EAAS,CAAC,EAAG,CAC1B,MAAO,CACL,SAAUuF,GACV,UAAW,CAAC,CACV,QAAShF,EACT,SAAU,CACR,QAASD,GACT,OAAAN,CACF,CACF,CAAC,CACH,CACF,CAqBF,EApBExB,EAbIiH,EAaG,YAAUhH,EAAmB,CAClC,WAAY,SACZ,QAAS,SACT,SAAUC,EACV,KAAM+G,EACN,KAAM,CAAC,EACP,OAAW7G,EAAgB,QAC7B,CAAC,GACDJ,EArBIiH,EAqBG,YAAUJ,GAAoB,CACnC,WAAY,SACZ,QAAS,SACT,SAAU3G,EACV,KAAM+G,CACR,CAAC,GACDjH,EA3BIiH,EA2BG,YAAUH,EAAoB,CACnC,WAAY,SACZ,QAAS,SACT,SAAU5G,EACV,KAAM+G,CACR,CAAC,GAhCH,IAAMC,GAAND,EAkCG1G,EAAyB,CAC1B,WAAY,SACZ,QAAS,SACT,SAAUL,EACV,KAAMgH,GACN,WAAY,CAAC,CACX,KAAMF,EACN,KAAM,CAAC,CAAC,CAAC,CACX,CAAC,CACH,CAAC,EACD,IAAMG,EAAN,MAAMA,CAAiB,CA6BrB,YAAY5B,EAAeV,EAAcuC,EAAQ,CA5BjDpH,EAAA,sBACAA,EAAA,qBACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,wBACAA,EAAA,wBAEAA,EAAA,aAAQ,IAERA,EAAA,oBAAe,IASfA,EAAA,aAAQ,YACRA,EAAA,gBACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,YACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aAEE,KAAK,cAAgBuF,EACrB,KAAK,aAAeV,EACpB,KAAK,OAASuC,EACd,KAAK,QAAUvC,EAAa,QAC5B,KAAK,MAAQA,EAAa,MAC1B,KAAK,QAAUA,EAAa,OAC5B,KAAK,gBAAkBA,EAAa,OAAO,QAC3C,KAAK,aAAe,GAAGA,EAAa,SAAS,IAAIA,EAAa,OAAO,UAAU,GAC/E,KAAK,IAAMA,EAAa,SAAS,cAAc,EAAE,UAAU,IAAM,CAC/D,KAAK,cAAc,CACrB,CAAC,EACD,KAAK,KAAOA,EAAa,SAAS,aAAa,EAAE,UAAU,IAAM,CAC/D,KAAK,OAAO,CACd,CAAC,EACD,KAAK,KAAOA,EAAa,SAAS,aAAa,EAAE,UAAU,IAAM,CAC/D,KAAK,aAAa,CACpB,CAAC,EACD,KAAK,KAAOA,EAAa,SAAS,eAAe,EAAE,UAAUW,GAAS,CACpE,KAAK,gBAAkBA,CACzB,CAAC,CACH,CApCA,IAAI,cAAe,CACjB,OAAI,KAAK,QAAU,WACV,OAEF,IACT,CAgCA,aAAc,CACZ,KAAK,IAAI,YAAY,EACrB,KAAK,KAAK,YAAY,EACtB,KAAK,KAAK,YAAY,EACtB,KAAK,KAAK,YAAY,EACtB,cAAc,KAAK,UAAU,EAC7B,aAAa,KAAK,OAAO,CAC3B,CAIA,eAAgB,CACd,KAAK,MAAQ,SACT,EAAE,KAAK,QAAQ,iBAAmB,IAAQ,KAAK,QAAQ,iBAAmB,YAAc,KAAK,QAAQ,UACvG,KAAK,QAAU,WAAW,IAAM,CAC9B,KAAK,OAAO,CACd,EAAG,KAAK,QAAQ,OAAO,EACvB,KAAK,SAAW,IAAI,KAAK,EAAE,QAAQ,EAAI,KAAK,QAAQ,QAChD,KAAK,QAAQ,cACf,KAAK,WAAa,YAAY,IAAM,KAAK,eAAe,EAAG,EAAE,IAG7D,KAAK,QAAQ,gBACf,KAAK,OAAO,KAAK,CAErB,CAIA,gBAAiB,CACf,GAAI,KAAK,QAAU,GAAK,KAAK,QAAU,KAAO,CAAC,KAAK,QAAQ,QAC1D,OAEF,IAAME,EAAM,IAAI,KAAK,EAAE,QAAQ,EACzBC,EAAY,KAAK,SAAWD,EAClC,KAAK,MAAQC,EAAY,KAAK,QAAQ,QAAU,IAC5C,KAAK,QAAQ,oBAAsB,eACrC,KAAK,MAAQ,IAAM,KAAK,OAEtB,KAAK,OAAS,IAChB,KAAK,MAAQ,GAEX,KAAK,OAAS,MAChB,KAAK,MAAQ,IAEjB,CACA,cAAe,CACb,aAAa,KAAK,OAAO,EACzB,cAAc,KAAK,UAAU,EAC7B,KAAK,MAAQ,SACb,KAAK,QAAQ,QAAU,KAAK,gBAC5B,KAAK,QAAU,WAAW,IAAM,KAAK,OAAO,EAAG,KAAK,eAAe,EACnE,KAAK,SAAW,IAAI,KAAK,EAAE,QAAQ,GAAK,KAAK,iBAAmB,GAChE,KAAK,MAAQ,GACT,KAAK,QAAQ,cACf,KAAK,WAAa,YAAY,IAAM,KAAK,eAAe,EAAG,EAAE,EAEjE,CAIA,QAAS,CACH,KAAK,QAAU,YAGnB,aAAa,KAAK,OAAO,EACzB,KAAK,MAAQ,UACb,KAAK,QAAU,WAAW,IAAM,KAAK,cAAc,OAAO,KAAK,aAAa,OAAO,CAAC,EACtF,CACA,UAAW,CACL,KAAK,QAAU,YAGnB,KAAK,aAAa,WAAW,EACzB,KAAK,QAAQ,cACf,KAAK,OAAO,EAEhB,CACA,aAAc,CACR,KAAK,QAAU,YAGnB,aAAa,KAAK,OAAO,EACzB,KAAK,QAAQ,QAAU,EACvB,KAAK,SAAW,EAEhB,cAAc,KAAK,UAAU,EAC7B,KAAK,MAAQ,EACf,CACA,kBAAmB,CACb,KAAK,QAAQ,iBAAmB,IAAQ,KAAK,QAAQ,iBAAmB,mBAAqB,KAAK,QAAQ,kBAAoB,GAAK,KAAK,QAAU,YAGtJ,KAAK,QAAU,WAAW,IAAM,KAAK,OAAO,EAAG,KAAK,QAAQ,eAAe,EAC3E,KAAK,QAAQ,QAAU,KAAK,QAAQ,gBACpC,KAAK,SAAW,IAAI,KAAK,EAAE,QAAQ,GAAK,KAAK,QAAQ,SAAW,GAChE,KAAK,MAAQ,GACT,KAAK,QAAQ,cACf,KAAK,WAAa,YAAY,IAAM,KAAK,eAAe,EAAG,EAAE,GAEjE,CA2DF,EA1DE3F,EAxJImH,EAwJG,YAAUlH,EAAmB,CAClC,WAAY,SACZ,QAAS,SACT,SAAUC,EACV,KAAMiH,EACN,KAAM,CAAC,CACL,MAAO/B,CACT,EAAG,CACD,MAAO9D,CACT,EAAG,CACD,MAAU4B,CACZ,CAAC,EACD,OAAW9C,EAAgB,SAC7B,CAAC,GACDJ,EAtKImH,EAsKG,YAAUrB,GAAqB,CACpC,WAAY,SACZ,QAAS,SACT,KAAMqB,EACN,aAAc,GACd,SAAU,oBACV,KAAM,CACJ,UAAW,CACT,MAAS,aACT,WAAc,gBACd,WAAc,oBAChB,EACA,WAAY,CACV,MAAS,oBACT,gBAAiB,mBACnB,CACF,EACA,SAAUjH,EACV,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAkBV,SAAU,GACV,aAAc,CAAC,CACb,KAAM,YACN,KAAM6F,EACN,SAAU,SACV,OAAQ,CAAC,OAAQ,WAAY,UAAU,CACzC,CAAC,CACH,CAAC,GAjNH,IAAMsB,EAANF,EAmNG5G,EAAyB,CAC1B,WAAY,SACZ,QAAS,SACT,SAAUL,EACV,KAAMmH,EACN,WAAY,CAAC,CACX,KAAMf,GACN,KAAM,CAAC,CACL,SAAU,oBACV,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAkBV,WAAY,GACZ,QAAS,CAACP,CAAI,CAChB,CAAC,CACH,CAAC,EACD,eAAgB,IAAM,CAAC,CACrB,KAAMX,CACR,EAAG,CACD,KAAM9D,CACR,EAAG,CACD,KAAS4B,CACX,CAAC,EACD,eAAgB,CACd,aAAc,CAAC,CACb,KAAMqD,EACN,KAAM,CAAC,OAAO,CAChB,CAAC,EACD,aAAc,CAAC,CACb,KAAMA,EACN,KAAM,CAAC,eAAe,CACxB,CAAC,EACD,SAAU,CAAC,CACT,KAAMC,EACN,KAAM,CAAC,OAAO,CAChB,CAAC,EACD,YAAa,CAAC,CACZ,KAAMA,EACN,KAAM,CAAC,YAAY,CACrB,CAAC,EACD,iBAAkB,CAAC,CACjB,KAAMA,EACN,KAAM,CAAC,YAAY,CACrB,CAAC,CACH,CACF,CAAC,EACD,IAAMc,GAAkC7B,EAAA5B,EAAA,GACnC/B,IADmC,CAEtC,eAAgBuF,CAClB,GACME,EAAN,MAAMA,CAAuB,CAC3B,OAAO,QAAQ/F,EAAS,CAAC,EAAG,CAC1B,MAAO,CACL,SAAU+F,EACV,UAAW,CAAC,CACV,QAASxF,EACT,SAAU,CACR,QAASuF,GACT,OAAA9F,CACF,CACF,CAAC,CACH,CACF,CAuBF,EAtBExB,EAbIuH,EAaG,YAAUtH,EAAmB,CAClC,WAAY,SACZ,QAAS,SACT,SAAUC,EACV,KAAMqH,EACN,KAAM,CAAC,EACP,OAAWnH,EAAgB,QAC7B,CAAC,GACDJ,EArBIuH,EAqBG,YAAUV,GAAoB,CACnC,WAAY,SACZ,QAAS,SACT,SAAU3G,EACV,KAAMqH,EACN,QAAS,CAACF,CAAgB,EAC1B,QAAS,CAACA,CAAgB,CAC5B,CAAC,GACDrH,EA7BIuH,EA6BG,YAAUT,EAAoB,CACnC,WAAY,SACZ,QAAS,SACT,SAAU5G,EACV,KAAMqH,CACR,CAAC,GAlCH,IAAMC,GAAND,EAoCGhH,EAAyB,CAC1B,WAAY,SACZ,QAAS,SACT,SAAUL,EACV,KAAMsH,GACN,WAAY,CAAC,CACX,KAAMR,EACN,KAAM,CAAC,CACL,QAAS,CAACK,CAAgB,EAC1B,QAAS,CAACA,CAAgB,CAC5B,CAAC,CACH,CAAC,CACH,CAAC,gVC9+CYI,IAANC,GAAA,KAAyB,CAC9B,YAAoBC,EAA4B,CAA5BC,EAAA,sBAAA,KAAA,cAAAD,EAClBA,EAAc,aAAa,YAAc,GACzCA,EAAc,aAAa,QAAU,IACrCA,EAAc,aAAa,kBAAoB,GAC/CA,EAAc,aAAa,YAAc,GACzCA,EAAc,aAAa,aAAe,GAC1CA,EAAc,aAAa,WAAa,EAC1C,CAEQ,uBAAuBE,EAA2B,CACxD,KAAK,cAAc,QAAQA,CAAmB,CAChD,CAEQ,qBAAqBC,EAAyB,CACpD,KAAK,cAAc,MAAMA,EAAmB,yBAAyB,CACvE,CAEQ,4BAA4BC,EAAkCC,EAAO,CAC3E,KAAK,cAAc,KAAKD,EAA0B,wBAAyBC,CAAO,CACpF,CAEQ,4CAA4CC,EAAoB,CACtE,OAAO,KAAK,cAAc,KAAKA,EAAc,KAAM,CACjD,eAAgB,GAChB,YAAa,GACb,YAAa,GACb,cAAe,2BAChB,CACH,CAEQ,oBAAoBC,EAAwB,CAClD,KAAK,cAAc,QAAQA,EAAkB,uBAAuB,CACtE,CAEO,kBAAkBC,EAAgB,CACvC,KAAK,qBAAqB,yBAA4BA,EAAW,sEACN,CAC7D,CAEO,uBAAuBC,EAAU,CACtC,KAAK,uBAAuB,SAAWA,EAAK,kBAAkB,CAChE,CAEO,2BAA2BA,EAAU,CAC1C,KAAK,uBAAuB,WAAaA,EAAK,oBAAoB,CACpE,CAEO,0BAAwB,CAC7B,KAAK,oBAAoB,+DAA+D,CAC1F,CAEO,8BAA4B,CACjC,OAAO,KAAK,4CACV;wBACwB,CAC5B,CAEO,kBAAkBC,EAAe,CACtC,KAAK,cAAc,MAAMA,CAAO,CAClC,KA5DKX,oCAAAA,IAAMD,GAAmBa,GAAA,CAD/BC,EAAU,GACEd,EAAmB,6UCFnBe,EAAN,KAAyB,CAEvB,OAAO,mBAAmBC,EAAaC,EAAU,CACtD,aAAa,QAAQD,EAAK,KAAK,UAAUC,CAAK,CAAC,CACjD,CAEO,OAAO,gBAAgBD,EAAW,CACvC,OAAO,KAAK,MAAM,aAAa,QAAQA,CAAG,CAAC,CAC7C,GARWD,EAAmBG,GAAA,CAD/BC,EAAU,GACEJ,CAAmB,6UCM1BK,GAAgB,sBAGTC,IAANC,GAAA,KAAmB,CAIxB,YACUC,EACAC,EACAC,EAAoB,CAFpBC,EAAA,4BACAA,EAAA,+BACAA,EAAA,gBANFA,EAAA,sBAAiD,CAAA,GAClDA,EAAA,8BAGG,KAAA,oBAAAH,EACA,KAAA,uBAAAC,EACA,KAAA,QAAAC,EAER,KAAK,sBAAwB,IAAIE,GACjC,KAAK,iBAAgB,CACvB,CAEQ,kBAAgB,CACtB,IAAMC,EAAeC,EAAoB,gBAAgBT,EAAa,EACtE,GAAI,CAACQ,EACHC,EAAoB,mBAAmBT,GAAe,KAAK,cAAc,EACzE,KAAK,iBAAgB,MAChB,CACL,IAAMU,EAAO,OAAO,KAAKF,CAAY,EACrC,QAAS,EAAI,EAAG,EAAIE,EAAK,OAAQ,IAAK,CACpC,IAAMC,EAAUH,EAAaE,EAAK,CAAC,CAAC,EAChCC,IACF,KAAK,eAAeD,EAAK,CAAC,CAAC,EAAIC,EAEnC,CACF,CACF,CAEQ,UAAUA,EAAiC,CACjD,OAAQA,EAAoB,YAAc,MAC5C,CAEO,aAAaA,EAAiC,CACnD,IAAMC,EAAmB,KAAK,UAAUD,CAAO,EAAI,CACjD,GAAIA,EAAQ,UACZ,KAAMA,EAAQ,YACd,SAAUA,EAAQ,aAClB,UAAWA,EAAQ,iBACnB,KAAM,IAAI,MACR,CACF,GAAIA,EAAQ,UACZ,KAAMA,EAAQ,KACd,SAAUA,EAAQ,QAClB,UAAWA,EAAQ,iBACnB,KAAM,IAAI,MAGZC,EAAK,SAAW,KAAK,QAAQ,UAAUA,EAAK,SAAU,EAAK,EAEtD,KAAK,WAAWA,EAAK,EAAE,IAC1B,KAAK,eAAeA,EAAK,EAAE,EAAIA,EAC/BH,EAAoB,mBAAmBT,GAAe,KAAK,cAAc,EACzE,KAAK,sBAAsB,KAAK,KAAK,eAAc,CAAE,EAErD,KAAK,uBAAuB,qBAAqBY,EAAK,EAAE,EACxD,KAAK,oBAAoB,uBAAuBA,EAAK,EAAE,EAE3D,CAEO,iBAAiBC,EAAU,CAChC,OAAO,KAAK,eAAeA,CAAE,EAC7BJ,EAAoB,mBAAmBT,GAAe,KAAK,cAAc,EACzE,KAAK,sBAAsB,KAAK,KAAK,eAAc,CAAE,EAErD,KAAK,uBAAuB,0BAA0Ba,CAAE,EACxD,KAAK,oBAAoB,2BAA2BA,CAAE,CACxD,CAEO,WAAWA,EAAU,CAC1B,MAAO,CAAC,CAAC,KAAK,eAAeA,CAAE,CACjC,CAEA,IAAI,eAAa,CACf,OAAO,KAAK,cACd,CAEO,gBAAc,CACnB,OAAO,OAAO,KAAK,KAAK,cAAc,EAAE,MAC1C,KA/EKX,yDAAAA,IAAMD,GAAaa,GAAA,CADzBC,EAAU,GACEd,EAAa","names":["AnimationMetadataType","AUTO_STYLE","trigger","name","definitions","animate","timings","styles","sequence","steps","options","AnimationMetadataType","style","tokens","state","name","styles","transition","stateChangeExpr","steps","options","AnimationMetadataType","_AnimationBuilder","ÉµÉµngDeclareFactory","core_exports","FactoryTarget","ÉµÉµngDeclareInjectable","inject","BrowserAnimationBuilder","AnimationBuilder","ÉµÉµngDeclareClassMetadata","Injectable","AnimationFactory","_BrowserAnimationBuilder","rootRenderer","doc","ANIMATION_MODULE_TYPE","typeData","ViewEncapsulation$1","isAnimationRenderer","RuntimeError","animation","id","entry","sequence","issueAnimationCommand","BrowserAnimationFactory","RendererFactory2","DOCUMENT","Inject","_id","_renderer","element","options","RendererAnimationPlayer","eventName","callback","command","args","fn","p","unwrapAnimationRenderer","renderer","type","NoopAnimationPlayer","duration","delay","position","phaseName","methods","AnimationGroupPlayer","_players","doneCount","destroyCount","startCount","total","player","time","timeAtPosition","longestPlayer","longestSoFar","ÉµPRE_STYLE","_ToastContainerDirective","el","__publicField","ÉµÉµngDeclareFactory","core_exports","ElementRef","FactoryTarget","ÉµÉµngDeclareDirective","ToastContainerDirective","ÉµÉµngDeclareClassMetadata","Directive","ComponentPortal","component","injector","host","newestOnTop","BasePortalHost","portal","fn","ToastRef","_overlayRef","Subject","resetTimeout","countDuplicate","ToastPackage","toastId","config","message","title","toastType","toastRef","action","DefaultNoComponentGlobalConfig","TOAST_CONFIG","InjectionToken","DomPortalHost","_hostDomElement","_componentFactoryResolver","_appRef","componentFactory","componentRef","_OverlayContainer","inject","DOCUMENT","container","ÉµÉµngDeclareInjectable","OverlayContainer","Injectable","OverlayRef","_portalHost","_Overlay","ComponentFactoryResolver$1","ApplicationRef","positionClass","overlayContainer","pane","Overlay","_ToastrService","token","overlay","_injector","sanitizer","ngZone","__spreadValues","override","type","toast","found","p","resetOnDuplicate","countDuplicates","includeTitleDuplicates","hasDuplicateTitle","i","duplicate","keepInactive","overlayRef","sanitizedMessage","SecurityContext","toastPackage","providers","toastInjector","Injector","ins","DomSanitizer","NgZone","ToastrService","Inject","_Toast","toastrService","count","__spreadProps","now","remaining","func","timeout","ÉµÉµngDeclareComponent","NgIf","trigger","state","style","transition","animate","Toast","Component","HostBinding","HostListener","DefaultGlobalConfig","provideToastr","makeEnvironmentProviders","_ToastrModule","ÉµÉµngDeclareNgModule","ÉµÉµngDeclareInjector","ToastrModule","NgModule","_ToastrComponentlessModule","ToastrComponentlessModule","_ToastNoAnimation","appRef","ToastNoAnimation","DefaultNoAnimationsGlobalConfig","_ToastNoAnimationModule","ToastNoAnimationModule","NotificationService","_a","toastrService","__publicField","successNotification","errorNotification","announcementNotification","options","announcement","hintNotification","resource","id","toastId","__decorate","Injectable","LocalStorageService","key","value","__decorate","Injectable","COMPLEX_STORE","BasketService","_a","notificationService","googleAnalyticsService","species","__publicField","EventEmitter","complexStore","LocalStorageService","keys","complex","item","id","__decorate","Injectable"],"x_google_ignoreList":[0,1]}