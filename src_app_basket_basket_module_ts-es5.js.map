{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAmBaA,gBAAe;AAM1B,iCAAoBC,cAApB,EACoBC,YADpB,EAEoBC,oBAFpB,EAGoBC,KAHpB,EAIoBC,MAJpB,EAIkC;AAAA;;AAJd;AACA;AACA;AACA;AACA;AARpB,qCAA2C,IAA3C;AACA,qDAAoD,EAApD;AAQE,eAAKC,cAAL,GAAsB,KAAKL,cAAL,CAAoBM,aAA1C;AACD;;AAZyB;AAAA;AAAA,iBAc1B,oBAAQ;AAAA;;AACN,iBAAKL,YAAL,CAAkBM,QAAlB,CAA2B,yBAA3B;AACA,iBAAKC,uBAAL;AACA,iBAAKL,KAAL,CAAWM,QAAX,CAAoBC,SAApB,CAA8B,kBAAQ,EAAG;AACvC,kBAAID,QAAQ,KAAKE,kKAAjB,EAAyC;AACvC,qBAAI,CAACC,WAAL,GAAmBD,kKAAnB;AACD,eAFD,MAEO;AACL,qBAAI,CAACC,WAAL,GAAmBD,qJAAnB;AACD;AACF,aAND;AAOD;AAxByB;AAAA;AAAA,iBA0B1B,6BAAoBE,WAApB,EAAuC;AACrC,gBAAI,KAAKD,WAAL,KAAqBC,WAAzB,EAAsC;AACpC,mBAAKD,WAAL,GAAmBC,WAAnB;AACA,mBAAKT,MAAL,CAAYU,QAAZ,CAAqB,EAArB,EAAyB;AACvBL,wBAAQ,EAAE,KAAKG;AADQ,eAAzB;AAGD;AACF;AAjCyB;AAAA;AAAA,iBAmC1B,yCAA6B;AAC3B,mBAAO,KAAKA,WAAL,KAAqBD,kKAA5B;AACD;AArCyB;AAAA;AAAA,iBAuC1B,2BAAe;AACbI;AACD;AAzCyB;AAAA;AAAA,iBA2C1B,0BAAiBC,GAAjB,EAA4B;AAC1B,iBAAKhB,cAAL,CAAoBiB,gBAApB,CAAqCD,GAArC;;AACA,iBAAKR,uBAAL;AACD;AA9CyB;AAAA;AAAA,iBAgD1B,iCAAwBU,SAAxB,EAAyC;AAAA,uDACrB,KAAKC,OAAL,CAAa,KAAKb,aAAlB,CADqB;AAAA;;AAAA;AACvC,kEAAoD;AAAA,oBAAzCU,GAAyC;;AAClD,oBAAI,KAAKV,aAAL,CAAmBU,GAAnB,EAAwBI,EAAxB,KAA+BF,SAAnC,EAA8C;AAC5C,uBAAKlB,cAAL,CAAoBiB,gBAApB,CAAqCD,GAArC;AACD;AACF;AALsC;AAAA;AAAA;AAAA;AAAA;;AAMvC,iBAAKR,uBAAL;AACD;AAvDyB;AAAA;AAAA,eAyD1B,eAAiB;AACf,mBAAO,KAAKH,cAAZ;AACD,WA3DyB;AAAA,eA6D1B,aAAkBgB,KAAlB,EAAuD;AACrD,iBAAKhB,cAAL,GAAsBgB,KAAtB;AACD;AA/DyB;AAAA;AAAA,iBAiEnB,gCAAoB;AACzB,mBAAO,KAAKF,OAAL,CAAa,KAAKd,cAAlB,EAAkCiB,MAAlC,KAA6C,CAApD;AAED,WApEyB,CAsE1B;;AAtE0B;AAAA;AAAA,iBAuEnB,iBAAQC,MAAR,EAAmB;AACxB,mBAAOC,MAAM,CAACC,IAAP,CAAYF,MAAZ,CAAP;AACD;AAzEyB;AAAA;AAAA,iBA2ElB,qBAAYA,MAAZ,EAAuB;AAC7B,mBAAO,iBAAiBC,MAAM,CAACE,MAAP,CAAcH,MAAd,EAAsBI,GAAtB,CAA0B,UAACC,CAAD;AAAA,qBAAmB,MAAMA,CAAC,CAACR,EAAR,GAAa,GAAhC;AAAA,aAA1B,EAA+DS,IAA/D,CAAoE,GAApE,CAAjB,GAA4F,GAAnG;AACD;AA7EyB;AAAA;AAAA,iBA+ElB,wCAA4B;AAAA;;AAClC,gBAAMC,QAAQ,GAAGN,MAAM,CAACE,MAAP,CAAc,KAAKrB,cAAnB,EAAmCiB,MAApD;AACA,iBAAKpB,oBAAL,CAA0B6B,oBAA1B,CAA+C,KAAKC,WAAL,CAAiB,KAAK3B,cAAtB,CAA/C,EAAsF,CAAtF,EAAyFyB,QAAzF,EACGpB,SADH,CACa,uBAAa,EAAG;AACzB,oBAAI,CAACuB,mBAAL,GAA2BC,aAA3B;;AACA,kBAAI,MAAI,CAACD,mBAAL,CAAyBE,oBAAzB,KAAkD,CAAtD,EAAyD;AACvD,qBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,aAAa,CAACG,QAAd,CAAuBf,MAA3C,EAAmDc,CAAC,EAApD,EAAwD;AAAA,8DAC9BF,aAAa,CAACG,QAAd,CAAuBD,CAAvB,EAA0BE,WADI;AAAA;;AAAA;AAAA;AAAA,0BAC3CC,SAD2C;;AAEpD,0BAAI,CAAC,MAAI,CAACC,mCAAL,CAAyCC,IAAzC,CAA8C,oBAAU;AAAA,+BAAIC,UAAU,CAACC,UAAX,KAA0BJ,SAAS,CAACI,UAAxC;AAAA,uBAAxD,CAAL,EAAkH;AAChH,8BAAI,CAACH,mCAAL,CAAyCI,IAAzC,CAA8CL,SAA9C;AACD;AAJmD;;AACtD,2EAA+D;AAAA;AAI9D;AALqD;AAAA;AAAA;AAAA;AAAA;AAMvD;AACF;AACF,aAZH;AAaD;AA9FyB;AAAA;AAAA,iBAgG1B,mCAAuB;AACrB,iBAAKN,mBAAL,GAA2B,IAA3B;AACA,iBAAKO,mCAAL,GAA2C,EAA3C;AACA,iBAAKK,4BAAL;AACD;AApGyB;AAAA;AAAA,iBAsG1B,8BAAkB;AAAA;;AAChBrB,kBAAM,CAACE,MAAP,CAAc,KAAKrB,cAAnB,EAAmCsB,GAAnC,CAAuC,UAACC,CAAD;AAAA,qBAAmB,MAAI,CAACkB,uBAAL,CAA6BlB,CAAC,CAACR,EAA/B,CAAnB;AAAA,aAAvC;AACD;AAxGyB;;AAAA;AAAA;;;;gBAlBpB2B;;gBAGAC;;gBACAC;;gBAGAC;;gBAAgBA;;;;AAWXnD,sBAAe,eAL3B,0DAAU;AACToD,gBAAQ,EAAE,WADD;AAETC,kMAFS;;AAAA,OAAV,CAK2B,GAAfrD,gBAAe,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCFAsD,aAAY;AAAA;AAAA;;AAAZA,mBAAY,eAVxB,yDAAS;AACRC,eAAO,EAAE,CAACC,mEAAsB,CAC9B;AAACC,cAAI,EAAE,EAAP;AAAWjB,mBAAS,EAAEkB;AAAtB,SAD8B,CAAtB,CAAD,EAGPC,yDAHO,EAIPC,uHAJO,EAKPC,sHALO,CADD;AAQRC,oBAAY,EAAE,CAACJ,8DAAD;AARN,OAAT,CAUwB,GAAZJ,aAAY,CAAZ;;;;;;;;;;;;;ACjBb;;;AAAAS,uCAAe,i5FAAf;;;;;;;;;;;;;;;","names":["BasketComponent","_basketService","titleService","complexPortalService","route","router","_complexBasket","complexBasket","setTitle","complexNavigatorLoading","fragment","subscribe","_complex_complex_results_complex_navigator_complex_list_display_buttons_complex_list_display_buttons_component__WEBPACK_IMPORTED_MODULE_5__","DisplayType","displayType","navigate","_shared_loading_indicators_progress_bar_progress_bar_component__WEBPACK_IMPORTED_MODULE_3__","key","deleteFromBasket","complexAc","getKeys","id","value","length","object","Object","keys","values","map","v","join","pageSize","findComplexNoFilters","createQuery","complexSearchBasket","complexSearch","totalNumberOfResults","i","elements","interactors","component","allInteractorsInComplexSearchBasket","some","interactor","identifier","push","requestComplexesForNavigator","deleteComplexFromBasket","_shared_basket_service_basket_service__WEBPACK_IMPORTED_MODULE_2__","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__","_complex_shared_service_complex_portal_service__WEBPACK_IMPORTED_MODULE_4__","_angular_router__WEBPACK_IMPORTED_MODULE_7__","selector","template","BasketModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_4__","path","_basket_component__WEBPACK_IMPORTED_MODULE_0__","_angular_common__WEBPACK_IMPORTED_MODULE_5__","_complex_complex_results_complex_navigator_complex_navigator_module__WEBPACK_IMPORTED_MODULE_1__","_shared_loading_indicators_progress_spinner_progress_spinner_module__WEBPACK_IMPORTED_MODULE_2__","declarations","__webpack_exports__"],"sources":["webpack:///src/app/basket/basket.component.ts","webpack:///src/app/basket/basket.module.ts","webpack:///src/app/basket/basket.component.html"],"sourcesContent":["import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {BasketService} from '../shared/basket/service/basket.service';\nimport {BasketItem} from '../shared/basket/model/basketItem';\nimport {ProgressBarComponent} from '../shared/loading-indicators/progress-bar/progress-bar.component';\nimport {Title} from '@angular/platform-browser';\nimport {ComplexPortalService} from '../complex/shared/service/complex-portal.service';\nimport {ComplexSearchResult} from '../complex/shared/model/complex-results/complex-search.model';\nimport {Interactor} from '../complex/shared/model/complex-results/interactor.model';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {\n  COMPLEX_NAVIGATOR_VIEW,\n  LIST_VIEW\n} from '../complex/complex-results/complex-navigator/complex-list-display-buttons/complex-list-display-buttons.component';\n\n@Component({\n  selector: 'cp-basket',\n  templateUrl: './basket.component.html',\n  styleUrls: ['./basket.component.css']\n})\nexport class BasketComponent implements OnInit, AfterViewInit {\n  private _complexBasket: { [name: string]: BasketItem };\n  complexSearchBasket: ComplexSearchResult = null;\n  allInteractorsInComplexSearchBasket: Interactor[] = [];\n  DisplayType: string;\n\n  constructor(private _basketService: BasketService,\n              private titleService: Title,\n              private complexPortalService: ComplexPortalService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this._complexBasket = this._basketService.complexBasket;\n  }\n\n  ngOnInit() {\n    this.titleService.setTitle('Complex Portal - Basket');\n    this.complexNavigatorLoading();\n    this.route.fragment.subscribe(fragment => {\n      if (fragment === COMPLEX_NAVIGATOR_VIEW) {\n        this.DisplayType = COMPLEX_NAVIGATOR_VIEW;\n      } else {\n        this.DisplayType = LIST_VIEW;\n      }\n    });\n  }\n\n  onDisplayTypeChange(displayType: string) {\n    if (this.DisplayType !== displayType) {\n      this.DisplayType = displayType;\n      this.router.navigate([], {\n        fragment: this.DisplayType\n      });\n    }\n  }\n\n  isDisplayComplexNavigatorView(): boolean {\n    return this.DisplayType === COMPLEX_NAVIGATOR_VIEW;\n  }\n\n  ngAfterViewInit(): void {\n    ProgressBarComponent.hide();\n  }\n\n  deleteFromBasket(key: string): void {\n    this._basketService.deleteFromBasket(key);\n    this.complexNavigatorLoading();\n  }\n\n  deleteComplexFromBasket(complexAc: string): void {\n    for (const key of this.getKeys(this.complexBasket)) {\n      if (this.complexBasket[key].id === complexAc) {\n        this._basketService.deleteFromBasket(key);\n      }\n    }\n    this.complexNavigatorLoading();\n  }\n\n  get complexBasket(): { [name: string]: BasketItem } {\n    return this._complexBasket;\n  }\n\n  set complexBasket(value: { [name: string]: BasketItem }) {\n    this._complexBasket = value;\n  }\n\n  public isComplexBasketEmpty(): boolean {\n    return this.getKeys(this._complexBasket).length === 0;\n\n  }\n\n  // Candidate for Util\n  public getKeys(object: any) {\n    return Object.keys(object);\n  }\n\n  private createQuery(object: any): string {\n    return 'complex_id:(' + Object.values(object).map((v: BasketItem) => '\"' + v.id + '\"').join(',') + ')';\n  }\n\n  private requestComplexesForNavigator() {\n    const pageSize = Object.values(this._complexBasket).length;\n    this.complexPortalService.findComplexNoFilters(this.createQuery(this._complexBasket), 1, pageSize)\n      .subscribe(complexSearch => {\n        this.complexSearchBasket = complexSearch;\n        if (this.complexSearchBasket.totalNumberOfResults !== 0) {\n          for (let i = 0; i < complexSearch.elements.length; i++) {\n            for (const component of complexSearch.elements[i].interactors) {\n              if (!this.allInteractorsInComplexSearchBasket.some(interactor => interactor.identifier === component.identifier)) {\n                this.allInteractorsInComplexSearchBasket.push(component);\n              }\n            }\n          }\n        }\n      });\n  }\n\n  complexNavigatorLoading() {\n    this.complexSearchBasket = null;\n    this.allInteractorsInComplexSearchBasket = [];\n    this.requestComplexesForNavigator();\n  }\n\n  deleteAllComplexes() {\n    Object.values(this._complexBasket).map((v: BasketItem) => this.deleteComplexFromBasket(v.id));\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {BasketComponent} from './basket.component';\nimport {ComplexNavigatorModule} from '../complex/complex-results/complex-navigator/complex-navigator.module';\nimport {ProgressSpinnerModule} from '../shared/loading-indicators/progress-spinner/progress-spinner.module';\n\n@NgModule({\n  imports: [RouterModule.forChild([\n    {path: '', component: BasketComponent}\n  ]),\n    CommonModule,\n    ComplexNavigatorModule,\n    ProgressSpinnerModule\n  ],\n  declarations: [BasketComponent]\n})\nexport class BasketModule {\n}\n","export default \"<div class=\\\"margin-top-large margin-bottom-large\\\">\\n  <div *ngIf=\\\"!isComplexBasketEmpty()\\\" class=\\\"columns medium-12\\\">\\n    <h2>Personal collection of favourite complexes\\n\\n      <a class=\\\"button primary columns medium-2 deleteAllButton float-right\\\"\\n         (click)=\\\"deleteAllComplexes()\\\">\\n        <i class=\\\"icon icon-common\\\" data-icon=\\\"\\\"></i>\\n        Remove all complexes\\n      </a>\\n    </h2>\\n    <h4>{{ getKeys(complexBasket).length }} complexes in your basket</h4>\\n    <div class=\\\"row\\\">\\n      <cp-complex-list-display-buttons\\n        [displayType]=\\\"DisplayType\\\"\\n        (displayTypeChange)=\\\"onDisplayTypeChange($event)\\\">\\n      </cp-complex-list-display-buttons>\\n    </div>\\n    <table class=\\\"hover\\\" *ngIf=\\\"!this.isDisplayComplexNavigatorView()\\\">\\n      <thead>\\n      <tr>\\n        <th>Name</th>\\n        <th>ID</th>\\n        <th>Organism</th>\\n        <th></th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr *ngFor=\\\"let key of getKeys(complexBasket)\\\" [class.predicted]=\\\"complexBasket[key].predicted\\\">\\n        <td>\\n          <a [routerLink]=\\\"['/complex', complexBasket[key].id]\\\">{{ complexBasket[key].name }}</a>\\n        </td>\\n        <td>\\n          {{ complexBasket[key].id }}\\n        </td>\\n        <td>\\n          {{ complexBasket[key].organism }}\\n        </td>\\n        <td>\\n          <!--          <a class=\\\"button primary columns medium-12\\\" (click)=\\\"deleteFromBasket(key)\\\"> <span-->\\n          <!--            class=\\\"icon icon-functional\\\" data-icon=\\\"d\\\"></span></a>-->\\n          <a class=\\\"button primary columns medium-12\\\" (click)=\\\"deleteFromBasket(key)\\\">\\n            <i class=\\\"icon icon-common\\\" data-icon=\\\"\\\"></i>\\n\\n          </a>\\n        </td>\\n      </tr>\\n      </tbody>\\n    </table>\\n    <div *ngIf=\\\"isDisplayComplexNavigatorView()\\\" class=\\\"columns medium-12\\\">\\n      <ng-container *ngIf=\\\"complexSearchBasket;else loadingSpinner\\\">\\n        <div class=\\\"ComplexNavigator\\\"\\n             [ngClass]=\\\"complexSearchBasket.totalNumberOfResults <=6 ? 'smallCN' : ''\\\">\\n          <cp-complex-navigator\\n            [complexSearch]=\\\"complexSearchBasket\\\"\\n            [interactors]=\\\"allInteractorsInComplexSearchBasket\\\"\\n            [canAddComplexesToBasket]=\\\"false\\\"\\n            [canRemoveComplexesFromBasket]=\\\"true\\\"\\n            (onComplexRemovedFromBasket)=\\\"deleteComplexFromBasket($event)\\\">\\n          </cp-complex-navigator>\\n        </div>\\n      </ng-container>\\n      <ng-template #loadingSpinner>\\n        <cp-progress-spinner></cp-progress-spinner>\\n      </ng-template>\\n    </div>\\n\\n  </div>\\n  <div *ngIf=\\\"isComplexBasketEmpty()\\\" class=\\\"columns medium-12\\\">\\n    <div class=\\\"callout\\\">\\n      <h3>Your basket is currently empty. :'(</h3>\\n      <h5>Search for a complex and click on <i class=\\\"icon icon-common\\\" data-icon=\\\"\\\"></i> symbol to create your own\\n        collection of favorite complexes.</h5>\\n    </div>\\n  </div>\\n</div>\\n\";"]}