{"version":3,"mappings":"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","names":["BasketComponent","_basketService","titleService","complexPortalService","route","router","_classCallCheck","_complexBasket","complexBasket","_createClass","key","value","setTitle","complexNavigatorLoading","fragment","subscribe","_complex_complex_results_complex_navigator_complex_list_display_buttons_complex_list_display_buttons_component__WEBPACK_IMPORTED_MODULE_6__","_this","DisplayType","displayType","navigate","_shared_loading_indicators_progress_bar_progress_bar_component__WEBPACK_IMPORTED_MODULE_3__","deleteFromBasket","complexAc","getKeys","_step","id","_iterator","get","set","length","object","Object","keys","values","map","v","join","pageSize","findComplex","createQuery","_this2","complexSearchBasket","complexSearch","totalNumberOfResults","i","elements","interactors","_step2","component","allInteractorsInComplexSearchBasket","some","interactor","identifier","push","_complex_shared_model_complex_results_interactor_model__WEBPACK_IMPORTED_MODULE_5__","identifierLink","name","description","interactorType","organismName","_loop","_iterator2","requestComplexesForNavigator","_shared_basket_service_basket_service__WEBPACK_IMPORTED_MODULE_2__","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__","_complex_shared_service_complex_portal_service__WEBPACK_IMPORTED_MODULE_4__","_angular_router__WEBPACK_IMPORTED_MODULE_8__","selector","template","BasketModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_4__","path","_basket_component__WEBPACK_IMPORTED_MODULE_0__","_angular_common__WEBPACK_IMPORTED_MODULE_5__","_complex_complex_results_complex_navigator_complex_navigator_module__WEBPACK_IMPORTED_MODULE_1__","_shared_loading_indicators_progress_spinner_progress_spinner_module__WEBPACK_IMPORTED_MODULE_2__","declarations","__webpack_exports__"],"sources":["webpack:///src/app/basket/basket.component.ts","webpack:///src/app/basket/basket.module.ts","webpack:///src/app/basket/basket.component.html"],"sourcesContent":["import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {BasketService} from '../shared/basket/service/basket.service';\nimport {BasketItem} from '../shared/basket/model/basketItem';\nimport {ProgressBarComponent} from '../shared/loading-indicators/progress-bar/progress-bar.component';\nimport {Title} from '@angular/platform-browser';\nimport {ComplexPortalService} from '../complex/shared/service/complex-portal.service';\nimport {ComplexSearchResult} from '../complex/shared/model/complex-results/complex-search.model';\nimport {Interactor} from '../complex/shared/model/complex-results/interactor.model';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {\n  COMPLEX_NAVIGATOR_VIEW,\n  LIST_VIEW\n} from '../complex/complex-results/complex-navigator/complex-list-display-buttons/complex-list-display-buttons.component';\n\n@Component({\n  selector: 'cp-basket',\n  templateUrl: './basket.component.html',\n  styleUrls: ['./basket.component.css']\n})\nexport class BasketComponent implements OnInit, AfterViewInit {\n  private _complexBasket: { [name: string]: BasketItem };\n  complexSearchBasket: ComplexSearchResult = null;\n  allInteractorsInComplexSearchBasket: Interactor[] = [];\n  DisplayType: string;\n\n  constructor(private _basketService: BasketService,\n              private titleService: Title,\n              private complexPortalService: ComplexPortalService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this._complexBasket = this._basketService.complexBasket;\n  }\n\n  ngOnInit() {\n    this.titleService.setTitle('Complex Portal - Basket');\n    this.complexNavigatorLoading();\n    this.route.fragment.subscribe(fragment => {\n      if (fragment === COMPLEX_NAVIGATOR_VIEW) {\n        this.DisplayType = COMPLEX_NAVIGATOR_VIEW;\n      } else {\n        this.DisplayType = LIST_VIEW;\n      }\n    });\n  }\n\n  onDisplayTypeChange(displayType: string) {\n    if (this.DisplayType !== displayType) {\n      this.DisplayType = displayType;\n      this.router.navigate([], {\n        fragment: this.DisplayType\n      });\n    }\n  }\n\n  isDisplayComplexNavigatorView(): boolean {\n    return this.DisplayType === COMPLEX_NAVIGATOR_VIEW;\n  }\n\n  ngAfterViewInit(): void {\n    ProgressBarComponent.hide();\n  }\n\n  deleteFromBasket(key: string): void {\n    this._basketService.deleteFromBasket(key);\n    this.complexNavigatorLoading();\n  }\n\n  deleteComplexFromBasket(complexAc: string): void {\n    for (const key of this.getKeys(this.complexBasket)) {\n      if (this.complexBasket[key].id === complexAc) {\n        this._basketService.deleteFromBasket(key);\n      }\n    }\n    this.complexNavigatorLoading();\n  }\n\n  get complexBasket(): { [name: string]: BasketItem } {\n    return this._complexBasket;\n  }\n\n  set complexBasket(value: { [name: string]: BasketItem }) {\n    this._complexBasket = value;\n  }\n\n  public isComplexBasketEmpty(): boolean {\n    return this.getKeys(this._complexBasket).length === 0;\n\n  }\n\n  // Candidate for Util\n  public getKeys(object: any) {\n    return Object.keys(object);\n  }\n\n  private createQuery(object: any): string {\n    return 'complex_id: ' + Object.values(object).map((v: BasketItem) => v.id).join(',');\n  }\n\n  private requestComplexesForNavigator() {\n    const pageSize = Object.values(this._complexBasket).length;\n    this.complexPortalService.findComplex(this.createQuery(this._complexBasket), [], [], [], 1, pageSize)\n      .subscribe(complexSearch => {\n        this.complexSearchBasket = complexSearch;\n        if (this.complexSearchBasket.totalNumberOfResults !== 0) {\n          for (let i = 0; i < complexSearch.elements.length; i++) {\n            for (const component of complexSearch.elements[i].interactors) {\n              if (!this.allInteractorsInComplexSearchBasket.some(interactor => interactor.identifier === component.identifier)) {\n                this.allInteractorsInComplexSearchBasket.push(\n                  new Interactor(\n                    component.identifier,\n                    component.identifierLink,\n                    component.name,\n                    component.description,\n                    component.interactorType,\n                    component.organismName));\n              }\n            }\n          }\n        }\n      });\n  }\n\n  complexNavigatorLoading() {\n    this.complexSearchBasket = null;\n    this.allInteractorsInComplexSearchBasket = [];\n    this.requestComplexesForNavigator();\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {BasketComponent} from './basket.component';\nimport {ComplexNavigatorModule} from '../complex/complex-results/complex-navigator/complex-navigator.module';\nimport {ProgressSpinnerModule} from '../shared/loading-indicators/progress-spinner/progress-spinner.module';\n\n@NgModule({\n  imports: [RouterModule.forChild([\n    {path: '', component: BasketComponent}\n  ]),\n    CommonModule,\n    ComplexNavigatorModule,\n    ProgressSpinnerModule\n  ],\n  declarations: [BasketComponent]\n})\nexport class BasketModule {\n}\n","export default \"<div class=\\\"margin-top-large margin-bottom-large\\\">\\n  <div *ngIf=\\\"!isComplexBasketEmpty()\\\" class=\\\"columns medium-12\\\">\\n    <h2>Personal collection of favourite complexes</h2>\\n    <h4>{{ getKeys(complexBasket).length }} complexes in your basket</h4>\\n    <div class=\\\"row\\\">\\n      <cp-complex-list-display-buttons\\n        [displayType]=\\\"DisplayType\\\"\\n        (displayTypeChange)=\\\"onDisplayTypeChange($event)\\\">\\n      </cp-complex-list-display-buttons>\\n    </div>\\n    <table class=\\\"hover\\\" *ngIf=\\\"!this.isDisplayComplexNavigatorView()\\\">\\n      <thead>\\n      <tr>\\n        <th>Name</th>\\n        <th>ID</th>\\n        <th>Organism</th>\\n        <th></th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr *ngFor=\\\"let key of getKeys(complexBasket)\\\">\\n        <td>\\n          <a [routerLink]=\\\"['/complex', complexBasket[key].id]\\\">{{ complexBasket[key].name }}</a>\\n        </td>\\n        <td>\\n          {{ complexBasket[key].id }}\\n        </td>\\n        <td>\\n          {{ complexBasket[key].organism }}\\n        </td>\\n        <td>\\n          <a class=\\\"button primary columns medium-12\\\" (click)=\\\"deleteFromBasket(key)\\\"> <span\\n            class=\\\"icon icon-functional\\\" data-icon=\\\"d\\\"></span></a>\\n        </td>\\n      </tr>\\n      </tbody>\\n    </table>\\n    <div *ngIf=\\\"isDisplayComplexNavigatorView()\\\" class=\\\"columns medium-12\\\">\\n      <ng-container *ngIf=\\\"complexSearchBasket;else loadingSpinner\\\">\\n        <div class=\\\"ComplexNavigator\\\"\\n             [ngClass]=\\\"complexSearchBasket.totalNumberOfResults <=6 ? 'smallCN' : ''\\\">\\n          <cp-complex-navigator\\n            [complexSearch]=\\\"complexSearchBasket\\\"\\n            [interactors]=\\\"allInteractorsInComplexSearchBasket\\\"\\n            [canAddComplexesToBasket]=\\\"false\\\"\\n            [canRemoveComplexesFromBasket]=\\\"true\\\"\\n            (onComplexRemovedFromBasket)=\\\"deleteComplexFromBasket($event)\\\">\\n          </cp-complex-navigator>\\n        </div>\\n      </ng-container>\\n      <ng-template #loadingSpinner>\\n        <cp-progress-spinner></cp-progress-spinner>\\n      </ng-template>\\n    </div>\\n\\n  </div>\\n  <div *ngIf=\\\"isComplexBasketEmpty()\\\" class=\\\"columns medium-12\\\">\\n    <div class=\\\"callout\\\">\\n      <h3>Your basket is currently empty. :'-(</h3>\\n      <h5>Search for a complex and click on <i class=\\\"icon icon-generic\\\" data-icon=\\\"b\\\"></i>-symbol to create your own\\n        collection of favorite complexes.</h5>\\n    </div>\\n  </div>\\n</div>\\n\";"]}