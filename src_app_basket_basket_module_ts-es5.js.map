{"version":3,"mappings":"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","names":["BasketComponent","_basketService","titleService","complexPortalService","_classCallCheck","_complexBasket","complexBasket","_createClass","key","value","setTitle","complexNavigatorLoading","_shared_loading_indicators_progress_bar_progress_bar_component__WEBPACK_IMPORTED_MODULE_3__","deleteFromBasket","get","set","getKeys","length","object","Object","keys","query","_step","undefined","queryPerObject","id","_iterator","_query","findComplex","subscribe","_this","complexSearchBasket","complexSearch","totalNumberOfResults","i","elements","_complexes","push","interactors","_step2","component","allInteractorsInComplexSearchBasket","some","interactor","identifier","_complex_shared_model_complex_results_interactor_model__WEBPACK_IMPORTED_MODULE_5__","identifierLink","name","description","interactorType","organismName","_loop","_iterator2","createQuery","requestComplexesForNavigator","console","log","_shared_basket_service_basket_service__WEBPACK_IMPORTED_MODULE_2__","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__","_complex_shared_service_complex_portal_service__WEBPACK_IMPORTED_MODULE_4__","selector","template","BasketModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","path","_basket_component__WEBPACK_IMPORTED_MODULE_0__","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_complex_complex_results_complex_navigator_complex_navigator_module__WEBPACK_IMPORTED_MODULE_1__","declarations","__webpack_exports__"],"sources":["webpack:///src/app/basket/basket.component.ts","webpack:///src/app/basket/basket.module.ts","webpack:///src/app/basket/basket.component.html"],"sourcesContent":["import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {BasketService} from '../shared/basket/service/basket.service';\nimport {BasketItem} from '../shared/basket/model/basketItem';\nimport {ProgressBarComponent} from '../shared/loading-indicators/progress-bar/progress-bar.component';\nimport {Title} from '@angular/platform-browser';\nimport {ComplexPortalService} from '../complex/shared/service/complex-portal.service';\nimport {ComplexSearchResult} from '../complex/shared/model/complex-results/complex-search.model';\nimport {Interactor} from '../complex/shared/model/complex-results/interactor.model';\nimport {Element} from '../complex/shared/model/complex-results/element.model';\n\n@Component({\n  selector: 'cp-basket',\n  templateUrl: './basket.component.html',\n  styleUrls: ['./basket.component.css']\n})\nexport class BasketComponent implements OnInit, AfterViewInit {\n  private _complexBasket: { [name: string]: BasketItem };\n  private _query: string;\n  complexSearchBasket: ComplexSearchResult = null;\n  allInteractorsInComplexSearchBasket: Interactor[] = [];\n  private _complexes: Element[];\n\n  constructor(private _basketService: BasketService, private titleService: Title, private complexPortalService: ComplexPortalService) {\n    this._complexBasket = this._basketService.complexBasket;\n  }\n\n  ngOnInit() {\n    this.titleService.setTitle('Complex Portal - Basket');\n    this.complexNavigatorLoading();\n  }\n\n  ngAfterViewInit(): void {\n    ProgressBarComponent.hide();\n  }\n\n  deleteFromBasket(key: string): void {\n    this._basketService.deleteFromBasket(key);\n    this.complexNavigatorLoading();\n  }\n\n  get complexBasket(): { [name: string]: BasketItem } {\n    return this._complexBasket;\n  }\n\n  set complexBasket(value: { [name: string]: BasketItem }) {\n    this._complexBasket = value;\n  }\n\n  public isComplexBasketEmpty(): boolean {\n    return this.getKeys(this._complexBasket).length === 0;\n\n  }\n\n  // Candidate for Util\n  public getKeys(object: any) {\n    return Object.keys(object);\n  }\n\n  private createQuery(object: any): string {\n    let query = '';\n    for (const key of this.getKeys(object)) {\n      if (object[key] !== undefined) {\n        let queryPerObject = ' complex_id:';\n        queryPerObject += object[key].id;\n        query += queryPerObject;\n      }\n    }\n    this._query = query;\n    return query;\n  }\n\n  private requestComplexesForNavigator() {\n    this.complexPortalService.findComplex(this._query).subscribe(complexSearch => {\n      this.complexSearchBasket = complexSearch;\n      if (this.complexSearchBasket.totalNumberOfResults !== 0) {\n        for (let i = 0; i < complexSearch.elements.length; i++) {\n          this._complexes.push(complexSearch.elements[i]);\n          for (const component of complexSearch.elements[i].interactors) {\n            if (!this.allInteractorsInComplexSearchBasket.some(interactor => interactor.identifier === component.identifier)) {\n              this.allInteractorsInComplexSearchBasket.push(\n                new Interactor(\n                  component.identifier,\n                  component.identifierLink,\n                  component.name,\n                  component.description,\n                  component.interactorType,\n                  component.organismName));\n            }\n          }\n        }\n      }\n    });\n  }\n\n  complexNavigatorLoading() {\n    this._query = this.createQuery(this._complexBasket);\n    this.complexSearchBasket = null;\n    this.allInteractorsInComplexSearchBasket = [];\n    this._complexes = [];\n    this.requestComplexesForNavigator();\n    console.log(this._complexes);\n    console.log(this.allInteractorsInComplexSearchBasket);\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {BasketComponent} from './basket.component';\nimport {ComplexNavigatorModule} from '../complex/complex-results/complex-navigator/complex-navigator.module';\n\n@NgModule({\n  imports: [RouterModule.forChild([\n    {path: '', component: BasketComponent}\n  ]),\n    CommonModule,\n    ComplexNavigatorModule\n  ],\n  declarations: [BasketComponent]\n})\nexport class BasketModule {\n}\n","export default \"<div class=\\\"margin-top-large margin-bottom-large\\\">\\n  <div *ngIf=\\\"!isComplexBasketEmpty()\\\" class=\\\"columns medium-12\\\">\\n    <h1>Personal complex collection</h1>\\n    <table class=\\\"hover\\\">\\n      <thead>\\n      <tr>\\n        <th>Name</th>\\n        <th>ID</th>\\n        <th>Organism</th>\\n        <th></th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr *ngFor=\\\"let key of getKeys(complexBasket)\\\">\\n        <td>\\n          <a [routerLink]=\\\"['/complex', complexBasket[key].id]\\\">{{ complexBasket[key].name }}</a>\\n        </td>\\n        <td>\\n          {{ complexBasket[key].id }}\\n        </td>\\n        <td>\\n          {{ complexBasket[key].organism }}\\n        </td>\\n        <td>\\n          <a class=\\\"button primary columns medium-12\\\" (click)=\\\"deleteFromBasket(key)\\\"> <span\\n            class=\\\"icon icon-functional\\\" data-icon=\\\"d\\\"></span></a>\\n        </td>\\n      </tr>\\n      </tbody>\\n    </table>\\n    <div class=\\\"ComplexNavigator\\\">\\n      <cp-complex-navigator\\n        [complexSearch]=\\\"complexSearchBasket\\\"\\n        [interactors]=\\\"allInteractorsInComplexSearchBasket\\\">\\n      </cp-complex-navigator>\\n    </div>\\n\\n  </div>\\n  <div *ngIf=\\\"isComplexBasketEmpty()\\\" class=\\\"columns medium-12\\\">\\n    <div class=\\\"callout\\\">\\n      <h3>Your basket is currently empty. :'-(</h3>\\n      <h5>Search for a complex and click on <i class=\\\"icon icon-generic\\\" data-icon=\\\"b\\\"></i>-symbol to create your own\\n        collection of favorite complexes.</h5>\\n    </div>\\n  </div>\\n</div>\\n\";"]}