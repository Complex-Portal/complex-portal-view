{"version":3,"sources":["node_modules/marked/lib/marked.esm.js","node_modules/ngx-markdown/fesm2022/ngx-markdown.mjs"],"sourcesContent":["/**\n * marked v12.0.2 - a markdown parser\n * Copyright (c) 2011-2024, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n/**\n * Gets the original marked default options.\n */\nfunction _getDefaults() {\n  return {\n    async: false,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    hooks: null,\n    pedantic: false,\n    renderer: null,\n    silent: false,\n    tokenizer: null,\n    walkTokens: null\n  };\n}\nlet _defaults = _getDefaults();\nfunction changeDefaults(newDefaults) {\n  _defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = ch => escapeReplacements[ch];\nfunction escape$1(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n  return html;\n}\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n  let source = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      let valSource = typeof val === 'string' ? val : val.source;\n      valSource = valSource.replace(caret, '$1');\n      source = source.replace(name, valSource);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(source, opt);\n    }\n  };\n  return obj;\n}\nfunction cleanUrl(href) {\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\nconst noopTest = {\n  exec: () => null\n};\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false;\n      let curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) {\n    cells.shift();\n  }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n    cells.pop();\n  }\n  if (count) {\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) cells.push('');\n    }\n  }\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param str\n * @param c\n * @param invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n  return str.slice(0, l - suffLen);\n}\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  let level = 0;\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape$1(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape$1(text)\n  };\n}\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n  if (matchIndentToCode === null) {\n    return text;\n  }\n  const indentToCode = matchIndentToCode[1];\n  return text.split('\\n').map(node => {\n    const matchIndentInNode = node.match(/^\\s+/);\n    if (matchIndentInNode === null) {\n      return node;\n    }\n    const [indentInNode] = matchIndentInNode;\n    if (indentInNode.length >= indentToCode.length) {\n      return node.slice(indentToCode.length);\n    }\n    return node;\n  }).join('\\n');\n}\n/**\n * Tokenizer\n */\nclass _Tokenizer {\n  options;\n  rules; // set by the lexer\n  lexer; // set by the lexer\n  constructor(options) {\n    this.options = options || _defaults;\n  }\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic ? rtrim(text, '\\n') : text\n      };\n    }\n  }\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim().replace(this.rules.inline.anyPunctuation, '$1') : cap[2],\n        text\n      };\n    }\n  }\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      // precede setext continuation with 4 spaces so it isn't a setext\n      let text = cap[0].replace(/\\n {0,3}((?:=+|-+) *)(?=\\n|$)/g, '\\n    $1');\n      text = rtrim(text.replace(/^ *>[ \\t]?/gm, ''), '\\n');\n      const top = this.lexer.state.top;\n      this.lexer.state.top = true;\n      const tokens = this.lexer.blockTokens(text);\n      this.lexer.state.top = top;\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens,\n        text\n      };\n    }\n  }\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n      let raw = '';\n      let itemContents = '';\n      let endsWithBlankLine = false;\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        let endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n        if (this.rules.block.hr.test(src)) {\n          // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n        raw = cap[0];\n        src = src.substring(raw.length);\n        let line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, t => ' '.repeat(3 * t.length));\n        let nextLine = src.split('\\n', 1)[0];\n        let indent = 0;\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimStart();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n        let blankLine = false;\n        if (!line && /^ *$/.test(nextLine)) {\n          // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n          // Check if following lines should be included in List Item\n          while (src) {\n            const rawLine = src.split('\\n', 1)[0];\n            nextLine = rawLine;\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n            // End list item if found code fences\n            if (fencesBeginRegex.test(nextLine)) {\n              break;\n            }\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(nextLine)) {\n              break;\n            }\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(nextLine)) {\n              break;\n            }\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n            if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) {\n              // Dedent if possible\n              itemContents += '\\n' + nextLine.slice(indent);\n            } else {\n              // not enough indentation\n              if (blankLine) {\n                break;\n              }\n              // paragraph continuation unless last line was a different block level element\n              if (line.search(/[^ ]/) >= 4) {\n                // indented code block\n                break;\n              }\n              if (fencesBeginRegex.test(line)) {\n                break;\n              }\n              if (headingBeginRegex.test(line)) {\n                break;\n              }\n              if (hrRegex.test(line)) {\n                break;\n              }\n              itemContents += '\\n' + nextLine;\n            }\n            if (!blankLine && !nextLine.trim()) {\n              // Check if current line is blank\n              blankLine = true;\n            }\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n            line = nextLine.slice(indent);\n          }\n        }\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n        let istask = null;\n        let ischecked;\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents,\n          tokens: []\n        });\n        list.raw += raw;\n      }\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimEnd();\n      list.items[list.items.length - 1].text = itemContents.trimEnd();\n      list.raw = list.raw.trimEnd();\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (let i = 0; i < list.items.length; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n        if (!list.loose) {\n          // Check if list should be loose\n          const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n          const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n          list.loose = hasMultipleLineBreaks;\n        }\n      }\n      // Set all items to loose if list is loose\n      if (list.loose) {\n        for (let i = 0; i < list.items.length; i++) {\n          list.items[i].loose = true;\n        }\n      }\n      return list;\n    }\n  }\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        block: true,\n        raw: cap[0],\n        pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n        text: cap[0]\n      };\n      return token;\n    }\n  }\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline.anyPunctuation, '$1') : '';\n      const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline.anyPunctuation, '$1') : cap[3];\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href,\n        title\n      };\n    }\n  }\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (!cap) {\n      return;\n    }\n    if (!/[:|]/.test(cap[2])) {\n      // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading\n      return;\n    }\n    const headers = splitCells(cap[1]);\n    const aligns = cap[2].replace(/^\\||\\| *$/g, '').split('|');\n    const rows = cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : [];\n    const item = {\n      type: 'table',\n      raw: cap[0],\n      header: [],\n      align: [],\n      rows: []\n    };\n    if (headers.length !== aligns.length) {\n      // header and align columns must be equal, rows can be different.\n      return;\n    }\n    for (const align of aligns) {\n      if (/^ *-+: *$/.test(align)) {\n        item.align.push('right');\n      } else if (/^ *:-+: *$/.test(align)) {\n        item.align.push('center');\n      } else if (/^ *:-+ *$/.test(align)) {\n        item.align.push('left');\n      } else {\n        item.align.push(null);\n      }\n    }\n    for (const header of headers) {\n      item.header.push({\n        text: header,\n        tokens: this.lexer.inline(header)\n      });\n    }\n    for (const row of rows) {\n      item.rows.push(splitCells(row, item.header.length).map(cell => {\n        return {\n          text: cell,\n          tokens: this.lexer.inline(cell)\n        };\n      }));\n    }\n    return item;\n  }\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape$1(cap[1])\n      };\n    }\n  }\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n      return {\n        type: 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        block: false,\n        text: cap[0]\n      };\n    }\n  }\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!/>$/.test(trimmedUrl)) {\n          return;\n        }\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline.anyPunctuation, '$1') : href,\n        title: title ? title.replace(this.rules.inline.anyPunctuation, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n      const linkString = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      const link = links[linkString.toLowerCase()];\n      if (!link) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrongLDelim.exec(src);\n    if (!match) return;\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n    const nextChar = match[1] || match[2] || '';\n    if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n      // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)\n      const lLength = [...match[0]].length - 1;\n      let rDelim,\n        rLength,\n        delimTotal = lLength,\n        midDelimTotal = 0;\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;\n      endReg.lastIndex = 0;\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n        if (!rDelim) continue; // skip single * in __abc*abc__\n        rLength = [...rDelim].length;\n        if (match[3] || match[4]) {\n          // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) {\n          // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n        delimTotal -= rLength;\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n        // char length can be >1 for unicode characters;\n        const lastCharLength = [...match[0]][0].length;\n        const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = raw.slice(1, -1);\n          return {\n            type: 'em',\n            raw,\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = raw.slice(2, -2);\n        return {\n          type: 'strong',\n          raw,\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape$1(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n  autolink(src) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape$1(cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape$1(cap[1]);\n        href = text;\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [{\n          type: 'text',\n          raw: text,\n          text\n        }]\n      };\n    }\n  }\n  url(src) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape$1(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])?.[0] ?? '';\n        } while (prevCapZero !== cap[0]);\n        text = escape$1(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + cap[0];\n        } else {\n          href = cap[0];\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [{\n          type: 'text',\n          raw: text,\n          text\n        }]\n      };\n    }\n  }\n  inlineText(src) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = cap[0];\n      } else {\n        text = escape$1(cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst newline = /^(?: *(?:\\n|$))+/;\nconst blockCode = /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/;\nconst fences = /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/;\nconst hr = /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/;\nconst heading = /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/;\nconst bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nconst lheading = edit(/^(?!bull |blockCode|fences|blockquote|heading|html)((?:.|\\n(?!\\s*?\\n|bull |blockCode|fences|blockquote|heading|html))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/).replace(/bull/g, bullet) // lists can interrupt\n.replace(/blockCode/g, / {4}/) // indented code blocks can interrupt\n.replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n.replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n.replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n.replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n.getRegex();\nconst _paragraph = /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/;\nconst blockText = /^[^\\n]+/;\nconst _blockLabel = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nconst def = edit(/^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/).replace('label', _blockLabel).replace('title', /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/).getRegex();\nconst list = edit(/^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/).replace(/bull/g, bullet).getRegex();\nconst _tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title' + '|tr|track|ul';\nconst _comment = /<!--(?:-?>|[\\s\\S]*?(?:-->|$))/;\nconst html = edit('^ {0,3}(?:' // optional indentation\n+ '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n+ '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n+ '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n+ '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n+ '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n+ '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n+ '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n+ '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n+ ')', 'i').replace('comment', _comment).replace('tag', _tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\nconst paragraph = edit(_paragraph).replace('hr', hr).replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)').replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n.replace('|table', '').replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n.replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n.getRegex();\nconst blockquote = edit(/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/).replace('paragraph', paragraph).getRegex();\n/**\n * Normal Block Grammar\n */\nconst blockNormal = {\n  blockquote,\n  code: blockCode,\n  def,\n  fences,\n  heading,\n  hr,\n  html,\n  lheading,\n  list,\n  newline,\n  paragraph,\n  table: noopTest,\n  text: blockText\n};\n/**\n * GFM Block Grammar\n */\nconst gfmTable = edit('^ *([^\\\\n ].*)\\\\n' // Header\n+ ' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)' // Align\n+ '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)') // Cells\n.replace('hr', hr).replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n.replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', _tag) // tables can be interrupted by type (6) html blocks\n.getRegex();\nconst blockGfm = {\n  ...blockNormal,\n  table: gfmTable,\n  paragraph: edit(_paragraph).replace('hr', hr).replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)').replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n  .replace('table', gfmTable) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n  .getRegex()\n};\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\nconst blockPedantic = {\n  ...blockNormal,\n  html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n  + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', _comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest,\n  // fences not supported\n  lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  paragraph: edit(_paragraph).replace('hr', hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', lheading).replace('|table', '').replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').replace('|tag', '').getRegex()\n};\n/**\n * Inline-Level Grammar\n */\nconst escape = /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/;\nconst inlineCode = /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/;\nconst br = /^( {2,}|\\\\)\\n(?!\\s*$)/;\nconst inlineText = /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/;\n// list of unicode punctuation marks, plus any missing characters from CommonMark spec\nconst _punctuation = '\\\\p{P}\\\\p{S}';\nconst punctuation = edit(/^((?![*_])[\\spunctuation])/, 'u').replace(/punctuation/g, _punctuation).getRegex();\n// sequences em should skip over [title](link), `code`, <html>\nconst blockSkip = /\\[[^[\\]]*?\\]\\([^\\(\\)]*?\\)|`[^`]*?`|<[^<>]*?>/g;\nconst emStrongLDelim = edit(/^(?:\\*+(?:((?!\\*)[punct])|[^\\s*]))|^_+(?:((?!_)[punct])|([^\\s_]))/, 'u').replace(/punct/g, _punctuation).getRegex();\nconst emStrongRDelimAst = edit('^[^_*]*?__[^_*]*?\\\\*[^_*]*?(?=__)' // Skip orphan inside strong\n+ '|[^*]+(?=[^*])' // Consume to delim\n+ '|(?!\\\\*)[punct](\\\\*+)(?=[\\\\s]|$)' // (1) #*** can only be a Right Delimiter\n+ '|[^punct\\\\s](\\\\*+)(?!\\\\*)(?=[punct\\\\s]|$)' // (2) a***#, a*** can only be a Right Delimiter\n+ '|(?!\\\\*)[punct\\\\s](\\\\*+)(?=[^punct\\\\s])' // (3) #***a, ***a can only be Left Delimiter\n+ '|[\\\\s](\\\\*+)(?!\\\\*)(?=[punct])' // (4) ***# can only be Left Delimiter\n+ '|(?!\\\\*)[punct](\\\\*+)(?!\\\\*)(?=[punct])' // (5) #***# can be either Left or Right Delimiter\n+ '|[^punct\\\\s](\\\\*+)(?=[^punct\\\\s])', 'gu') // (6) a***a can be either Left or Right Delimiter\n.replace(/punct/g, _punctuation).getRegex();\n// (6) Not allowed for _\nconst emStrongRDelimUnd = edit('^[^_*]*?\\\\*\\\\*[^_*]*?_[^_*]*?(?=\\\\*\\\\*)' // Skip orphan inside strong\n+ '|[^_]+(?=[^_])' // Consume to delim\n+ '|(?!_)[punct](_+)(?=[\\\\s]|$)' // (1) #___ can only be a Right Delimiter\n+ '|[^punct\\\\s](_+)(?!_)(?=[punct\\\\s]|$)' // (2) a___#, a___ can only be a Right Delimiter\n+ '|(?!_)[punct\\\\s](_+)(?=[^punct\\\\s])' // (3) #___a, ___a can only be Left Delimiter\n+ '|[\\\\s](_+)(?!_)(?=[punct])' // (4) ___# can only be Left Delimiter\n+ '|(?!_)[punct](_+)(?!_)(?=[punct])', 'gu') // (5) #___# can be either Left or Right Delimiter\n.replace(/punct/g, _punctuation).getRegex();\nconst anyPunctuation = edit(/\\\\([punct])/, 'gu').replace(/punct/g, _punctuation).getRegex();\nconst autolink = edit(/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/).replace('scheme', /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/).replace('email', /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/).getRegex();\nconst _inlineComment = edit(_comment).replace('(?:-->|$)', '-->').getRegex();\nconst tag = edit('^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n+ '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n+ '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n+ '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n+ '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>') // CDATA section\n.replace('comment', _inlineComment).replace('attribute', /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/).getRegex();\nconst _inlineLabel = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\nconst link = edit(/^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/).replace('label', _inlineLabel).replace('href', /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/).replace('title', /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/).getRegex();\nconst reflink = edit(/^!?\\[(label)\\]\\[(ref)\\]/).replace('label', _inlineLabel).replace('ref', _blockLabel).getRegex();\nconst nolink = edit(/^!?\\[(ref)\\](?:\\[\\])?/).replace('ref', _blockLabel).getRegex();\nconst reflinkSearch = edit('reflink|nolink(?!\\\\()', 'g').replace('reflink', reflink).replace('nolink', nolink).getRegex();\n/**\n * Normal Inline Grammar\n */\nconst inlineNormal = {\n  _backpedal: noopTest,\n  // only used for GFM url\n  anyPunctuation,\n  autolink,\n  blockSkip,\n  br,\n  code: inlineCode,\n  del: noopTest,\n  emStrongLDelim,\n  emStrongRDelimAst,\n  emStrongRDelimUnd,\n  escape,\n  link,\n  nolink,\n  punctuation,\n  reflink,\n  reflinkSearch,\n  tag,\n  text: inlineText,\n  url: noopTest\n};\n/**\n * Pedantic Inline Grammar\n */\nconst inlinePedantic = {\n  ...inlineNormal,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', _inlineLabel).getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', _inlineLabel).getRegex()\n};\n/**\n * GFM Inline Grammar\n */\nconst inlineGfm = {\n  ...inlineNormal,\n  escape: edit(escape).replace('])', '~|])').getRegex(),\n  url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/, 'i').replace('email', /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/).getRegex(),\n  _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n};\n/**\n * GFM + Line Breaks Inline Grammar\n */\nconst inlineBreaks = {\n  ...inlineGfm,\n  br: edit(br).replace('{2,}', '*').getRegex(),\n  text: edit(inlineGfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n};\n/**\n * exports\n */\nconst block = {\n  normal: blockNormal,\n  gfm: blockGfm,\n  pedantic: blockPedantic\n};\nconst inline = {\n  normal: inlineNormal,\n  gfm: inlineGfm,\n  breaks: inlineBreaks,\n  pedantic: inlinePedantic\n};\n\n/**\n * Block Lexer\n */\nclass _Lexer {\n  tokens;\n  options;\n  state;\n  tokenizer;\n  inlineQueue;\n  constructor(options) {\n    // TokenList cannot be created in one go\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || _defaults;\n    this.options.tokenizer = this.options.tokenizer || new _Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new _Lexer(options);\n    return lexer.lex(src);\n  }\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new _Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src.replace(/\\r\\n|\\r/g, '\\n');\n    this.blockTokens(src, this.tokens);\n    for (let i = 0; i < this.inlineQueue.length; i++) {\n      const next = this.inlineQueue[i];\n      this.inlineTokens(next.src, next.tokens);\n    }\n    this.inlineQueue = [];\n    return this.tokens;\n  }\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n    let token;\n    let lastToken;\n    let cutSrc;\n    let lastParagraphClipped;\n    while (src) {\n      if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(extTokenizer => {\n        if (token = extTokenizer.call({\n          lexer: this\n        }, src, tokens)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return true;\n        }\n        return false;\n      })) {\n        continue;\n      }\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unnecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(getStartIndex => {\n          tempStart = getStartIndex.call({\n            lexer: this\n          }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) {\n            startIndex = Math.min(startIndex, tempStart);\n          }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = cutSrc.length !== src.length;\n        src = src.substring(token.raw.length);\n        continue;\n      }\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n    this.state.top = true;\n    return tokens;\n  }\n  inline(src, tokens = []) {\n    this.inlineQueue.push({\n      src,\n      tokens\n    });\n    return tokens;\n  }\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n    // Mask out escaped characters\n    while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n    }\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n      // extensions\n      if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(extTokenizer => {\n        if (token = extTokenizer.call({\n          lexer: this\n        }, src, tokens)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return true;\n        }\n        return false;\n      })) {\n        continue;\n      }\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // autolink\n      if (token = this.tokenizer.autolink(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(getStartIndex => {\n          tempStart = getStartIndex.call({\n            lexer: this\n          }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) {\n            startIndex = Math.min(startIndex, tempStart);\n          }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') {\n          // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass _Renderer {\n  options;\n  constructor(options) {\n    this.options = options || _defaults;\n  }\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/^\\S*/)?.[0];\n    code = code.replace(/\\n$/, '') + '\\n';\n    if (!lang) {\n      return '<pre><code>' + (escaped ? code : escape$1(code, true)) + '</code></pre>\\n';\n    }\n    return '<pre><code class=\"language-' + escape$1(lang) + '\">' + (escaped ? code : escape$1(code, true)) + '</code></pre>\\n';\n  }\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n  html(html, block) {\n    return html;\n  }\n  heading(text, level, raw) {\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n  hr() {\n    return '<hr>\\n';\n  }\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul';\n    const startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n  listitem(text, task, checked) {\n    return `<li>${text}</li>\\n`;\n  }\n  checkbox(checked) {\n    return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\">';\n  }\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n    return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n  }\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align ? `<${type} align=\"${flags.align}\">` : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n  /**\n   * span level renderer\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n  br() {\n    return '<br>';\n  }\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n  link(href, title, text) {\n    const cleanHref = cleanUrl(href);\n    if (cleanHref === null) {\n      return text;\n    }\n    href = cleanHref;\n    let out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n  image(href, title, text) {\n    const cleanHref = cleanUrl(href);\n    if (cleanHref === null) {\n      return text;\n    }\n    href = cleanHref;\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += '>';\n    return out;\n  }\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass _TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n  em(text) {\n    return text;\n  }\n  codespan(text) {\n    return text;\n  }\n  del(text) {\n    return text;\n  }\n  html(text) {\n    return text;\n  }\n  text(text) {\n    return text;\n  }\n  link(href, title, text) {\n    return '' + text;\n  }\n  image(href, title, text) {\n    return '' + text;\n  }\n  br() {\n    return '';\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass _Parser {\n  options;\n  renderer;\n  textRenderer;\n  constructor(options) {\n    this.options = options || _defaults;\n    this.options.renderer = this.options.renderer || new _Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new _TextRenderer();\n  }\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new _Parser(options);\n    return parser.parse(tokens);\n  }\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new _Parser(options);\n    return parser.parseInline(tokens);\n  }\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '';\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        const genericToken = token;\n        const ret = this.options.extensions.renderers[genericToken.type].call({\n          parser: this\n        }, genericToken);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n      switch (token.type) {\n        case 'space':\n          {\n            continue;\n          }\n        case 'hr':\n          {\n            out += this.renderer.hr();\n            continue;\n          }\n        case 'heading':\n          {\n            const headingToken = token;\n            out += this.renderer.heading(this.parseInline(headingToken.tokens), headingToken.depth, unescape(this.parseInline(headingToken.tokens, this.textRenderer)));\n            continue;\n          }\n        case 'code':\n          {\n            const codeToken = token;\n            out += this.renderer.code(codeToken.text, codeToken.lang, !!codeToken.escaped);\n            continue;\n          }\n        case 'table':\n          {\n            const tableToken = token;\n            let header = '';\n            // header\n            let cell = '';\n            for (let j = 0; j < tableToken.header.length; j++) {\n              cell += this.renderer.tablecell(this.parseInline(tableToken.header[j].tokens), {\n                header: true,\n                align: tableToken.align[j]\n              });\n            }\n            header += this.renderer.tablerow(cell);\n            let body = '';\n            for (let j = 0; j < tableToken.rows.length; j++) {\n              const row = tableToken.rows[j];\n              cell = '';\n              for (let k = 0; k < row.length; k++) {\n                cell += this.renderer.tablecell(this.parseInline(row[k].tokens), {\n                  header: false,\n                  align: tableToken.align[k]\n                });\n              }\n              body += this.renderer.tablerow(cell);\n            }\n            out += this.renderer.table(header, body);\n            continue;\n          }\n        case 'blockquote':\n          {\n            const blockquoteToken = token;\n            const body = this.parse(blockquoteToken.tokens);\n            out += this.renderer.blockquote(body);\n            continue;\n          }\n        case 'list':\n          {\n            const listToken = token;\n            const ordered = listToken.ordered;\n            const start = listToken.start;\n            const loose = listToken.loose;\n            let body = '';\n            for (let j = 0; j < listToken.items.length; j++) {\n              const item = listToken.items[j];\n              const checked = item.checked;\n              const task = item.task;\n              let itemBody = '';\n              if (item.task) {\n                const checkbox = this.renderer.checkbox(!!checked);\n                if (loose) {\n                  if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                    item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                    if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                      item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                    }\n                  } else {\n                    item.tokens.unshift({\n                      type: 'text',\n                      text: checkbox + ' '\n                    });\n                  }\n                } else {\n                  itemBody += checkbox + ' ';\n                }\n              }\n              itemBody += this.parse(item.tokens, loose);\n              body += this.renderer.listitem(itemBody, task, !!checked);\n            }\n            out += this.renderer.list(body, ordered, start);\n            continue;\n          }\n        case 'html':\n          {\n            const htmlToken = token;\n            out += this.renderer.html(htmlToken.text, htmlToken.block);\n            continue;\n          }\n        case 'paragraph':\n          {\n            const paragraphToken = token;\n            out += this.renderer.paragraph(this.parseInline(paragraphToken.tokens));\n            continue;\n          }\n        case 'text':\n          {\n            let textToken = token;\n            let body = textToken.tokens ? this.parseInline(textToken.tokens) : textToken.text;\n            while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {\n              textToken = tokens[++i];\n              body += '\\n' + (textToken.tokens ? this.parseInline(textToken.tokens) : textToken.text);\n            }\n            out += top ? this.renderer.paragraph(body) : body;\n            continue;\n          }\n        default:\n          {\n            const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n            if (this.options.silent) {\n              console.error(errMsg);\n              return '';\n            } else {\n              throw new Error(errMsg);\n            }\n          }\n      }\n    }\n    return out;\n  }\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '';\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        const ret = this.options.extensions.renderers[token.type].call({\n          parser: this\n        }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n      switch (token.type) {\n        case 'escape':\n          {\n            const escapeToken = token;\n            out += renderer.text(escapeToken.text);\n            break;\n          }\n        case 'html':\n          {\n            const tagToken = token;\n            out += renderer.html(tagToken.text);\n            break;\n          }\n        case 'link':\n          {\n            const linkToken = token;\n            out += renderer.link(linkToken.href, linkToken.title, this.parseInline(linkToken.tokens, renderer));\n            break;\n          }\n        case 'image':\n          {\n            const imageToken = token;\n            out += renderer.image(imageToken.href, imageToken.title, imageToken.text);\n            break;\n          }\n        case 'strong':\n          {\n            const strongToken = token;\n            out += renderer.strong(this.parseInline(strongToken.tokens, renderer));\n            break;\n          }\n        case 'em':\n          {\n            const emToken = token;\n            out += renderer.em(this.parseInline(emToken.tokens, renderer));\n            break;\n          }\n        case 'codespan':\n          {\n            const codespanToken = token;\n            out += renderer.codespan(codespanToken.text);\n            break;\n          }\n        case 'br':\n          {\n            out += renderer.br();\n            break;\n          }\n        case 'del':\n          {\n            const delToken = token;\n            out += renderer.del(this.parseInline(delToken.tokens, renderer));\n            break;\n          }\n        case 'text':\n          {\n            const textToken = token;\n            out += renderer.text(textToken.text);\n            break;\n          }\n        default:\n          {\n            const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n            if (this.options.silent) {\n              console.error(errMsg);\n              return '';\n            } else {\n              throw new Error(errMsg);\n            }\n          }\n      }\n    }\n    return out;\n  }\n}\nclass _Hooks {\n  options;\n  constructor(options) {\n    this.options = options || _defaults;\n  }\n  static passThroughHooks = new Set(['preprocess', 'postprocess', 'processAllTokens']);\n  /**\n   * Process markdown before marked\n   */\n  preprocess(markdown) {\n    return markdown;\n  }\n  /**\n   * Process HTML after marked is finished\n   */\n  postprocess(html) {\n    return html;\n  }\n  /**\n   * Process all tokens before walk tokens\n   */\n  processAllTokens(tokens) {\n    return tokens;\n  }\n}\nclass Marked {\n  defaults = _getDefaults();\n  options = this.setOptions;\n  parse = this.#parseMarkdown(_Lexer.lex, _Parser.parse);\n  parseInline = this.#parseMarkdown(_Lexer.lexInline, _Parser.parseInline);\n  Parser = _Parser;\n  Renderer = _Renderer;\n  TextRenderer = _TextRenderer;\n  Lexer = _Lexer;\n  Tokenizer = _Tokenizer;\n  Hooks = _Hooks;\n  constructor(...args) {\n    this.use(...args);\n  }\n  /**\n   * Run callback for every token\n   */\n  walkTokens(tokens, callback) {\n    let values = [];\n    for (const token of tokens) {\n      values = values.concat(callback.call(this, token));\n      switch (token.type) {\n        case 'table':\n          {\n            const tableToken = token;\n            for (const cell of tableToken.header) {\n              values = values.concat(this.walkTokens(cell.tokens, callback));\n            }\n            for (const row of tableToken.rows) {\n              for (const cell of row) {\n                values = values.concat(this.walkTokens(cell.tokens, callback));\n              }\n            }\n            break;\n          }\n        case 'list':\n          {\n            const listToken = token;\n            values = values.concat(this.walkTokens(listToken.items, callback));\n            break;\n          }\n        default:\n          {\n            const genericToken = token;\n            if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n              this.defaults.extensions.childTokens[genericToken.type].forEach(childTokens => {\n                const tokens = genericToken[childTokens].flat(Infinity);\n                values = values.concat(this.walkTokens(tokens, callback));\n              });\n            } else if (genericToken.tokens) {\n              values = values.concat(this.walkTokens(genericToken.tokens, callback));\n            }\n          }\n      }\n    }\n    return values;\n  }\n  use(...args) {\n    const extensions = this.defaults.extensions || {\n      renderers: {},\n      childTokens: {}\n    };\n    args.forEach(pack => {\n      // copy options to new object\n      const opts = {\n        ...pack\n      };\n      // set async to true if it was set to true before\n      opts.async = this.defaults.async || opts.async || false;\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        pack.extensions.forEach(ext => {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n          if ('renderer' in ext) {\n            // Renderer extensions\n            const prevRenderer = extensions.renderers[ext.name];\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function (...args) {\n                let ret = ext.renderer.apply(this, args);\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n          if ('tokenizer' in ext) {\n            // Tokenizer Extensions\n            if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n            const extLevel = extensions[ext.level];\n            if (extLevel) {\n              extLevel.unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n            if (ext.start) {\n              // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n          if ('childTokens' in ext && ext.childTokens) {\n            // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n        opts.extensions = extensions;\n      }\n      // ==-- Parse \"overwrite\" extensions --== //\n      if (pack.renderer) {\n        const renderer = this.defaults.renderer || new _Renderer(this.defaults);\n        for (const prop in pack.renderer) {\n          if (!(prop in renderer)) {\n            throw new Error(`renderer '${prop}' does not exist`);\n          }\n          if (prop === 'options') {\n            // ignore options property\n            continue;\n          }\n          const rendererProp = prop;\n          const rendererFunc = pack.renderer[rendererProp];\n          const prevRenderer = renderer[rendererProp];\n          // Replace renderer with func to run extension, but fall back if false\n          renderer[rendererProp] = (...args) => {\n            let ret = rendererFunc.apply(renderer, args);\n            if (ret === false) {\n              ret = prevRenderer.apply(renderer, args);\n            }\n            return ret || '';\n          };\n        }\n        opts.renderer = renderer;\n      }\n      if (pack.tokenizer) {\n        const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);\n        for (const prop in pack.tokenizer) {\n          if (!(prop in tokenizer)) {\n            throw new Error(`tokenizer '${prop}' does not exist`);\n          }\n          if (['options', 'rules', 'lexer'].includes(prop)) {\n            // ignore options, rules, and lexer properties\n            continue;\n          }\n          const tokenizerProp = prop;\n          const tokenizerFunc = pack.tokenizer[tokenizerProp];\n          const prevTokenizer = tokenizer[tokenizerProp];\n          // Replace tokenizer with func to run extension, but fall back if false\n          // @ts-expect-error cannot type tokenizer function dynamically\n          tokenizer[tokenizerProp] = (...args) => {\n            let ret = tokenizerFunc.apply(tokenizer, args);\n            if (ret === false) {\n              ret = prevTokenizer.apply(tokenizer, args);\n            }\n            return ret;\n          };\n        }\n        opts.tokenizer = tokenizer;\n      }\n      // ==-- Parse Hooks extensions --== //\n      if (pack.hooks) {\n        const hooks = this.defaults.hooks || new _Hooks();\n        for (const prop in pack.hooks) {\n          if (!(prop in hooks)) {\n            throw new Error(`hook '${prop}' does not exist`);\n          }\n          if (prop === 'options') {\n            // ignore options property\n            continue;\n          }\n          const hooksProp = prop;\n          const hooksFunc = pack.hooks[hooksProp];\n          const prevHook = hooks[hooksProp];\n          if (_Hooks.passThroughHooks.has(prop)) {\n            // @ts-expect-error cannot type hook function dynamically\n            hooks[hooksProp] = arg => {\n              if (this.defaults.async) {\n                return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {\n                  return prevHook.call(hooks, ret);\n                });\n              }\n              const ret = hooksFunc.call(hooks, arg);\n              return prevHook.call(hooks, ret);\n            };\n          } else {\n            // @ts-expect-error cannot type hook function dynamically\n            hooks[hooksProp] = (...args) => {\n              let ret = hooksFunc.apply(hooks, args);\n              if (ret === false) {\n                ret = prevHook.apply(hooks, args);\n              }\n              return ret;\n            };\n          }\n        }\n        opts.hooks = hooks;\n      }\n      // ==-- Parse WalkTokens extensions --== //\n      if (pack.walkTokens) {\n        const walkTokens = this.defaults.walkTokens;\n        const packWalktokens = pack.walkTokens;\n        opts.walkTokens = function (token) {\n          let values = [];\n          values.push(packWalktokens.call(this, token));\n          if (walkTokens) {\n            values = values.concat(walkTokens.call(this, token));\n          }\n          return values;\n        };\n      }\n      this.defaults = {\n        ...this.defaults,\n        ...opts\n      };\n    });\n    return this;\n  }\n  setOptions(opt) {\n    this.defaults = {\n      ...this.defaults,\n      ...opt\n    };\n    return this;\n  }\n  lexer(src, options) {\n    return _Lexer.lex(src, options ?? this.defaults);\n  }\n  parser(tokens, options) {\n    return _Parser.parse(tokens, options ?? this.defaults);\n  }\n  #parseMarkdown(lexer, parser) {\n    return (src, options) => {\n      const origOpt = {\n        ...options\n      };\n      const opt = {\n        ...this.defaults,\n        ...origOpt\n      };\n      // Show warning if an extension set async to true but the parse was called with async: false\n      if (this.defaults.async === true && origOpt.async === false) {\n        if (!opt.silent) {\n          console.warn('marked(): The async option was set to true by an extension. The async: false option sent to parse will be ignored.');\n        }\n        opt.async = true;\n      }\n      const throwError = this.#onError(!!opt.silent, !!opt.async);\n      // throw error in case of non string input\n      if (typeof src === 'undefined' || src === null) {\n        return throwError(new Error('marked(): input parameter is undefined or null'));\n      }\n      if (typeof src !== 'string') {\n        return throwError(new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected'));\n      }\n      if (opt.hooks) {\n        opt.hooks.options = opt;\n      }\n      if (opt.async) {\n        return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src).then(src => lexer(src, opt)).then(tokens => opt.hooks ? opt.hooks.processAllTokens(tokens) : tokens).then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens).then(tokens => parser(tokens, opt)).then(html => opt.hooks ? opt.hooks.postprocess(html) : html).catch(throwError);\n      }\n      try {\n        if (opt.hooks) {\n          src = opt.hooks.preprocess(src);\n        }\n        let tokens = lexer(src, opt);\n        if (opt.hooks) {\n          tokens = opt.hooks.processAllTokens(tokens);\n        }\n        if (opt.walkTokens) {\n          this.walkTokens(tokens, opt.walkTokens);\n        }\n        let html = parser(tokens, opt);\n        if (opt.hooks) {\n          html = opt.hooks.postprocess(html);\n        }\n        return html;\n      } catch (e) {\n        return throwError(e);\n      }\n    };\n  }\n  #onError(silent, async) {\n    return e => {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n      if (silent) {\n        const msg = '<p>An error occurred:</p><pre>' + escape$1(e.message + '', true) + '</pre>';\n        if (async) {\n          return Promise.resolve(msg);\n        }\n        return msg;\n      }\n      if (async) {\n        return Promise.reject(e);\n      }\n      throw e;\n    };\n  }\n}\nconst markedInstance = new Marked();\nfunction marked(src, opt) {\n  return markedInstance.parse(src, opt);\n}\n/**\n * Sets the default options.\n *\n * @param options Hash of options\n */\nmarked.options = marked.setOptions = function (options) {\n  markedInstance.setOptions(options);\n  marked.defaults = markedInstance.defaults;\n  changeDefaults(marked.defaults);\n  return marked;\n};\n/**\n * Gets the original marked default options.\n */\nmarked.getDefaults = _getDefaults;\nmarked.defaults = _defaults;\n/**\n * Use Extension\n */\nmarked.use = function (...args) {\n  markedInstance.use(...args);\n  marked.defaults = markedInstance.defaults;\n  changeDefaults(marked.defaults);\n  return marked;\n};\n/**\n * Run callback for every token\n */\nmarked.walkTokens = function (tokens, callback) {\n  return markedInstance.walkTokens(tokens, callback);\n};\n/**\n * Compiles markdown to HTML without enclosing `p` tag.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options\n * @return String of compiled HTML\n */\nmarked.parseInline = markedInstance.parseInline;\n/**\n * Expose\n */\nmarked.Parser = _Parser;\nmarked.parser = _Parser.parse;\nmarked.Renderer = _Renderer;\nmarked.TextRenderer = _TextRenderer;\nmarked.Lexer = _Lexer;\nmarked.lexer = _Lexer.lex;\nmarked.Tokenizer = _Tokenizer;\nmarked.Hooks = _Hooks;\nmarked.parse = marked;\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = _Parser.parse;\nconst lexer = _Lexer.lex;\nexport { _Hooks as Hooks, _Lexer as Lexer, Marked, _Parser as Parser, _Renderer as Renderer, _TextRenderer as TextRenderer, _Tokenizer as Tokenizer, _defaults as defaults, _getDefaults as getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","import { AsyncPipe, isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, InjectionToken, Pipe, PLATFORM_ID, Injectable, Inject, Optional, EventEmitter, Input, Output, SecurityContext, NgModule } from '@angular/core';\nimport { Subject, merge, of, timer } from 'rxjs';\nimport { switchMap, mapTo, distinctUntilChanged, shareReplay, startWith, map, takeUntil, first } from 'rxjs/operators';\nimport { Renderer, marked } from 'marked';\nexport { Renderer as MarkedRenderer } from 'marked';\nimport * as i1 from '@angular/common/http';\nimport * as i2 from '@angular/platform-browser';\nconst BUTTON_TEXT_COPY = 'Copy';\nconst BUTTON_TEXT_COPIED = 'Copied';\nclass ClipboardButtonComponent {\n  constructor() {\n    this._buttonClick$ = new Subject();\n    this.copied$ = this._buttonClick$.pipe(switchMap(() => merge(of(true), timer(3000).pipe(mapTo(false)))), distinctUntilChanged(), shareReplay(1));\n    this.copiedText$ = this.copied$.pipe(startWith(false), map(copied => copied ? BUTTON_TEXT_COPIED : BUTTON_TEXT_COPY));\n  }\n  onCopyToClipboardClick() {\n    this._buttonClick$.next();\n  }\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"18.0.0\",\n      ngImport: i0,\n      type: ClipboardButtonComponent,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.Component\n    });\n  }\n  static {\n    this.ɵcmp = i0.ɵɵngDeclareComponent({\n      minVersion: \"14.0.0\",\n      version: \"18.0.0\",\n      type: ClipboardButtonComponent,\n      isStandalone: true,\n      selector: \"markdown-clipboard\",\n      ngImport: i0,\n      template: `\n    <button\n      class=\"markdown-clipboard-button\"\n      [class.copied]=\"copied$ | async\"\n      (click)=\"onCopyToClipboardClick()\"\n    >{{ copiedText$ | async }}</button>\n  `,\n      isInline: true,\n      dependencies: [{\n        kind: \"pipe\",\n        type: AsyncPipe,\n        name: \"async\"\n      }],\n      changeDetection: i0.ChangeDetectionStrategy.OnPush\n    });\n  }\n}\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"18.0.0\",\n  ngImport: i0,\n  type: ClipboardButtonComponent,\n  decorators: [{\n    type: Component,\n    args: [{\n      selector: 'markdown-clipboard',\n      template: `\n    <button\n      class=\"markdown-clipboard-button\"\n      [class.copied]=\"copied$ | async\"\n      (click)=\"onCopyToClipboardClick()\"\n    >{{ copiedText$ | async }}</button>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      imports: [AsyncPipe]\n    }]\n  }]\n});\nconst CLIPBOARD_OPTIONS = new InjectionToken('CLIPBOARD_OPTIONS');\n\n/* eslint-disable */\nclass KatexSpecificOptions {}\nclass LanguagePipe {\n  transform(value, language) {\n    if (value == null) {\n      value = '';\n    }\n    if (language == null) {\n      language = '';\n    }\n    if (typeof value !== 'string') {\n      console.error(`LanguagePipe has been invoked with an invalid value type [${typeof value}]`);\n      return value;\n    }\n    if (typeof language !== 'string') {\n      console.error(`LanguagePipe has been invoked with an invalid parameter [${typeof language}]`);\n      return value;\n    }\n    return '```' + language + '\\n' + value + '\\n```';\n  }\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"18.0.0\",\n      ngImport: i0,\n      type: LanguagePipe,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.Pipe\n    });\n  }\n  static {\n    this.ɵpipe = i0.ɵɵngDeclarePipe({\n      minVersion: \"14.0.0\",\n      version: \"18.0.0\",\n      ngImport: i0,\n      type: LanguagePipe,\n      isStandalone: true,\n      name: \"language\"\n    });\n  }\n}\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"18.0.0\",\n  ngImport: i0,\n  type: LanguagePipe,\n  decorators: [{\n    type: Pipe,\n    args: [{\n      name: 'language',\n      standalone: true\n    }]\n  }]\n});\nvar PrismPlugin;\n(function (PrismPlugin) {\n  PrismPlugin[\"CommandLine\"] = \"command-line\";\n  PrismPlugin[\"LineHighlight\"] = \"line-highlight\";\n  PrismPlugin[\"LineNumbers\"] = \"line-numbers\";\n})(PrismPlugin || (PrismPlugin = {}));\nconst MARKED_EXTENSIONS = new InjectionToken('MARKED_EXTENSIONS');\nconst MARKED_OPTIONS = new InjectionToken('MARKED_OPTIONS');\n\n/* eslint-disable max-len */\nconst errorJoyPixelsNotLoaded = '[ngx-markdown] When using the `emoji` attribute you *have to* include Emoji-Toolkit files to `angular.json` or use imports. See README for more information';\nconst errorKatexNotLoaded = '[ngx-markdown] When using the `katex` attribute you *have to* include KaTeX files to `angular.json` or use imports. See README for more information';\nconst errorMermaidNotLoaded = '[ngx-markdown] When using the `mermaid` attribute you *have to* include Mermaid files to `angular.json` or use imports. See README for more information';\nconst errorClipboardNotLoaded = '[ngx-markdown] When using the `clipboard` attribute you *have to* include Clipboard files to `angular.json` or use imports. See README for more information';\nconst errorClipboardViewContainerRequired = '[ngx-markdown] When using the `clipboard` attribute you *have to* provide the `viewContainerRef` parameter to `MarkdownService.render()` function';\nconst errorSrcWithoutHttpClient = '[ngx-markdown] When using the `src` attribute you *have to* pass the `HttpClient` as a parameter of the `forRoot` method. See README for more information';\n/* eslint-enable max-len */\nconst SECURITY_CONTEXT = new InjectionToken('SECURITY_CONTEXT');\nclass ExtendedRenderer extends Renderer {\n  constructor() {\n    super(...arguments);\n    this.ɵNgxMarkdownRendererExtendedForExtensions = false;\n    this.ɵNgxMarkdownRendererExtendedForMermaid = false;\n  }\n}\nclass MarkdownService {\n  get options() {\n    return this._options;\n  }\n  set options(value) {\n    this._options = {\n      ...this.DEFAULT_MARKED_OPTIONS,\n      ...value\n    };\n  }\n  get renderer() {\n    return this.options.renderer;\n  }\n  set renderer(value) {\n    this.options.renderer = value;\n  }\n  constructor(clipboardOptions, extensions, options, platform, securityContext, http, sanitizer) {\n    this.clipboardOptions = clipboardOptions;\n    this.extensions = extensions;\n    this.platform = platform;\n    this.securityContext = securityContext;\n    this.http = http;\n    this.sanitizer = sanitizer;\n    this.DEFAULT_MARKED_OPTIONS = {\n      renderer: new Renderer()\n    };\n    this.DEFAULT_KATEX_OPTIONS = {\n      delimiters: [{\n        left: '$$',\n        right: '$$',\n        display: true\n      }, {\n        left: '$',\n        right: '$',\n        display: false\n      }, {\n        left: '\\\\(',\n        right: '\\\\)',\n        display: false\n      }, {\n        left: '\\\\begin{equation}',\n        right: '\\\\end{equation}',\n        display: true\n      }, {\n        left: '\\\\begin{align}',\n        right: '\\\\end{align}',\n        display: true\n      }, {\n        left: '\\\\begin{alignat}',\n        right: '\\\\end{alignat}',\n        display: true\n      }, {\n        left: '\\\\begin{gather}',\n        right: '\\\\end{gather}',\n        display: true\n      }, {\n        left: '\\\\begin{CD}',\n        right: '\\\\end{CD}',\n        display: true\n      }, {\n        left: '\\\\[',\n        right: '\\\\]',\n        display: true\n      }]\n    };\n    this.DEFAULT_MERMAID_OPTIONS = {\n      startOnLoad: false\n    };\n    this.DEFAULT_CLIPBOARD_OPTIONS = {\n      buttonComponent: undefined\n    };\n    this.DEFAULT_PARSE_OPTIONS = {\n      decodeHtml: false,\n      inline: false,\n      emoji: false,\n      mermaid: false,\n      markedOptions: undefined,\n      disableSanitizer: false\n    };\n    this.DEFAULT_RENDER_OPTIONS = {\n      clipboard: false,\n      clipboardOptions: undefined,\n      katex: false,\n      katexOptions: undefined,\n      mermaid: false,\n      mermaidOptions: undefined\n    };\n    this._reload$ = new Subject();\n    this.reload$ = this._reload$.asObservable();\n    this.options = options;\n  }\n  parse(markdown, parseOptions = this.DEFAULT_PARSE_OPTIONS) {\n    const {\n      decodeHtml,\n      inline,\n      emoji,\n      mermaid,\n      disableSanitizer\n    } = parseOptions;\n    const markedOptions = {\n      ...this.options,\n      ...parseOptions.markedOptions\n    };\n    const renderer = markedOptions.renderer || this.renderer || new Renderer();\n    if (this.extensions) {\n      this.renderer = this.extendsRendererForExtensions(renderer);\n    }\n    if (mermaid) {\n      this.renderer = this.extendsRendererForMermaid(renderer);\n    }\n    const trimmed = this.trimIndentation(markdown);\n    const decoded = decodeHtml ? this.decodeHtml(trimmed) : trimmed;\n    const emojified = emoji ? this.parseEmoji(decoded) : decoded;\n    const marked = this.parseMarked(emojified, markedOptions, inline);\n    const sanitized = disableSanitizer ? marked : this.sanitizer.sanitize(this.securityContext, marked);\n    return sanitized || '';\n  }\n  render(element, options = this.DEFAULT_RENDER_OPTIONS, viewContainerRef) {\n    const {\n      clipboard,\n      clipboardOptions,\n      katex,\n      katexOptions,\n      mermaid,\n      mermaidOptions\n    } = options;\n    if (katex) {\n      this.renderKatex(element, {\n        ...this.DEFAULT_KATEX_OPTIONS,\n        ...katexOptions\n      });\n    }\n    if (mermaid) {\n      this.renderMermaid(element, {\n        ...this.DEFAULT_MERMAID_OPTIONS,\n        ...mermaidOptions\n      });\n    }\n    if (clipboard) {\n      this.renderClipboard(element, viewContainerRef, {\n        ...this.DEFAULT_CLIPBOARD_OPTIONS,\n        ...this.clipboardOptions,\n        ...clipboardOptions\n      });\n    }\n    this.highlight(element);\n  }\n  reload() {\n    this._reload$.next();\n  }\n  getSource(src) {\n    if (!this.http) {\n      throw new Error(errorSrcWithoutHttpClient);\n    }\n    return this.http.get(src, {\n      responseType: 'text'\n    }).pipe(map(markdown => this.handleExtension(src, markdown)));\n  }\n  highlight(element) {\n    if (!isPlatformBrowser(this.platform)) {\n      return;\n    }\n    if (typeof Prism === 'undefined' || typeof Prism.highlightAllUnder === 'undefined') {\n      return;\n    }\n    if (!element) {\n      element = document;\n    }\n    const noLanguageElements = element.querySelectorAll('pre code:not([class*=\"language-\"])');\n    Array.prototype.forEach.call(noLanguageElements, x => x.classList.add('language-none'));\n    Prism.highlightAllUnder(element);\n  }\n  decodeHtml(html) {\n    if (!isPlatformBrowser(this.platform)) {\n      return html;\n    }\n    const textarea = document.createElement('textarea');\n    textarea.innerHTML = html;\n    return textarea.value;\n  }\n  extendsRendererForExtensions(renderer) {\n    const extendedRenderer = renderer;\n    if (extendedRenderer.ɵNgxMarkdownRendererExtendedForExtensions === true) {\n      return renderer;\n    }\n    if (this.extensions?.length > 0) {\n      marked.use(...this.extensions);\n    }\n    extendedRenderer.ɵNgxMarkdownRendererExtendedForExtensions = true;\n    return renderer;\n  }\n  extendsRendererForMermaid(renderer) {\n    const extendedRenderer = renderer;\n    if (extendedRenderer.ɵNgxMarkdownRendererExtendedForMermaid === true) {\n      return renderer;\n    }\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const defaultCode = renderer.code;\n    renderer.code = function (code, language, isEscaped) {\n      return language === 'mermaid' ? `<div class=\"mermaid\">${code}</div>` : defaultCode.call(this, code, language, isEscaped);\n    };\n    extendedRenderer.ɵNgxMarkdownRendererExtendedForMermaid = true;\n    return renderer;\n  }\n  handleExtension(src, markdown) {\n    const urlProtocolIndex = src.lastIndexOf('://');\n    const urlWithoutProtocol = urlProtocolIndex > -1 ? src.substring(urlProtocolIndex + 4) : src;\n    const lastSlashIndex = urlWithoutProtocol.lastIndexOf('/');\n    const lastUrlSegment = lastSlashIndex > -1 ? urlWithoutProtocol.substring(lastSlashIndex + 1).split('?')[0] : '';\n    const lastDotIndex = lastUrlSegment.lastIndexOf('.');\n    const extension = lastDotIndex > -1 ? lastUrlSegment.substring(lastDotIndex + 1) : '';\n    return !!extension && extension !== 'md' ? '```' + extension + '\\n' + markdown + '\\n```' : markdown;\n  }\n  parseMarked(html, markedOptions, inline = false) {\n    if (markedOptions.renderer) {\n      // clone renderer and remove extended flags otherwise\n      // marked throws an error thinking it is a renderer prop\n      const renderer = {\n        ...markedOptions.renderer\n      };\n      delete renderer.ɵNgxMarkdownRendererExtendedForExtensions;\n      delete renderer.ɵNgxMarkdownRendererExtendedForMermaid;\n      // remove renderer from markedOptions because if renderer is\n      // passed to marked.parse method, it will ignore all extensions\n      delete markedOptions.renderer;\n      marked.use({\n        renderer\n      });\n    }\n    return inline ? marked.parseInline(html, markedOptions) : marked.parse(html, markedOptions);\n  }\n  parseEmoji(html) {\n    if (!isPlatformBrowser(this.platform)) {\n      return html;\n    }\n    if (typeof joypixels === 'undefined' || typeof joypixels.shortnameToUnicode === 'undefined') {\n      throw new Error(errorJoyPixelsNotLoaded);\n    }\n    return joypixels.shortnameToUnicode(html);\n  }\n  renderKatex(element, options) {\n    if (!isPlatformBrowser(this.platform)) {\n      return;\n    }\n    if (typeof katex === 'undefined' || typeof renderMathInElement === 'undefined') {\n      throw new Error(errorKatexNotLoaded);\n    }\n    renderMathInElement(element, options);\n  }\n  renderClipboard(element, viewContainerRef, options) {\n    if (!isPlatformBrowser(this.platform)) {\n      return;\n    }\n    if (typeof ClipboardJS === 'undefined') {\n      throw new Error(errorClipboardNotLoaded);\n    }\n    if (!viewContainerRef) {\n      throw new Error(errorClipboardViewContainerRequired);\n    }\n    const {\n      buttonComponent,\n      buttonTemplate\n    } = options;\n    // target every <pre> elements\n    const preElements = element.querySelectorAll('pre');\n    for (let i = 0; i < preElements.length; i++) {\n      const preElement = preElements.item(i);\n      // create <pre> wrapper element\n      const preWrapperElement = document.createElement('div');\n      preWrapperElement.style.position = 'relative';\n      preElement.parentNode.insertBefore(preWrapperElement, preElement);\n      preWrapperElement.appendChild(preElement);\n      // create toolbar element\n      const toolbarWrapperElement = document.createElement('div');\n      toolbarWrapperElement.classList.add('markdown-clipboard-toolbar');\n      toolbarWrapperElement.style.position = 'absolute';\n      toolbarWrapperElement.style.top = '.5em';\n      toolbarWrapperElement.style.right = '.5em';\n      toolbarWrapperElement.style.zIndex = '1';\n      preWrapperElement.insertAdjacentElement('beforeend', toolbarWrapperElement);\n      // register listener to show/hide toolbar\n      preWrapperElement.onmouseenter = () => toolbarWrapperElement.classList.add('hover');\n      preWrapperElement.onmouseleave = () => toolbarWrapperElement.classList.remove('hover');\n      // declare embeddedViewRef holding variable\n      let embeddedViewRef;\n      // use provided component via input property\n      // or provided via ClipboardOptions provider\n      if (buttonComponent) {\n        const componentRef = viewContainerRef.createComponent(buttonComponent);\n        embeddedViewRef = componentRef.hostView;\n        componentRef.changeDetectorRef.markForCheck();\n      }\n      // use provided template via input property\n      else if (buttonTemplate) {\n        embeddedViewRef = viewContainerRef.createEmbeddedView(buttonTemplate);\n      }\n      // use default component\n      else {\n        const componentRef = viewContainerRef.createComponent(ClipboardButtonComponent);\n        embeddedViewRef = componentRef.hostView;\n        componentRef.changeDetectorRef.markForCheck();\n      }\n      // declare clipboard instance variable\n      let clipboardInstance;\n      // attach clipboard.js to root node\n      embeddedViewRef.rootNodes.forEach(node => {\n        toolbarWrapperElement.appendChild(node);\n        clipboardInstance = new ClipboardJS(node, {\n          text: () => preElement.innerText\n        });\n      });\n      // destroy clipboard instance when view is destroyed\n      embeddedViewRef.onDestroy(() => clipboardInstance.destroy());\n    }\n  }\n  renderMermaid(element, options = this.DEFAULT_MERMAID_OPTIONS) {\n    if (!isPlatformBrowser(this.platform)) {\n      return;\n    }\n    if (typeof mermaid === 'undefined' || typeof mermaid.initialize === 'undefined') {\n      throw new Error(errorMermaidNotLoaded);\n    }\n    const mermaidElements = element.querySelectorAll('.mermaid');\n    if (mermaidElements.length === 0) {\n      return;\n    }\n    mermaid.initialize(options);\n    mermaid.run({\n      nodes: mermaidElements\n    });\n  }\n  trimIndentation(markdown) {\n    if (!markdown) {\n      return '';\n    }\n    let indentStart;\n    return markdown.split('\\n').map(line => {\n      let lineIdentStart = indentStart;\n      if (line.length > 0) {\n        lineIdentStart = isNaN(lineIdentStart) ? line.search(/\\S|$/) : Math.min(line.search(/\\S|$/), lineIdentStart);\n      }\n      if (isNaN(indentStart)) {\n        indentStart = lineIdentStart;\n      }\n      return lineIdentStart ? line.substring(lineIdentStart) : line;\n    }).join('\\n');\n  }\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"18.0.0\",\n      ngImport: i0,\n      type: MarkdownService,\n      deps: [{\n        token: CLIPBOARD_OPTIONS,\n        optional: true\n      }, {\n        token: MARKED_EXTENSIONS,\n        optional: true\n      }, {\n        token: MARKED_OPTIONS,\n        optional: true\n      }, {\n        token: PLATFORM_ID\n      }, {\n        token: SECURITY_CONTEXT\n      }, {\n        token: i1.HttpClient,\n        optional: true\n      }, {\n        token: i2.DomSanitizer\n      }],\n      target: i0.ɵɵFactoryTarget.Injectable\n    });\n  }\n  static {\n    this.ɵprov = i0.ɵɵngDeclareInjectable({\n      minVersion: \"12.0.0\",\n      version: \"18.0.0\",\n      ngImport: i0,\n      type: MarkdownService\n    });\n  }\n}\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"18.0.0\",\n  ngImport: i0,\n  type: MarkdownService,\n  decorators: [{\n    type: Injectable\n  }],\n  ctorParameters: () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [CLIPBOARD_OPTIONS]\n    }, {\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MARKED_EXTENSIONS]\n    }, {\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MARKED_OPTIONS]\n    }, {\n      type: Optional\n    }]\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: i0.SecurityContext,\n    decorators: [{\n      type: Inject,\n      args: [SECURITY_CONTEXT]\n    }]\n  }, {\n    type: i1.HttpClient,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i2.DomSanitizer\n  }]\n});\nclass MarkdownComponent {\n  get disableSanitizer() {\n    return this._disableSanitizer;\n  }\n  set disableSanitizer(value) {\n    this._disableSanitizer = this.coerceBooleanProperty(value);\n  }\n  get inline() {\n    return this._inline;\n  }\n  set inline(value) {\n    this._inline = this.coerceBooleanProperty(value);\n  }\n  // Plugin - clipboard\n  get clipboard() {\n    return this._clipboard;\n  }\n  set clipboard(value) {\n    this._clipboard = this.coerceBooleanProperty(value);\n  }\n  // Plugin - emoji\n  get emoji() {\n    return this._emoji;\n  }\n  set emoji(value) {\n    this._emoji = this.coerceBooleanProperty(value);\n  }\n  // Plugin - katex\n  get katex() {\n    return this._katex;\n  }\n  set katex(value) {\n    this._katex = this.coerceBooleanProperty(value);\n  }\n  // Plugin - mermaid\n  get mermaid() {\n    return this._mermaid;\n  }\n  set mermaid(value) {\n    this._mermaid = this.coerceBooleanProperty(value);\n  }\n  // Plugin - lineHighlight\n  get lineHighlight() {\n    return this._lineHighlight;\n  }\n  set lineHighlight(value) {\n    this._lineHighlight = this.coerceBooleanProperty(value);\n  }\n  // Plugin - lineNumbers\n  get lineNumbers() {\n    return this._lineNumbers;\n  }\n  set lineNumbers(value) {\n    this._lineNumbers = this.coerceBooleanProperty(value);\n  }\n  // Plugin - commandLine\n  get commandLine() {\n    return this._commandLine;\n  }\n  set commandLine(value) {\n    this._commandLine = this.coerceBooleanProperty(value);\n  }\n  constructor(element, markdownService, viewContainerRef) {\n    this.element = element;\n    this.markdownService = markdownService;\n    this.viewContainerRef = viewContainerRef;\n    // Event emitters\n    this.error = new EventEmitter();\n    this.load = new EventEmitter();\n    this.ready = new EventEmitter();\n    this._clipboard = false;\n    this._commandLine = false;\n    this._disableSanitizer = false;\n    this._emoji = false;\n    this._inline = false;\n    this._katex = false;\n    this._lineHighlight = false;\n    this._lineNumbers = false;\n    this._mermaid = false;\n    this.destroyed$ = new Subject();\n  }\n  ngOnChanges() {\n    this.loadContent();\n  }\n  loadContent() {\n    if (this.data != null) {\n      this.handleData();\n      return;\n    }\n    if (this.src != null) {\n      this.handleSrc();\n      return;\n    }\n  }\n  ngAfterViewInit() {\n    if (!this.data && !this.src) {\n      this.handleTransclusion();\n    }\n    this.markdownService.reload$.pipe(takeUntil(this.destroyed$)).subscribe(() => this.loadContent());\n  }\n  ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n  async render(markdown, decodeHtml = false) {\n    const parsedOptions = {\n      decodeHtml,\n      inline: this.inline,\n      emoji: this.emoji,\n      mermaid: this.mermaid,\n      disableSanitizer: this.disableSanitizer\n    };\n    const renderOptions = {\n      clipboard: this.clipboard,\n      clipboardOptions: {\n        buttonComponent: this.clipboardButtonComponent,\n        buttonTemplate: this.clipboardButtonTemplate\n      },\n      katex: this.katex,\n      katexOptions: this.katexOptions,\n      mermaid: this.mermaid,\n      mermaidOptions: this.mermaidOptions\n    };\n    const parsed = await this.markdownService.parse(markdown, parsedOptions);\n    this.element.nativeElement.innerHTML = parsed;\n    this.handlePlugins();\n    this.markdownService.render(this.element.nativeElement, renderOptions, this.viewContainerRef);\n    this.ready.emit();\n  }\n  coerceBooleanProperty(value) {\n    return value != null && `${String(value)}` !== 'false';\n  }\n  handleData() {\n    this.render(this.data);\n  }\n  handleSrc() {\n    this.markdownService.getSource(this.src).subscribe({\n      next: markdown => {\n        this.render(markdown).then(() => {\n          this.load.emit(markdown);\n        });\n      },\n      error: error => this.error.emit(error)\n    });\n  }\n  handleTransclusion() {\n    this.render(this.element.nativeElement.innerHTML, true);\n  }\n  handlePlugins() {\n    if (this.commandLine) {\n      this.setPluginClass(this.element.nativeElement, PrismPlugin.CommandLine);\n      this.setPluginOptions(this.element.nativeElement, {\n        dataFilterOutput: this.filterOutput,\n        dataHost: this.host,\n        dataPrompt: this.prompt,\n        dataOutput: this.output,\n        dataUser: this.user\n      });\n    }\n    if (this.lineHighlight) {\n      this.setPluginOptions(this.element.nativeElement, {\n        dataLine: this.line,\n        dataLineOffset: this.lineOffset\n      });\n    }\n    if (this.lineNumbers) {\n      this.setPluginClass(this.element.nativeElement, PrismPlugin.LineNumbers);\n      this.setPluginOptions(this.element.nativeElement, {\n        dataStart: this.start\n      });\n    }\n  }\n  setPluginClass(element, plugin) {\n    const preElements = element.querySelectorAll('pre');\n    for (let i = 0; i < preElements.length; i++) {\n      const classes = plugin instanceof Array ? plugin : [plugin];\n      preElements.item(i).classList.add(...classes);\n    }\n  }\n  setPluginOptions(element, options) {\n    const preElements = element.querySelectorAll('pre');\n    for (let i = 0; i < preElements.length; i++) {\n      Object.keys(options).forEach(option => {\n        const attributeValue = options[option];\n        if (attributeValue) {\n          const attributeName = this.toLispCase(option);\n          preElements.item(i).setAttribute(attributeName, attributeValue.toString());\n        }\n      });\n    }\n  }\n  toLispCase(value) {\n    const upperChars = value.match(/([A-Z])/g);\n    if (!upperChars) {\n      return value;\n    }\n    let str = value.toString();\n    for (let i = 0, n = upperChars.length; i < n; i++) {\n      str = str.replace(new RegExp(upperChars[i]), '-' + upperChars[i].toLowerCase());\n    }\n    if (str.slice(0, 1) === '-') {\n      str = str.slice(1);\n    }\n    return str;\n  }\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"18.0.0\",\n      ngImport: i0,\n      type: MarkdownComponent,\n      deps: [{\n        token: i0.ElementRef\n      }, {\n        token: MarkdownService\n      }, {\n        token: i0.ViewContainerRef\n      }],\n      target: i0.ɵɵFactoryTarget.Component\n    });\n  }\n  static {\n    this.ɵcmp = i0.ɵɵngDeclareComponent({\n      minVersion: \"14.0.0\",\n      version: \"18.0.0\",\n      type: MarkdownComponent,\n      isStandalone: true,\n      selector: \"markdown, [markdown]\",\n      inputs: {\n        data: \"data\",\n        src: \"src\",\n        disableSanitizer: \"disableSanitizer\",\n        inline: \"inline\",\n        clipboard: \"clipboard\",\n        clipboardButtonComponent: \"clipboardButtonComponent\",\n        clipboardButtonTemplate: \"clipboardButtonTemplate\",\n        emoji: \"emoji\",\n        katex: \"katex\",\n        katexOptions: \"katexOptions\",\n        mermaid: \"mermaid\",\n        mermaidOptions: \"mermaidOptions\",\n        lineHighlight: \"lineHighlight\",\n        line: \"line\",\n        lineOffset: \"lineOffset\",\n        lineNumbers: \"lineNumbers\",\n        start: \"start\",\n        commandLine: \"commandLine\",\n        filterOutput: \"filterOutput\",\n        host: \"host\",\n        prompt: \"prompt\",\n        output: \"output\",\n        user: \"user\"\n      },\n      outputs: {\n        error: \"error\",\n        load: \"load\",\n        ready: \"ready\"\n      },\n      usesOnChanges: true,\n      ngImport: i0,\n      template: '<ng-content></ng-content>',\n      isInline: true\n    });\n  }\n}\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"18.0.0\",\n  ngImport: i0,\n  type: MarkdownComponent,\n  decorators: [{\n    type: Component,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/component-selector\n      selector: 'markdown, [markdown]',\n      template: '<ng-content></ng-content>',\n      standalone: true\n    }]\n  }],\n  ctorParameters: () => [{\n    type: i0.ElementRef\n  }, {\n    type: MarkdownService\n  }, {\n    type: i0.ViewContainerRef\n  }],\n  propDecorators: {\n    data: [{\n      type: Input\n    }],\n    src: [{\n      type: Input\n    }],\n    disableSanitizer: [{\n      type: Input\n    }],\n    inline: [{\n      type: Input\n    }],\n    clipboard: [{\n      type: Input\n    }],\n    clipboardButtonComponent: [{\n      type: Input\n    }],\n    clipboardButtonTemplate: [{\n      type: Input\n    }],\n    emoji: [{\n      type: Input\n    }],\n    katex: [{\n      type: Input\n    }],\n    katexOptions: [{\n      type: Input\n    }],\n    mermaid: [{\n      type: Input\n    }],\n    mermaidOptions: [{\n      type: Input\n    }],\n    lineHighlight: [{\n      type: Input\n    }],\n    line: [{\n      type: Input\n    }],\n    lineOffset: [{\n      type: Input\n    }],\n    lineNumbers: [{\n      type: Input\n    }],\n    start: [{\n      type: Input\n    }],\n    commandLine: [{\n      type: Input\n    }],\n    filterOutput: [{\n      type: Input\n    }],\n    host: [{\n      type: Input\n    }],\n    prompt: [{\n      type: Input\n    }],\n    output: [{\n      type: Input\n    }],\n    user: [{\n      type: Input\n    }],\n    error: [{\n      type: Output\n    }],\n    load: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }]\n  }\n});\nclass MarkdownPipe {\n  constructor(domSanitizer, elementRef, markdownService, viewContainerRef, zone) {\n    this.domSanitizer = domSanitizer;\n    this.elementRef = elementRef;\n    this.markdownService = markdownService;\n    this.viewContainerRef = viewContainerRef;\n    this.zone = zone;\n  }\n  async transform(value, options) {\n    if (value == null) {\n      return '';\n    }\n    if (typeof value !== 'string') {\n      console.error(`MarkdownPipe has been invoked with an invalid value type [${typeof value}]`);\n      return value;\n    }\n    const markdown = await this.markdownService.parse(value, options);\n    this.zone.onStable.pipe(first()).subscribe(() => this.markdownService.render(this.elementRef.nativeElement, options, this.viewContainerRef));\n    return this.domSanitizer.bypassSecurityTrustHtml(markdown);\n  }\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"18.0.0\",\n      ngImport: i0,\n      type: MarkdownPipe,\n      deps: [{\n        token: i2.DomSanitizer\n      }, {\n        token: i0.ElementRef\n      }, {\n        token: MarkdownService\n      }, {\n        token: i0.ViewContainerRef\n      }, {\n        token: i0.NgZone\n      }],\n      target: i0.ɵɵFactoryTarget.Pipe\n    });\n  }\n  static {\n    this.ɵpipe = i0.ɵɵngDeclarePipe({\n      minVersion: \"14.0.0\",\n      version: \"18.0.0\",\n      ngImport: i0,\n      type: MarkdownPipe,\n      isStandalone: true,\n      name: \"markdown\"\n    });\n  }\n}\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"18.0.0\",\n  ngImport: i0,\n  type: MarkdownPipe,\n  decorators: [{\n    type: Pipe,\n    args: [{\n      name: 'markdown',\n      standalone: true\n    }]\n  }],\n  ctorParameters: () => [{\n    type: i2.DomSanitizer\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: MarkdownService\n  }, {\n    type: i0.ViewContainerRef\n  }, {\n    type: i0.NgZone\n  }]\n});\nfunction provideMarkdown(markdownModuleConfig) {\n  return [MarkdownService, markdownModuleConfig?.loader ?? [], markdownModuleConfig?.clipboardOptions ?? [], markdownModuleConfig?.markedOptions ?? [], {\n    provide: MARKED_EXTENSIONS,\n    useValue: markdownModuleConfig?.markedExtensions ?? []\n  }, {\n    provide: SECURITY_CONTEXT,\n    useValue: markdownModuleConfig?.sanitize ?? SecurityContext.HTML\n  }];\n}\nconst sharedDeclarations = [ClipboardButtonComponent, LanguagePipe, MarkdownComponent, MarkdownPipe];\nclass MarkdownModule {\n  static forRoot(markdownModuleConfig) {\n    return {\n      ngModule: MarkdownModule,\n      providers: [provideMarkdown(markdownModuleConfig)]\n    };\n  }\n  static forChild() {\n    return {\n      ngModule: MarkdownModule\n    };\n  }\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"18.0.0\",\n      ngImport: i0,\n      type: MarkdownModule,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.NgModule\n    });\n  }\n  static {\n    this.ɵmod = i0.ɵɵngDeclareNgModule({\n      minVersion: \"14.0.0\",\n      version: \"18.0.0\",\n      ngImport: i0,\n      type: MarkdownModule,\n      imports: [CommonModule, ClipboardButtonComponent, LanguagePipe, MarkdownComponent, MarkdownPipe],\n      exports: [ClipboardButtonComponent, LanguagePipe, MarkdownComponent, MarkdownPipe]\n    });\n  }\n  static {\n    this.ɵinj = i0.ɵɵngDeclareInjector({\n      minVersion: \"12.0.0\",\n      version: \"18.0.0\",\n      ngImport: i0,\n      type: MarkdownModule,\n      imports: [CommonModule]\n    });\n  }\n}\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"18.0.0\",\n  ngImport: i0,\n  type: MarkdownModule,\n  decorators: [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ...sharedDeclarations],\n      exports: sharedDeclarations\n    }]\n  }]\n});\n\n/* eslint-disable */\nvar MermaidAPI;\n(function (MermaidAPI) {\n  let SecurityLevel;\n  (function (SecurityLevel) {\n    /**\n     * (default) tags in text are encoded, click functionality is disabled\n     */\n    SecurityLevel[\"Strict\"] = \"strict\";\n    /**\n     * tags in text are allowed, click functionality is enabled\n     */\n    SecurityLevel[\"Loose\"] = \"loose\";\n    /**\n     * html tags in text are allowed, (only script element is removed), click functionality is enabled\n     */\n    SecurityLevel[\"Antiscript\"] = \"antiscript\";\n    /**\n     * with this security level all rendering takes place in a sandboxed iframe.\n     * This prevent any javascript running in the context.\n     * This may hinder interactive functionality of the diagram like scripts,\n     * popups in sequence diagram or links to other tabs/targets etc.\n     */\n    SecurityLevel[\"Sandbox\"] = \"sandbox\";\n  })(SecurityLevel = MermaidAPI.SecurityLevel || (MermaidAPI.SecurityLevel = {}));\n  let Theme;\n  (function (Theme) {\n    /**\n     * Designed to modified, as the name implies it is supposed to be used as the base for making custom themes.\n     */\n    Theme[\"Base\"] = \"base\";\n    /**\n     * A theme full of light greens that is easy on the eyes.\n     */\n    Theme[\"Forest\"] = \"forest\";\n    /**\n     * A theme that would go well with other dark colored elements.\n     */\n    Theme[\"Dark\"] = \"dark\";\n    /**\n     *  The default theme for all diagrams.\n     */\n    Theme[\"Default\"] = \"default\";\n    /**\n     * The theme to be used for black and white printing\n     */\n    Theme[\"Neutral\"] = \"neutral\";\n  })(Theme = MermaidAPI.Theme || (MermaidAPI.Theme = {}));\n  let LogLevel;\n  (function (LogLevel) {\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\n    LogLevel[LogLevel[\"Warn\"] = 3] = \"Warn\";\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\n    LogLevel[LogLevel[\"Fatal\"] = 5] = \"Fatal\";\n  })(LogLevel = MermaidAPI.LogLevel || (MermaidAPI.LogLevel = {}));\n})(MermaidAPI || (MermaidAPI = {}));\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CLIPBOARD_OPTIONS, ClipboardButtonComponent, ExtendedRenderer, KatexSpecificOptions, LanguagePipe, MARKED_EXTENSIONS, MARKED_OPTIONS, MarkdownComponent, MarkdownModule, MarkdownPipe, MarkdownService, MermaidAPI, PrismPlugin, SECURITY_CONTEXT, errorClipboardNotLoaded, errorClipboardViewContainerRequired, errorJoyPixelsNotLoaded, errorKatexNotLoaded, errorMermaidNotLoaded, errorSrcWithoutHttpClient, provideMarkdown };\n"],"mappings":"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","names":["_getDefaults","_defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape$1","html","encode","unescapeTest","unescape","_","n","caret","edit","regex","opt","source","obj","name","val","valSource","cleanUrl","href","noopTest","splitCells","tableRow","count","row","match","offset","str","escaped","curr","cells","rtrim","c","invert","l","suffLen","currChar","findClosingBracket","b","level","i","outputLink","cap","link","raw","lexer","title","text","token","indentCodeCompensation","matchIndentToCode","indentToCode","node","matchIndentInNode","indentInNode","_Tokenizer","options","__publicField","src","trimmed","top","tokens","bull","isordered","list","itemRegex","itemContents","endsWithBlankLine","endEarly","line","t","nextLine","indent","blankLine","nextBulletRegex","hrRegex","fencesBeginRegex","headingBeginRegex","rawLine","istask","ischecked","spacers","hasMultipleLineBreaks","tag","headers","aligns","rows","item","align","header","cell","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","links","linkString","maskedSrc","prevChar","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","lastCharLength","hasNonSpaceChars","hasSpaceCharsOnBothEnds","prevCapZero","newline","blockCode","fences","hr","heading","bullet","lheading","_paragraph","blockText","_blockLabel","def","_tag","_comment","paragraph","blockquote","blockNormal","gfmTable","blockGfm","__spreadProps","__spreadValues","blockPedantic","escape","inlineCode","br","inlineText","_punctuation","punctuation","blockSkip","emStrongLDelim","emStrongRDelimAst","emStrongRDelimUnd","anyPunctuation","autolink","_inlineComment","_inlineLabel","reflink","nolink","reflinkSearch","inlineNormal","inlinePedantic","inlineGfm","inlineBreaks","block","inline","_Lexer","__Lexer","rules","next","leading","tabs","lastToken","cutSrc","lastParagraphClipped","extTokenizer","startIndex","tempSrc","tempStart","getStartIndex","errMsg","keepPrevChar","_Renderer","code","infostring","lang","quote","body","ordered","start","type","startatt","task","checked","content","flags","cleanHref","out","_TextRenderer","_Parser","__Parser","genericToken","ret","headingToken","codeToken","tableToken","j","k","blockquoteToken","listToken","loose","itemBody","checkbox","htmlToken","paragraphToken","textToken","renderer","escapeToken","tagToken","linkToken","imageToken","strongToken","emToken","codespanToken","delToken","_Hooks","markdown","Marked","args","#parseMarkdown","callback","values","childTokens","extensions","pack","opts","ext","prevRenderer","extLevel","prop","rendererProp","rendererFunc","tokenizer","tokenizerProp","tokenizerFunc","prevTokenizer","hooks","hooksProp","hooksFunc","prevHook","arg","walkTokens","packWalktokens","parser","origOpt","throwError","#onError","e","silent","async","msg","markedInstance","marked","setOptions","use","parseInline","parser","_Parser","lexer","_Lexer","BUTTON_TEXT_COPY","BUTTON_TEXT_COPIED","_ClipboardButtonComponent","Subject","switchMap","merge","of","timer","mapTo","distinctUntilChanged","shareReplay","startWith","map","copied","ɵɵngDeclareFactory","core_exports","FactoryTarget","ɵɵngDeclareComponent","AsyncPipe","ChangeDetectionStrategy","ClipboardButtonComponent","ɵɵngDeclareClassMetadata","Component","CLIPBOARD_OPTIONS","InjectionToken","_LanguagePipe","value","language","ɵɵngDeclareFactory","core_exports","FactoryTarget","ɵɵngDeclarePipe","LanguagePipe","ɵɵngDeclareClassMetadata","Pipe","PrismPlugin","MARKED_EXTENSIONS","InjectionToken","MARKED_OPTIONS","errorJoyPixelsNotLoaded","errorKatexNotLoaded","errorMermaidNotLoaded","errorClipboardNotLoaded","errorClipboardViewContainerRequired","errorSrcWithoutHttpClient","SECURITY_CONTEXT","_MarkdownService","value","__spreadValues","clipboardOptions","extensions","options","platform","securityContext","http","sanitizer","_Renderer","Subject","markdown","parseOptions","decodeHtml","inline","emoji","mermaid","disableSanitizer","markedOptions","renderer","trimmed","decoded","emojified","marked","element","viewContainerRef","clipboard","katex","katexOptions","mermaidOptions","src","errorSrcWithoutHttpClient","map","isPlatformBrowser","noLanguageElements","x","html","textarea","extendedRenderer","defaultCode","code","language","isEscaped","urlProtocolIndex","urlWithoutProtocol","lastSlashIndex","lastUrlSegment","lastDotIndex","extension","errorJoyPixelsNotLoaded","errorKatexNotLoaded","errorClipboardNotLoaded","errorClipboardViewContainerRequired","buttonComponent","buttonTemplate","preElements","i","preElement","preWrapperElement","toolbarWrapperElement","embeddedViewRef","componentRef","ClipboardButtonComponent","clipboardInstance","node","errorMermaidNotLoaded","mermaidElements","indentStart","line","lineIdentStart","ɵɵngDeclareFactory","core_exports","CLIPBOARD_OPTIONS","MARKED_EXTENSIONS","MARKED_OPTIONS","PLATFORM_ID","SECURITY_CONTEXT","HttpClient","DomSanitizer","FactoryTarget","ɵɵngDeclareInjectable","MarkdownService","ɵɵngDeclareClassMetadata","Injectable","Inject","Optional","SecurityContext","_MarkdownComponent","markdownService","EventEmitter","takeUntil","__async","parsedOptions","renderOptions","parsed","error","PrismPlugin","plugin","classes","option","attributeValue","attributeName","upperChars","str","n","ElementRef","ViewContainerRef","ɵɵngDeclareComponent","MarkdownComponent","Component","Input","Output","_MarkdownPipe","domSanitizer","elementRef","zone","first","NgZone","ɵɵngDeclarePipe","MarkdownPipe","Pipe","provideMarkdown","markdownModuleConfig","sharedDeclarations","LanguagePipe","_MarkdownModule","ɵɵngDeclareNgModule","CommonModule","ɵɵngDeclareInjector","MarkdownModule","NgModule","MermaidAPI","SecurityLevel","Theme","LogLevel"],"x_google_ignoreList":[0,1]}