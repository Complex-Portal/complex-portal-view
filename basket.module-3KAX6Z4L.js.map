{
  "version": 3,
  "sources": ["angular:jit:template:file:src/app/basket/basket.component.html", "angular:jit:style:file:src/app/basket/basket.component.css", "src/app/basket/basket.component.ts", "src/app/basket/basket.module.ts"],
  "sourcesContent": ["<div class=\"margin-top-large margin-bottom-large\">\n  <div *ngIf=\"!isComplexBasketEmpty()\" class=\"columns medium-12\">\n    <h2>Personal collection of favourite complexes\n\n      <a class=\"button primary columns medium-2 deleteAllButton float-right\"\n         (click)=\"deleteAllComplexes()\">\n        <i class=\"icon icon-common\" data-icon=\"\uF1F8\"></i>\n        Remove all complexes\n      </a>\n    </h2>\n    <h4>{{ getKeys(complexBasket).length }} complexes in your basket</h4>\n    <div class=\"row\">\n      <cp-complex-list-display-buttons\n        [displayType]=\"DisplayType\"\n        (displayTypeChange)=\"onDisplayTypeChange($event)\">\n      </cp-complex-list-display-buttons>\n    </div>\n    <table class=\"hover\" *ngIf=\"!this.isDisplayComplexNavigatorView()\">\n      <thead>\n      <tr>\n        <th>Name</th>\n        <th>ID</th>\n        <th>Organism</th>\n        <th></th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor=\"let key of getKeys(complexBasket)\" [class.predicted]=\"complexBasket[key].predicted\">\n        <td>\n          <a [routerLink]=\"['/complex', complexBasket[key].id]\">{{ complexBasket[key].name }}</a>\n          \u00B7 <b class=\"tag\">{{ !complexBasket[key].predicted ? 'Curated' : 'Predicted'}} complex</b>\n        </td>\n        <td>\n          {{ complexBasket[key].id }}\n        </td>\n        <td>\n          {{ complexBasket[key].organism }}\n        </td>\n        <td>\n          <!--          <a class=\"button primary columns medium-12\" (click)=\"deleteFromBasket(key)\"> <span-->\n          <!--            class=\"icon icon-functional\" data-icon=\"d\"></span></a>-->\n          <a class=\"button primary columns medium-12\" (click)=\"deleteFromBasket(key)\">\n            <i class=\"icon icon-common\" data-icon=\"\uF1F8\"></i>\n\n          </a>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n    <div *ngIf=\"isDisplayComplexNavigatorView()\" class=\"columns medium-12\">\n      <ng-container *ngIf=\"complexSearchBasket;else loadingSpinner\">\n        <div class=\"ComplexNavigator\"\n             [ngClass]=\"complexSearchBasket.totalNumberOfResults <=6 ? 'smallCN' : ''\">\n          <cp-complex-navigator\n            [complexSearch]=\"complexSearchBasket\"\n            [interactors]=\"allInteractorsInComplexSearchBasket\"\n            [canAddComplexesToBasket]=\"false\"\n            [canRemoveComplexesFromBasket]=\"true\"\n            (onComplexRemovedFromBasket)=\"deleteComplexFromBasket($event)\">\n          </cp-complex-navigator>\n        </div>\n      </ng-container>\n      <ng-template #loadingSpinner>\n        <cp-progress-spinner></cp-progress-spinner>\n      </ng-template>\n    </div>\n\n  </div>\n  <div *ngIf=\"isComplexBasketEmpty()\" class=\"columns medium-12\">\n    <div class=\"callout\">\n      <h3>Your basket is currently empty. :'(</h3>\n      <h5>Search for a complex and click on <i class=\"icon icon-common\" data-icon=\"\uF217\"></i> symbol to create your own\n        collection of favorite complexes.</h5>\n    </div>\n  </div>\n</div>\n", ".ComplexNavigator,.hover{width:70%;margin-left:auto;margin-right:auto}.basket-icons{margin-left:5px;margin-bottom:5px}.deleteAllButton{width:225px}h2{line-height:1}\n/*# sourceMappingURL=basket.component.css.map */\n", "import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {BasketService} from '../shared/basket/service/basket.service';\nimport {BasketItem} from '../shared/basket/model/basketItem';\nimport {ProgressBarComponent} from '../shared/loading-indicators/progress-bar/progress-bar.component';\nimport {Title} from '@angular/platform-browser';\nimport {ComplexPortalService} from '../complex/shared/service/complex-portal.service';\nimport {ComplexSearchResult} from '../complex/shared/model/complex-results/complex-search.model';\nimport {Interactor} from '../complex/shared/model/complex-results/interactor.model';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {\n  COMPLEX_NAVIGATOR_VIEW,\n  LIST_VIEW\n} from '../complex/complex-results/complex-navigator/complex-list-display-buttons/complex-list-display-buttons.component';\n\n@Component({\n  selector: 'cp-basket',\n  templateUrl: './basket.component.html',\n  styleUrls: ['./basket.component.css']\n})\nexport class BasketComponent implements OnInit, AfterViewInit {\n  private _complexBasket: { [name: string]: BasketItem };\n  complexSearchBasket: ComplexSearchResult = null;\n  allInteractorsInComplexSearchBasket: Interactor[] = [];\n  DisplayType: string;\n\n  constructor(private _basketService: BasketService,\n              private titleService: Title,\n              private complexPortalService: ComplexPortalService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this._complexBasket = this._basketService.complexBasket;\n  }\n\n  ngOnInit() {\n    this.titleService.setTitle('Complex Portal - Basket');\n    this.complexNavigatorLoading();\n    this.route.fragment.subscribe(fragment => {\n      if (fragment === COMPLEX_NAVIGATOR_VIEW) {\n        this.DisplayType = COMPLEX_NAVIGATOR_VIEW;\n      } else {\n        this.DisplayType = LIST_VIEW;\n      }\n    });\n  }\n\n  onDisplayTypeChange(displayType: string) {\n    if (this.DisplayType !== displayType) {\n      this.DisplayType = displayType;\n      this.router.navigate([], {\n        fragment: this.DisplayType\n      });\n    }\n  }\n\n  isDisplayComplexNavigatorView(): boolean {\n    return this.DisplayType === COMPLEX_NAVIGATOR_VIEW;\n  }\n\n  ngAfterViewInit(): void {\n    ProgressBarComponent.hide();\n  }\n\n  deleteFromBasket(key: string): void {\n    this._basketService.deleteFromBasket(key);\n    this.complexNavigatorLoading();\n  }\n\n  deleteComplexFromBasket(complexAc: string): void {\n    for (const key of this.getKeys(this.complexBasket)) {\n      if (this.complexBasket[key].id === complexAc) {\n        this._basketService.deleteFromBasket(key);\n      }\n    }\n    this.complexNavigatorLoading();\n  }\n\n  get complexBasket(): { [name: string]: BasketItem } {\n    return this._complexBasket;\n  }\n\n  set complexBasket(value: { [name: string]: BasketItem }) {\n    this._complexBasket = value;\n  }\n\n  public isComplexBasketEmpty(): boolean {\n    return this.getKeys(this._complexBasket).length === 0;\n\n  }\n\n  // Candidate for Util\n  public getKeys(object: any) {\n    return Object.keys(object);\n  }\n\n  private createQuery(object: any): string {\n    return 'complex_id:(' + Object.values(object).map((v: BasketItem) => '\"' + v.id + '\"').join(',') + ')';\n  }\n\n  private requestComplexesForNavigator() {\n    const pageSize = Object.values(this._complexBasket).length;\n    this.complexPortalService.findComplexNoFilters(this.createQuery(this._complexBasket), 1, pageSize)\n      .subscribe(complexSearch => {\n        this.complexSearchBasket = complexSearch;\n        if (this.complexSearchBasket.totalNumberOfResults !== 0) {\n          for (let i = 0; i < complexSearch.elements.length; i++) {\n            for (const component of complexSearch.elements[i].interactors) {\n              if (!this.allInteractorsInComplexSearchBasket.some(interactor => interactor.identifier === component.identifier)) {\n                this.allInteractorsInComplexSearchBasket.push(component);\n              }\n            }\n          }\n        }\n      });\n  }\n\n  complexNavigatorLoading() {\n    this.complexSearchBasket = null;\n    this.allInteractorsInComplexSearchBasket = [];\n    this.requestComplexesForNavigator();\n  }\n\n  deleteAllComplexes() {\n    Object.values(this._complexBasket).map((v: BasketItem) => this.deleteComplexFromBasket(v.id));\n  }\n\n}\n", "import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {BasketComponent} from './basket.component';\nimport {ComplexNavigatorModule} from '../complex/complex-results/complex-navigator/complex-navigator.module';\nimport {ProgressSpinnerComponent} from '../shared/loading-indicators/progress-spinner/progress-spinner.component';\n\n@NgModule({\n  imports: [RouterModule.forChild([\n    {path: '', component: BasketComponent}\n  ]),\n    CommonModule,\n    ComplexNavigatorModule,\n    ProgressSpinnerComponent\n  ],\n  declarations: [BasketComponent]\n})\nexport class BasketModule {\n}\n"],
  "mappings": "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",
  "names": ["basket_component_default", "basket_component_default", "BasketComponent", "_a", "_basketService", "titleService", "complexPortalService", "route", "router", "__publicField", "fragment", "COMPLEX_NAVIGATOR_VIEW", "LIST_VIEW", "displayType", "ProgressBarComponent", "key", "complexAc", "value", "object", "v", "pageSize", "complexSearch", "i", "component", "interactor", "__decorate", "Component", "basket_component_default", "BasketModule", "__decorate", "NgModule", "RouterModule", "BasketComponent", "CommonModule", "ComplexNavigatorModule", "ProgressSpinnerComponent"]
}
