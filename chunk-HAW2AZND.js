import{a as Ov}from"./chunk-ZVFB4VEC.js";import{a as Lv}from"./chunk-W2HQQ4M6.js";import{o as Dv,p as Rv}from"./chunk-4IXOWVSV.js";import{F as Fv,g as _v}from"./chunk-NJ2QIPD5.js";import{a as Pv}from"./chunk-CKFJORGZ.js";import{Fa as Fe,Ha as wt,Ia as br,Kb as $v,La as Ev,e as pr,f as po,g as ip,h as Z,i as B,ia as Qs,ib as wr,ja as Tt,kb as sb,s as Tv,v as kv,vb as Av,za as ti}from"./chunk-6GUMKFW7.js";var mS=pr((b7,pS)=>{pS.exports=ye;var mo=null;try{mo=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function ye(r,t,e){this.low=r|0,this.high=t|0,this.unsigned=!!e}ye.prototype.__isLong__;Object.defineProperty(ye.prototype,"__isLong__",{value:!0});function Vr(r){return(r&&r.__isLong__)===!0}ye.isLong=Vr;var rS={},oS={};function za(r,t){var e,o,n;return t?(r>>>=0,(n=0<=r&&r<256)&&(o=oS[r],o)?o:(e=be(r,(r|0)<0?-1:0,!0),n&&(oS[r]=e),e)):(r|=0,(n=-128<=r&&r<128)&&(o=rS[r],o)?o:(e=be(r,r<0?-1:0,!1),n&&(rS[r]=e),e))}ye.fromInt=za;function fo(r,t){if(isNaN(r))return t?Pa:ho;if(t){if(r<0)return Pa;if(r>=aS)return uS}else{if(r<=-sS)return Mr;if(r+1>=sS)return cS}return r<0?fo(-r,t).neg():be(r%kc|0,r/kc|0,t)}ye.fromNumber=fo;function be(r,t,e){return new ye(r,t,e)}ye.fromBits=be;var Rh=Math.pow;function bb(r,t,e){if(r.length===0)throw Error("empty string");if(r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return ho;if(typeof t=="number"?(e=t,t=!1):t=!!t,e=e||10,e<2||36<e)throw RangeError("radix");var o;if((o=r.indexOf("-"))>0)throw Error("interior hyphen");if(o===0)return bb(r.substring(1),t,e).neg();for(var n=fo(Rh(e,8)),s=ho,i=0;i<r.length;i+=8){var a=Math.min(8,r.length-i),l=parseInt(r.substring(i,i+a),e);if(a<8){var c=fo(Rh(e,a));s=s.mul(c).add(fo(l))}else s=s.mul(n),s=s.add(fo(l))}return s.unsigned=t,s}ye.fromString=bb;function zo(r,t){return typeof r=="number"?fo(r,t):typeof r=="string"?bb(r,t):be(r.low,r.high,typeof t=="boolean"?t:r.unsigned)}ye.fromValue=zo;var nS=65536,cP=1<<24,kc=nS*nS,aS=kc*kc,sS=aS/2,iS=za(cP),ho=za(0);ye.ZERO=ho;var Pa=za(0,!0);ye.UZERO=Pa;var Tc=za(1);ye.ONE=Tc;var lS=za(1,!0);ye.UONE=lS;var yb=za(-1);ye.NEG_ONE=yb;var cS=be(-1,2147483647,!1);ye.MAX_VALUE=cS;var uS=be(-1,-1,!0);ye.MAX_UNSIGNED_VALUE=uS;var Mr=be(0,-2147483648,!1);ye.MIN_VALUE=Mr;var ct=ye.prototype;ct.toInt=function(){return this.unsigned?this.low>>>0:this.low};ct.toNumber=function(){return this.unsigned?(this.high>>>0)*kc+(this.low>>>0):this.high*kc+(this.low>>>0)};ct.toString=function(t){if(t=t||10,t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Mr)){var e=fo(t),o=this.div(e),n=o.mul(e).sub(this);return o.toString(t)+n.toInt().toString(t)}else return"-"+this.neg().toString(t);for(var s=fo(Rh(t,6),this.unsigned),i=this,a="";;){var l=i.div(s),c=i.sub(l.mul(s)).toInt()>>>0,u=c.toString(t);if(i=l,i.isZero())return u+a;for(;u.length<6;)u="0"+u;a=""+u+a}};ct.getHighBits=function(){return this.high};ct.getHighBitsUnsigned=function(){return this.high>>>0};ct.getLowBits=function(){return this.low};ct.getLowBitsUnsigned=function(){return this.low>>>0};ct.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Mr)?64:this.neg().getNumBitsAbs();for(var t=this.high!=0?this.high:this.low,e=31;e>0&&!(t&1<<e);e--);return this.high!=0?e+33:e+1};ct.isZero=function(){return this.high===0&&this.low===0};ct.eqz=ct.isZero;ct.isNegative=function(){return!this.unsigned&&this.high<0};ct.isPositive=function(){return this.unsigned||this.high>=0};ct.isOdd=function(){return(this.low&1)===1};ct.isEven=function(){return(this.low&1)===0};ct.equals=function(t){return Vr(t)||(t=zo(t)),this.unsigned!==t.unsigned&&this.high>>>31===1&&t.high>>>31===1?!1:this.high===t.high&&this.low===t.low};ct.eq=ct.equals;ct.notEquals=function(t){return!this.eq(t)};ct.neq=ct.notEquals;ct.ne=ct.notEquals;ct.lessThan=function(t){return this.comp(t)<0};ct.lt=ct.lessThan;ct.lessThanOrEqual=function(t){return this.comp(t)<=0};ct.lte=ct.lessThanOrEqual;ct.le=ct.lessThanOrEqual;ct.greaterThan=function(t){return this.comp(t)>0};ct.gt=ct.greaterThan;ct.greaterThanOrEqual=function(t){return this.comp(t)>=0};ct.gte=ct.greaterThanOrEqual;ct.ge=ct.greaterThanOrEqual;ct.compare=function(t){if(Vr(t)||(t=zo(t)),this.eq(t))return 0;var e=this.isNegative(),o=t.isNegative();return e&&!o?-1:!e&&o?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1};ct.comp=ct.compare;ct.negate=function(){return!this.unsigned&&this.eq(Mr)?Mr:this.not().add(Tc)};ct.neg=ct.negate;ct.add=function(t){Vr(t)||(t=zo(t));var e=this.high>>>16,o=this.high&65535,n=this.low>>>16,s=this.low&65535,i=t.high>>>16,a=t.high&65535,l=t.low>>>16,c=t.low&65535,u=0,p=0,m=0,f=0;return f+=s+c,m+=f>>>16,f&=65535,m+=n+l,p+=m>>>16,m&=65535,p+=o+a,u+=p>>>16,p&=65535,u+=e+i,u&=65535,be(m<<16|f,u<<16|p,this.unsigned)};ct.subtract=function(t){return Vr(t)||(t=zo(t)),this.add(t.neg())};ct.sub=ct.subtract;ct.multiply=function(t){if(this.isZero())return ho;if(Vr(t)||(t=zo(t)),mo){var e=mo.mul(this.low,this.high,t.low,t.high);return be(e,mo.get_high(),this.unsigned)}if(t.isZero())return ho;if(this.eq(Mr))return t.isOdd()?Mr:ho;if(t.eq(Mr))return this.isOdd()?Mr:ho;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(iS)&&t.lt(iS))return fo(this.toNumber()*t.toNumber(),this.unsigned);var o=this.high>>>16,n=this.high&65535,s=this.low>>>16,i=this.low&65535,a=t.high>>>16,l=t.high&65535,c=t.low>>>16,u=t.low&65535,p=0,m=0,f=0,h=0;return h+=i*u,f+=h>>>16,h&=65535,f+=s*u,m+=f>>>16,f&=65535,f+=i*c,m+=f>>>16,f&=65535,m+=n*u,p+=m>>>16,m&=65535,m+=s*c,p+=m>>>16,m&=65535,m+=i*l,p+=m>>>16,m&=65535,p+=o*u+n*c+s*l+i*a,p&=65535,be(f<<16|h,p<<16|m,this.unsigned)};ct.mul=ct.multiply;ct.divide=function(t){if(Vr(t)||(t=zo(t)),t.isZero())throw Error("division by zero");if(mo){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;var e=(this.unsigned?mo.div_u:mo.div_s)(this.low,this.high,t.low,t.high);return be(e,mo.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Pa:ho;var o,n,s;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return Pa;if(t.gt(this.shru(1)))return lS;s=Pa}else{if(this.eq(Mr)){if(t.eq(Tc)||t.eq(yb))return Mr;if(t.eq(Mr))return Tc;var i=this.shr(1);return o=i.div(t).shl(1),o.eq(ho)?t.isNegative()?Tc:yb:(n=this.sub(t.mul(o)),s=o.add(n.div(t)),s)}else if(t.eq(Mr))return this.unsigned?Pa:ho;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();s=ho}for(n=this;n.gte(t);){o=Math.max(1,Math.floor(n.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(o)/Math.LN2),l=a<=48?1:Rh(2,a-48),c=fo(o),u=c.mul(t);u.isNegative()||u.gt(n);)o-=l,c=fo(o,this.unsigned),u=c.mul(t);c.isZero()&&(c=Tc),s=s.add(c),n=n.sub(u)}return s};ct.div=ct.divide;ct.modulo=function(t){if(Vr(t)||(t=zo(t)),mo){var e=(this.unsigned?mo.rem_u:mo.rem_s)(this.low,this.high,t.low,t.high);return be(e,mo.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))};ct.mod=ct.modulo;ct.rem=ct.modulo;ct.not=function(){return be(~this.low,~this.high,this.unsigned)};ct.and=function(t){return Vr(t)||(t=zo(t)),be(this.low&t.low,this.high&t.high,this.unsigned)};ct.or=function(t){return Vr(t)||(t=zo(t)),be(this.low|t.low,this.high|t.high,this.unsigned)};ct.xor=function(t){return Vr(t)||(t=zo(t)),be(this.low^t.low,this.high^t.high,this.unsigned)};ct.shiftLeft=function(t){return Vr(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?be(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):be(0,this.low<<t-32,this.unsigned)};ct.shl=ct.shiftLeft;ct.shiftRight=function(t){return Vr(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?be(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):be(this.high>>t-32,this.high>=0?0:-1,this.unsigned)};ct.shr=ct.shiftRight;ct.shiftRightUnsigned=function(t){if(Vr(t)&&(t=t.toInt()),t&=63,t===0)return this;var e=this.high;if(t<32){var o=this.low;return be(o>>>t|e<<32-t,e>>>t,this.unsigned)}else return t===32?be(e,0,this.unsigned):be(e>>>t-32,0,this.unsigned)};ct.shru=ct.shiftRightUnsigned;ct.shr_u=ct.shiftRightUnsigned;ct.toSigned=function(){return this.unsigned?be(this.low,this.high,!1):this};ct.toUnsigned=function(){return this.unsigned?this:be(this.low,this.high,!0)};ct.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()};ct.toBytesLE=function(){var t=this.high,e=this.low;return[e&255,e>>>8&255,e>>>16&255,e>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]};ct.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,e>>>24,e>>>16&255,e>>>8&255,e&255]};ye.fromBytes=function(t,e,o){return o?ye.fromBytesLE(t,e):ye.fromBytesBE(t,e)};ye.fromBytesLE=function(t,e){return new ye(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)};ye.fromBytesBE=function(t,e){return new ye(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)}});var ZS=pr((Oc,YS)=>{"use strict";var YP=function(){if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof global<"u")return global;throw new Error("unable to locate global object")},Ha=YP();YS.exports=Oc=Ha.fetch;Ha.fetch&&(Oc.default=Ha.fetch.bind(Ha));Oc.Headers=Ha.Headers;Oc.Request=Ha.Request;Oc.Response=Ha.Response});var JS=pr(()=>{});var CI=pr((wI,w0)=>{(function(r,t,e){function o(a){var l=this,c=i();l.next=function(){var u=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=u-(l.c=u|0)},l.c=1,l.s0=c(" "),l.s1=c(" "),l.s2=c(" "),l.s0-=c(a),l.s0<0&&(l.s0+=1),l.s1-=c(a),l.s1<0&&(l.s1+=1),l.s2-=c(a),l.s2<0&&(l.s2+=1),c=null}function n(a,l){return l.c=a.c,l.s0=a.s0,l.s1=a.s1,l.s2=a.s2,l}function s(a,l){var c=new o(a),u=l&&l.state,p=c.next;return p.int32=function(){return c.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,u&&(typeof u=="object"&&n(u,c),p.state=function(){return n(c,{})}),p}function i(){var a=4022871197,l=function(c){c=String(c);for(var u=0;u<c.length;u++){a+=c.charCodeAt(u);var p=.02519603282416938*a;a=p>>>0,p-=a,p*=a,a=p>>>0,p-=a,a+=p*4294967296}return(a>>>0)*23283064365386963e-26};return l}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.alea=s})(wI,typeof w0=="object"&&w0,typeof define=="function"&&define)});var SI=pr((vI,C0)=>{(function(r,t,e){function o(i){var a=this,l="";a.x=0,a.y=0,a.z=0,a.w=0,a.next=function(){var u=a.x^a.x<<11;return a.x=a.y,a.y=a.z,a.z=a.w,a.w^=a.w>>>19^u^u>>>8},i===(i|0)?a.x=i:l+=i;for(var c=0;c<l.length+64;c++)a.x^=l.charCodeAt(c)|0,a.next()}function n(i,a){return a.x=i.x,a.y=i.y,a.z=i.z,a.w=i.w,a}function s(i,a){var l=new o(i),c=a&&a.state,u=function(){return(l.next()>>>0)/4294967296};return u.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},u.int32=l.next,u.quick=u,c&&(typeof c=="object"&&n(c,l),u.state=function(){return n(l,{})}),u}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xor128=s})(vI,typeof C0=="object"&&C0,typeof define=="function"&&define)});var NI=pr((II,v0)=>{(function(r,t,e){function o(i){var a=this,l="";a.next=function(){var u=a.x^a.x>>>2;return a.x=a.y,a.y=a.z,a.z=a.w,a.w=a.v,(a.d=a.d+362437|0)+(a.v=a.v^a.v<<4^(u^u<<1))|0},a.x=0,a.y=0,a.z=0,a.w=0,a.v=0,i===(i|0)?a.x=i:l+=i;for(var c=0;c<l.length+64;c++)a.x^=l.charCodeAt(c)|0,c==l.length&&(a.d=a.x<<10^a.x>>>4),a.next()}function n(i,a){return a.x=i.x,a.y=i.y,a.z=i.z,a.w=i.w,a.v=i.v,a.d=i.d,a}function s(i,a){var l=new o(i),c=a&&a.state,u=function(){return(l.next()>>>0)/4294967296};return u.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},u.int32=l.next,u.quick=u,c&&(typeof c=="object"&&n(c,l),u.state=function(){return n(l,{})}),u}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xorwow=s})(II,typeof v0=="object"&&v0,typeof define=="function"&&define)});var kI=pr((TI,S0)=>{(function(r,t,e){function o(i){var a=this;a.next=function(){var c=a.x,u=a.i,p,m,f;return p=c[u],p^=p>>>7,m=p^p<<24,p=c[u+1&7],m^=p^p>>>10,p=c[u+3&7],m^=p^p>>>3,p=c[u+4&7],m^=p^p<<7,p=c[u+7&7],p=p^p<<13,m^=p^p<<9,c[u]=m,a.i=u+1&7,m};function l(c,u){var p,m,f=[];if(u===(u|0))m=f[0]=u;else for(u=""+u,p=0;p<u.length;++p)f[p&7]=f[p&7]<<15^u.charCodeAt(p)+f[p+1&7]<<13;for(;f.length<8;)f.push(0);for(p=0;p<8&&f[p]===0;++p);for(p==8?m=f[7]=-1:m=f[p],c.x=f,c.i=0,p=256;p>0;--p)c.next()}l(a,i)}function n(i,a){return a.x=i.x.slice(),a.i=i.i,a}function s(i,a){i==null&&(i=+new Date);var l=new o(i),c=a&&a.state,u=function(){return(l.next()>>>0)/4294967296};return u.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},u.int32=l.next,u.quick=u,c&&(c.x&&n(c,l),u.state=function(){return n(l,{})}),u}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xorshift7=s})(TI,typeof S0=="object"&&S0,typeof define=="function"&&define)});var AI=pr((EI,I0)=>{(function(r,t,e){function o(i){var a=this;a.next=function(){var c=a.w,u=a.X,p=a.i,m,f;return a.w=c=c+1640531527|0,f=u[p+34&127],m=u[p=p+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=u[p]=f^m,a.i=p,f+(c^c>>>16)|0};function l(c,u){var p,m,f,h,d,g=[],x=128;for(u===(u|0)?(m=u,u=null):(u=u+"\0",m=0,x=Math.max(x,u.length)),f=0,h=-32;h<x;++h)u&&(m^=u.charCodeAt((h+32)%u.length)),h===0&&(d=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,h>=0&&(d=d+1640531527|0,p=g[h&127]^=m+d,f=p==0?f+1:0);for(f>=128&&(g[(u&&u.length||0)&127]=-1),f=127,h=4*128;h>0;--h)m=g[f+34&127],p=g[f=f+1&127],m^=m<<13,p^=p<<17,m^=m>>>15,p^=p>>>12,g[f]=m^p;c.w=d,c.X=g,c.i=f}l(a,i)}function n(i,a){return a.i=i.i,a.w=i.w,a.X=i.X.slice(),a}function s(i,a){i==null&&(i=+new Date);var l=new o(i),c=a&&a.state,u=function(){return(l.next()>>>0)/4294967296};return u.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},u.int32=l.next,u.quick=u,c&&(c.X&&n(c,l),u.state=function(){return n(l,{})}),u}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xor4096=s})(EI,typeof I0=="object"&&I0,typeof define=="function"&&define)});var DI=pr(($I,N0)=>{(function(r,t,e){function o(i){var a=this,l="";a.next=function(){var u=a.b,p=a.c,m=a.d,f=a.a;return u=u<<25^u>>>7^p,p=p-m|0,m=m<<24^m>>>8^f,f=f-u|0,a.b=u=u<<20^u>>>12^p,a.c=p=p-m|0,a.d=m<<16^p>>>16^f,a.a=f-u|0},a.a=0,a.b=0,a.c=-1640531527,a.d=1367130551,i===Math.floor(i)?(a.a=i/4294967296|0,a.b=i|0):l+=i;for(var c=0;c<l.length+20;c++)a.b^=l.charCodeAt(c)|0,a.next()}function n(i,a){return a.a=i.a,a.b=i.b,a.c=i.c,a.d=i.d,a}function s(i,a){var l=new o(i),c=a&&a.state,u=function(){return(l.next()>>>0)/4294967296};return u.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},u.int32=l.next,u.quick=u,c&&(typeof c=="object"&&n(c,l),u.state=function(){return n(l,{})}),u}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.tychei=s})($I,typeof N0=="object"&&N0,typeof define=="function"&&define)});var RI=pr(()=>{});var FI=pr((_I,Jh)=>{(function(r,t,e){var o=256,n=6,s=52,i="random",a=e.pow(o,n),l=e.pow(2,s),c=l*2,u=o-1,p;function m(C,w,v){var E=[];w=w==!0?{entropy:!0}:w||{};var A=g(d(w.entropy?[C,b(t)]:C??x(),3),E),$=new f(E),F=function(){for(var L=$.g(n),M=a,V=0;L<l;)L=(L+V)*o,M*=o,V=$.g(1);for(;L>=c;)L/=2,M/=2,V>>>=1;return(L+V)/M};return F.int32=function(){return $.g(4)|0},F.quick=function(){return $.g(4)/4294967296},F.double=F,g(b($.S),t),(w.pass||v||function(L,M,V,G){return G&&(G.S&&h(G,$),L.state=function(){return h($,{})}),V?(e[i]=L,M):L})(F,A,"global"in w?w.global:this==e,w.state)}function f(C){var w,v=C.length,E=this,A=0,$=E.i=E.j=0,F=E.S=[];for(v||(C=[v++]);A<o;)F[A]=A++;for(A=0;A<o;A++)F[A]=F[$=u&$+C[A%v]+(w=F[A])],F[$]=w;(E.g=function(L){for(var M,V=0,G=E.i,W=E.j,U=E.S;L--;)M=U[G=u&G+1],V=V*o+U[u&(U[G]=U[W=u&W+M])+(U[W]=M)];return E.i=G,E.j=W,V})(o)}function h(C,w){return w.i=C.i,w.j=C.j,w.S=C.S.slice(),w}function d(C,w){var v=[],E=typeof C,A;if(w&&E=="object")for(A in C)try{v.push(d(C[A],w-1))}catch{}return v.length?v:E=="string"?C:C+"\0"}function g(C,w){for(var v=C+"",E,A=0;A<v.length;)w[u&A]=u&(E^=w[u&A]*19)+v.charCodeAt(A++);return b(w)}function x(){try{var C;return p&&(C=p.randomBytes)?C=C(o):(C=new Uint8Array(o),(r.crypto||r.msCrypto).getRandomValues(C)),b(C)}catch{var w=r.navigator,v=w&&w.plugins;return[+new Date,r,v,r.screen,b(t)]}}function b(C){return String.fromCharCode.apply(0,C)}if(g(e.random(),t),typeof Jh=="object"&&Jh.exports){Jh.exports=m;try{p=RI()}catch{}}else typeof define=="function"&&define.amd?define(function(){return m}):e["seed"+i]=m})(typeof self<"u"?self:_I,[],Math)});var Lp=pr((iut,OI)=>{var gB=CI(),xB=SI(),yB=NI(),bB=kI(),wB=AI(),CB=DI(),rl=FI();rl.alea=gB;rl.xor128=xB;rl.xorwow=yB;rl.xorshift7=bB;rl.xor4096=wB;rl.tychei=CB;OI.exports=rl});var $k=pr(Tg=>{"use strict";Tg.byteLength=_W;Tg.toByteArray=OW;Tg.fromByteArray=zW;var vn=[],Ao=[],RW=typeof Uint8Array<"u"?Uint8Array:Array,vw="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";for(yl=0,Ek=vw.length;yl<Ek;++yl)vn[yl]=vw[yl],Ao[vw.charCodeAt(yl)]=yl;var yl,Ek;Ao[45]=62;Ao[95]=63;function Ak(r){var t=r.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var e=r.indexOf("=");e===-1&&(e=t);var o=e===t?0:4-e%4;return[e,o]}function _W(r){var t=Ak(r),e=t[0],o=t[1];return(e+o)*3/4-o}function FW(r,t,e){return(t+e)*3/4-e}function OW(r){var t,e=Ak(r),o=e[0],n=e[1],s=new RW(FW(r,o,n)),i=0,a=n>0?o-4:o,l;for(l=0;l<a;l+=4)t=Ao[r.charCodeAt(l)]<<18|Ao[r.charCodeAt(l+1)]<<12|Ao[r.charCodeAt(l+2)]<<6|Ao[r.charCodeAt(l+3)],s[i++]=t>>16&255,s[i++]=t>>8&255,s[i++]=t&255;return n===2&&(t=Ao[r.charCodeAt(l)]<<2|Ao[r.charCodeAt(l+1)]>>4,s[i++]=t&255),n===1&&(t=Ao[r.charCodeAt(l)]<<10|Ao[r.charCodeAt(l+1)]<<4|Ao[r.charCodeAt(l+2)]>>2,s[i++]=t>>8&255,s[i++]=t&255),s}function LW(r){return vn[r>>18&63]+vn[r>>12&63]+vn[r>>6&63]+vn[r&63]}function PW(r,t,e){for(var o,n=[],s=t;s<e;s+=3)o=(r[s]<<16&16711680)+(r[s+1]<<8&65280)+(r[s+2]&255),n.push(LW(o));return n.join("")}function zW(r){for(var t,e=r.length,o=e%3,n=[],s=16383,i=0,a=e-o;i<a;i+=s)n.push(PW(r,i,i+s>a?a:i+s));return o===1?(t=r[e-1],n.push(vn[t>>2]+vn[t<<4&63]+"==")):o===2&&(t=(r[e-2]<<8)+r[e-1],n.push(vn[t>>10]+vn[t>>4&63]+vn[t<<2&63]+"=")),n.join("")}});var Dk=pr(Sw=>{Sw.read=function(r,t,e,o,n){var s,i,a=n*8-o-1,l=(1<<a)-1,c=l>>1,u=-7,p=e?n-1:0,m=e?-1:1,f=r[t+p];for(p+=m,s=f&(1<<-u)-1,f>>=-u,u+=a;u>0;s=s*256+r[t+p],p+=m,u-=8);for(i=s&(1<<-u)-1,s>>=-u,u+=o;u>0;i=i*256+r[t+p],p+=m,u-=8);if(s===0)s=1-c;else{if(s===l)return i?NaN:(f?-1:1)*(1/0);i=i+Math.pow(2,o),s=s-c}return(f?-1:1)*i*Math.pow(2,s-o)};Sw.write=function(r,t,e,o,n,s){var i,a,l,c=s*8-n-1,u=(1<<c)-1,p=u>>1,m=n===23?Math.pow(2,-24)-Math.pow(2,-77):0,f=o?0:s-1,h=o?1:-1,d=t<0||t===0&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(a=isNaN(t)?1:0,i=u):(i=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-i))<1&&(i--,l*=2),i+p>=1?t+=m/l:t+=m*Math.pow(2,1-p),t*l>=2&&(i++,l/=2),i+p>=u?(a=0,i=u):i+p>=1?(a=(t*l-1)*Math.pow(2,n),i=i+p):(a=t*Math.pow(2,p-1)*Math.pow(2,n),i=0));n>=8;r[e+f]=a&255,f+=h,a/=256,n-=8);for(i=i<<n|a,c+=n;c>0;r[e+f]=i&255,f+=h,i/=256,c-=8);r[e+f-h]|=d*128}});var Wk=pr(Ru=>{"use strict";var Iw=$k(),Du=Dk(),Rk=typeof Symbol=="function"&&typeof Symbol.for=="function"?Symbol.for("nodejs.util.inspect.custom"):null;Ru.Buffer=tt;Ru.SlowBuffer=WW;Ru.INSPECT_MAX_BYTES=50;var kg=2147483647;Ru.kMaxLength=kg;tt.TYPED_ARRAY_SUPPORT=BW();!tt.TYPED_ARRAY_SUPPORT&&typeof console<"u"&&typeof console.error=="function"&&console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");function BW(){try{var r=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(r,t),r.foo()===42}catch{return!1}}Object.defineProperty(tt.prototype,"parent",{enumerable:!0,get:function(){if(tt.isBuffer(this))return this.buffer}});Object.defineProperty(tt.prototype,"offset",{enumerable:!0,get:function(){if(tt.isBuffer(this))return this.byteOffset}});function Us(r){if(r>kg)throw new RangeError('The value "'+r+'" is invalid for option "size"');var t=new Uint8Array(r);return Object.setPrototypeOf(t,tt.prototype),t}function tt(r,t,e){if(typeof r=="number"){if(typeof t=="string")throw new TypeError('The "string" argument must be of type string. Received type number');return Ew(r)}return Ok(r,t,e)}tt.poolSize=8192;function Ok(r,t,e){if(typeof r=="string")return VW(r,t);if(ArrayBuffer.isView(r))return GW(r);if(r==null)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof r);if(Sn(r,ArrayBuffer)||r&&Sn(r.buffer,ArrayBuffer)||typeof SharedArrayBuffer<"u"&&(Sn(r,SharedArrayBuffer)||r&&Sn(r.buffer,SharedArrayBuffer)))return Tw(r,t,e);if(typeof r=="number")throw new TypeError('The "value" argument must not be of type number. Received type number');var o=r.valueOf&&r.valueOf();if(o!=null&&o!==r)return tt.from(o,t,e);var n=UW(r);if(n)return n;if(typeof Symbol<"u"&&Symbol.toPrimitive!=null&&typeof r[Symbol.toPrimitive]=="function")return tt.from(r[Symbol.toPrimitive]("string"),t,e);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof r)}tt.from=function(r,t,e){return Ok(r,t,e)};Object.setPrototypeOf(tt.prototype,Uint8Array.prototype);Object.setPrototypeOf(tt,Uint8Array);function Lk(r){if(typeof r!="number")throw new TypeError('"size" argument must be of type number');if(r<0)throw new RangeError('The value "'+r+'" is invalid for option "size"')}function MW(r,t,e){return Lk(r),r<=0?Us(r):t!==void 0?typeof e=="string"?Us(r).fill(t,e):Us(r).fill(t):Us(r)}tt.alloc=function(r,t,e){return MW(r,t,e)};function Ew(r){return Lk(r),Us(r<0?0:Aw(r)|0)}tt.allocUnsafe=function(r){return Ew(r)};tt.allocUnsafeSlow=function(r){return Ew(r)};function VW(r,t){if((typeof t!="string"||t==="")&&(t="utf8"),!tt.isEncoding(t))throw new TypeError("Unknown encoding: "+t);var e=Pk(r,t)|0,o=Us(e),n=o.write(r,t);return n!==e&&(o=o.slice(0,n)),o}function Nw(r){for(var t=r.length<0?0:Aw(r.length)|0,e=Us(t),o=0;o<t;o+=1)e[o]=r[o]&255;return e}function GW(r){if(Sn(r,Uint8Array)){var t=new Uint8Array(r);return Tw(t.buffer,t.byteOffset,t.byteLength)}return Nw(r)}function Tw(r,t,e){if(t<0||r.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(r.byteLength<t+(e||0))throw new RangeError('"length" is outside of buffer bounds');var o;return t===void 0&&e===void 0?o=new Uint8Array(r):e===void 0?o=new Uint8Array(r,t):o=new Uint8Array(r,t,e),Object.setPrototypeOf(o,tt.prototype),o}function UW(r){if(tt.isBuffer(r)){var t=Aw(r.length)|0,e=Us(t);return e.length===0||r.copy(e,0,0,t),e}if(r.length!==void 0)return typeof r.length!="number"||$w(r.length)?Us(0):Nw(r);if(r.type==="Buffer"&&Array.isArray(r.data))return Nw(r.data)}function Aw(r){if(r>=kg)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+kg.toString(16)+" bytes");return r|0}function WW(r){return+r!=r&&(r=0),tt.alloc(+r)}tt.isBuffer=function(t){return t!=null&&t._isBuffer===!0&&t!==tt.prototype};tt.compare=function(t,e){if(Sn(t,Uint8Array)&&(t=tt.from(t,t.offset,t.byteLength)),Sn(e,Uint8Array)&&(e=tt.from(e,e.offset,e.byteLength)),!tt.isBuffer(t)||!tt.isBuffer(e))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(t===e)return 0;for(var o=t.length,n=e.length,s=0,i=Math.min(o,n);s<i;++s)if(t[s]!==e[s]){o=t[s],n=e[s];break}return o<n?-1:n<o?1:0};tt.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}};tt.concat=function(t,e){if(!Array.isArray(t))throw new TypeError('"list" argument must be an Array of Buffers');if(t.length===0)return tt.alloc(0);var o;if(e===void 0)for(e=0,o=0;o<t.length;++o)e+=t[o].length;var n=tt.allocUnsafe(e),s=0;for(o=0;o<t.length;++o){var i=t[o];if(Sn(i,Uint8Array))s+i.length>n.length?tt.from(i).copy(n,s):Uint8Array.prototype.set.call(n,i,s);else if(tt.isBuffer(i))i.copy(n,s);else throw new TypeError('"list" argument must be an Array of Buffers');s+=i.length}return n};function Pk(r,t){if(tt.isBuffer(r))return r.length;if(ArrayBuffer.isView(r)||Sn(r,ArrayBuffer))return r.byteLength;if(typeof r!="string")throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof r);var e=r.length,o=arguments.length>2&&arguments[2]===!0;if(!o&&e===0)return 0;for(var n=!1;;)switch(t){case"ascii":case"latin1":case"binary":return e;case"utf8":case"utf-8":return kw(r).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return e*2;case"hex":return e>>>1;case"base64":return Uk(r).length;default:if(n)return o?-1:kw(r).length;t=(""+t).toLowerCase(),n=!0}}tt.byteLength=Pk;function HW(r,t,e){var o=!1;if((t===void 0||t<0)&&(t=0),t>this.length||((e===void 0||e>this.length)&&(e=this.length),e<=0)||(e>>>=0,t>>>=0,e<=t))return"";for(r||(r="utf8");;)switch(r){case"hex":return e4(this,t,e);case"utf8":case"utf-8":return Bk(this,t,e);case"ascii":return QW(this,t,e);case"latin1":case"binary":return t4(this,t,e);case"base64":return ZW(this,t,e);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return r4(this,t,e);default:if(o)throw new TypeError("Unknown encoding: "+r);r=(r+"").toLowerCase(),o=!0}}tt.prototype._isBuffer=!0;function bl(r,t,e){var o=r[t];r[t]=r[e],r[e]=o}tt.prototype.swap16=function(){var t=this.length;if(t%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)bl(this,e,e+1);return this};tt.prototype.swap32=function(){var t=this.length;if(t%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)bl(this,e,e+3),bl(this,e+1,e+2);return this};tt.prototype.swap64=function(){var t=this.length;if(t%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)bl(this,e,e+7),bl(this,e+1,e+6),bl(this,e+2,e+5),bl(this,e+3,e+4);return this};tt.prototype.toString=function(){var t=this.length;return t===0?"":arguments.length===0?Bk(this,0,t):HW.apply(this,arguments)};tt.prototype.toLocaleString=tt.prototype.toString;tt.prototype.equals=function(t){if(!tt.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t?!0:tt.compare(this,t)===0};tt.prototype.inspect=function(){var t="",e=Ru.INSPECT_MAX_BYTES;return t=this.toString("hex",0,e).replace(/(.{2})/g,"$1 ").trim(),this.length>e&&(t+=" ... "),"<Buffer "+t+">"};Rk&&(tt.prototype[Rk]=tt.prototype.inspect);tt.prototype.compare=function(t,e,o,n,s){if(Sn(t,Uint8Array)&&(t=tt.from(t,t.offset,t.byteLength)),!tt.isBuffer(t))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof t);if(e===void 0&&(e=0),o===void 0&&(o=t?t.length:0),n===void 0&&(n=0),s===void 0&&(s=this.length),e<0||o>t.length||n<0||s>this.length)throw new RangeError("out of range index");if(n>=s&&e>=o)return 0;if(n>=s)return-1;if(e>=o)return 1;if(e>>>=0,o>>>=0,n>>>=0,s>>>=0,this===t)return 0;for(var i=s-n,a=o-e,l=Math.min(i,a),c=this.slice(n,s),u=t.slice(e,o),p=0;p<l;++p)if(c[p]!==u[p]){i=c[p],a=u[p];break}return i<a?-1:a<i?1:0};function zk(r,t,e,o,n){if(r.length===0)return-1;if(typeof e=="string"?(o=e,e=0):e>2147483647?e=2147483647:e<-2147483648&&(e=-2147483648),e=+e,$w(e)&&(e=n?0:r.length-1),e<0&&(e=r.length+e),e>=r.length){if(n)return-1;e=r.length-1}else if(e<0)if(n)e=0;else return-1;if(typeof t=="string"&&(t=tt.from(t,o)),tt.isBuffer(t))return t.length===0?-1:_k(r,t,e,o,n);if(typeof t=="number")return t=t&255,typeof Uint8Array.prototype.indexOf=="function"?n?Uint8Array.prototype.indexOf.call(r,t,e):Uint8Array.prototype.lastIndexOf.call(r,t,e):_k(r,[t],e,o,n);throw new TypeError("val must be string, number or Buffer")}function _k(r,t,e,o,n){var s=1,i=r.length,a=t.length;if(o!==void 0&&(o=String(o).toLowerCase(),o==="ucs2"||o==="ucs-2"||o==="utf16le"||o==="utf-16le")){if(r.length<2||t.length<2)return-1;s=2,i/=2,a/=2,e/=2}function l(f,h){return s===1?f[h]:f.readUInt16BE(h*s)}var c;if(n){var u=-1;for(c=e;c<i;c++)if(l(r,c)===l(t,u===-1?0:c-u)){if(u===-1&&(u=c),c-u+1===a)return u*s}else u!==-1&&(c-=c-u),u=-1}else for(e+a>i&&(e=i-a),c=e;c>=0;c--){for(var p=!0,m=0;m<a;m++)if(l(r,c+m)!==l(t,m)){p=!1;break}if(p)return c}return-1}tt.prototype.includes=function(t,e,o){return this.indexOf(t,e,o)!==-1};tt.prototype.indexOf=function(t,e,o){return zk(this,t,e,o,!0)};tt.prototype.lastIndexOf=function(t,e,o){return zk(this,t,e,o,!1)};function qW(r,t,e,o){e=Number(e)||0;var n=r.length-e;o?(o=Number(o),o>n&&(o=n)):o=n;var s=t.length;o>s/2&&(o=s/2);for(var i=0;i<o;++i){var a=parseInt(t.substr(i*2,2),16);if($w(a))return i;r[e+i]=a}return i}function KW(r,t,e,o){return Eg(kw(t,r.length-e),r,e,o)}function jW(r,t,e,o){return Eg(s4(t),r,e,o)}function XW(r,t,e,o){return Eg(Uk(t),r,e,o)}function YW(r,t,e,o){return Eg(i4(t,r.length-e),r,e,o)}tt.prototype.write=function(t,e,o,n){if(e===void 0)n="utf8",o=this.length,e=0;else if(o===void 0&&typeof e=="string")n=e,o=this.length,e=0;else if(isFinite(e))e=e>>>0,isFinite(o)?(o=o>>>0,n===void 0&&(n="utf8")):(n=o,o=void 0);else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");var s=this.length-e;if((o===void 0||o>s)&&(o=s),t.length>0&&(o<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");for(var i=!1;;)switch(n){case"hex":return qW(this,t,e,o);case"utf8":case"utf-8":return KW(this,t,e,o);case"ascii":case"latin1":case"binary":return jW(this,t,e,o);case"base64":return XW(this,t,e,o);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return YW(this,t,e,o);default:if(i)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),i=!0}};tt.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function ZW(r,t,e){return t===0&&e===r.length?Iw.fromByteArray(r):Iw.fromByteArray(r.slice(t,e))}function Bk(r,t,e){e=Math.min(r.length,e);for(var o=[],n=t;n<e;){var s=r[n],i=null,a=s>239?4:s>223?3:s>191?2:1;if(n+a<=e){var l,c,u,p;switch(a){case 1:s<128&&(i=s);break;case 2:l=r[n+1],(l&192)===128&&(p=(s&31)<<6|l&63,p>127&&(i=p));break;case 3:l=r[n+1],c=r[n+2],(l&192)===128&&(c&192)===128&&(p=(s&15)<<12|(l&63)<<6|c&63,p>2047&&(p<55296||p>57343)&&(i=p));break;case 4:l=r[n+1],c=r[n+2],u=r[n+3],(l&192)===128&&(c&192)===128&&(u&192)===128&&(p=(s&15)<<18|(l&63)<<12|(c&63)<<6|u&63,p>65535&&p<1114112&&(i=p))}}i===null?(i=65533,a=1):i>65535&&(i-=65536,o.push(i>>>10&1023|55296),i=56320|i&1023),o.push(i),n+=a}return JW(o)}var Fk=4096;function JW(r){var t=r.length;if(t<=Fk)return String.fromCharCode.apply(String,r);for(var e="",o=0;o<t;)e+=String.fromCharCode.apply(String,r.slice(o,o+=Fk));return e}function QW(r,t,e){var o="";e=Math.min(r.length,e);for(var n=t;n<e;++n)o+=String.fromCharCode(r[n]&127);return o}function t4(r,t,e){var o="";e=Math.min(r.length,e);for(var n=t;n<e;++n)o+=String.fromCharCode(r[n]);return o}function e4(r,t,e){var o=r.length;(!t||t<0)&&(t=0),(!e||e<0||e>o)&&(e=o);for(var n="",s=t;s<e;++s)n+=a4[r[s]];return n}function r4(r,t,e){for(var o=r.slice(t,e),n="",s=0;s<o.length-1;s+=2)n+=String.fromCharCode(o[s]+o[s+1]*256);return n}tt.prototype.slice=function(t,e){var o=this.length;t=~~t,e=e===void 0?o:~~e,t<0?(t+=o,t<0&&(t=0)):t>o&&(t=o),e<0?(e+=o,e<0&&(e=0)):e>o&&(e=o),e<t&&(e=t);var n=this.subarray(t,e);return Object.setPrototypeOf(n,tt.prototype),n};function lr(r,t,e){if(r%1!==0||r<0)throw new RangeError("offset is not uint");if(r+t>e)throw new RangeError("Trying to access beyond buffer length")}tt.prototype.readUintLE=tt.prototype.readUIntLE=function(t,e,o){t=t>>>0,e=e>>>0,o||lr(t,e,this.length);for(var n=this[t],s=1,i=0;++i<e&&(s*=256);)n+=this[t+i]*s;return n};tt.prototype.readUintBE=tt.prototype.readUIntBE=function(t,e,o){t=t>>>0,e=e>>>0,o||lr(t,e,this.length);for(var n=this[t+--e],s=1;e>0&&(s*=256);)n+=this[t+--e]*s;return n};tt.prototype.readUint8=tt.prototype.readUInt8=function(t,e){return t=t>>>0,e||lr(t,1,this.length),this[t]};tt.prototype.readUint16LE=tt.prototype.readUInt16LE=function(t,e){return t=t>>>0,e||lr(t,2,this.length),this[t]|this[t+1]<<8};tt.prototype.readUint16BE=tt.prototype.readUInt16BE=function(t,e){return t=t>>>0,e||lr(t,2,this.length),this[t]<<8|this[t+1]};tt.prototype.readUint32LE=tt.prototype.readUInt32LE=function(t,e){return t=t>>>0,e||lr(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+this[t+3]*16777216};tt.prototype.readUint32BE=tt.prototype.readUInt32BE=function(t,e){return t=t>>>0,e||lr(t,4,this.length),this[t]*16777216+(this[t+1]<<16|this[t+2]<<8|this[t+3])};tt.prototype.readIntLE=function(t,e,o){t=t>>>0,e=e>>>0,o||lr(t,e,this.length);for(var n=this[t],s=1,i=0;++i<e&&(s*=256);)n+=this[t+i]*s;return s*=128,n>=s&&(n-=Math.pow(2,8*e)),n};tt.prototype.readIntBE=function(t,e,o){t=t>>>0,e=e>>>0,o||lr(t,e,this.length);for(var n=e,s=1,i=this[t+--n];n>0&&(s*=256);)i+=this[t+--n]*s;return s*=128,i>=s&&(i-=Math.pow(2,8*e)),i};tt.prototype.readInt8=function(t,e){return t=t>>>0,e||lr(t,1,this.length),this[t]&128?(255-this[t]+1)*-1:this[t]};tt.prototype.readInt16LE=function(t,e){t=t>>>0,e||lr(t,2,this.length);var o=this[t]|this[t+1]<<8;return o&32768?o|4294901760:o};tt.prototype.readInt16BE=function(t,e){t=t>>>0,e||lr(t,2,this.length);var o=this[t+1]|this[t]<<8;return o&32768?o|4294901760:o};tt.prototype.readInt32LE=function(t,e){return t=t>>>0,e||lr(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24};tt.prototype.readInt32BE=function(t,e){return t=t>>>0,e||lr(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]};tt.prototype.readFloatLE=function(t,e){return t=t>>>0,e||lr(t,4,this.length),Du.read(this,t,!0,23,4)};tt.prototype.readFloatBE=function(t,e){return t=t>>>0,e||lr(t,4,this.length),Du.read(this,t,!1,23,4)};tt.prototype.readDoubleLE=function(t,e){return t=t>>>0,e||lr(t,8,this.length),Du.read(this,t,!0,52,8)};tt.prototype.readDoubleBE=function(t,e){return t=t>>>0,e||lr(t,8,this.length),Du.read(this,t,!1,52,8)};function Yr(r,t,e,o,n,s){if(!tt.isBuffer(r))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>n||t<s)throw new RangeError('"value" argument is out of bounds');if(e+o>r.length)throw new RangeError("Index out of range")}tt.prototype.writeUintLE=tt.prototype.writeUIntLE=function(t,e,o,n){if(t=+t,e=e>>>0,o=o>>>0,!n){var s=Math.pow(2,8*o)-1;Yr(this,t,e,o,s,0)}var i=1,a=0;for(this[e]=t&255;++a<o&&(i*=256);)this[e+a]=t/i&255;return e+o};tt.prototype.writeUintBE=tt.prototype.writeUIntBE=function(t,e,o,n){if(t=+t,e=e>>>0,o=o>>>0,!n){var s=Math.pow(2,8*o)-1;Yr(this,t,e,o,s,0)}var i=o-1,a=1;for(this[e+i]=t&255;--i>=0&&(a*=256);)this[e+i]=t/a&255;return e+o};tt.prototype.writeUint8=tt.prototype.writeUInt8=function(t,e,o){return t=+t,e=e>>>0,o||Yr(this,t,e,1,255,0),this[e]=t&255,e+1};tt.prototype.writeUint16LE=tt.prototype.writeUInt16LE=function(t,e,o){return t=+t,e=e>>>0,o||Yr(this,t,e,2,65535,0),this[e]=t&255,this[e+1]=t>>>8,e+2};tt.prototype.writeUint16BE=tt.prototype.writeUInt16BE=function(t,e,o){return t=+t,e=e>>>0,o||Yr(this,t,e,2,65535,0),this[e]=t>>>8,this[e+1]=t&255,e+2};tt.prototype.writeUint32LE=tt.prototype.writeUInt32LE=function(t,e,o){return t=+t,e=e>>>0,o||Yr(this,t,e,4,4294967295,0),this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=t&255,e+4};tt.prototype.writeUint32BE=tt.prototype.writeUInt32BE=function(t,e,o){return t=+t,e=e>>>0,o||Yr(this,t,e,4,4294967295,0),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=t&255,e+4};tt.prototype.writeIntLE=function(t,e,o,n){if(t=+t,e=e>>>0,!n){var s=Math.pow(2,8*o-1);Yr(this,t,e,o,s-1,-s)}var i=0,a=1,l=0;for(this[e]=t&255;++i<o&&(a*=256);)t<0&&l===0&&this[e+i-1]!==0&&(l=1),this[e+i]=(t/a>>0)-l&255;return e+o};tt.prototype.writeIntBE=function(t,e,o,n){if(t=+t,e=e>>>0,!n){var s=Math.pow(2,8*o-1);Yr(this,t,e,o,s-1,-s)}var i=o-1,a=1,l=0;for(this[e+i]=t&255;--i>=0&&(a*=256);)t<0&&l===0&&this[e+i+1]!==0&&(l=1),this[e+i]=(t/a>>0)-l&255;return e+o};tt.prototype.writeInt8=function(t,e,o){return t=+t,e=e>>>0,o||Yr(this,t,e,1,127,-128),t<0&&(t=255+t+1),this[e]=t&255,e+1};tt.prototype.writeInt16LE=function(t,e,o){return t=+t,e=e>>>0,o||Yr(this,t,e,2,32767,-32768),this[e]=t&255,this[e+1]=t>>>8,e+2};tt.prototype.writeInt16BE=function(t,e,o){return t=+t,e=e>>>0,o||Yr(this,t,e,2,32767,-32768),this[e]=t>>>8,this[e+1]=t&255,e+2};tt.prototype.writeInt32LE=function(t,e,o){return t=+t,e=e>>>0,o||Yr(this,t,e,4,2147483647,-2147483648),this[e]=t&255,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24,e+4};tt.prototype.writeInt32BE=function(t,e,o){return t=+t,e=e>>>0,o||Yr(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=t&255,e+4};function Mk(r,t,e,o,n,s){if(e+o>r.length)throw new RangeError("Index out of range");if(e<0)throw new RangeError("Index out of range")}function Vk(r,t,e,o,n){return t=+t,e=e>>>0,n||Mk(r,t,e,4,34028234663852886e22,-34028234663852886e22),Du.write(r,t,e,o,23,4),e+4}tt.prototype.writeFloatLE=function(t,e,o){return Vk(this,t,e,!0,o)};tt.prototype.writeFloatBE=function(t,e,o){return Vk(this,t,e,!1,o)};function Gk(r,t,e,o,n){return t=+t,e=e>>>0,n||Mk(r,t,e,8,17976931348623157e292,-17976931348623157e292),Du.write(r,t,e,o,52,8),e+8}tt.prototype.writeDoubleLE=function(t,e,o){return Gk(this,t,e,!0,o)};tt.prototype.writeDoubleBE=function(t,e,o){return Gk(this,t,e,!1,o)};tt.prototype.copy=function(t,e,o,n){if(!tt.isBuffer(t))throw new TypeError("argument should be a Buffer");if(o||(o=0),!n&&n!==0&&(n=this.length),e>=t.length&&(e=t.length),e||(e=0),n>0&&n<o&&(n=o),n===o||t.length===0||this.length===0)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(o<0||o>=this.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),t.length-e<n-o&&(n=t.length-e+o);var s=n-o;return this===t&&typeof Uint8Array.prototype.copyWithin=="function"?this.copyWithin(e,o,n):Uint8Array.prototype.set.call(t,this.subarray(o,n),e),s};tt.prototype.fill=function(t,e,o,n){if(typeof t=="string"){if(typeof e=="string"?(n=e,e=0,o=this.length):typeof o=="string"&&(n=o,o=this.length),n!==void 0&&typeof n!="string")throw new TypeError("encoding must be a string");if(typeof n=="string"&&!tt.isEncoding(n))throw new TypeError("Unknown encoding: "+n);if(t.length===1){var s=t.charCodeAt(0);(n==="utf8"&&s<128||n==="latin1")&&(t=s)}}else typeof t=="number"?t=t&255:typeof t=="boolean"&&(t=Number(t));if(e<0||this.length<e||this.length<o)throw new RangeError("Out of range index");if(o<=e)return this;e=e>>>0,o=o===void 0?this.length:o>>>0,t||(t=0);var i;if(typeof t=="number")for(i=e;i<o;++i)this[i]=t;else{var a=tt.isBuffer(t)?t:tt.from(t,n),l=a.length;if(l===0)throw new TypeError('The value "'+t+'" is invalid for argument "value"');for(i=0;i<o-e;++i)this[i+e]=a[i%l]}return this};var o4=/[^+/0-9A-Za-z-_]/g;function n4(r){if(r=r.split("=")[0],r=r.trim().replace(o4,""),r.length<2)return"";for(;r.length%4!==0;)r=r+"=";return r}function kw(r,t){t=t||1/0;for(var e,o=r.length,n=null,s=[],i=0;i<o;++i){if(e=r.charCodeAt(i),e>55295&&e<57344){if(!n){if(e>56319){(t-=3)>-1&&s.push(239,191,189);continue}else if(i+1===o){(t-=3)>-1&&s.push(239,191,189);continue}n=e;continue}if(e<56320){(t-=3)>-1&&s.push(239,191,189),n=e;continue}e=(n-55296<<10|e-56320)+65536}else n&&(t-=3)>-1&&s.push(239,191,189);if(n=null,e<128){if((t-=1)<0)break;s.push(e)}else if(e<2048){if((t-=2)<0)break;s.push(e>>6|192,e&63|128)}else if(e<65536){if((t-=3)<0)break;s.push(e>>12|224,e>>6&63|128,e&63|128)}else if(e<1114112){if((t-=4)<0)break;s.push(e>>18|240,e>>12&63|128,e>>6&63|128,e&63|128)}else throw new Error("Invalid code point")}return s}function s4(r){for(var t=[],e=0;e<r.length;++e)t.push(r.charCodeAt(e)&255);return t}function i4(r,t){for(var e,o,n,s=[],i=0;i<r.length&&!((t-=2)<0);++i)e=r.charCodeAt(i),o=e>>8,n=e%256,s.push(n),s.push(o);return s}function Uk(r){return Iw.toByteArray(n4(r))}function Eg(r,t,e,o){for(var n=0;n<o&&!(n+e>=t.length||n>=r.length);++n)t[n+e]=r[n];return n}function Sn(r,t){return r instanceof t||r!=null&&r.constructor!=null&&r.constructor.name!=null&&r.constructor.name===t.name}function $w(r){return r!==r}var a4=function(){for(var r="0123456789abcdef",t=new Array(256),e=0;e<16;++e)for(var o=e*16,n=0;n<16;++n)t[o+n]=r[e]+r[n];return t}()});var Kk=pr((Dw,qk)=>{var Ag=Wk(),In=Ag.Buffer;function Hk(r,t){for(var e in r)t[e]=r[e]}In.from&&In.alloc&&In.allocUnsafe&&In.allocUnsafeSlow?qk.exports=Ag:(Hk(Ag,Dw),Dw.Buffer=wl);function wl(r,t,e){return In(r,t,e)}wl.prototype=Object.create(In.prototype);Hk(In,wl);wl.from=function(r,t,e){if(typeof r=="number")throw new TypeError("Argument must not be a number");return In(r,t,e)};wl.alloc=function(r,t,e){if(typeof r!="number")throw new TypeError("Argument must be a number");var o=In(r);return t!==void 0?typeof e=="string"?o.fill(t,e):o.fill(t):o.fill(0),o};wl.allocUnsafe=function(r){if(typeof r!="number")throw new TypeError("Argument must be a number");return In(r)};wl.allocUnsafeSlow=function(r){if(typeof r!="number")throw new TypeError("Argument must be a number");return Ag.SlowBuffer(r)}});var Yk=pr(Xk=>{"use strict";var _w=Kk().Buffer,jk=_w.isEncoding||function(r){switch(r=""+r,r&&r.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function l4(r){if(!r)return"utf8";for(var t;;)switch(r){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return r;default:if(t)return;r=(""+r).toLowerCase(),t=!0}}function c4(r){var t=l4(r);if(typeof t!="string"&&(_w.isEncoding===jk||!jk(r)))throw new Error("Unknown encoding: "+r);return t||r}Xk.StringDecoder=Df;function Df(r){this.encoding=c4(r);var t;switch(this.encoding){case"utf16le":this.text=d4,this.end=g4,t=4;break;case"utf8":this.fillLast=m4,t=4;break;case"base64":this.text=x4,this.end=y4,t=3;break;default:this.write=b4,this.end=w4;return}this.lastNeed=0,this.lastTotal=0,this.lastChar=_w.allocUnsafe(t)}Df.prototype.write=function(r){if(r.length===0)return"";var t,e;if(this.lastNeed){if(t=this.fillLast(r),t===void 0)return"";e=this.lastNeed,this.lastNeed=0}else e=0;return e<r.length?t?t+this.text(r,e):this.text(r,e):t||""};Df.prototype.end=h4;Df.prototype.text=f4;Df.prototype.fillLast=function(r){if(this.lastNeed<=r.length)return r.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);r.copy(this.lastChar,this.lastTotal-this.lastNeed,0,r.length),this.lastNeed-=r.length};function Rw(r){return r<=127?0:r>>5===6?2:r>>4===14?3:r>>3===30?4:r>>6===2?-1:-2}function u4(r,t,e){var o=t.length-1;if(o<e)return 0;var n=Rw(t[o]);return n>=0?(n>0&&(r.lastNeed=n-1),n):--o<e||n===-2?0:(n=Rw(t[o]),n>=0?(n>0&&(r.lastNeed=n-2),n):--o<e||n===-2?0:(n=Rw(t[o]),n>=0?(n>0&&(n===2?n=0:r.lastNeed=n-3),n):0))}function p4(r,t,e){if((t[0]&192)!==128)return r.lastNeed=0,"\uFFFD";if(r.lastNeed>1&&t.length>1){if((t[1]&192)!==128)return r.lastNeed=1,"\uFFFD";if(r.lastNeed>2&&t.length>2&&(t[2]&192)!==128)return r.lastNeed=2,"\uFFFD"}}function m4(r){var t=this.lastTotal-this.lastNeed,e=p4(this,r,t);if(e!==void 0)return e;if(this.lastNeed<=r.length)return r.copy(this.lastChar,t,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);r.copy(this.lastChar,t,0,r.length),this.lastNeed-=r.length}function f4(r,t){var e=u4(this,r,t);if(!this.lastNeed)return r.toString("utf8",t);this.lastTotal=e;var o=r.length-(e-this.lastNeed);return r.copy(this.lastChar,0,o),r.toString("utf8",t,o)}function h4(r){var t=r&&r.length?this.write(r):"";return this.lastNeed?t+"\uFFFD":t}function d4(r,t){if((r.length-t)%2===0){var e=r.toString("utf16le",t);if(e){var o=e.charCodeAt(e.length-1);if(o>=55296&&o<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=r[r.length-2],this.lastChar[1]=r[r.length-1],e.slice(0,-1)}return e}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=r[r.length-1],r.toString("utf16le",t,r.length-1)}function g4(r){var t=r&&r.length?this.write(r):"";if(this.lastNeed){var e=this.lastTotal-this.lastNeed;return t+this.lastChar.toString("utf16le",0,e)}return t}function x4(r,t){var e=(r.length-t)%3;return e===0?r.toString("base64",t):(this.lastNeed=3-e,this.lastTotal=3,e===1?this.lastChar[0]=r[r.length-1]:(this.lastChar[0]=r[r.length-2],this.lastChar[1]=r[r.length-1]),r.toString("base64",t,r.length-e))}function y4(r){var t=r&&r.length?this.write(r):"";return this.lastNeed?t+this.lastChar.toString("base64",0,3-this.lastNeed):t}function b4(r){return r.toString(this.encoding)}function w4(r){return r&&r.length?this.write(r):""}});var zv=`<div class="ComplexNavigator">
  <div class="Buttons" [ngClass]="complexSearch().totalNumberOfResults <=6 ? 'smallCNButtons' : ''">
    <cp-complex-navigator-buttons
      [(componentsSorting)]="componentsSorting"
      [(componentsGrouping)]="componentsGrouping"
      [(organismIconDisplay)]="organismIconDisplay"
      [(interactorTypeDisplay)]="interactorTypeDisplay"
      [(idDisplay)]="idDisplay">
    </cp-complex-navigator-buttons>
  </div>
  <cp-table-structure [complexSearch]="complexSearch()"
                      [interactors]="interactors()"
                      [componentsSorting]="componentsSorting"
                      [componentsGrouping]="componentsGrouping"
                      [organismIconDisplay]="organismIconDisplay"
                      [interactorTypeDisplay]="interactorTypeDisplay"
                      [idDisplay]="idDisplay"
                      [canAddComplexesToBasket]="canAddComplexesToBasket()"
                      [canRemoveComplexesFromBasket]="canRemoveComplexesFromBasket()"
                      (onComplexRemovedFromBasket)="onComplexRemovedFromBasket.emit($event)">
  </cp-table-structure>
</div>

`;var Bv="";var mr;(function(r){r.DEFAULT="Default",r.TYPE="Type",r.ORGANISM="Organism"})(mr||(mr={}));var ei;(function(r){r.DEFAULT="Default",r.ORTHOLOGY="Orthology"})(ei||(ei={}));function Lo(r,t,e){let o=Mv(r.interactors,t,e);return o?{identifier:o.identifier,stochiometryValue:o.stochiometryValue,stochiometryText:OL(o.stochiometryValue),stochiometryValueFormatted:FL(o.stochiometryValue)}:null}function Mv(r,t,e){let o=!1,n="",s=null;for(let i of r){let a=DL(i,t,e);a&&(o=!0,n=a.identifier,a.stochiometryValue&&(s?s=[s[0]+a.stochiometryValue[0],s[1]+a.stochiometryValue[1]]:s=[a.stochiometryValue[0],a.stochiometryValue[1]]))}return o?{identifier:n,stochiometryValue:s}:null}function DL(r,t,e){let o=_L(r.stochiometry);if(t.some(n=>r.identifier===n))return{identifier:r.identifier,stochiometryValue:o};if(r.interactorType==="stable complex"){let n=e.find(s=>s.identifier===r.identifier);if(n&&n.hasSubComponents){let s=Mv(n.complexComponents,t,e);if(s)return s.stochiometryValue?o?{identifier:s.identifier,stochiometryValue:[o[0]*s.stochiometryValue[0],o[1]*s.stochiometryValue[1]]}:{identifier:s.identifier,stochiometryValue:s.stochiometryValue}:{identifier:s.identifier,stochiometryValue:o}}}return null}function RL(r){return r.match("minValue: ([0-9+]), maxValue: ([0-9+])")}function _L(r){if(r){let t=RL(r);if(t){let e=parseInt(t[1],10),o=parseInt(t[2],10);if(!isNaN(e)&&!isNaN(o))return[e,o]}}return null}function FL(r){if(r){let t=r[0],e=r[1];return t===e?t.toString():`${t}-${e}`}return" "}function OL(r){return r?"Stoichiometry values: minValue: "+r[0]+", maxValue: "+r[1]:"No stoichiometry data available"}var LL=function(r,t,e,o){var n=arguments.length,s=n<3?t:o===null?o=Object.getOwnPropertyDescriptor(t,e):o,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")s=Reflect.decorate(r,t,e,o);else for(var a=r.length-1;a>=0;a--)(i=r[a])&&(s=(n<3?i(s):n>3?i(t,e,s):i(t,e))||s);return n>3&&s&&Object.defineProperty(t,e,s),s},ib,ap=(ib=class{constructor(){Z(this,"complexSearch",Tt());Z(this,"interactors",Tt());Z(this,"canAddComplexesToBasket",Tt());Z(this,"canRemoveComplexesFromBasket",Tt());Z(this,"onComplexRemovedFromBasket",Qs());Z(this,"componentsSorting",mr.DEFAULT);Z(this,"componentsGrouping",ei.DEFAULT);Z(this,"organismIconDisplay",!0);Z(this,"interactorTypeDisplay",!0);Z(this,"idDisplay",!0)}},Z(ib,"propDecorators",{complexSearch:[{type:wt,args:[{isSignal:!0,alias:"complexSearch",required:!1,transform:void 0}]}],interactors:[{type:wt,args:[{isSignal:!0,alias:"interactors",required:!1,transform:void 0}]}],canAddComplexesToBasket:[{type:wt,args:[{isSignal:!0,alias:"canAddComplexesToBasket",required:!1,transform:void 0}]}],canRemoveComplexesFromBasket:[{type:wt,args:[{isSignal:!0,alias:"canRemoveComplexesFromBasket",required:!1,transform:void 0}]}],onComplexRemovedFromBasket:[{type:br,args:["onComplexRemovedFromBasket"]}]}),ib);ap=LL([Fe({selector:"cp-complex-navigator",template:zv,styles:[Bv]})],ap);var Vv=`<div class="complexNavigatorTable">
  <div class="header"
       (scroll)="body.scrollLeft = header.scrollLeft" #header>

    <cp-table-header [complexes]="sortedComplexes()"
                     [componentsSorting]="componentsSorting()"
                     (onComplexRemovedFromBasket)="onComplexRemovedFromBasket.emit($event)">
    </cp-table-header>
  </div>
  <div class="interactors"
       (scroll)="header.scrollLeft = body.scrollLeft" #body>
    <cp-table-interactor-column
      [complexes]="sortedComplexes()"
      [navigatorComponents]="navigatorComponents()"
      [componentsSorting]="componentsSorting()"
      [componentsGrouping]="componentsGrouping()"
      [organismIconDisplay]="organismIconDisplay()"
      [interactorTypeDisplay]="interactorTypeDisplay()"
      [idDisplay]="idDisplay()">
    </cp-table-interactor-column>
  </div>
  <div class="spaceHolder"></div>
</div>

`;var Gv=`.complexNavigatorTable{border-collapse:separate;height:100%}.header{position:sticky;top:20px;z-index:2;overflow-x:auto;overflow-y:hidden;transform:rotateX(180deg)}.interactors{z-index:1;position:relative;overflow-y:hidden}
`;var va=class{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}},Rn=class{refCount(t){return Br("refCount")}incRef(t){return Br("incRef")}timerAvailable(){return!0}time(t){return Br("time")}read(t){return Br("read")}readSync(t){return Br("readSync")}readToGPU(t,e){return Br("readToGPU")}numDataIds(){return Br("numDataIds")}disposeData(t,e){return Br("disposeData")}write(t,e,o){return Br("write")}move(t,e,o,n,s){return Br("move")}createTensorFromGPUData(t,e,o){return Br("createTensorFromGPUData")}memory(){return Br("memory")}floatPrecision(){return Br("floatPrecision")}epsilon(){return this.floatPrecision()===32?1e-7:1e-4}dispose(){return Br("dispose")}};function Br(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Uv(r){let t=r.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,ih(r,t,e)}function BL(r,t){if(r.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${t.length}`);let e=r.length,o=0;for(;e>0;)o=Math.random()*e|0,e--,ih(r,e,o),ih(t,e,o)}function Ol(r,t,e){return Math.max(r,Math.min(t,e))}function ML(r){return r%2===0?r:r+1}function ih(r,t,e){let o=r[t];r[t]=r[e],r[e]=o}function VL(r){let t=0;for(let e=0;e<r.length;e++)t+=r[e];return t}function GL(r,t){let e=Math.random();return t*e+(1-e)*r}function UL(r,t){let e=0;for(let o=0;o<r.length;o++){let n=Number(r[o])-Number(t[o]);e+=n*n}return e}function N(r,t){if(!r)throw new Error(typeof t=="string"?t:t())}function ah(r,t,e=""){N(ri(r,t),()=>e+` Shapes ${r} and ${t} must match`)}function lp(r){N(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Ut(r){if(r.length===0)return 1;let t=r[0];for(let e=1;e<r.length;e++)t*=r[e];return t}function WL(r){return r.length===0}function HL(r,t){if(r===t)return!0;if(r==null||t==null||r.length!==t.length)return!1;for(let e=0;e<r.length;e++)if(r[e]!==null&&t[e]!==null&&r[e]!==t[e])return!1;return!0}function ri(r,t){if(r===t)return!0;if(r==null||t==null||r.length!==t.length)return!1;for(let e=0;e<r.length;e++)if(r[e]!==t[e])return!1;return!0}function _n(r){return r%1===0}function qL(r){if(Math.tanh!=null)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;{let t=Math.exp(2*r);return(t-1)/(t+1)}}function KL(r){let t=Math.ceil(Math.sqrt(r));return[t,Math.ceil(r/t)]}function jL(r){let t=new Uint32Array(r);for(let e=0;e<r;++e)t[e]=e;return Uv(t),t}function Ia(r,t){return t<=r.length?r:r+" ".repeat(t-r.length)}function XL(r,t=n=>0,e,o){return new Promise((n,s)=>{let i=0,a=()=>{if(r()){n();return}i++;let l=t(i);if(e!=null&&i>=e){s();return}o!=null?o(a,l):setTimeout(a,l)};a()})}function YL(r,t){let e=1,o=-1;for(let s=0;s<r.length;++s)if(r[s]>=0)e*=r[s];else if(r[s]===-1){if(o!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${o} and dim ${s}`);o=s}else if(r[s]<0)throw Error(`Shapes can not be < 0. Found ${r[s]} at dim ${s}`);if(o===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${r}`);return r}if(e===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);let n=r.slice();return n[o]=t/e,n}function Oe(r,t){let e=t.length;return r=r==null?t.map((o,n)=>n):[].concat(r),N(r.every(o=>o>=-e&&o<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${r}`),N(r.every(o=>_n(o)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(o=>o<0?e+o:o)}function ab(r,t){let e=[],o=[],n=t!=null&&Array.isArray(t)&&t.length===0,s=t==null||n?null:Oe(t,r).sort(),i=0;for(let a=0;a<r.length;++a){if(s!=null){if(s[i]===a&&r[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${r[a]}' is not 1`);(s[i]==null||s[i]>a)&&r[a]===1&&(e.push(r[a]),o.push(a)),s[i]<=a&&i++}r[a]!==1&&(e.push(r[a]),o.push(a))}return{newShape:e,keptDims:o}}function ZL(r,t){return lh(r,t)}function lh(r,t){let e=null;if(r==null||r==="float32")e=new Float32Array(t);else if(r==="int32")e=new Int32Array(t);else if(r==="bool")e=new Uint8Array(t);else if(r==="string")e=new Array(t);else throw new Error(`Unknown data type ${r}`);return e}function lb(r,t){for(let e=0;e<r.length;e++){let o=r[e];if(isNaN(o)||!isFinite(o))throw Error(`A tensor of type ${t} being uploaded contains ${o}.`)}}function cb(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function JL(r,t){return!(t==="complex64"||t==="float32"&&r!=="complex64"||t==="int32"&&r!=="float32"&&r!=="complex64"||t==="bool"&&r==="bool")}function Ll(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function ub(r){if(r==null)return 0;let t=0;return r.forEach(e=>t+=e.length),t}function Pl(r){return typeof r=="string"||r instanceof String}function Wv(r){return typeof r=="boolean"}function Hv(r){return typeof r=="number"}function oi(r){return Array.isArray(r)?oi(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray?"int32":Hv(r)?"float32":Pl(r)?"string":Wv(r)?"bool":"float32"}function zl(r){return!!(r&&r.constructor&&r.call&&r.apply)}function Bl(r,t){for(let e=t;e<r;++e)if(r%e===0)return e;return r}function on(r){let t=r.length;if(t<2)return[];let e=new Array(t-1);e[t-2]=r[t-1];for(let o=t-3;o>=0;--o)e[o]=e[o+1]*r[o+1];return e}function qv(r,t,e,o=!1){let n=new Array;if(t.length===1){let s=t[0]*(o?2:1);for(let i=0;i<s;i++)n[i]=e[r+i]}else{let s=t[0],i=t.slice(1),a=i.reduce((l,c)=>l*c)*(o?2:1);for(let l=0;l<s;l++)n[l]=qv(r+l*a,i,e,o)}return n}function Sa(r,t,e=!1){if(r.length===0)return t[0];let o=r.reduce((n,s)=>n*s)*(e?2:1);if(o===0)return[];if(o!==t.length)throw new Error(`[${r}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return qv(0,r,t,e)}function QL(r,t){if(Array.isArray(r))return r;if(t==="float32")return r instanceof Float32Array?r:new Float32Array(r);if(t==="int32")return r instanceof Int32Array?r:new Int32Array(r);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(r));throw new Error(`Unknown dtype ${t}`)}function cp(r,t){let e=Ml(r,t);for(let o=0;o<e.length;o++)e[o]=1;return e}function Ml(r,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${t}`)}function tP(r,t){let e=r.reduce((o,n)=>o*n,1);if(t==null||t==="float32")return Sa(r,new Float32Array(e));if(t==="int32")return Sa(r,new Int32Array(e));if(t==="bool")return Sa(r,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function je(r){r.forEach(t=>{N(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function eP(r,t,e){if(t===0)return 0;if(t===1)return r[0];let o=r[r.length-1];for(let n=0;n<r.length-1;++n)o+=e[n]*r[n];return o}function rP(r,t,e){if(t===0)return[];if(t===1)return[r];let o=new Array(t);for(let n=0;n<o.length-1;++n)o[n]=Math.floor(r/e[n]),r-=o[n]*e[n];return o[o.length-1]=r,o}function Na(r){return r&&r.then&&typeof r.then=="function"}var Kv="tfjsflags",up=class{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=nP,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(P().getBool("IS_TEST")||P().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,o){if(this.flagRegistry[t]={evaluationFn:e,setHook:o},this.urlFlags[t]!=null){let n=this.urlFlags[t];P().getBool("IS_TEST")||P().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${n}.`),this.set(t,n)}}getAsync(t){return B(this,null,function*(){return t in this.flags?this.flags[t]:(this.flags[t]=yield this.evaluateFlag(t),this.flags[t])})}get(t){if(t in this.flags)return this.flags[t];let e=this.evaluateFlag(t);if(Na(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getString(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let t=this.getQueryParams(this.global.location.search);Kv in t&&t[Kv].split(",").forEach(o=>{let[n,s]=o.split(":");this.urlFlags[n]=iP(n,s)})}};function nP(r){let t={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...o)=>(sP(t,o[0],o[1]),o.join("="))),t}function sP(r,t,e){r[decodeURIComponent(t)]=decodeURIComponent(e||"")}function iP(r,t){let e=t.toLowerCase();return e==="true"||e==="false"?e==="true":`${+e}`===e?+e:t}function P(){return pb}var pb=null;function jv(r){pb=r}var mb;function fb(){if(mb==null){let r;if(typeof window<"u")r=window;else if(typeof global<"u")r=global;else if(typeof process<"u")r=process;else if(typeof self<"u")r=self;else throw new Error("Could not find a global object");mb=r}return mb}function aP(){let r=fb();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function pp(r,t){let e=aP();if(e.has(r))return e.get(r);{let o=t();return e.set(r,o),e.get(r)}}var ni="Abs",Fn="Acos",On="Acosh",Po="Add",Vl="AddN",Gl="All",Ul="Any",si="ArgMax",ii="ArgMin",Ln="Asin",Pn="Asinh",zn="Atan",Bn="Atanh",Mn="Atan2",ai="AvgPool",Wl="AvgPoolGrad",li="AvgPool3D",Hl="AvgPool3DGrad",ci="BatchMatMul",ui="BatchToSpaceND",ql="Bincount",mp="BitwiseAnd",Xv="BroadcastTo",ch="BroadcastArgs",nn="Cast",Vn="Ceil",Gn="ClipByValue",Kl="Complex",pi="ComplexAbs",mi="Concat",fi="Conv2D",jl="Conv2DBackpropFilter",hi="Conv2DBackpropInput",di="Conv3D",Xl="Conv3DBackpropFilterV2",Yl="Conv3DBackpropInputV2",Un="Cos",Wn="Cosh",Zl="Cumprod",gi="Cumsum",Jl="CropAndResize",Ql="DenseBincount",tc="DepthToSpace",xi="DepthwiseConv2dNative",ec="DepthwiseConv2dNativeBackpropFilter",rc="DepthwiseConv2dNativeBackpropInput",uh="Diag",yi="Dilation2D",fp="Dilation2DBackpropInput",hp="Dilation2DBackpropFilter",Yv="Draw",Hn="RealDiv",oc="Einsum",qn="Elu",nc="EluGrad",Kn="Erf",Ta="Equal",jn="Exp",bi="ExpandDims",Xn="Expm1",sc="FFT",ic="Fill",ac="FlipLeftRight",Yn="Floor",Zn="FloorDiv",wi="FusedBatchNorm",Ci="GatherV2",ph="GatherNd",ka="Greater",Jn="GreaterEqual",sn="Identity",lc="IFFT",cc="Imag",Qn="IsFinite",ts="IsInf",es="IsNan",vi="LeakyRelu",Ea="Less",Aa="LessEqual",mh="LinSpace",rs="Log",os="Log1p",$a="LogicalAnd",Da="LogicalNot",Ra="LogicalOr";var Zv="LogSoftmax";var Si="LRN",uc="LRNGrad";var Ii="Max",ns="Maximum",Ni="MaxPool",pc="MaxPoolGrad",Ti="MaxPool3D",mc="MaxPool3DGrad",fh="MaxPoolWithArgmax",ki="Mean",Ei="Min",ss="Minimum",Ai="MirrorPad",is="Mod",hh="Multinomial",as="Multiply",$i="Neg",_a="NotEqual",fc="NonMaxSuppressionV3",hc="NonMaxSuppressionV4",dc="NonMaxSuppressionV5",Di="OnesLike",Ri="OneHot",_i="Pack",Fi="PadV2";var ls="Pow",Oi="Prelu",Li="Prod",dh="RaggedGather",gh="RaggedRange",xh="RaggedTensorToTensor",gc="Range",xc="Real",cs="Reciprocal",us="Relu",Pi="Reshape",zi="ResizeNearestNeighbor",yc="ResizeNearestNeighborGrad",Bi="ResizeBilinear",bc="ResizeBilinearGrad",ps="Relu6",Mi="Reverse",ms="Round",fs="Rsqrt",yh="ScatterNd",bh="TensorScatterUpdate",wh="SearchSorted",Vi="Select",hs="Selu",Gi="Slice",ds="Sin",gs="Sinh",xs="Sign",ys="Sigmoid",bs="Softplus",ws="Sqrt",Ui="Sum",Wi="SpaceToBatchND",Hi="SplitV",qi="Softmax",Ch="SparseFillEmptyRows",vh="SparseReshape",Sh="SparseSegmentMean",Ih="SparseSegmentSum",Nh="SparseToDense",Cs="SquaredDifference",wc="Square",dp="StaticRegexReplace",Cc="StridedSlice",Th="StringNGrams",kh="StringSplit",Eh="StringToHashBucketFast",vs="Sub",Ss="Tan",Is="Tanh",an="Tile",vc="TopK",Sc="Transform",ln="Transpose",Ic="Unique",Ki="Unpack",ji="UnsortedSegmentSum";var Xi="ZerosLike",Ns="Step",Jv="FromPixels",Nc="RotateWithOffset",Fa="_FusedMatMul",Oa="FusedConv2D",La="FusedDepthwiseConv2D";function cn(...r){P().getBool("IS_TEST")||P().getBool("PROD")||console.warn(...r)}function lP(...r){P().getBool("IS_TEST")||P().getBool("PROD")||console.log(...r)}var Ah=pp("kernelRegistry",()=>new Map),hb=pp("gradRegistry",()=>new Map);function db(r,t){let e=eS(r,t);return Ah.get(e)}function gb(r){return hb.get(r)}function xb(r){let t=Ah.entries(),e=[];for(;;){let{done:o,value:n}=t.next();if(o)break;let[s,i]=n,[a]=s.split("_");a===r&&e.push(i)}return e}function $h(r){let{kernelName:t,backendName:e}=r,o=eS(t,e);Ah.has(o)&&cn(`The kernel '${t}' for backend '${e}' is already registered`),Ah.set(o,r)}function tS(r){let{kernelName:t}=r;hb.has(t)&&P().getBool("DEBUG")&&cn(`Overriding the gradient for '${t}'`),hb.set(t,r)}function eS(r,t){return`${t}_${r}`}var y={};po(y,{arraysEqual:()=>ri,arraysEqualWithNull:()=>HL,assert:()=>N,assertNonNegativeIntegerDimensions:()=>je,assertNonNull:()=>lp,assertShapesMatch:()=>ah,bytesFromStringArray:()=>ub,bytesPerElement:()=>Ll,checkConversionForErrors:()=>lb,clamp:()=>Ol,computeStrides:()=>on,convertBackendValuesAndArrayBuffer:()=>QL,createScalarValue:()=>dP,createShuffledIndices:()=>jL,decodeString:()=>$c,distSquared:()=>UL,encodeString:()=>Ac,fetch:()=>xP,fingerPrint64:()=>hP,flatten:()=>Zi,getArrayFromDType:()=>lh,getTypedArrayFromDType:()=>ZL,hasEncodingLoss:()=>JL,hexToLong:()=>gp,indexToLoc:()=>rP,inferDtype:()=>oi,inferFromImplicitShape:()=>YL,isBoolean:()=>Wv,isFunction:()=>zl,isInt:()=>_n,isNumber:()=>Hv,isPromise:()=>Na,isScalarShape:()=>WL,isString:()=>Pl,isTypedArray:()=>fr,isValidDtype:()=>cb,locToIndex:()=>eP,makeOnesTypedArray:()=>cp,makeZerosNestedTypedArray:()=>tP,makeZerosTypedArray:()=>Ml,nearestDivisor:()=>Bl,nearestLargerEven:()=>ML,now:()=>Va,parseAxisParam:()=>Oe,randUniform:()=>GL,repeatedTry:()=>XL,rightPad:()=>Ia,shuffle:()=>Uv,shuffleCombo:()=>BL,sizeFromShape:()=>Ut,sizeToSquarishShape:()=>KL,squeezeShape:()=>ab,sum:()=>VL,swap:()=>ih,tanh:()=>qL,toNestedArray:()=>Sa,toTypedArray:()=>Ec});function Dh(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray}var Cb=ip(mS());var Ma=Cb.default||Cb;function gp(r){return Ma.fromString(r,!0,16)}var hS=gp("c3a5c85c97cb3127"),Ba=gp("b492b66fbe98f273"),Cr=gp("9ae16a3b2f90404f");function wb(r){return r.xor(r.shru(47))}function dS(r,t,e){let o=r.slice(t,t+e);return Ma.fromBytes(Array.from(o),!0,!0)}function fe(r,t){return dS(r,t,8)}function fS(r,t){return dS(r,t,4)}function Xe(r,t){return t===0?r:r.shru(t).or(r.shl(64-t))}function Yi(r,t,e=gp("9ddfea08eb382d69")){let o=r.xor(t).mul(e);o=o.xor(o.shru(47));let n=t.xor(o).mul(e);return n=n.xor(n.shru(47)),n=n.mul(e),n}function uP(r,t,e,o,n,s){n=n.add(r),s=Xe(s.add(n).add(o),21);let i=n;return n=n.add(t),n=n.add(e),s=s.add(Xe(n,44)),[n.add(o),s.add(i)]}function _h(r,t,e,o){return uP(fe(r,t),fe(r,t+8),fe(r,t+16),fe(r,t+24),e,o)}function pP(r,t=r.length){if(t>=8){let e=Cr.add(t*2),o=fe(r,0).add(Cr),n=fe(r,t-8),s=Xe(n,37).mul(e).add(o),i=Xe(o,25).add(n).mul(e);return Yi(s,i,e)}if(t>=4){let e=Cr.add(t*2),o=fS(r,0);return Yi(o.shl(3).add(t),fS(r,t-4),e)}if(t>0){let e=r[0],o=r[t>>1],n=r[t-1],s=e+(o<<8),i=t+(n<<2);return wb(Cr.mul(s).xor(hS.mul(i))).mul(Cr)}return Cr}function mP(r,t=r.length){let e=Cr.add(t*2),o=fe(r,0).mul(Ba),n=fe(r,8),s=fe(r,t-8).mul(e),i=fe(r,t-16).mul(Cr);return Yi(Xe(o.add(n),43).add(Xe(s,30)).add(i),o.add(Xe(n.add(Cr),18)).add(s),e)}function fP(r,t=r.length){let e=Cr.add(t*2),o=fe(r,0).mul(Cr),n=fe(r,8),s=fe(r,t-8).mul(e),i=fe(r,t-16).mul(Cr),a=Xe(o.add(n),43).add(Xe(s,30)).add(i),l=Yi(a,o.add(Xe(n.add(Cr),18)).add(s),e),c=fe(r,16).mul(e),u=fe(r,24),p=a.add(fe(r,t-32)).mul(e),m=l.add(fe(r,t-24)).mul(e);return Yi(Xe(c.add(u),43).add(Xe(p,30)).add(m),c.add(Xe(u.add(o),18)).add(p),e)}function hP(r,t=r.length){let e=Ma.fromNumber(81,!0);if(t<=32)return t<=16?pP(r,t):mP(r,t);if(t<=64)return fP(r,t);let o=e,n=e.mul(Ba).add(113),s=wb(n.mul(Cr).add(113)).mul(Cr),i=[Ma.UZERO,Ma.UZERO],a=[Ma.UZERO,Ma.UZERO];o=o.mul(Cr).add(fe(r,0));let l=0,c=(t-1>>6)*64,u=c+(t-1&63)-63;do o=Xe(o.add(n).add(i[0]).add(fe(r,l+8)),37).mul(Ba),n=Xe(n.add(i[1]).add(fe(r,l+48)),42).mul(Ba),o=o.xor(a[1]),n=n.add(i[0]).add(fe(r,l+40)),s=Xe(s.add(a[0]),33).mul(Ba),i=_h(r,l,i[1].mul(Ba),o.add(a[0])),a=_h(r,l+32,s.add(a[1]),n.add(fe(r,l+16))),[s,o]=[o,s],l+=64;while(l!==c);let p=Ba.add(s.and(255).shl(1));return l=u,a[0]=a[0].add(t-1&63),i[0]=i[0].add(a[0]),a[0]=a[0].add(i[0]),o=Xe(o.add(n).add(i[0]).add(fe(r,l+8)),37).mul(p),n=Xe(n.add(i[1]).add(fe(r,l+48)),42).mul(p),o=o.xor(a[1].mul(9)),n=n.add(i[0].mul(9).add(fe(r,l+40))),s=Xe(s.add(a[0]),33).mul(p),i=_h(r,l,i[1].mul(p),o.add(a[0])),a=_h(r,l+32,s.add(a[1]),n.add(fe(r,l+16))),[s,o]=[o,s],Yi(Yi(i[0],a[0],p).add(wb(n).mul(hS)).add(s),Yi(i[1],a[1],p).add(o),p)}function dP(r,t){return t==="string"?Ac(r):Ec([r],t)}function gP(r,t){return r instanceof Float32Array&&t==="float32"||r instanceof Int32Array&&t==="int32"||r instanceof Uint8Array&&t==="bool"}function Ec(r,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=Zi(r)),P().getBool("DEBUG")&&lb(r,t),gP(r,t))return r;if(t==null||t==="float32"||t==="complex64")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool"){let e=new Uint8Array(r.length);for(let o=0;o<e.length;++o)Math.round(r[o])!==0&&(e[o]=1);return e}else throw new Error(`Unknown data type ${t}`)}function Va(){return P().platform.now()}function xP(r,t){return P().platform.fetch(r,t)}function Ac(r,t="utf-8"){return t=t||"utf-8",P().platform.encode(r,t)}function $c(r,t="utf-8"){return t=t||"utf-8",P().platform.decode(r,t)}function fr(r){return P().platform.isTypedArray!=null?P().platform.isTypedArray(r):Dh(r)}function Zi(r,t=[],e=!1){if(t==null&&(t=[]),typeof r=="boolean"||typeof r=="number"||typeof r=="string"||Na(r)||r==null||fr(r)&&e)t.push(r);else if(Array.isArray(r)||fr(r))for(let o=0;o<r.length;++o)Zi(r[o],t,e);else{let o=-1;for(let n of Object.keys(r))/^([1-9]+[0-9]*|0)$/.test(n)&&(o=Math.max(o,Number(n)));for(let n=0;n<=o;n++)Zi(r[n],t,e)}return t}var Fh=class{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new vb)}profileKernel(t,e,o){let n,s=()=>{n=o()},i,a=Va();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(let c of n)c.dataSync();i=Promise.resolve({kernelMs:Va()-a})}if(P().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<n.length;c++){let u=n[c];u.data().then(p=>{yP(p,u.dtype,t)})}return{kernelName:t,outputs:n,inputs:e,timeMs:i.then(c=>c.kernelMs),extraInfo:i.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(t){let{kernelName:e,outputs:o,timeMs:n,inputs:s,extraInfo:i}=t;o.forEach(a=>{Promise.all([a.data(),n,i]).then(l=>{this.logger.logKernelProfile(e,a,l[0],l[1],s,l[2])})})}};function yP(r,t,e){if(t!=="float32")return!1;for(let o=0;o<r.length;o++){let n=r[o];if(isNaN(n)||!isFinite(n))return console.warn(`Found ${n} in the result of '${e}'`),!0}return!1}var vb=class{logKernelProfile(t,e,o,n,s,i){let a=typeof n=="number"?Ia(`${n}ms`,9):n.error,l=Ia(t,25),c=e.rank,u=e.size,p=Ia(e.shape.toString(),14),m="";for(let f in s){let h=s[f];if(h!=null){let d=h.shape||e.shape,g=d.length;m+=`${f}: ${g}D ${g>0?d:""} `}}console.log(`%c${l}	%c${a}	%c${c}D ${p}	%c${u}	%c${m}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function gS(r,t,e){let o={},n={};for(let l=0;l<t.length;l++)o[t[l].id]=!0;for(let l=0;l<r.length;l++){let c=r[l],u=c.inputs;for(let p in u){let m=u[p],f=!1;for(let h=0;h<t.length;h++)if(o[m.id]){c.outputs.forEach(d=>o[d.id]=!0),f=!0,n[c.id]=!0;break}if(f)break}}let s={};s[e.id]=!0;let i={};for(let l=r.length-1;l>=0;l--){let c=r[l],u=c.inputs;for(let p=0;p<c.outputs.length;p++)if(s[c.outputs[p].id]){for(let m in u)s[u[m].id]=!0,i[c.id]=!0;break}}let a=[];for(let l=0;l<r.length;l++){let c=r[l];if(n[c.id]&&i[c.id]){let u={};for(let m in c.inputs){let f=c.inputs[m];o[f.id]&&(u[m]=f)}let p=Object.assign({},c);p.inputs=u,p.outputs=c.outputs,a.push(p)}}return a}function xS(r,t,e,o){for(let n=t.length-1;n>=0;n--){let s=t[n],i=[];if(s.outputs.forEach(l=>{let c=r[l.id];c!=null?i.push(c):i.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let a=s.gradient(i);for(let l in s.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);let c=e(()=>a[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);let u=s.inputs[l];if(!ri(c.shape,u.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${u.shape}'`);if(r[u.id]==null)r[u.id]=c;else{let p=r[u.id];r[u.id]=o(p,c),p.dispose()}}}}var yS=20,xp=3,Sb=7;function bS(r,t,e,o){let n=on(t),s=bP(r,t,e,n),i=t.length,a=Oh(r,t,e,n,s),l=["Tensor"];return o&&(l.push(`  dtype: ${e}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(a.map(c=>"    "+c).join(`
`)),l.join(`
`)}function bP(r,t,e,o){let n=Ut(t),s=o[o.length-1],i=new Array(s).fill(0),a=t.length,l=e==="complex64"?bp(r):r;if(a>1)for(let c=0;c<n/s;c++){let u=c*s;for(let p=0;p<s;p++)i[p]=Math.max(i[p],yp(l[u+p],0,e).length)}return i}function yp(r,t,e){let o;return Array.isArray(r)?o=`${parseFloat(r[0].toFixed(Sb))} + ${parseFloat(r[1].toFixed(Sb))}j`:Pl(r)?o=`'${r}'`:e==="bool"?o=wS(r):o=parseFloat(r.toFixed(Sb)).toString(),Ia(o,t)}function wS(r){return r===0?"false":"true"}function Oh(r,t,e,o,n,s=!0){let i=e==="complex64"?2:1,a=t[0],l=t.length;if(l===0){if(e==="complex64"){let d=bp(r);return[yp(d[0],0,e)]}return e==="bool"?[wS(r[0])]:[r[0].toString()]}if(l===1){if(a>yS){let g=xp*i,x=Array.from(r.slice(0,g)),b=Array.from(r.slice((a-xp)*i,a*i));return e==="complex64"&&(x=bp(x),b=bp(b)),["["+x.map((C,w)=>yp(C,n[w],e)).join(", ")+", ..., "+b.map((C,w)=>yp(C,n[a-xp+w],e)).join(", ")+"]"]}return["["+(e==="complex64"?bp(r):Array.from(r)).map((g,x)=>yp(g,n[x],e)).join(", ")+"]"]}let c=t.slice(1),u=o.slice(1),p=o[0]*i,m=[];if(a>yS){for(let d=0;d<xp;d++){let g=d*p,x=g+p;m.push(...Oh(r.slice(g,x),c,e,u,n,!1))}m.push("...");for(let d=a-xp;d<a;d++){let g=d*p,x=g+p;m.push(...Oh(r.slice(g,x),c,e,u,n,d===a-1))}}else for(let d=0;d<a;d++){let g=d*p,x=g+p;m.push(...Oh(r.slice(g,x),c,e,u,n,d===a-1))}let f=l===2?",":"";m[0]="["+(a>0?m[0]+f:"");for(let d=1;d<m.length-1;d++)m[d]=" "+m[d]+f;let h=`,
`;for(let d=2;d<l;d++)h+=`
`;return m[m.length-1]=" "+m[m.length-1]+"]"+(s?"":h),m}function bp(r){let t=[];for(let e=0;e<r.length;e+=2)t.push([r[e],r[e+1]]);return t}var jt=class{constructor(t,e,o){if(this.dtype=e,this.shape=t.slice(),this.size=Ut(t),o!=null){let n=o.length;N(n===this.size,()=>`Length of values '${n}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=o||lh(e,this.size),this.strides=on(t)}set(t,...e){e.length===0&&(e=[0]),N(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);let o=this.locToIndex(e);this.values[o]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(let n of t){if(n<0||n>=this.shape[e]){let s=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(s)}e++}let o=t[t.length-1];for(let n=0;n<t.length-1;++n)o+=this.strides[n]*t[n];return this.values[o]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let o=0;o<t.length-1;++o)e+=this.strides[o]*t[o];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];let e=new Array(this.shape.length);for(let o=0;o<e.length-1;++o)e[o]=Math.floor(t/this.strides[o]),t-=e[o]*this.strides[o];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Bo().makeTensor(this.values,this.shape,this.dtype)}},Bo=null,Dc=null,wP=null;function CS(r){Bo=r}function vS(r){Dc=r}function SS(r){wP=r}var Vt=class{constructor(t,e,o,n){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=Ut(t),this.strides=on(t),this.dataId=o,this.id=n,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}buffer(){return B(this,null,function*(){let t=yield this.data();return Dc.buffer(this.shape,this.dtype,t)})}bufferSync(){return Dc.buffer(this.shape,this.dtype,this.dataSync())}array(){return B(this,null,function*(){let t=yield this.data();return Sa(this.shape,t,this.dtype==="complex64")})}arraySync(){return Sa(this.shape,this.dataSync(),this.dtype==="complex64")}data(){return B(this,null,function*(){this.throwIfDisposed();let t=Bo().read(this.dataId);if(this.dtype==="string"){let e=yield t;try{return e.map(o=>$c(o))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t})}dataToGPU(t){return this.throwIfDisposed(),Bo().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();let t=Bo().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>$c(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}bytes(){return B(this,null,function*(){this.throwIfDisposed();let t=yield Bo().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)})}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Bo().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Dc.print(this,t)}clone(){return this.throwIfDisposed(),Dc.clone(this)}toString(t=!1){let e=this.dataSync();return bS(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Dc.cast(this,t)}variable(t=!0,e,o){return this.throwIfDisposed(),Bo().makeVariable(this,t,e,o)}};Object.defineProperty(Vt,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function D(){return pp("Tensor",()=>Vt)}D();var Ts=class extends Vt{constructor(t,e,o,n){super(t.shape,t.dtype,t.dataId,n),this.trainable=e,this.name=o}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!ri(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Bo().disposeTensor(this),this.dataId=t.dataId,Bo().incRef(this,null)}dispose(){Bo().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Ts,Symbol.hasInstance,{value:r=>r instanceof Vt&&r.assign!=null&&r.assign instanceof Function});var go={};po(go,{assertTypesMatch:()=>vP,getTensorsInContainer:()=>wp,isTensorInList:()=>SP,makeTypesMatch:()=>Ft});var Ib;(function(r){r.R0="R0",r.R1="R1",r.R2="R2",r.R3="R3",r.R4="R4",r.R5="R5",r.R6="R6"})(Ib||(Ib={}));var Nb;(function(r){r.float32="float32",r.int32="int32",r.bool="int32",r.complex64="complex64"})(Nb||(Nb={}));var Tb;(function(r){r.float32="float32",r.int32="int32",r.bool="bool",r.complex64="complex64"})(Tb||(Tb={}));var kb;(function(r){r.float32="float32",r.int32="float32",r.bool="float32",r.complex64="complex64"})(kb||(kb={}));var Eb;(function(r){r.float32="complex64",r.int32="complex64",r.bool="complex64",r.complex64="complex64"})(Eb||(Eb={}));var CP={float32:kb,int32:Nb,bool:Tb,complex64:Eb};function $e(r,t){if(r==="string"||t==="string"){if(r==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${r} with ${t}`)}return CP[r][t]}function Ga(r){return $e(r,"int32")}function Lh(r){return r!=null&&typeof r=="object"&&"texture"in r&&r.texture instanceof WebGLTexture}function Ph(r){return typeof GPUBuffer<"u"&&r!=null&&typeof r=="object"&&"buffer"in r&&r.buffer instanceof GPUBuffer}function Ft(r,t){if(r.dtype===t.dtype)return[r,t];let e=$e(r.dtype,t.dtype);return[r.cast(e),t.cast(e)]}function vP(r,t){N(r.dtype===t.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${t.dtype}) input must match`)}function SP(r,t){return t.some(e=>e.id===r.id)}function wp(r){let t=[];return IS(r,t,new Set),t}function IS(r,t,e){if(r==null)return;if(r instanceof Vt){t.push(r);return}if(!IP(r))return;let o=r;for(let n in o){let s=o[n];e.has(s)||(e.add(s),IS(s,t,e))}}function IP(r){return Array.isArray(r)||typeof r=="object"}function Ab(r){return r.kernelName!=null}var zh=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(let t in this.registeredVariables)this.registeredVariables[t].dispose()}},Cp=class r{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new zh}ready(){return B(this,null,function*(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let t=this.getSortedBackends();for(let e=0;e<t.length;e++){let o=t[e];if(yield this.initializeBackend(o).success){yield this.setBackend(o);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")})}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){let{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,o=1){return t in this.registryFactory?(cn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:o},!0)}setBackend(t){return B(this,null,function*(){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;let{success:e,asyncInit:o}=this.initializeBackend(t);if(!(o?yield e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new Fh(this.backendInstance),!0})}setupRegisteredKernels(){xb(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){xb(t).forEach(o=>{o.disposeFunc!=null&&o.disposeFunc(this.registry[t])})}initializeBackend(t){let e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{let o=e.factory();if(o&&!(o instanceof Rn)&&typeof o.then=="function"){let n=++this.pendingBackendInitId,s=o.then(i=>n<this.pendingBackendInitId?!1:(this.registry[t]=i,this.pendingBackendInit=null,!0)).catch(i=>(n<this.pendingBackendInitId||(this.pendingBackendInit=null,cn(`Initialization of backend ${t} failed`),cn(i.stack||i.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[t]=o,{success:!0,asyncInit:!1}}catch(o){return cn(`Initialization of backend ${t} failed`),cn(o.stack||o.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){let t=this.getSortedBackends();for(let e=0;e<t.length;e++){let o=t[e],{success:n,asyncInit:s}=this.initializeBackend(o);if(s||n)return{name:o,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){let o=this.state.tensorInfo.get(e),n=o.backend,s=this.readSync(e),i=n.refCount(e);n.disposeData(e,!0),o.backend=t,t.move(e,s,o.shape,o.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let o=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");o=t}let n;return this.scopedRun(()=>this.startScope(o),()=>this.endScope(n),()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(t,e,o){t();try{let n=o();return e(),n}catch(n){throw e(),n}}nextTensorId(){return r.nextTensorId++}nextVariableId(){return r.nextVariableId++}clone(t){let e=T.runKernel(sn,{x:t}),o={x:t},n=i=>({x:()=>{let a="float32",l={x:i},c={dtype:a};return T.runKernel(nn,l,c)}}),s=[];return this.addTapeNode(this.state.activeScope.name,o,[e],n,s,{}),e}runKernel(t,e,o){if(this.backendName==null&&this.backend,!(db(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:o})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,o){let n=this.backend.numDataIds(),s=0;o.forEach(l=>{s+=l.dtype==="complex64"?3:1});let i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=n-e-s-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t){let e,o=[],n=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let l,c=Ab(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Ab(t)){let{kernelName:h,inputs:d,attrs:g}=t;this.backendName==null&&this.backend;let x=db(h,this.backendName);N(x!=null,()=>`Cannot find registered kernel '${h}' for backend '${this.backendName}'`),a=()=>{let b=this.backend.numDataIds();l=x.kernelFunc({inputs:d,attrs:g,backend:this.backend});let C=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(h,b,C);let w=C.map(v=>v.rank!=null?v:this.makeTensorFromTensorInfo(v));if(n){let v=this.getTensorsForGradient(h,d,w);o=this.saveTensorsForBackwardMode(v)}return w}}else{let{forwardFunc:h}=t,d=g=>{n&&(o=g.map(x=>this.keep(this.clone(x))))};a=()=>{let g=this.backend.numDataIds();l=this.tidy(()=>h(this.backend,d));let x=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,g,x),x}}let{inputs:u,attrs:p}=t,m=Ab(t)?null:t.backwardsFunc,f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?e=a():(f=this.profiler.profileKernel(c,u,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),e=f.outputs)}),n&&this.addTapeNode(c,u,e,m,o,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(h=>u[h]!=null?u[h].shape:null),outputShapes:e.map(h=>h.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(l)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(o=>this.keep(this.clone(o)))}getTensorsForGradient(t,e,o){let n=gb(t);if(n!=null){let s=n.inputsToSave||[],i=n.outputsToSave||[],a;n.saveAllInputs?(N(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(e).map(c=>e[c])):a=s.map(c=>e[c]);let l=o.filter((c,u)=>i[u]);return a.concat(l)}return[]}makeTensor(t,e,o,n){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");o=o||"float32",n=n||this.backend;let s=t;o==="string"&&Pl(t[0])&&(s=t.map(l=>Ac(l)));let i=n.write(s,e,o),a=new Vt(e,o,i,this.nextTensorId());if(this.trackTensor(a,n),o==="string"){let l=this.state.tensorInfo.get(i),c=ub(s);this.state.numBytes+=c-l.bytes,l.bytes=c}return a}makeTensorFromDataId(t,e,o,n){o=o||"float32";let s={dataId:t,shape:e,dtype:o};return this.makeTensorFromTensorInfo(s,n)}makeTensorFromTensorInfo(t,e){let{dataId:o,shape:n,dtype:s}=t,i=new Vt(n,s,o,this.nextTensorId());return this.trackTensor(i,e),i}makeVariable(t,e=!0,o,n){o=o||this.nextVariableId().toString(),n!=null&&n!==t.dtype&&(t=t.cast(n));let s=new Ts(t,e,o,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let o=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(o=t.size*Ll(t.dtype)),this.state.numBytes+=o,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:o})),t instanceof Ts||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;let e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){let o=t.size*Ll(t.dtype);this.state.numBytes-=o}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(let t in this.state.registeredVariables){let e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){let t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}profile(t){return B(this,null,function*(){this.state.profiling=!0;let e=this.state.numBytes,o=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=yield t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(n=>n.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-o;for(let n of this.state.activeProfile.kernels)n.kernelTimeMs=yield n.kernelTimeMs,n.extraInfo=yield n.extraInfo;return this.state.activeProfile})}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,o,n,s,i){let a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:o,saved:s},l=gb(t);l!=null&&(n=l.gradFunc),n!=null&&(a.gradient=c=>(c=c.map((u,p)=>{if(u==null){let m=o[p],f=Ml(m.size,m.dtype);return this.makeTensor(f,m.shape,m.dtype)}return u}),n(c.length>1?c:c[0],s,i))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){let e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){let e=wp(t),o=new Set(e.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let i=this.state.activeScope.track[s];!i.kept&&!o.has(i.id)&&i.dispose()}let n=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(s=>{!s.kept&&s.scopeId===n.id&&this.track(s)})}gradients(t,e,o,n=!1){if(N(e.length>0,()=>"gradients() received an empty list of xs."),o!=null&&o.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${o.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));N(s instanceof Vt,()=>"The result y returned by f() must be a tensor.");let i=gS(this.state.activeTape,e,s);if(!n&&i.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let a={};a[s.id]=o??NP(s.shape),xS(a,i,c=>this.tidy(c),TP);let l=e.map(c=>a[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(let u of c.saved)u.dispose()}),this.state.activeTape=null),{value:s,grads:l}})}customGrad(t){return N(zl(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{N(e.every(a=>a instanceof Vt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let o,n={};e.forEach((a,l)=>{n[l]=a});let s=(a,l)=>(o=t(...e,l),N(o.value instanceof Vt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),N(zl(o.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),o.value),i=(a,l)=>{let c=o.gradFunc(a,l),u=Array.isArray(c)?c:[c];N(u.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),N(u.every(m=>m instanceof Vt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let p={};return u.forEach((m,f)=>{p[f]=()=>m}),p};return this.runKernelFunc({forwardFunc:s,backwardsFunc:i,inputs:n})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}time(t){return B(this,null,function*(){let e=Va(),o=yield this.backend.time(t);return o.wallMs=Va()-e,o})}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new zh;for(let t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};Cp.nextTensorId=0;Cp.nextVariableId=0;function NP(r){let t=cp(Ut(r),"float32");return T.makeTensor(t,r,"float32")}function $b(){let r=fb();if(r._tfengine==null){let t=new up(r);r._tfengine=new Cp(t)}return jv(r._tfengine.ENV),CS(()=>r._tfengine),r._tfengine}var T=$b();function TP(r,t){let e={a:r,b:t};return T.runKernel(Po,e)}var Ji={};po(Ji,{isBrowser:()=>Rb,isMobile:()=>AP,mockIsMobile:()=>EP});function kP(){return typeof navigator<"u"&&navigator!=null}var Db;function EP(r){Db=r}function AP(r){if(Db!==void 0)return Db;if(r||kP()){if(r||(r=navigator),r.product==="ReactNative")return!0;let t=r.userAgent||r.vendor||(typeof window<"u"?window.opera:"");if(!t){let e=r;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Rb(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var Dr=P();Dr.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Dr.registerFlag("IS_BROWSER",()=>Rb());Dr.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Dr.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Dr.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));Dr.registerFlag("PROD",()=>!1);Dr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Dr.getBool("DEBUG"));Dr.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Dr.registerFlag("IS_TEST",()=>!1);Dr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Dr.getBool("DEBUG"));Dr.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Dr.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Dr.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);function Ua(r,t){let e=r;if(fr(r))return t==="string"?[]:[r.length];if(Lh(r)){let n=r.channels||"RGBA";return[r.height,r.width*n.length]}else if(Ph(r))return[r.buffer.size/(t==null?4:Ll(t))];if(!Array.isArray(r))return[];let o=[];for(;Array.isArray(e)||fr(e)&&t!=="string";)o.push(e.length),e=e[0];return Array.isArray(r)&&P().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&TS(r,o,[]),o}function TS(r,t,e){if(e=e||[],!Array.isArray(r)&&!fr(r)){N(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}N(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${r.length} elements`),N(r.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${r.length} elements`);let o=t.slice(1);for(let n=0;n<r.length;++n)TS(r[n],o,e.concat(n))}function NS(r,t,e,o){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==t||r==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${o}' must be ${r} tensor, but got ${t} tensor`)}}function I(r,t,e,o="numeric"){if(r instanceof D())return NS(o,r.dtype,t,e),r;let n=oi(r);if(n!=="string"&&["bool","int32","float32"].indexOf(o)>=0&&(n=o),NS(o,n,t,e),r==null||!fr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let l=r==null?"null":r.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${l}'`)}let s=Ua(r,n);!fr(r)&&!Array.isArray(r)&&(r=[r]);let a=n!=="string"?Ec(r,n):Zi(r,[],!0);return T.makeTensor(a,s,n)}function Bh(r,t,e,o="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((s,i)=>I(s,`${t}[${i}]`,e,o))}var $P="__op";function k(r){let t=Object.keys(r);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0],o=r[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+$P;let n=(...s)=>{T.startScope(e);try{let i=o(...s);return Na(i)&&console.error("Cannot return a Promise inside of tidy."),T.endScope(i),i}catch(i){throw T.endScope(null),i}};return Object.defineProperty(n,"name",{value:e,configurable:!0}),n}function DP(r,t){let e=I(r,"real","complex"),o=I(t,"imag","complex");ah(e.shape,o.shape,`real and imag shapes, ${e.shape} and ${o.shape}, must match in call to tf.complex().`);let n={real:e,imag:o};return T.runKernel(Kl,n)}var ro=k({complex_:DP});function Qi(r,t,e,o){if(o==null)o=oi(r);else if(o==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Ph(r)||Lh(r)){if(o!=="float32"&&o!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${o}.`);return T.backend.createTensorFromGPUData(r,t||e,o)}if(!fr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){je(t);let n=Ut(t),s=Ut(e);N(n===s,()=>`Based on the provided shape, [${t}], the tensor should have ${n} values but has ${s}`);for(let i=0;i<e.length;++i){let a=e[i],l=i===e.length-1?a!==Ut(t.slice(i)):!0;N(e[i]===t[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!fr(r)&&!Array.isArray(r)&&(r=[r]),t=t||e,r=o!=="string"?Ec(r,o):Zi(r,[],!0),T.makeTensor(r,t,o)}function Gr(r,t,e){let o=Ua(r,e);return Qi(r,t,o,e)}var ks={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var nr=class r{static join(t){return new r(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,t==null||(t instanceof Array||(t=[t]),t=t.map(o=>fr(o)?o.buffer:o),t.length===0))return;this.bufferUniformSize=t[0].byteLength;let e=0;for(let o=0;o<t.length;o++){let n=t[o];o!==t.length-1&&n.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let s=e+n.byteLength;this.shards.push({buffer:n,start:e,end:s}),e=s}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(t=0,e=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,e=isNaN(Number(e))?0:e,t=Math.max(0,t),e=Math.min(this.byteLength,e),e<=t)return new ArrayBuffer(0);let o=this.findShardForByte(t);if(o===-1)throw new Error(`Could not find start shard for byte ${t}`);let n=e-t,s=new ArrayBuffer(n),i=new Uint8Array(s),a=0;for(let l=o;l<this.shards.length;l++){let c=this.shards[l],p=t+a-c.start,m=a,h=Math.min(e,c.end)-c.start,d=new Uint8Array(c.buffer,p,h-p);if(i.set(d,m),a+=d.length,e<c.end)break}return s}findShardForByte(t){if(this.shards.length===0||t<0||t>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function e(n){return t<n.start?-1:t>=n.end?1:0}if(e(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;let o=RP(this.shards,e);return o===-1?-1:(this.previousShardIndex=o,this.previousShardIndex)}};function RP(r,t){let e=0,o=r.length;for(;e<=o;){let n=Math.floor((o-e)/2)+e,s=t(r[n]);if(s===0)return n;s<0?o=n:e=n+1}return-1}function _P(r){P().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}SS(_P);function xo(){return T}function vp(){return T.memory()}function z(r,t){return T.tidy(r,t)}function It(r){wp(r).forEach(e=>e.dispose())}function Be(r){return T.keep(r)}function kS(){return T.backendName}function Mh(r,t,e=1){return T.registerBackend(r,t,e)}function Vh(){return T.backend}var ta=4;function $S(r,t){return B(this,null,function*(){let e=[],o=[],n=Array.isArray(r)?r.map(i=>i.name):Object.keys(r);for(let i=0;i<n.length;++i){let a=n[i],l=Array.isArray(r)?r[i].tensor:r[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);let c={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let u=new Promise(p=>B(this,null,function*(){let m=yield l.bytes(),f=m.reduce((g,x)=>g+x.length,0)+ta*m.length,h=new Uint8Array(f),d=0;for(let g=0;g<m.length;g++){let x=m[g],b=new Uint8Array(new Uint32Array([x.length]).buffer);h.set(b,d),d+=ta,h.set(x,d),d+=x.length}p(h)}));o.push(u)}else o.push(l.data());t!=null&&(c.group=t),e.push(c)}let s=yield Promise.all(o);return{data:LP(s),specs:e}})}function Gh(r,t){let e=new nr(r),o={},n=0;for(let s of t){let i=FP(s,(a,l)=>e.slice(n+a,n+l));o[s.name]=DS(s,e.slice(n,n+i)),n+=i}return o}function FP(r,t){let e=Ut(r.shape),o;if("quantization"in r){let n=r.quantization;o=ks[n.dtype]}else if(r.dtype==="string"){let n=0;for(let s=0;s<e;s++)n+=ta+new Uint32Array(t(n,n+ta))[0];return n}else o=ks[r.dtype];return e*o}function OP(r,t){return B(this,null,function*(){let e=Ut(r.shape),o;if("quantization"in r){let n=r.quantization;o=ks[n.dtype]}else if(r.dtype==="string"){let n=0;for(let s=0;s<e;s++)n+=ta+new Uint32Array(yield t(n,n+ta))[0];return n}else o=ks[r.dtype];return e*o})}function DS(r,t){let e=r.name,o=r.dtype,n=r.shape,s=Ut(n),i,a=0;if("quantization"in r){let l=r.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${r.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(o!=="float32")throw new Error(`Weight ${r.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${o}.`)}else throw new Error(`Weight ${r.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let c=ks[l.dtype],u=l.dtype==="uint8"?new Uint8Array(t):new Uint16Array(t);if(o==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){i=new Float32Array(u.length);for(let p=0;p<u.length;p++){let m=u[p];i[p]=m*l.scale+l.min}}else if(l.dtype==="float16")i=MP()(u);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(o==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);i=new Int32Array(u.length);for(let p=0;p<u.length;p++){let m=u[p];i[p]=Math.round(m*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${e}': ${o}`);a+=s*c}else if(o==="string"){let l=Ut(r.shape);i=[];for(let c=0;c<l;c++){let u=new Uint32Array(t.slice(a,a+ta))[0];a+=ta;let p=new Uint8Array(t.slice(a,a+u));i.push(p),a+=u}}else{let l=ks[o];if(o==="float32")i=new Float32Array(t);else if(o==="int32")i=new Int32Array(t);else if(o==="bool")i=new Uint8Array(t);else if(o==="complex64"){i=new Float32Array(t);let c=new Float32Array(i.length/2),u=new Float32Array(i.length/2);for(let h=0;h<c.length;h++)c[h]=i[h*2],u[h]=i[h*2+1];let p=Gr(c,n,"float32"),m=Gr(u,n,"float32"),f=ro(p,m);return p.dispose(),m.dispose(),f}else throw new Error(`Unsupported dtype in weight '${e}': ${o}`);a+=s*l}return Gr(i,n,o)}function ES(r,t,e){return B(this,null,function*(){let o=new Uint8Array(t);for(;o.byteLength<e;){let{done:n,value:s}=yield r.read();if(n&&s==null){let a=e-o.byteLength;throw new Error(`Reader is done but ${a} bytes are still expected`)}let i=new Uint8Array(o.length+s.byteLength);i.set(o,0),i.set(new Uint8Array(s),o.length),o=i}return o.buffer})}function _b(r,t){return B(this,null,function*(){let e={},o=r.getReader(),n=new ArrayBuffer(0);for(let s of t){let i=yield OP(s,(c,u)=>B(this,null,function*(){return n=yield ES(o,n,u),n.slice(c,u)}));n=yield ES(o,n,i);let a=n.slice(0,i);n=n.slice(i);let l=DS(s,a);if(e[s.name]=l,kS()==="webgpu"){let c=Vh();"uploadToGPU"in c&&Ut(l.shape)>=P().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&c.uploadToGPU(l.dataId)}}return e})}function LP(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let t=0,e=[];r.forEach(s=>{if(t+=s.byteLength,e.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let o=new Uint8Array(t),n=0;return e.forEach(s=>{o.set(new Uint8Array(s.buffer),n),n+=s.byteLength}),o.buffer}var Fb=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function AS(r){return Fb?Buffer.byteLength(r,"utf8"):new Blob([r]).size}function RS(r){if(Fb)return Buffer.from(r).toString("base64");let t=new Uint8Array(r),e="";for(let o=0,n=t.length;o<n;o++)e+=String.fromCharCode(t[o]);return btoa(e)}function _S(r){if(Fb){let o=Buffer.from(r,"base64");return o.buffer.slice(o.byteOffset,o.byteOffset+o.byteLength)}let t=atob(r),e=new Uint8Array(t.length);for(let o=0;o<t.length;++o)e.set([t.charCodeAt(o)],o);return e.buffer}function FS(r){return nr.join(r)}function Ob(r){let t="/";for(r=r.trim();r.endsWith(t);)r=r.slice(0,r.length-1);let e=r.split(t);return e[e.length-1]}function Uh(r,t){let e={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy,weightsManifest:t};return r.signature!=null&&(e.signature=r.signature),r.userDefinedMetadata!=null&&(e.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(e.modelInitializer=r.modelInitializer),r.initializerSignature!=null&&(e.initializerSignature=r.initializerSignature),r.trainingConfig!=null&&(e.trainingConfig=r.trainingConfig),e}function Lb(r,t,e){let o={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy};if(r.trainingConfig!=null&&(o.trainingConfig=r.trainingConfig),r.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");o.weightSpecs=t,o.weightData=e}return r.signature!=null&&(o.signature=r.signature),r.userDefinedMetadata!=null&&(o.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(o.modelInitializer=r.modelInitializer),r.initializerSignature!=null&&(o.initializerSignature=r.initializerSignature),o}function Rc(r,t){return B(this,null,function*(){let e,o;return r.weightsManifest!=null&&([e,o]=yield t(r.weightsManifest)),Lb(r,e,o)})}function un(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:AS(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:AS(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:new nr(r.weightData).byteLength}}function Sp(r){let t=[];for(let e of r)t.push(...e.weights);return t}function PP(){let r=e=>{let o=e<<13,n=0;for(;!(o&8388608);)n-=8388608,o<<=1;return o&=-8388609,n+=947912704,o|n},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=r(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function zP(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let t=1;t<31;t++)r[t]=t<<23;for(let t=33;t<63;t++)r[t]=2147483648+(t-32<<23);return r}function BP(){let r=new Uint32Array(64);for(let t=0;t<64;t++)r[t]=1024;return r[0]=r[32]=0,r}function MP(){let r=PP(),t=zP(),e=BP();return o=>{let n=new ArrayBuffer(4*o.length),s=new Uint32Array(n);for(let i=0;i<o.length;i++){let a=o[i],l=r[e[a>>10]+(a&1023)]+t[a>>10];s[i]=l}return new Float32Array(n)}}var Me=class r{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return r.instance==null&&(r.instance=new r),r.instance}static registerSaveRouter(t){r.getInstance().saveRouters.push(t)}static registerLoadRouter(t){r.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return r.getHandlers(t,"save")}static getLoadHandlers(t,e){return r.getHandlers(t,"load",e)}static getHandlers(t,e,o){let n=[];return(e==="load"?r.getInstance().loadRouters:r.getInstance().saveRouters).forEach(i=>{let a=i(t,o);a!==null&&n.push(a)}),n}},OS=r=>Me.registerSaveRouter(r),LS=r=>Me.registerLoadRouter(r),PS=r=>Me.getSaveHandlers(r),zS=(r,t)=>Me.getLoadHandlers(r,t);var Pb="tensorflowjs",zb=1,Wa="models_store",ea="model_info_store";function BS(){if(!P().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window>"u"?self:window,t=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Bb(r){let t=r.result;t.createObjectStore(Wa,{keyPath:"modelPath"}),t.createObjectStore(ea,{keyPath:"modelPath"})}var pn=class{constructor(t){if(this.indexedDB=BS(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}save(t){return B(this,null,function*(){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)})}load(){return B(this,null,function*(){return this.databaseAction(this.modelPath)})}databaseAction(t,e){return new Promise((o,n)=>{let s=this.indexedDB.open(Pb,zb);s.onupgradeneeded=()=>Bb(s),s.onsuccess=()=>{let i=s.result;if(e==null){let a=i.transaction(Wa,"readonly"),c=a.objectStore(Wa).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return i.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));o(c.result.modelArtifacts)},c.onerror=u=>(i.close(),n(c.error)),a.oncomplete=()=>i.close()}else{e.weightData=nr.join(e.weightData);let a=un(e),l=i.transaction(ea,"readwrite"),c=l.objectStore(ea),u;try{u=c.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(m){return n(m)}let p;u.onsuccess=()=>{p=i.transaction(Wa,"readwrite");let m=p.objectStore(Wa),f;try{f=m.put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:a})}catch(h){return n(h)}f.onsuccess=()=>o({modelArtifactsInfo:a}),f.onerror=h=>{c=l.objectStore(ea);let d=c.delete(this.modelPath);d.onsuccess=()=>(i.close(),n(f.error)),d.onerror=g=>(i.close(),n(f.error))}},u.onerror=m=>(i.close(),n(u.error)),l.oncomplete=()=>{p==null?i.close():p.oncomplete=()=>i.close()}}},s.onerror=i=>n(s.error)})}};pn.URL_SCHEME="indexeddb://";var MS=r=>P().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(pn.URL_SCHEME)?VP(r.slice(pn.URL_SCHEME.length)):null;Me.registerSaveRouter(MS);Me.registerLoadRouter(MS);function VP(r){return new pn(r)}function GP(r){return r.startsWith(pn.URL_SCHEME)?r.slice(pn.URL_SCHEME.length):r}var Wh=class{constructor(){this.indexedDB=BS()}listModels(){return B(this,null,function*(){return new Promise((t,e)=>{let o=this.indexedDB.open(Pb,zb);o.onupgradeneeded=()=>Bb(o),o.onsuccess=()=>{let n=o.result,s=n.transaction(ea,"readonly"),a=s.objectStore(ea).getAll();a.onsuccess=()=>{let l={};for(let c of a.result)l[c.modelPath]=c.modelArtifactsInfo;t(l)},a.onerror=l=>(n.close(),e(a.error)),s.oncomplete=()=>n.close()},o.onerror=n=>e(o.error)})})}removeModel(t){return B(this,null,function*(){return t=GP(t),new Promise((e,o)=>{let n=this.indexedDB.open(Pb,zb);n.onupgradeneeded=()=>Bb(n),n.onsuccess=()=>{let s=n.result,i=s.transaction(ea,"readwrite"),a=i.objectStore(ea),l=a.get(t),c;l.onsuccess=()=>{if(l.result==null)return s.close(),o(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{let u=a.delete(t),p=()=>{c=s.transaction(Wa,"readwrite");let f=c.objectStore(Wa).delete(t);f.onsuccess=()=>e(l.result.modelArtifactsInfo),f.onerror=h=>o(l.error)};u.onsuccess=p,u.onerror=m=>(p(),s.close(),o(l.error))}},l.onerror=u=>(s.close(),o(l.error)),i.oncomplete=()=>{c==null?s.close():c.oncomplete=()=>s.close()}},n.onerror=s=>o(n.error)})})}};var Es="/",_c="tensorflowjs_models",VS="info",UP="model_topology",WP="weight_specs",HP="weight_data",qP="model_metadata";function GS(r){return{info:[_c,r,VS].join(Es),topology:[_c,r,UP].join(Es),weightSpecs:[_c,r,WP].join(Es),weightData:[_c,r,HP].join(Es),modelMetadata:[_c,r,qP].join(Es)}}function US(r){for(let t of Object.values(r))window.localStorage.removeItem(t)}function KP(r){let t=r.split(Es);if(t.length<3)throw new Error(`Invalid key format: ${r}`);return t.slice(1,t.length-1).join(Es)}function jP(r){return r.startsWith(mn.URL_SCHEME)?r.slice(mn.URL_SCHEME.length):r}var mn=class{constructor(t){if(!P().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=GS(this.modelPath)}save(t){return B(this,null,function*(){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let e=JSON.stringify(t.modelTopology),o=JSON.stringify(t.weightSpecs),n=un(t),s=nr.join(t.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(n)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,o),this.LS.setItem(this.keys.weightData,RS(s));let i={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,initializerSignature:t.initializerSignature!=null?t.initializerSignature:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:n}}catch{throw US(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${n.modelTopologyBytes}, weightSpecsBytes=${n.weightSpecsBytes}, weightDataBytes=${n.weightDataBytes}.`)}}})}load(){return B(this,null,function*(){let t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let e={},o=JSON.parse(this.LS.getItem(this.keys.topology));if(o==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=o;let n=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(n==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=n;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let a=JSON.parse(s);e.format=a.format,e.generatedBy=a.generatedBy,e.convertedBy=a.convertedBy,a.signature!=null&&(e.signature=a.signature),a.userDefinedMetadata!=null&&(e.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(e.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(e.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(e.trainingConfig=a.trainingConfig)}let i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=_S(i),e})}};mn.URL_SCHEME="localstorage://";var WS=r=>P().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(mn.URL_SCHEME)?XP(r.slice(mn.URL_SCHEME.length)):null;Me.registerSaveRouter(WS);Me.registerLoadRouter(WS);function XP(r){return new mn(r)}var Hh=class{constructor(){N(P().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),N(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}listModels(){return B(this,null,function*(){let t={},e=_c+Es,o=Es+VS;for(let n=0;n<this.LS.length;++n){let s=this.LS.key(n);if(s.startsWith(e)&&s.endsWith(o)){let i=KP(s);t[i]=JSON.parse(this.LS.getItem(s))}}return t})}removeModel(t){return B(this,null,function*(){t=jP(t);let e=GS(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);let o=JSON.parse(this.LS.getItem(e.info));return US(e),o})}};var Fc="://",Mo=class r{constructor(){this.managers={}}static getInstance(){return r.instance==null&&(r.instance=new r),r.instance}static registerManager(t,e){N(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(Fc)&&(t=t.slice(0,t.indexOf(Fc))),N(t.length>0,()=>"scheme must not be an empty string.");let o=r.getInstance();N(o.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),o.managers[t]=e}static getManager(t){let e=r.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(r.getInstance().managers)}};function qh(r){if(r.indexOf(Fc)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Mo.getSchemes().join(",")}`);return{scheme:r.split(Fc)[0],path:r.split(Fc)[1]}}function HS(r,t,e=!1){return B(this,null,function*(){N(r!==t,()=>`Old path and new path are the same: '${r}'`);let o=Me.getLoadHandlers(r);N(o.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),N(o.length<2,()=>`Copying failed because more than one (${o.length}) load handlers for source URL ${r}.`);let n=o[0],s=Me.getSaveHandlers(t);N(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),N(s.length<2,()=>`Copying failed because more than one (${o.length}) save handlers for destination URL ${t}.`);let i=s[0],a=qh(r).scheme,l=qh(r).path,c=a===qh(r).scheme,u=yield n.load();e&&c&&(yield Mo.getManager(a).removeModel(l));let p=yield i.save(u);return e&&!c&&(yield Mo.getManager(a).removeModel(l)),p.modelArtifactsInfo})}function qS(){return B(this,null,function*(){let r=Mo.getSchemes(),t={};for(let e of r){let o=yield Mo.getManager(e).listModels();for(let n in o){let s=e+Fc+n;t[s]=o[n]}}return t})}function KS(r){return B(this,null,function*(){let t=qh(r);return Mo.getManager(t.scheme).removeModel(t.path)})}function jS(r,t){return B(this,null,function*(){return HS(r,t,!1)})}function XS(r,t){return B(this,null,function*(){return HS(r,t,!0)})}var Mb=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(typeof window>"u"||!P().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",o=>{if(o.source===window&&o.data.name===this.messageName){o.stopPropagation();let n=this.functionRefs[o.data.index];n(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(t){return Dh(t)}};if(P().get("IS_BROWSER")){P().setPlatform("browser",new Mb);try{Mo.registerManager(mn.URL_SCHEME,new Hh)}catch{}try{Mo.registerManager(pn.URL_SCHEME,new Wh)}catch{}}var ZP={importFetch:()=>ZS()},Vb;var Gb=class{constructor(){this.util=JS(),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return P().global.fetch!=null?P().global.fetch(t,e):(Vb==null&&(Vb=ZP.importFetch()),Vb(t,e))}now(){let t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}};P().get("IS_NODE")&&!P().get("IS_BROWSER")&&P().setPlatform("node",new Gb);function dt(r,t="float32",e){return t=t||"float32",je(r),new jt(r,t,e)}function JP(r,t){let e=I(r,"x","cast");if(!cb(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");let o={x:e},n={dtype:t};return T.runKernel(nn,o,n)}var Y=k({cast_:JP});function QP(r){let e={x:I(r,"x","clone","string_or_numeric")};return T.runKernel(sn,e)}var Ur=k({clone_:QP});function QS(r,t=!1){console.log(r.toString(t))}$b();var tz={buffer:dt,cast:Y,clone:Ur,print:QS};vS(tz);function ez(r,t){let e=I(r,"a","add"),o=I(t,"b","add");[e,o]=Ft(e,o);let n={a:e,b:o};return T.runKernel(Po,n)}var j=k({add_:ez});function rz(r,t){let e=I(r,"a","floorDiv"),o=I(t,"b","floorDiv");[e,o]=Ft(e,o);let n={a:e,b:o};return T.runKernel(Zn,n)}var Kh=k({floorDiv_:rz});function oz(r,t){let e=I(r,"a","div"),o=I(t,"b","div");if([e,o]=Ft(e,o),e.dtype==="int32"&&o.dtype==="int32")return Kh(e,o);let n={a:e,b:o},s={};return T.runKernel(Hn,n,s)}var nt=k({div_:oz});function nz(r,t){let e=I(r,"a","mul"),o=I(t,"b","mul");[e,o]=Ft(e,o);let n={a:e,b:o};return T.runKernel(as,n)}var R=k({mul_:nz});function sz(r){let t=I(r,"x","abs");if(t.dtype==="complex64"){let e={x:t};return T.runKernel(pi,e)}else{let e={x:t};return T.runKernel(ni,e)}}var De=k({abs_:sz});function iz(r){let e={x:I(r,"x","acos")};return T.runKernel(Fn,e)}var Ub=k({acos_:iz});function az(r){let e={x:I(r,"x","acosh")};return T.runKernel(On,e)}var Wb=k({acosh_:az});function lz(r,t=null,e=!1){let n={x:I(r,"x","all","bool")},s={axis:t,keepDims:e};return T.runKernel(Gl,n,s)}var Ip=k({all_:lz});function cz(r,t=null,e=!1){let n={x:I(r,"x","any","bool")},s={axis:t,keepDims:e};return T.runKernel(Ul,n,s)}var Lc=k({any_:cz});function uz(r,t=0){let o={x:I(r,"x","argMax")},n={axis:t};return T.runKernel(si,o,n)}var oo=k({argMax_:uz});function pz(r,t=0){let o={x:I(r,"x","argMin")},n={axis:t};return T.runKernel(ii,o,n)}var tI=k({argMin_:pz});function mz(r){let e={x:I(r,"x","asin")};return T.runKernel(Ln,e)}var Hb=k({asin_:mz});function fz(r){let e={x:I(r,"x","asinh")};return T.runKernel(Pn,e)}var qb=k({asinh_:fz});function hz(r){let e={x:I(r,"x","atan")};return T.runKernel(zn,e)}var Kb=k({atan_:hz});function dz(r,t){let e=I(r,"a","atan2"),o=I(t,"b","atan2");[e,o]=Ft(e,o);let n={a:e,b:o};return T.runKernel(Mn,n)}var eI=k({atan2_:dz});function gz(r){let e={x:I(r,"x","atanh")};return T.runKernel(Bn,e)}var jb=k({atanh_:gz});function xz(r,t,e,o,n="NHWC",s){let i=r[3],a=[...t,i],l=oI(n);return qa(r,a,e,s,o,null,null,l)}function Yb(r,t,e,o,n,s,i="channelsLast"){let[a,l]=Np(t),c;if(i==="channelsLast")c=[a,l,r[3],r[3]];else if(i==="channelsFirst")c=[a,l,r[1],r[1]];else throw new Error(`Unknown dataFormat ${i}`);return qa(r,c,e,o,n,s,!1,i)}function yz(r,t,e,o,n,s,i="NDHWC"){let[a,l,c]=Xb(t),u,p;if(i==="NDHWC")p="channelsLast",u=[a,l,c,r[4],r[4]];else if(i==="NCDHW")p="channelsFirst",u=[a,l,c,r[1],r[1]];else throw new Error(`Unknown dataFormat ${i}`);return rI(r,u,e,o,n,!1,p,s)}function qa(r,t,e,o,n,s,i=!1,a="channelsLast"){let[l,c,u,p]=[-1,-1,-1,-1];if(a==="channelsLast")[l,c,u,p]=r;else if(a==="channelsFirst")[l,p,c,u]=r;else throw new Error(`Unknown dataFormat ${a}`);let[m,f,,h]=t,[d,g]=Np(e),[x,b]=Np(o),C=Pc(m,x),w=Pc(f,b),{padInfo:v,outHeight:E,outWidth:A}=Cz(n,c,u,d,g,C,w,s,a),$=i?h*p:h,F;return a==="channelsFirst"?F=[l,$,E,A]:a==="channelsLast"&&(F=[l,E,A,$]),{batchSize:l,dataFormat:a,inHeight:c,inWidth:u,inChannels:p,outHeight:E,outWidth:A,outChannels:$,padInfo:v,strideHeight:d,strideWidth:g,filterHeight:m,filterWidth:f,effectiveFilterHeight:C,effectiveFilterWidth:w,dilationHeight:x,dilationWidth:b,inShape:r,outShape:F,filterShape:t}}function rI(r,t,e,o,n,s=!1,i="channelsLast",a){let[l,c,u,p,m]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,c,u,p,m]=r;else if(i==="channelsFirst")[l,m,c,u,p]=r;else throw new Error(`Unknown dataFormat ${i}`);let[f,h,d,,g]=t,[x,b,C]=Xb(e),[w,v,E]=Xb(o),A=Pc(f,w),$=Pc(h,v),F=Pc(d,E),{padInfo:L,outDepth:M,outHeight:V,outWidth:G}=vz(n,c,u,p,x,b,C,A,$,F,a),W=s?g*m:g,U;return i==="channelsFirst"?U=[l,W,M,V,G]:i==="channelsLast"&&(U=[l,M,V,G,W]),{batchSize:l,dataFormat:i,inDepth:c,inHeight:u,inWidth:p,inChannels:m,outDepth:M,outHeight:V,outWidth:G,outChannels:W,padInfo:L,strideDepth:x,strideHeight:b,strideWidth:C,filterDepth:f,filterHeight:h,filterWidth:d,effectiveFilterDepth:A,effectiveFilterHeight:$,effectiveFilterWidth:F,dilationDepth:w,dilationHeight:v,dilationWidth:E,inShape:r,outShape:U,filterShape:t}}function bz(r,t,e,o,n){o==null&&(o=Zb(r,t,e));let s=r[0],i=r[1],a=Tp((s-t+2*o)/e+1,n),l=Tp((i-t+2*o)/e+1,n);return[a,l]}function wz(r,t,e,o,n,s){n==null&&(n=Zb(r,t[0],o[0]));let i=[0,0,0,e];for(let a=0;a<3;a++)r[a]+2*n>=t[a]&&(i[a]=Tp((r[a]-t[a]+2*n)/o[a]+1,s));return i}function Zb(r,t,e,o=1){let n=Pc(t,o);return Math.floor((r[0]*(e-1)-e+n)/2)}function Np(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function Xb(r){return typeof r=="number"?[r,r,r]:r}function Pc(r,t){return t<=1?r:r+(r-1)*(t-1)}function Cz(r,t,e,o,n,s,i,a,l){let c,u,p;if(typeof r=="number"){c={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let f=bz([t,e],s,o,r,a);u=f[0],p=f[1]}else if(r==="same"){u=Math.ceil(t/o),p=Math.ceil(e/n);let m=Math.max(0,(u-1)*o+s-t),f=Math.max(0,(p-1)*n+i-e),h=Math.floor(m/2),d=m-h,g=Math.floor(f/2),x=f-g;c={top:h,bottom:d,left:g,right:x,type:"SAME"}}else if(r==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-s+1)/o),p=Math.ceil((e-i+1)/n);else if(typeof r=="object"){let m=l==="channelsLast"?r[1][0]:r[2][0],f=l==="channelsLast"?r[1][1]:r[2][1],h=l==="channelsLast"?r[2][0]:r[3][0],d=l==="channelsLast"?r[2][1]:r[3][1];c={top:m,bottom:f,left:h,right:d,type:m===0&&f===0&&h===0&&d===0?"VALID":"EXPLICIT"},u=Tp((t-s+m+f)/o+1,a),p=Tp((e-i+h+d)/n+1,a)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:c,outHeight:u,outWidth:p}}function vz(r,t,e,o,n,s,i,a,l,c,u){let p,m,f,h;if(r==="valid"&&(r=0),typeof r=="number"){p={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let g=wz([t,e,o,1],[a,l,c],1,[n,s,i],r,u);m=g[0],f=g[1],h=g[2]}else if(r==="same"){m=Math.ceil(t/n),f=Math.ceil(e/s),h=Math.ceil(o/i);let d=(m-1)*n+a-t,g=(f-1)*s+l-e,x=(h-1)*i+c-o,b=Math.floor(d/2),C=d-b,w=Math.floor(g/2),v=g-w,E=Math.floor(x/2),A=x-E;p={top:w,bottom:v,left:E,right:A,front:b,back:C,type:"SAME"}}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:p,outDepth:m,outHeight:f,outWidth:h}}function Tp(r,t){if(!t)return Math.trunc(r);switch(t){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${t}`)}}function no(r){let[t,e,o]=Np(r);return t===1&&e===1&&o===1}function Ye(r,t){return no(r)||no(t)}function fn(r){return Np(r).every(t=>t>0)}function oI(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function ee(r,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")N(_n(t),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(o=>{o.forEach(n=>{N(_n(n),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${n}.`)})});else throw Error(`Error in ${r}: Unknown padding parameter: ${t}`)}}function Sz(r,t){let o={x:I(r,"x","reshape","string_or_numeric")},n={shape:t};return T.runKernel(Pi,o,n)}var _=k({reshape_:Sz});function Iz(r,t,e,o,n){let s=I(r,"x","avgPool","float32"),i=1;N(Ye(e,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`);let a=s,l=!1;s.rank===3&&(l=!0,a=_(s,[1,s.shape[0],s.shape[1],s.shape[2]])),N(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),ee("avgPool",o,n);let c={x:a},u={filterSize:t,strides:e,pad:o,dimRoundingMode:n},p=T.runKernel(ai,c,u);return p=Y(p,s.dtype),l?_(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Ka=k({avgPool_:Iz});function Nz(r,t,e,o,n,s="NDHWC"){let i=I(r,"x","avgPool3d","float32"),a=i,l=!1;i.rank===4&&(l=!0,a=_(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),N(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),N(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),N(typeof e=="number"&&e>0||Array.isArray(e)&&e[0]>0&&e[1]>0&&e[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${e}'`),ee("avgPool3d",o,n);let c={x:a},u={filterSize:t,strides:e,pad:o,dimRoundingMode:n,dataFormat:s},p=T.runKernel(li,c,u);return p=Y(p,a.dtype),l?_(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Jb=k({avgPool3d_:Nz});function Tz(r,t=0){N(r.length>=1,()=>"Pass at least one tensor to concat");let e=Bh(r,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),e.length===1)return Ur(e[0]);let o=e,n={axis:t};return T.runKernel(mi,o,n)}var ne=k({concat_:Tz});function kz(r,t,e=!1,o=!1){let n=I(r,"a","matMul"),s=I(t,"b","matMul");[n,s]=Ft(n,s);let i={a:n,b:s},a={transposeA:e,transposeB:o};return T.runKernel(ci,i,a)}var Wt=k({matMul_:kz});function Ez(r){let e={x:I(r,"x","sigmoid","float32")};return T.runKernel(ys,e)}var yo=k({sigmoid_:Ez});function Az(r,t,e){let o=I(r,"x","slice","string_or_numeric");if(o.rank===0)throw new Error("Slicing scalar is not possible");let n={x:o},s={begin:t,size:e};return T.runKernel(Gi,n,s)}var Pt=k({slice_:Az});function $z(r){let e={x:I(r,"x","tanh","float32")};return T.runKernel(Is,e)}var ja=k({tanh_:$z});function Dz(r,t,e){let o=I(r,"x","batchToSpaceND"),n=t.reduce((a,l)=>a*l);N(o.rank>=1+t.length,()=>`input rank is ${o.rank} but should be > than blockShape.length ${t.length}`),N(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),N(o.shape[0]%n===0,()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${n}`);let s={x:o},i={blockShape:t,crops:e};return T.runKernel(ui,s,i)}var zc=k({batchToSpaceND_:Dz});function nI(r){let t;return r.rank===0||r.rank===1?t=_(r,[1,1,1,r.size]):r.rank===2?t=_(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?t=_(r,[1,r.shape[0],r.shape[1],r.shape[2]]):t=r,t}function Rz(r,t,e,o,n,s){s==null&&(s=.001);let i=I(r,"x","batchNorm"),a=I(t,"mean","batchNorm"),l=I(e,"variance","batchNorm"),c;n!=null&&(c=I(n,"scale","batchNorm"));let u;o!=null&&(u=I(o,"offset","batchNorm")),N(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),N(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),N(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let m={x:nI(i),scale:c,offset:u,mean:a,variance:l},f={varianceEpsilon:s},h=T.runKernel(wi,m,f);return _(h,i.shape)}var ra=k({batchNorm_:Rz});function _z(r,t,e,o,n,s){let i=I(r,"x","batchNorm"),a=I(t,"mean","batchNorm"),l=I(e,"variance","batchNorm"),c;n!=null&&(c=I(n,"scale","batchNorm"));let u;return o!=null&&(u=I(o,"offset","batchNorm")),N(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),N(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),N(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&N(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&N(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),ra(i,a,l,u,c,s)}var Qb=k({batchNorm2d_:_z});function Fz(r,t,e,o,n,s){let i=I(r,"x","batchNorm"),a=I(t,"mean","batchNorm"),l=I(e,"variance","batchNorm"),c;n!=null&&(c=I(n,"scale","batchNorm"));let u;return o!=null&&(u=I(o,"offset","batchNorm")),N(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),N(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),N(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&N(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&N(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),ra(i,a,l,u,c,s)}var t0=k({batchNorm3d_:Fz});function Oz(r,t,e,o,n,s){let i=I(r,"x","batchNorm"),a=I(t,"mean","batchNorm"),l=I(e,"variance","batchNorm"),c;n!=null&&(c=I(n,"scale","batchNorm"));let u;return o!=null&&(u=I(o,"offset","batchNorm")),N(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),N(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),N(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&N(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&N(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),ra(i,a,l,u,c,s)}var e0=k({batchNorm4d_:Oz});function Lz(r,t,e){let o=I(r,"x","bincount"),n=I(t,"weights","bincount");N(o.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${o.dtype}`),N(e>=0,()=>`size must be non-negative, but got ${e}.`),N(n.size===o.size||n.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${o.shape}, weights shape: ${n.shape}.`);let s={x:o,weights:n},i={size:e};return T.runKernel(ql,s,i)}var sI=k({bincount_:Lz});function Pz(r,t){let e=I(r,"broadcastTo","x"),o=e.shape;if(je(t),t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){let c=e.shape.slice();for(;c.length<t.length;)c.unshift(1);e=_(e,c)}let n=e.shape,s=Array.from(t);for(let c=t.length-1;c>=0;c--)if(n[c]===t[c])s[c]=1;else if(e.shape[c]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${t}].`);if(s.map((c,u)=>c>1?u:-1).filter(c=>c>=0).length===0)return Ur(e);let a={x:e},l={reps:s};return T.runKernel(an,a,l)}var As=k({broadcastTo_:Pz});function zz(r){let e={x:I(r,"x","ceil","float32")};return T.runKernel(Vn,e)}var r0=k({ceil_:zz});function $s(r,t,e){je(r),e=e||oi(t);let o={shape:r,value:t,dtype:e};return T.runKernel(ic,{},o)}function Bz(r,t,e){let o=I(r,"x","clipByValue");if(N(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return $s(o.shape,t,o.dtype);let n={x:o},s={clipValueMin:t,clipValueMax:e};return T.runKernel(Gn,n,s)}var Ze=k({clipByValue_:Bz});function Mz(r){return ne(r,0)}var o0=k({concat1d_:Mz});function Vz(r,t){return ne(r,t)}var n0=k({concat2d_:Vz});function Gz(r,t){return ne(r,t)}var s0=k({concat3d_:Gz});function Uz(r,t){return ne(r,t)}var i0=k({concat4d_:Uz});function Wz(r,t,e,o,n="NHWC",s=[1,1],i){let a=I(r,"x","conv2d","float32"),l=I(t,"filter","conv2d","float32"),c=a,u=!1;a.rank===3&&(u=!0,c=_(a,[1,a.shape[0],a.shape[1],a.shape[2]])),N(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),N(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),ee("conv2d",o,i);let p=n==="NHWC"?c.shape[3]:c.shape[1];N(p===l.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`),N(Ye(e,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),N(fn(s),()=>"Error in conv2D: Dilated rates should be larger than 0."),N(fn(e),()=>"Error in conv2D: Strides should be larger than 0.");let m={x:c,filter:l},f={strides:e,pad:o,dataFormat:n,dilations:s,dimRoundingMode:i},h=T.runKernel(fi,m,f);return u?_(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Wr=k({conv2d_:Wz});function Hz(r,t,e,o,n="NWC",s=1,i){let a=I(r,"x","conv1d"),l=I(t,"filter","conv1d"),c=a,u=!1;a.rank===2&&(u=!0,c=_(a,[1,a.shape[0],a.shape[1]])),N(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),N(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),ee("conv1d",o,i),N(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),N(Ye(e,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${s}'`),N(fn(s),()=>"Error in conv1D: Dilated rates should be larger than 0."),N(fn(e),()=>"Error in conv1D: Stride should be larger than 0."),N(n==="NWC",()=>`Error in conv1d: got dataFormat of ${n} but only NWC is currently supported.`);let p=_(l,[1,l.shape[0],l.shape[1],l.shape[2]]),m=_(c,[c.shape[0],1,c.shape[1],c.shape[2]]),g=Wr(m,p,[1,e],o,"NHWC",[1,s],i);return u?_(g,[g.shape[2],g.shape[3]]):_(g,[g.shape[0],g.shape[2],g.shape[3]])}var kp=k({conv1d_:Hz});function qz(r,t,e,o,n,s="NHWC",i){N(r.length===t.rank,()=>`Length of inShape (${r.length}) and rank of dy (${t.rank}) must match`);let a=r,l=t,c=!1;t.rank===3&&(c=!0,l=_(t,[1,t.shape[0],t.shape[1],t.shape[2]]),a=[1,r[0],r[1],r[2]]),N(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),N(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),N(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);let u=s==="NHWC"?a[3]:a[1],p=s==="NHWC"?l.shape[3]:l.shape[1];N(u===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${e.shape[2]}.`),N(p===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${e.shape[3]}.`),ee("conv2dDerInput",n,i);let m={dy:l,filter:e},f={strides:o,pad:n,dataFormat:s,dimRoundingMode:i,inputShape:a},h=T.runKernel(hi,m,f);return c?_(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Bc=k({conv2DBackpropInput_:qz});function Kz(r,t,e,o,n,s){let i=I(r,"x","conv2dTranspose"),a=I(t,"filter","conv2dTranspose");return Bc(e,i,a,o,n,"NHWC",s)}var Ep=k({conv2dTranspose_:Kz});function jz(r,t,e,o,n="NDHWC",s=[1,1,1]){let i=I(r,"x","conv3d"),a=I(t,"filter","conv3d"),l=i,c=!1;i.rank===4&&(c=!0,l=_(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),N(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),N(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),N(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),N(Ye(e,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),N(n==="NDHWC",()=>`Error in conv3d: got dataFormat of ${n} but only NDHWC is currently supported.`),N(fn(s),()=>"Error in conv3D: Dilated rates should be larger than 0."),N(fn(e),()=>"Error in conv3D: Strides should be larger than 0.");let u={x:l,filter:a},p={strides:e,pad:o,dataFormat:n,dilations:s},m=T.runKernel(di,u,p);return c?_(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var a0=k({conv3d_:jz});function Xz(r,t,e,o,n){N(r.length===t.rank,()=>`Length of inShape (${r.length}) and rank of dy (${t.rank}) must match`);let s=r,i=t,a=!1;t.rank===4&&(a=!0,i=_(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,r[0],r[1],r[2],r[3]]);let l=s[4],c=i.shape[4];N(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),N(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),N(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),N(l===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[3]}.`),N(c===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${e.shape[4]}.`);let u={dy:i,filter:e},p={pad:n,strides:o,inputShape:s},m=T.runKernel(Yl,u,p);return a?_(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var jh=k({conv3DBackpropInput_:Xz});function Yz(r,t,e,o,n){let s=I(r,"x","conv3dTranspose"),i=I(t,"filter","conv3dTranspose");return jh(e,s,i,o,n)}var l0=k({conv3dTranspose_:Yz});function Zz(r){let e={x:I(r,"x","cos","float32")};return T.runKernel(Un,e)}var Xa=k({cos_:Zz});function Jz(r){let e={x:I(r,"x","cosh","float32")};return T.runKernel(Wn,e)}var Ap=k({cosh_:Jz});function Qz(r,t=0,e=!1,o=!1){let s={x:I(r,"x","cumprod")},i={axis:t,exclusive:e,reverse:o};return T.runKernel(Zl,s,i)}var $p=k({cumprod_:Qz});function t3(r,t=0,e=!1,o=!1){let s={x:I(r,"x","cumsum")},i={axis:t,exclusive:e,reverse:o};return T.runKernel(gi,s,i)}var Xh=k({cumsum_:t3});function e3(r,t,e,o=!1){let n=I(r,"x","denseBincount"),s=I(t,"weights","denseBincount");N(n.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${n.dtype}`),N(n.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${n.rank}.`),N(e>=0,()=>`size must be non-negative, but got ${e}.`),N(s.size===n.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${n.shape}, weights shape: ${s.shape}.`);let i={x:n,weights:s},a={size:e,binaryOutput:o};return T.runKernel(Ql,i,a)}var Yh=k({denseBincount_:e3});function r3(r,t,e="NHWC"){let o=I(r,"x","depthToSpace","float32"),n=e==="NHWC"?o.shape[1]:o.shape[2],s=e==="NHWC"?o.shape[2]:o.shape[3],i=e==="NHWC"?o.shape[3]:o.shape[1];N(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),N(n*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${n} and ${t}  for depthToSpace with input shape
    ${o.shape}`),N(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${o.shape}`),N(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${o.shape}`);let a={x:o},l={blockSize:t,dataFormat:e};return T.runKernel(tc,a,l)}var iI=k({depthToSpace_:r3});function o3(r,t,e,o,n="NHWC",s=[1,1],i){let a=I(r,"x","depthwiseConv2d","float32"),l=I(t,"filter","depthwiseConv2d","float32"),c=a,u=!1;a.rank===3&&(u=!0,c=_(a,[1,a.shape[0],a.shape[1],a.shape[2]])),N(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),N(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);let p=n==="NHWC"?c.shape[3]:c.shape[1];N(p===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${l.shape[2]}.`),ee("depthwiseConv2d",o,i);let m={x:c,filter:l},f={strides:e,pad:o,dataFormat:n,dilations:s,dimRoundingMode:i},h=T.runKernel(xi,m,f);return u?_(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Ds=k({depthwiseConv2d_:o3});function n3(r,t,e,o,n=[1,1],s="NHWC"){let i=I(r,"x","dilation2d"),a=I(t,"filter","dilation2d");N(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),N(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),N(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let l=i,c=!1;i.rank===3&&(l=_(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=!0),N(l.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${a.shape[2]}`);let u={x:l,filter:a},p={strides:e,pad:o,dilations:n},m=T.runKernel(yi,u,p);return c?_(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var aI=k({dilation2d_:n3});var Hr={};po(Hr,{assertAndGetBroadcastShape:()=>Et,getBroadcastDims:()=>lI,getReductionAxes:()=>Zt});function lI(r,t){let e=r.length,o=[];for(let n=0;n<e;n++){let s=e-1-n,i=r[s]||1;(t[t.length-1-n]||1)>1&&i===1&&o.unshift(s)}return o}function Zt(r,t){let e=[];for(let o=0;o<t.length;o++){let n=r[r.length-o-1],s=t.length-o-1,i=t[s];(n==null||n===1&&i>1)&&e.unshift(s)}return e}function Et(r,t){let e=Math.max(r.length,t.length),o=new Array(e);for(let n=0;n<e;n++){let s=r[r.length-n-1];s==null&&(s=1);let i=t[t.length-n-1];if(i==null&&(i=1),s===1)o[e-n-1]=i;else if(i===1)o[e-n-1]=s;else if(s!==i){let a=`Operands could not be broadcast together with shapes ${r} and ${t}.`;throw Error(a)}else o[e-n-1]=s}return o}function s3(r,t){let e=I(r,"a","equal","string_or_numeric"),o=I(t,"b","equal","string_or_numeric");[e,o]=Ft(e,o),Et(e.shape,o.shape);let n={a:e,b:o};return T.runKernel(Ta,n)}var vr=k({equal_:s3});function i3(r,t,e){let o=I(t,"a","where"),n=I(e,"b","where"),s=I(r,"condition","where","bool"),i=Et(Et(s.shape,o.shape),n.shape),a=As(s,i),l=As(o,i),c=As(n,i),u={condition:a,t:l,e:c};return T.runKernel(Vi,u)}var se=k({where_:i3});function a3(r){let e={x:I(r,"x","zerosLike")};return T.runKernel(Xi,e)}var gt=k({zerosLike_:a3});function l3(r,t){let e=I(r,"a","div"),o=I(t,"b","div");[e,o]=Ft(e,o);let n=nt(e,o),s=gt(n),i=vr(o,s);return se(i,s,n)}var cI=k({divNoNan_:l3});function c3(r,t){let e=I(r,"t1","dot"),o=I(t,"t2","dot");N((e.rank===1||e.rank===2)&&(o.rank===1||o.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${o.rank}.`);let n=e.rank===1?e.size:e.shape[1],s=o.rank===1?o.size:o.shape[0];if(N(n===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${n} and ${s}.`),e.rank===1&&o.rank===1){let i=_(e,[1,-1]),a=_(o,[-1,1]),l=Wt(i,a);return _(l,[])}else if(e.rank===1&&o.rank===2){let i=_(e,[1,-1]),a=_(o,[o.shape[0],o.shape[1]]),l=Wt(i,a);return _(l,[l.size])}else if(e.rank===2&&o.rank===1){let i=_(o,[-1,1]),a=Wt(e,i);return _(a,[a.size])}else{let i=_(o,[o.shape[0],o.shape[1]]);return Wt(e,i)}}var uI=k({dot_:c3});function u3(r,...t){let e=t.map((n,s)=>I(n,`tensors${s}`,"einsum")),o={equation:r};return T.runKernel(oc,e,o)}var Mc=k({einsum_:u3});function p3(r){let e={x:I(r,"x","elu","float32")};return T.runKernel(qn,e)}var Rs=k({elu_:p3});function m3(r){let t=I(r,"x","erf");N(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=Y(t,"float32"));let e={x:t};return T.runKernel(Kn,e)}var Dp=k({erf_:m3});function c0(r,t){for(let e=0;e<r.length;++e)if(r[r.length-e-1]!==t-1-e)return!1;return!0}function pI(r,t,e){let o=r.length+t.length,n=[],s=0,i=0;for(let a=0;a<o;a++)e.indexOf(a)===-1?n.push(r[s++]):n.push(t[i++]);return n}function u0(r,t){let e=[],o=r.length;for(let s=0;s<o;s++)t.indexOf(s)===-1&&e.push(r[s]);let n=t.map(s=>r[s]);return[e,n]}function hn(r,t){let e=t.map(o=>1);return pI(r,e,t)}function f3(r,t,e){N(c0(t,e),()=>`${r} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function p0(r,t){if(c0(r,t))return null;let e=[];for(let o=0;o<t;++o)r.indexOf(o)===-1&&e.push(o);return r.forEach(o=>e.push(o)),e}function Rp(r){return r.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function h3(r,t){let e=[];for(let o=t-r;o<t;++o)e.push(o);return e}function d3(r,t=null,e=!1){let n={x:I(r,"x","max")},s={reductionIndices:t,keepDims:e};return T.runKernel(Ii,n,s)}var Je=k({max_:d3});function g3(r,t=null,e=!1){let n={x:I(r,"x","min")},s={axis:t,keepDims:e};return T.runKernel(Ei,n,s)}var oa=k({min_:g3});function x3(r,t){let e=I(r,"base","pow"),o=I(t,"exp","pow");[e,o]=Ft(e,o);let n={a:e,b:o};return T.runKernel(ls,n)}var Rr=k({pow_:x3});function bt(r,t){if((fr(r)&&t!=="string"||Array.isArray(r))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&fr(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Qi(r,[],[],t)}function y3(r){let e={x:I(r,"x","sqrt","float32")};return T.runKernel(ws,e)}var Jt=k({sqrt_:y3});function b3(r){let t=I(r,"x","square"),e={};return T.runKernel("Square",{x:t},e)}var _t=k({square_:b3});function w3(r,t=null,e=!1){let o=I(r,"x","sum");o.dtype==="bool"&&(o=Y(o,"int32"));let n={x:o},s={axis:t,keepDims:e};return T.runKernel(Ui,n,s)}var lt=k({sum_:w3});function C3(r,t="euclidean",e=null,o=!1){r=I(r,"x","norm");let n=mI(r,t,e),s=n.shape;if(o){let i=Oe(e,r.shape);s=hn(n.shape,i)}return _(n,s)}function mI(r,t,e=null){if(r.rank===0)return De(r);if(r.rank!==1&&e===null)return mI(_(r,[-1]),t,e);if(r.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return lt(De(r),e);if(t===1/0)return Je(De(r),e);if(t===-1/0)return oa(De(r),e);if(t==="euclidean"||t===2)return Jt(lt(Rr(De(r),bt(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return Je(lt(De(r),e[0]),e[1]-1);if(t===1/0)return Je(lt(De(r),e[1]),e[0]);if(t===-1/0)return oa(lt(De(r),e[1]),e[0]);if(t==="fro"||t==="euclidean")return Jt(lt(_t(r),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}var na=k({norm_:C3});function v3(r,t=null,e=!1){return na(r,"euclidean",t,e)}var fI=k({euclideanNorm_:v3});function S3(r){let e={x:I(r,"x","exp")};return T.runKernel(jn,e)}var Ve=k({exp_:S3});function I3(r,t=0){let e=I(r,"x","expandDims","string_or_numeric");N(t<=e.rank,()=>"Axis must be <= rank of the tensor");let o={input:e},n={dim:t};return T.runKernel(bi,o,n)}var ke=k({expandDims_:I3});function N3(r){let e={x:I(r,"x","expm1")};return T.runKernel(Xn,e)}var f0=k({expm1_:N3});function T3(r,t){let e=I(r,"x","tile","string_or_numeric");N(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);let o={x:e},n={reps:t};return T.runKernel(an,o,n)}var sr=k({tile_:T3});function k3(r,t,e,o="float32"){t==null&&(t=r);let n=dt([r,t],o),s=r<=t?r:t;for(let a=0;a<s;++a)n.set(1,a,a);let i=_(n.toTensor(),[r,t]);if(e==null)return i;if(e.length===1)return sr(ke(i,0),[e[0],1,1]);if(e.length===2)return sr(ke(ke(i,0),0),[e[0],e[1],1,1]);if(e.length===3)return sr(ke(ke(ke(i,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}var Vc=k({eye_:k3});function E3(r){let e={x:I(r,"x","floor","float32")};return T.runKernel(Yn,e)}var _s=k({floor_:E3});function A3(r,t,e=0,o=0){let n=I(r,"x","gather"),s=I(t,"indices","gather","int32"),i={x:n,indices:s},a={axis:e,batchDims:o};return T.runKernel(Ci,i,a)}var Ya=k({gather_:A3});function $3(r,t){let e=I(r,"a","greater","string_or_numeric"),o=I(t,"b","greater","string_or_numeric");[e,o]=Ft(e,o),Et(e.shape,o.shape);let n={a:e,b:o};return T.runKernel(ka,n)}var we=k({greater_:$3});function D3(r,t){let e=I(r,"a","greaterEqual","string_or_numeric"),o=I(t,"b","greaterEqual","string_or_numeric");[e,o]=Ft(e,o),Et(e.shape,o.shape);let n={a:e,b:o};return T.runKernel(Jn,n)}var _r=k({greaterEqual_:D3});function R3(r){let e={input:I(r,"input","imag")};return T.runKernel(cc,e)}var Gc=k({imag_:R3});function _3(r){let e={x:I(r,"x","isFinite")};return T.runKernel(Qn,e)}var h0=k({isFinite_:_3});function F3(r){let e={x:I(r,"x","isInf")};return T.runKernel(ts,e)}var d0=k({isInf_:F3});function O3(r){let e={x:I(r,"x","isNaN")};return T.runKernel(es,e)}var g0=k({isNaN_:O3});function L3(r,t=.2){let o={x:I(r,"x","leakyRelu")},n={alpha:t};return T.runKernel(vi,o,n)}var Za=k({leakyRelu_:L3});function P3(r,t){let e=I(r,"a","less","string_or_numeric"),o=I(t,"b","less","string_or_numeric");[e,o]=Ft(e,o),Et(e.shape,o.shape);let n={a:e,b:o};return T.runKernel(Ea,n)}var Ja=k({less_:P3});function z3(r,t){let e=I(r,"a","lessEqual","string_or_numeric"),o=I(t,"b","lessEqual","string_or_numeric");[e,o]=Ft(e,o),Et(e.shape,o.shape);let n={a:e,b:o};return T.runKernel(Aa,n)}var bo=k({lessEqual_:z3});function B3(r,t=5,e=1,o=1,n=.5){let s=I(r,"x","localResponseNormalization");N(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),N(_n(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,a=!1;s.rank===3&&(a=!0,i=_(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},c={depthRadius:t,bias:e,alpha:o,beta:n},u=T.runKernel(Si,l,c);return a?_(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var hI=k({localResponseNormalization_:B3});function M3(r){let e={x:I(r,"x","log","float32")};return T.runKernel(rs,e)}var Sr=k({log_:M3});function V3(r){let e={x:I(r,"x","log1p")};return T.runKernel(os,e)}var _p=k({log1p_:V3});function x0(r,t){N(zl(r),()=>"The f passed in variableGrads(f) must be a function"),N(t==null||Array.isArray(t)&&t.every(c=>c instanceof Ts),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let e=t!=null;if(!e){t=[];for(let c in T.registeredVariables)t.push(T.registeredVariables[c])}let o=e?t.filter(c=>!c.trainable):null,n=t.length;t=t.filter(c=>c.trainable),N(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${n} variables is trainable.`);let s=!0,{value:i,grads:a}=T.gradients(r,t,null,s);N(a.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),N(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let l={};return t.forEach((c,u)=>{a[u]!=null&&(l[c.name]=a[u])}),o?.forEach(c=>l[c.name]=null),{value:i,grads:l}}function io(r){return T.customGrad(r)}function G3(r){let e={x:I(r,"x","neg")};return T.runKernel($i,e)}var Mt=k({neg_:G3});function U3(r){let e={x:I(r,"x","softplus")};return T.runKernel(bs,e)}var dn=k({softplus_:U3});function W3(r){let t=I(r,"x","logSigmoid");return io(o=>({value:Mt(dn(Mt(o))),gradFunc:i=>R(i,yo(Mt(o)))}))(t)}var y0=k({logSigmoid_:W3});function H3(r,t){let e=I(r,"a","sub"),o=I(t,"b","sub");[e,o]=Ft(e,o);let n={a:e,b:o};return T.runKernel(vs,n)}var ut=k({sub_:H3});function q3(r,t=-1){let e=I(r,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return io((n,s)=>{let a=Je(n,t,!0),l=ut(n,a),c=ut(Y(l,"float32"),Sr(lt(Ve(l),t,!0)));return s([c]),{value:c,gradFunc:(p,m)=>{let[f]=m,h=!0,d=Ve(f);return ut(p,R(lt(p,t,h),d))}}})(e)}var Fp=k({logSoftmax_:q3});function K3(r,t=null,e=!1){let o=I(r,"x","logSumExp"),n=Oe(t,o.shape),s=Je(o,n,!0),i=ut(o,s),a=Ve(i),l=lt(a,n),c=Sr(l),u=j(_(s,c.shape),c);if(e){let p=hn(u.shape,n);return _(u,p)}return u}var Op=k({logSumExp_:K3});function j3(r,t){let e=I(r,"a","logicalAnd","bool"),o=I(t,"b","logicalAnd","bool");Et(e.shape,o.shape);let n={a:e,b:o};return T.runKernel($a,n)}var hr=k({logicalAnd_:j3});function X3(r){let e={x:I(r,"x","logicalNot","bool")};return T.runKernel(Da,e)}var Uc=k({logicalNot_:X3});function Y3(r,t){let e=I(r,"a","logicalOr","bool"),o=I(t,"b","logicalOr","bool");Et(e.shape,o.shape);let n={a:e,b:o};return T.runKernel(Ra,n)}var Zh=k({logicalOr_:Y3});function Z3(r,t){let e=I(r,"a","logicalXor","bool"),o=I(t,"b","logicalXor","bool");return Et(e.shape,o.shape),hr(Zh(r,t),Uc(hr(r,t)))}var dI=k({logicalXor_:Z3});function J3(r,t,e,o,n){let s=I(r,"x","maxPool"),i=1,a=s,l=!1;s.rank===3&&(l=!0,a=_(s,[1,s.shape[0],s.shape[1],s.shape[2]])),N(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),N(Ye(e,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),ee("maxPool",o,n);let c={x:a},u={filterSize:t,strides:e,pad:o,dimRoundingMode:n},p=T.runKernel(Ni,c,u);return l?_(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Qa=k({maxPool_:J3});function Q3(r,t=[1,1,1],e,o,n,s="NDHWC"){let i=I(r,"x","maxPool3d"),a=i,l=!1;i.rank===4&&(l=!0,a=_(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),N(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),N(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),ee("maxPool3d",o,n);let c={x:a},u={filterSize:t,strides:e,pad:o,dimRoundingMode:n,dataFormat:s},p=T.runKernel(Ti,c,u);return l?_(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var b0=k({maxPool3d_:Q3});function tB(r,t){let e=I(r,"a","maximum"),o=I(t,"b","maximum");[e,o]=Ft(e,o),e.dtype==="bool"&&(e=Y(e,"int32"),o=Y(o,"int32")),Et(e.shape,o.shape);let n={a:e,b:o};return T.runKernel(ns,n)}var qr=k({maximum_:tB});function eB(r,t=null,e=!1){let n={x:I(r,"x","mean")},s={axis:t,keepDims:e};return T.runKernel(ki,n,s)}var le=k({mean_:eB});function ie(r,t="float32"){if(je(r),t==="complex64"){let o=ie(r,"float32"),n=ie(r,"float32");return ro(o,n)}let e=Ml(Ut(r),t);return T.makeTensor(e,r,t)}function Ir(r,t="float32"){if(je(r),t==="complex64"){let o=Ir(r,"float32"),n=ie(r,"float32");return ro(o,n)}let e=cp(Ut(r),t);return T.makeTensor(e,r,t)}function rB(r,t){let e=I(r,"a","minimum"),o=I(t,"b","minimum");[e,o]=Ft(e,o),e.dtype==="bool"&&(e=Y(e,"int32"),o=Y(o,"int32")),Et(e.shape,o.shape);let n={a:e,b:o};return T.runKernel(ss,n)}var gn=k({minimum_:rB});function oB(r,t,e){N(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);let o=I(r,"x","mirrorPad");if(o.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");N(t.length===o.rank,()=>`Padding doesn't match input. Must be ${o.rank}. Got ${t.length}.`);let n=e==="reflect"?1:0;for(let a=0;a<o.rank;a++)N(t[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),N(t[a][0]>=0&&t[a][0]<=o.shape[a]-n&&t[a][1]>=0&&t[a][1]<=o.shape[a]-n,()=>`Padding in dimension ${a} cannot be greater than or equal to ${o.shape[a]-n} or less than 0 for input of shape ${o.shape}`);let s={paddings:t,mode:e},i={x:o};return T.runKernel(Ai,i,s)}var gI=k({mirrorPad_:oB});function nB(r,t){let e=I(r,"a","mod"),o=I(t,"b","mod");[e,o]=Ft(e,o);let n={a:e,b:o};return T.runKernel(is,n)}var xI=k({mod_:nB});function sB(r,t=null,e=!1){r=I(r,"x","moments");let o=Oe(t,r.shape),n=le(r,o,e),s=n.shape;e||(s=hn(n.shape,o));let i=_t(ut(Y(r,"float32"),_(n,s))),a=le(i,o,e);return{mean:n,variance:a}}var Wc=k({moments_:sB});function iB(r,t){let e=I(r,"a","notEqual","string_or_numeric"),o=I(t,"b","notEqual","string_or_numeric");[e,o]=Ft(e,o),Et(e.shape,o.shape);let n={a:e,b:o};return T.runKernel(_a,n)}var sa=k({notEqual_:iB});function aB(r,t,e=1,o=0,n="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let i={indices:I(r,"indices","oneHot","int32")},a={dtype:n,depth:t,onValue:e,offValue:o};return T.runKernel(Ri,i,a)}var Hc=k({oneHot_:aB});function lB(r){let e={x:I(r,"x","onesLike")};return T.runKernel(Di,e)}var Ge=k({onesLike_:lB});function cB(r,t,e=0){let o=I(r,"x","pad");if(o.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let n={paddings:t,constantValue:e},s={x:o};return T.runKernel(Fi,s,n)}var tl=k({pad_:cB});function uB(r,t,e){let o=I(r,"x","spaceToBatchND");N(o.rank>=1+t.length,()=>`input rank ${o.rank} should be > than [blockShape] ${t.length}`),N(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),N(o.shape.reduce((i,a,l)=>l>0&&l<=t.length?i&&(a+e[l-1][0]+e[l-1][1])%t[l-1]===0:i,!0),()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);let n={x:o},s={blockShape:t,paddings:e};return T.runKernel(Wi,n,s)}var qc=k({spaceToBatchND_:uB});function pB(r,t,e,o,n,s,i){n==null&&(n=[1,1]),s==null&&(s=1),o===0&&(o="valid");let a=I(r,"x","maxPool"),l=a,c=!1;a.rank===3&&(c=!0,l=_(a,[1,a.shape[0],a.shape[1],a.shape[2]])),N(Ye(s,n),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${n}'`);let u=Yb(l.shape,t,s,n,o),p=[u.dilationHeight,u.dilationWidth],m;o==="same"?m=fB([u.filterHeight,u.filterWidth],p):m=[[0,0],[0,0]];let f=p[0]===1&&p[1]===1,[h,d]=mB([u.inHeight,u.inWidth],p,m),g=f?o:"valid",x=f?l:qc(l,p,h),C=(e==="avg"?()=>Ka(x,t,s,g,i):()=>Qa(x,t,s,g,i))(),w=f?C:zc(C,p,d);return c?_(w,[w.shape[1],w.shape[2],w.shape[3]]):w}function mB(r,t,e){let o=e.map(u=>u[0]),n=e.map(u=>u[1]),s=r.concat(o,n),i=t.map((u,p)=>(u-s[p]%u)%u),a=n.map((u,p)=>u+i[p]),l=t.map((u,p)=>[o[p],a[p]]),c=t.map((u,p)=>[0,i[p]]);return[l,c]}function fB(r,t){let o=r.map((i,a)=>i+(i-1)*(t[a]-1)).map(i=>i-1),n=o.map(i=>Math.floor(i/2)),s=o.map((i,a)=>i-n[a]);return o.map((i,a)=>[n[a],s[a]])}var yI=k({pool_:pB});function hB(r,t){let e=I(r,"x","prelu"),o=I(t,"alpha","prelu"),n={x:e,alpha:o};return T.runKernel(Oi,n)}var el=k({prelu_:hB});function dB(r,t=null,e=!1){let o=I(r,"x","prod");o.dtype==="bool"&&(o=Y(o,"int32"));let n={x:o},s={axis:t,keepDims:e};return T.runKernel(Li,n,s)}var bI=k({prod_:dB});var T0=ip(Lp());var Kc=class{constructor(t,e,o,n,s){this.mean=t,this.stdDev=e,this.dtype=o,this.nextVal=NaN,this.truncated=n,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let i=s||Math.random();this.random=T0.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){let n=this.nextVal;return this.nextVal=NaN,n}let t,e,o=!1;for(;!o;){let n,s,i;do n=2*this.random()-1,s=2*this.random()-1,i=n*n+s*s;while(i>=1||i===0);let a=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*n*a,e=this.mean+this.stdDev*s*a,(!this.truncated||this.isValidTruncated(t))&&(o=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}};var Qh=class{constructor(t=0,e=1,o,n){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=o,n==null&&(n=Math.random()),typeof n=="number"&&(n=n.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=T0.alea(n)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function vB(r,t=0,e=1,o,n){if(je(r),o!=null&&o==="bool")throw new Error(`Unsupported data type ${o}`);let s=new Kc(t,e,o,!1,n),i=dt(r,o);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var td=k({randomNormal_:vB});function SB(r,t=0,e=1,o="float32",n){je(r);let s=dt(r,o),i=new Qh(t,e,null,n);for(let a=0;a<s.values.length;a++)s.values[a]=i.nextValue();return s.toTensor()}var Vo=k({randomUniform_:SB});function Fs(r,t,e=1,o="float32"){if(e===0)throw new Error("Cannot have a step of zero");let n={start:r,stop:t,step:e,dtype:o};return T.runKernel(gc,{},n)}function IB(r){let e={input:I(r,"input","real")};return T.runKernel(xc,e)}var ol=k({real_:IB});function NB(r){let e={x:I(r,"x","reciprocal")};return T.runKernel(cs,e)}var k0=k({reciprocal_:NB});function TB(r){let e={x:I(r,"x","relu")};return T.runKernel(us,e)}var Kr=k({relu_:TB});function kB(r){let e={x:I(r,"x","relu6")};return T.runKernel(ps,e)}var ed=k({relu6_:kB});function EB(r,t){let o={x:I(r,"x","reverse")},n={dims:t};return T.runKernel(Mi,o,n)}var ao=k({reverse_:EB});function AB(r){let e={x:I(r,"x","round")};return T.runKernel(ms,e)}var Pp=k({round_:AB});function $B(r){let e={x:I(r,"x","rsqrt","float32")};return T.runKernel(fs,e)}var zp=k({rsqrt_:$B});function DB(r){let e={x:I(r,"x","selu")};return T.runKernel(hs,e)}var Bp=k({selu_:DB});function RB(r,t,e,o,n,s=[1,1],i="NHWC"){let a=I(r,"x","separableConv2d"),l=I(t,"depthwiseFilter","separableConv2d"),c=I(e,"pointwiseFilter","separableConv2d"),u=a,p=!1;if(a.rank===3&&(p=!0,u=_(a,[1,a.shape[0],a.shape[1],a.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");N(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),N(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),N(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),N(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),N(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);let m=l.shape[2],f=l.shape[3];N(c.shape[2]===m*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${m*f}, but got ${c.shape[2]}.`);let h=Ds(u,l,o,n,i,s),g=Wr(h,c,1,"valid",i);return p?_(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var Mp=k({separableConv2d_:RB});function _B(r){let e={x:I(r,"x","sign")};return T.runKernel(xs,e)}var E0=k({sign_:_B});function FB(r){let e={x:I(r,"x","sin","float32")};return T.runKernel(ds,e)}var Vp=k({sin_:FB});function OB(r){let e={x:I(r,"x","sinh")};return T.runKernel(gs,e)}var Gp=k({sinh_:OB});function LB(r,t,e){let o=I(r,"x","slice1d");return N(o.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${o.rank} tensor`),Pt(o,[t],[e])}var Up=k({slice1d_:LB});function PB(r,t,e){let o=I(r,"x","slice2d");return N(o.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${o.rank} tensor`),Pt(o,t,e)}var rd=k({slice2d_:PB});function zB(r,t,e){let o=I(r,"x","slice3d");return N(o.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${o.rank} tensor`),Pt(o,t,e)}var Wp=k({slice3d_:zB});function BB(r,t,e){let o=I(r,"x","slice4d");return N(o.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${o.rank} tensor`),Pt(o,t,e)}var jc=k({slice4d_:BB});function MB(r,t=-1){let e=I(r,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);let o={logits:e},n={dim:t};return T.runKernel(qi,o,n)}var nl=k({softmax_:MB});function VB(r){N(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let t={input:r};return T.runKernel(sc,t)}var Hp=k({fft_:VB});function GB(r){N(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let t={input:r};return T.runKernel(lc,t)}var Xc=k({ifft_:GB});function UB(r){let t=r.shape[r.shape.length-1],e=r.size/t,o;if(t<=2){let n=_(r,[e,t]);o=Xc(n)}else{let n=[e,2*(t-1)],s=_(ol(r),[e,t]),i=_(Gc(r),[e,t]),a=ao(Pt(s,[0,1],[e,t-2]),1),l=R(ao(Pt(i,[0,1],[e,t-2]),1),bt(-1)),c=ne([s,a],1),u=ne([i,l],1),p=_(ro(c,u),[n[0],n[1]]);o=Xc(p)}if(o=ol(o),r.rank===3&&r.shape[0]!==0){let n=o,s=r.shape[0];o=_(o,[s,o.shape[0]/s,o.shape[1]]),n.dispose()}return o}var A0=k({irfft_:UB});function WB(r,t,e=0){let n={x:I(r,"x","split")},s={numOrSizeSplits:t,axis:e};return T.runKernel(Hi,n,s)}var Pe=k({split_:WB});function HB(r,t){N(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let e=r.shape[r.shape.length-1],o=r.size/e,n;if(t!=null&&t<e){let h=r.shape.map(g=>0),d=r.shape.map(g=>g);d[r.shape.length-1]=t,n=Pt(r,h,d),e=t}else if(t!=null&&t>e){let h=r.shape.map(d=>d);h[r.shape.length-1]=t-e,n=ne([r,ie(h)],r.shape.length-1),e=t}else n=r;let s=gt(n),i=_(ro(n,s),[o,e]),a=Hp(i),l=Math.floor(e/2)+1,c=ol(a),u=Gc(a),p=Pe(c,[l,e-l],c.shape.length-1),m=Pe(u,[l,e-l],u.shape.length-1),f=n.shape.slice();return f[n.shape.length-1]=l,_(ro(p[0],m[0]),f)}var $0=k({rfft_:HB});function qB(r,t){let e=I(r,"a","squaredDifference"),o=I(t,"b","squaredDifference");[e,o]=Ft(e,o),Et(e.shape,o.shape);let n={a:e,b:o},s={};return T.runKernel(Cs,n,s)}var LI=k({squaredDifference_:qB});function KB(r,t){let e=I(r,"x","squeeze","string_or_numeric");return _(e,ab(e.shape,t).newShape)}var Go=k({squeeze_:KB});function jB(r,t=0){let e=Bh(r,"tensors","stack","string_or_numeric");N(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&N(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");let o=e,n={axis:t};return T.runKernel(_i,o,n)}var Re=k({stack_:jB});function XB(r,t=0){let o={x:I(r,"x","step")},n={alpha:t};return T.runKernel(Ns,o,n)}var Uo=k({step_:XB});function YB(r,t,e,o,n=0,s=0,i=0,a=0,l=0){let u={x:I(r,"x","stridedSlice","string_or_numeric")},p={begin:t,end:e,strides:o,beginMask:n,endMask:s,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};return T.runKernel(Cc,u,p)}var D0=k({stridedSlice_:YB});function ZB(r){let e={x:I(r,"x","tan","float32")};return T.runKernel(Ss,e)}var R0=k({tan_:ZB});function Ee(r,t){lp(r);let e=Ua(r,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Qi(r,null,e,t)}function ia(r,t,e){if(lp(r),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let o=Ua(r,e);if(o.length!==2&&o.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(o.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Qi(r,t,o,e)}function PI(r,t,e){let o=t.rank>1?t.shape[t.rank-1]:1,n=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${r}, sliceDim: ${o}, and batchDim: ${n}.`;if(e.rank<n)throw new Error(s+` update.rank < ${n}. `);if(r.length<o+(e.rank-n))throw new Error(s+` Output shape length < ${o+(e.rank-n)}`);if(e.rank!==n+r.length-o)throw new Error(s+` update.rank != ${n+r.length-o}`);for(let i=0;i<n;++i)if(e.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${e.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<e.rank-n;++i)if(e.shape[i+n]!==r[i+o])throw new Error(s+` updates.shape[${i+n}] (${e.shape[i+n]}) != shape[${i+n}] (${r[i+n]})`)}function JB(r,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}PI(e,t,r)}function QB(r,t,e){let o=t.shape.length,n=o>1?t.shape[o-1]:1,s=e.length,i=1;for(let p=n;p<s;++p)i*=e[p];let a=n<1?1:n,l=Ut(t.shape)/a,c=[...on(e.slice(0,n)),1],u=Ut(e);return{sliceRank:n,numUpdates:l,sliceSize:i,strides:c,outputSize:u}}function tM(r,t=1,e=!0){let o=I(r,"x","topk");if(o.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let n=o.shape[o.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>n)throw new Error(`'k' passed to topk() must be <= the last dimension (${n}) but got ${t}`);let s={x:o},i={k:t,sorted:e},[a,l]=T.runKernel(vc,s,i);return{values:a,indices:l}}var zI=k({topk_:tM});function eM(r,t=0,e=1,o,n){if(je(r),o!=null&&o==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new Kc(t,e,o,!0,n),i=dt(r,o);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var qp=k({truncatedNormal_:eM});function rM(r,t=0){let e=I(r,"x","unique","string_or_numeric");N(e.rank>0,()=>"The input tensor must be at least 1D");let o={x:e},n={axis:t},[s,i]=T.runKernel(Ic,o,n);return{values:s,indices:i}}var BI=k({unique_:rM});function oM(r,t,e){let o=I(r,"x","unsortedSegmentSum"),n=I(t,"segmentIds","unsortedSegmentSum","int32");N(_n(e),()=>"numSegments must be of dtype int");let s={x:o,segmentIds:n},i={numSegments:e};return T.runKernel(ji,s,i)}var od=k({unsortedSegmentSum_:oM});function nM(r,t=0){let e=I(r,"x","unstack","string_or_numeric");N(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);let o={value:e},n={axis:t};return T.runKernel(Ki,o,n)}var dr=k({unstack_:nM});function _0(r,t=!0,e,o){return T.makeVariable(r,t,e,o)}function MI(r,t){let e=[];for(let s=0;s<t.length;s++)t[s]&&e.push(s);let o=dt(r,"int32"),n=dt([e.length,r.length],"int32");for(let s=0;s<e.length;s++){let i=o.indexToLoc(e[s]),a=s*r.length;n.values.set(i,a)}return n.toTensor()}function sM(r,t,e){let o=I(r,"x","transpose");if(t==null&&(t=o.shape.map((i,a)=>a).reverse()),N(o.rank===t.length,()=>`Error in transpose: rank of input ${o.rank} must match length of perm ${t}.`),t.forEach(i=>{N(i>=0&&i<o.rank,()=>`All entries in 'perm' must be between 0 and ${o.rank-1} but got ${t}`)}),o.rank<=1)return o.clone();let n={x:o},s={perm:t};return o.dtype==="complex64"?z(()=>{let i=ol(o),a=Gc(o);return i=T.runKernel(ln,{x:i},s),a=T.runKernel(ln,{x:a},s),e&&(a=Mt(a)),ro(i,a)}):T.runKernel(ln,n,s)}var Rt=k({transpose_:sM});function VI(r,t){if(t==null)return r.shape.slice();if(ri(r.shape,t))return t;if(r.shape.length===t.length){let e=[];for(let o=0;o<r.shape.length;o++)t[o]==null&&r.shape[o]!=null?e.push(r.shape[o]):e.push(t[o]);return e}return t}function iM(r,t,e,o){let n=I(r,"x","dropout");if(N(n.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${n.dtype} tensor instead.`),N(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return r instanceof Vt?n.clone():n;let s=VI(n,e),i=1-t,a=nt(_s(j(Vo(s,0,1,"float32",o),i)),i);return R(n,a)}var GI=k({dropout_:iM});var cl={};po(cl,{conv2d:()=>UI,depthwiseConv2d:()=>WI,matMul:()=>HI});function aM(r,t,e,o,n,s="NHWC",i){let a=r;r.rank===3&&(a=_(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=t;l.rank===3&&(l=_(t,[1,t.shape[0],t.shape[1],t.shape[2]])),N(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),N(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),N(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);let c=s==="NHWC"?a.shape[3]:a.shape[1],u=s==="NHWC"?l.shape[3]:l.shape[1];N(c===e[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${e[2]}.`),N(u===e[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${e[3]}).`),ee("conv2dDerFilter",n,i);let p={x:a,dy:l},m={strides:o,pad:n,dataFormat:s,dimRoundingMode:i,filterShape:e};return T.runKernel(jl,p,m)}var Yc=k({conv2DBackpropFilter_:aM});function sl(r,t,e){if(e==null||e==="linear")return r;if(e==="relu")return R(r,Uo(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function il(r,t){let e=t,o=Zt(r.shape,t.shape);return o.length>0&&(e=lt(e,o)),_(e,r.shape)}function al(r,t,e,o){if(t==="linear")return r;if(t==="relu")return Kr(r);if(t==="elu")return Rs(r);if(t==="relu6")return ed(r);if(t==="prelu")return el(r,e);if(t==="leakyrelu")return Za(r,o);if(t==="sigmoid")return yo(r);throw new Error(`Unknown fused activation ${t}.`)}var ll=(r,t)=>!(r>0)||t==="linear";function lM({x:r,filter:t,strides:e,pad:o,dataFormat:n="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",ll(T.state.gradientDepth,l)===!1){N(n==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${n} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let E=Wr(r,t,e,o,n,s,i);return a!=null&&(E=j(E,a)),al(E,l,c,u)}let p=I(r,"x","conv2d","float32"),m=I(t,"filter","conv2d","float32"),f=p,h=!1;p.rank===3&&(h=!0,f=_(p,[1,p.shape[0],p.shape[1],p.shape[2]])),N(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),N(m.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${m.rank}.`),ee("fused conv2d",o,i);let d=n==="NHWC"?f.shape[3]:f.shape[1];N(m.shape[2]===d,()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${m.shape[2]}.`),N(Ye(e,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`);let g=qa(f.shape,m.shape,e,s,o,i),x;a!=null&&(x=I(a,"bias","fused conv2d"),[x]=Ft(x,p),n==="NHWC"?Et(g.outShape,x.shape):(N(x.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`),N(x.shape.length===0||x.shape[0]===g.outChannels||x.shape[0]===1,()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let b;if(c!=null){let E=c.shape;if(N(E.length<=1||E.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${E.length}.`),E.length===1)N(E[0]===1||E[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${E}) is not compatible with the number of output channels (${g.outChannels}).`);else if(E.length===3)try{Et(E,g.outShape)}catch{let $=`Error in fused conv2d: PReLU activation weights (${E}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error($)}b=I(c,"prelu weights","fused conv2d")}let C=(E,A)=>{N(n==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${n} but only NHWC is currently supported.`);let[$,F,L,M]=A,V=sl(E,L,l);N(no(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let G=Bc(F.shape,V,$,e,o),W=Yc(F,V,$.shape,e,o),U=[G,W];if(M!=null){let K=il(M,V);U.push(K)}return U},w={x:f,filter:m,bias:x,preluActivationWeights:b},v={strides:e,pad:o,dataFormat:n,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:u};return a==null?io((A,$,F)=>{let L=T.runKernel(Oa,w,v);return F([$,A,L]),h&&(L=_(L,[L.shape[1],L.shape[2],L.shape[3]])),{value:L,gradFunc:C}})(f,m):io((A,$,F,L)=>{let M=T.runKernel(Oa,w,v);return L([$,A,M,F]),h&&(M=_(M,[M.shape[1],M.shape[2],M.shape[3]])),{value:M,gradFunc:C}})(f,m,x)}var UI=k({fusedConv2d_:lM});function cM(r,t,e,o,n,s=[1,1],i){let a=r;r.rank===3&&(a=_(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=t;l.rank===3&&(l=_(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={x:a,dy:l},u={strides:o,pad:n,dimRoundingMode:i,dilations:s,filterShape:e};return T.runKernel(ec,c,u)}var nd=k({depthwiseConv2dNativeBackpropFilter_:cM});function uM(r,t,e,o,n,s=[1,1],i){let a=t,l=!1;t.rank===3&&(l=!0,a=_(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={dy:a,filter:e},u={strides:o,pad:n,dimRoundingMode:i,dilations:s,inputShape:r},p=T.runKernel(rc,c,u);return l?_(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var sd=k({depthwiseConv2dNativeBackpropInput_:uM});function pM({x:r,filter:t,strides:e,pad:o,dataFormat:n="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(ll(T.state.gradientDepth,l)===!1){let v=Ds(r,t,e,o,n,s,i);return a!=null&&(v=j(v,a)),al(v,l,c,u)}let p=I(r,"x","depthwiseConv2d","float32"),m=I(t,"filter","depthwiseConv2d","float32"),f=p,h=!1;p.rank===3&&(h=!0,f=_(p,[1,p.shape[0],p.shape[1],p.shape[2]])),N(f.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),N(m.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${m.rank}.`),N(f.shape[3]===m.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${m.shape[2]}.`),s==null&&(s=[1,1]),N(Ye(e,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),ee("fused depthwiseConv2d",o,i);let d=qa(f.shape,m.shape,e,s,o,i,!0),g;a!=null&&(g=I(a,"bias","fused conv2d"),[g]=Ft(g,p),Et(d.outShape,g.shape));let x;c!=null&&(x=I(c,"prelu weights","fused depthwiseConv2d"));let b=(v,E)=>{N(no(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[A,$,F,L]=E,M=sl(v,F,l),V=sd($.shape,M,A,e,o,s,i),G=nd($,M,A.shape,e,o,s,i);if(L!=null){let W=il(g,M);return[V,G,W]}return[V,G]},C={x:f,filter:m,bias:g,preluActivationWeights:x},w={strides:e,pad:o,dataFormat:n,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:u};return a==null?io((E,A,$)=>{let F=T.runKernel(La,C,w);return $([A,E,F]),h&&(F=_(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:b}})(f,m):io((E,A,$,F)=>{let L=T.runKernel(La,C,w);return F([A,E,L,$]),h&&(L=_(L,[L.shape[1],L.shape[2],L.shape[3]])),{value:L,gradFunc:b}})(f,m,g)}var WI=k({fusedDepthwiseConv2d_:pM});function mM({a:r,b:t,transposeA:e=!1,transposeB:o=!1,bias:n,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:a=.2}){if(ll(T.state.gradientDepth,s)===!1){let M=Wt(r,t,e,o);return n!=null&&(M=j(M,n)),al(M,s,i,a)}let l=I(r,"a","fused matMul"),c=I(t,"b","fused matMul");[l,c]=Ft(l,c);let u=e?l.shape[l.rank-2]:l.shape[l.rank-1],p=o?c.shape[c.rank-1]:c.shape[c.rank-2],m=e?l.shape[l.rank-1]:l.shape[l.rank-2],f=o?c.shape[c.rank-2]:c.shape[c.rank-1],h=l.shape.slice(0,-2),d=c.shape.slice(0,-2),g=Ut(h),x=Ut(d);N(u===p,()=>`Error in fused matMul: inner shapes (${u}) and (${p}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${e} and transposeB=${o} must match.`);let C=Et(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([m,f]),w=e?_(l,[g,u,m]):_(l,[g,m,u]),v=o?_(c,[x,f,p]):_(c,[x,p,f]),E;n!=null&&(E=I(n,"bias","fused matMul"),[E]=Ft(E,l),Et(C,E.shape));let A;i!=null&&(A=I(i,"prelu weights","fused matMul"));let $=(M,V)=>{let[G,W,U,K]=V,J=sl(_(M,U.shape),U,s),q,Q;if(!e&&!o?(q=Wt(J,W,!1,!0),Q=Wt(G,J,!0,!1)):!e&&o?(q=Wt(J,W,!1,!1),Q=Wt(J,G,!0,!1)):e&&!o?(q=Wt(W,J,!1,!0),Q=Wt(G,J,!1,!1)):(q=Wt(W,J,!0,!0),Q=Wt(J,G,!0,!0)),n!=null){let rt=il(K,J);return[q,Q,rt]}else return[q,Q]},F={a:w,b:v,bias:E,preluActivationWeights:A},L={transposeA:e,transposeB:o,activation:s,leakyreluAlpha:a};return n==null?io((V,G,W)=>{let U=T.runKernel(Fa,F,L);return W([V,G,U]),{value:_(U,C),gradFunc:$}})(w,v):io((V,G,W,U)=>{let K=T.runKernel(Fa,F,L);return U([V,G,K,W]),{value:_(K,C),gradFunc:$}})(w,v,E)}var HI=k({fusedMatMul_:mM});function fM(r,t,e,o,n="bilinear",s=0){let i=I(r,"image","cropAndResize"),a=I(t,"boxes","cropAndResize","float32"),l=I(e,"boxInd","cropAndResize","int32"),c=a.shape[0];N(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),N(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${a.shape}.`),N(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${a.shape}.`),N(o.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${o.length}.`),N(o[0]>=1&&o[1]>=1,()=>`cropSize must be atleast [1,1], but was ${o}`),N(n==="bilinear"||n==="nearest",()=>`method must be bilinear or nearest, but was ${n}`);let u={image:i,boxes:a,boxInd:l},p={method:n,extrapolationValue:s,cropSize:o};return T.runKernel(Jl,u,p)}var qI=k({cropAndResize_:fM});function hM(r){let t=I(r,"image","flipLeftRight","float32");N(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let e={image:t};return T.runKernel(ac,e,{})}var KI=k({flipLeftRight_:hM});function dM(r){let t=I(r,"image","grayscaleToRGB"),e=t.rank-1,o=t.shape[e];N(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),N(o===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${o}.`);let n=new Array(t.rank);return n.fill(1,0,e),n[e]=3,sr(t,n)}var jI=k({grayscaleToRGB_:dM});function gM(r){let t=I(r,"image","RGBToGrayscale"),e=t.rank-1,o=t.shape[e];N(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),N(o===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${o}.`);let n=t.dtype,s=Y(t,"float32"),i=Ee([.2989,.587,.114]),a;switch(t.rank){case 2:a=Mc("ij,j->i",s,i);break;case 3:a=Mc("ijk,k->ij",s,i);break;case 4:a=Mc("ijkl,l->ijk",s,i);break;case 5:a=Mc("ijklm,m->ijkl",s,i);break;case 6:a=Mc("ijklmn,n->ijklm",s,i);break;default:throw new Error("Not a valid tensor rank.")}return a=ke(a,-1),Y(a,n)}var XI=k({rgbToGrayscale_:gM});function xM(r,t,e=0,o=.5){let n=I(r,"image","rotateWithOffset","float32");N(n.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${n.rank}.`);let s={image:n},i={radians:t,fillValue:e,center:o};return T.runKernel(Nc,s,i)}var YI=k({rotateWithOffset_:xM});function wo(r,t,e,o,n,s){o==null&&(o=.5),n==null&&(n=Number.NEGATIVE_INFINITY),s==null&&(s=0);let i=r.shape[0];return e=Math.min(e,i),N(0<=o&&o<=1,()=>`iouThreshold must be in [0, 1], but was '${o}'`),N(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),N(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),N(t.rank===1,()=>"scores must be a 1D tensor"),N(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),N(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:e,iouThreshold:o,scoreThreshold:n,softNmsSigma:s}}function yM(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY){let s=I(r,"boxes","nonMaxSuppression","float32"),i=I(t,"scores","nonMaxSuppression","float32"),a=wo(s,i,e,o,n);e=a.maxOutputSize,o=a.iouThreshold,n=a.scoreThreshold;let l={maxOutputSize:e,iouThreshold:o,scoreThreshold:n};return T.runKernel(fc,{boxes:s,scores:i},l)}var ZI=k({nonMaxSuppression_:yM});function JI(r,t,e){let o=bM(r,t,e),n=o<0?-(o+1):o;r.splice(n,0,t)}function bM(r,t,e){return CM(r,t,e||wM)}function wM(r,t){return r>t?1:r<t?-1:0}function CM(r,t,e){let o=0,n=r.length,s=0,i=!1;for(;o<n;){s=o+(n-o>>>1);let a=e(t,r[s]);a>0?o=s+1:(n=s,i=!a)}return i?o:-o-1}function id(r,t,e,o,n){return F0(r,t,e,o,n,0)}function ad(r,t,e,o,n,s){return F0(r,t,e,o,n,0,!1,s,!0)}function ld(r,t,e,o,n,s){return F0(r,t,e,o,n,s,!0)}function F0(r,t,e,o,n,s,i=!1,a=!1,l=!1){let c=[];for(let g=0;g<t.length;g++)t[g]>n&&c.push({score:t[g],boxIndex:g,suppressBeginIndex:0});c.sort(QI);let u=s>0?-.5/s:0,p=[],m=[];for(;p.length<e&&c.length>0;){let g=c.pop(),{score:x,boxIndex:b,suppressBeginIndex:C}=g;if(x<n)break;let w=!1;for(let v=p.length-1;v>=C;--v){let E=vM(r,b,p[v]);if(E>=o){w=!0;break}if(g.score=g.score*SM(o,u,E),g.score<=n)break}g.suppressBeginIndex=p.length,w||(g.score===x?(p.push(b),m.push(g.score)):g.score>n&&JI(c,g,QI))}let f=p.length,h=e-f;a&&h>0&&(p.push(...new Array(h).fill(0)),m.push(...new Array(h).fill(0)));let d={selectedIndices:p};return i&&(d.selectedScores=m),l&&(d.validOutputs=f),d}function vM(r,t,e){let o=r.subarray(t*4,t*4+4),n=r.subarray(e*4,e*4+4),s=Math.min(o[0],o[2]),i=Math.min(o[1],o[3]),a=Math.max(o[0],o[2]),l=Math.max(o[1],o[3]),c=Math.min(n[0],n[2]),u=Math.min(n[1],n[3]),p=Math.max(n[0],n[2]),m=Math.max(n[1],n[3]),f=(a-s)*(l-i),h=(p-c)*(m-u);if(f<=0||h<=0)return 0;let d=Math.max(s,c),g=Math.max(i,u),x=Math.min(a,p),b=Math.min(l,m),C=Math.max(x-d,0)*Math.max(b-g,0);return C/(f+h-C)}function SM(r,t,e){let o=Math.exp(t*e*e);return e<=r?o:0}function QI(r,t){return r.score-t.score||r.score===t.score&&t.boxIndex-r.boxIndex}function IM(s,i,a){return B(this,arguments,function*(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY){let l=I(r,"boxes","nonMaxSuppressionAsync"),c=I(t,"scores","nonMaxSuppressionAsync"),u=wo(l,c,e,o,n);e=u.maxOutputSize,o=u.iouThreshold,n=u.scoreThreshold;let p=yield Promise.all([l.data(),c.data()]),m=p[0],f=p[1],{selectedIndices:h}=id(m,f,e,o,n);return l!==r&&l.dispose(),c!==t&&c.dispose(),Ee(h,"int32")})}var tN=IM;function NM(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,s=0){let i=I(r,"boxes","nonMaxSuppression"),a=I(t,"scores","nonMaxSuppression"),l=wo(i,a,e,o,n,s);e=l.maxOutputSize,o=l.iouThreshold,n=l.scoreThreshold,s=l.softNmsSigma;let c={boxes:i,scores:a},u={maxOutputSize:e,iouThreshold:o,scoreThreshold:n,softNmsSigma:s},p=T.runKernel(dc,c,u);return{selectedIndices:p[0],selectedScores:p[1]}}var eN=k({nonMaxSuppressionWithScore_:NM});function TM(i,a,l){return B(this,arguments,function*(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,s=0){let c=I(r,"boxes","nonMaxSuppressionAsync"),u=I(t,"scores","nonMaxSuppressionAsync"),p=wo(c,u,e,o,n,s);e=p.maxOutputSize,o=p.iouThreshold,n=p.scoreThreshold,s=p.softNmsSigma;let m=yield Promise.all([c.data(),u.data()]),f=m[0],h=m[1],{selectedIndices:d,selectedScores:g}=ld(f,h,e,o,n,s);return c!==r&&c.dispose(),u!==t&&u.dispose(),{selectedIndices:Ee(d,"int32"),selectedScores:Ee(g)}})}var rN=TM;function kM(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,s=!1){let i=I(r,"boxes","nonMaxSuppression"),a=I(t,"scores","nonMaxSuppression"),l=wo(i,a,e,o,n,null),c=l.maxOutputSize,u=l.iouThreshold,p=l.scoreThreshold,m={boxes:i,scores:a},f={maxOutputSize:c,iouThreshold:u,scoreThreshold:p,padToMaxOutputSize:s},h=T.runKernel(hc,m,f);return{selectedIndices:h[0],validOutputs:h[1]}}var oN=k({nonMaxSuppressionPadded_:kM});function EM(i,a,l){return B(this,arguments,function*(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,s=!1){let c=I(r,"boxes","nonMaxSuppressionAsync"),u=I(t,"scores","nonMaxSuppressionAsync"),p=wo(c,u,e,o,n,null),m=p.maxOutputSize,f=p.iouThreshold,h=p.scoreThreshold,[d,g]=yield Promise.all([c.data(),u.data()]),{selectedIndices:x,validOutputs:b}=ad(d,g,m,f,h,s);return c!==r&&c.dispose(),u!==t&&u.dispose(),{selectedIndices:Ee(x,"int32"),validOutputs:bt(b,"int32")}})}var nN=EM;function AM(r,t,e=!1,o=!1){let n=I(r,"images","resizeBilinear");N(n.rank===3||n.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${n.rank}.`),N(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),N(o===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=n,i=!1;n.rank===3&&(i=!0,s=_(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let[]=t,a={images:s},l={alignCorners:e,halfPixelCenters:o,size:t},c=T.runKernel(Bi,a,l);return i?_(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var cd=k({resizeBilinear_:AM});function $M(r,t,e=!1,o=!1){let n=I(r,"images","resizeNearestNeighbor");N(n.rank===3||n.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${n.rank}.`),N(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),N(n.dtype==="float32"||n.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),N(o===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=n,i=!1;n.rank===3&&(i=!0,s=_(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let[]=t,a={images:s},l={alignCorners:e,halfPixelCenters:o,size:t},c=T.runKernel(zi,a,l);return i?_(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var ud=k({resizeNearestNeighbor_:$M});function DM(r,t="binary",e=!1,o=.5){let n=I(r,"image","threshold"),s=.2989,i=.587,a=.114,l=n.shape[0]*n.shape[1],c=R(Ee([o]),255),u,p,m,f;if(N(n.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${n.rank}.`),N(n.shape[2]===3||n.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${n.shape[2]}.`),N(n.dtype==="int32"||n.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${n.dtype}.`),N(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),n.shape[2]===3){[u,p,m]=Pe(n,[1,1,1],-1);let g=R(u,s),x=R(p,i),b=R(m,a);f=j(j(g,x),b)}else f=r;if(t==="otsu"){let g=sI(Y(Pp(f),"int32"),Gr([]),256);c=RM(g,l)}let h=e?bo(f,c):we(f,c);return Y(R(h,255),"int32")}function RM(r,t){let e=Ee([-1]),o=Ee([0]),n=Ee([0]),s,i,a,l,c,u;for(let p=0;p<r.size-1;p++){s=Pt(r,0,p+1),i=Pt(r,p+1),c=nt(lt(s),t),u=nt(lt(i),t);let m=lt(R(s,Fs(0,s.size)));a=nt(m,lt(s));let f=$s(i.shape,s.size),h=j(Fs(0,i.size),f),d=R(i,h);l=nt(lt(d),lt(i));let g=ut(a,l),x=ut(a,l),b=R(c,u);n=R(R(b,g),x);let C=we(n,o);o=se(C,n,o),e=se(C,Ee([p]),e)}return e}var sN=k({threshold_:DM});function _M(r,t,e="nearest",o="constant",n=0,s){let i=I(r,"image","transform","float32"),a=I(t,"transforms","transform","float32");N(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),N(a.rank===2&&(a.shape[0]===i.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),N(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let l={image:i,transforms:a},c={interpolation:e,fillMode:o,fillValue:n,outputShape:s};return T.runKernel(Sc,l,c)}var iN=k({transform_:_M});function FM(r,t,e){let o=I(r,"a","bandPart");N(o.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${o.rank}.`);let n=o.shape,[s,i]=o.shape.slice(-2),a,l;typeof t=="number"?(N(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),N(t<=s,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`),a=I(t<0?s:t,"numLower","bandPart")):(N(t.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),a=se(Ja(t,0),s,gn(t,s))),typeof e=="number"?(N(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`),N(e<=i,()=>`bandPart(): numUpper (${e}) must not be greater than the number of columns (${i}).`),l=I(e<0?i:e,"numUpper","bandPart")):(N(e.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=se(Ja(e,0),i,gn(e,i)));let c=_(Fs(0,s,1,"int32"),[-1,1]),u=Fs(0,i,1,"int32"),p=ut(c,u),m=hr(bo(p,a),_r(p,Mt(l))),f=ie([s,i],o.dtype);return _(Re(dr(_(o,[-1,s,i])).map(h=>se(m,h,f))),n)}var aN=k({bandPart_:FM});function OM(r){let t;if(Array.isArray(r)){t=!1,N(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let n=r[0].shape[0];for(let s=1;s<r.length;++s)N(r[s].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[s].shape[0]} vs. ${n})`)}else t=!0,r=Pe(r,r.shape[0],0).map(n=>Go(n,[0]));N(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let e=[],o=r;for(let n=0;n<r.length;++n)e.push(T.tidy(()=>{let s=o[n];if(n>0)for(let i=0;i<n;++i){let a=R(lt(R(e[i],s)),e[i]);s=ut(s,a)}return nt(s,na(s,"euclidean"))}));return t?Re(e,0):e}var lN=k({gramSchmidt_:OM});function LM(r,t=!1){if(N(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return cN(r,t);{let e=r.shape.slice(0,r.shape.length-2).reduce((l,c)=>l*c),o=dr(_(r,[e,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),n=[],s=[];o.forEach(l=>{let[c,u]=cN(l,t);n.push(c),s.push(u)});let i=_(Re(n,0),r.shape),a=_(Re(s,0),r.shape);return[i,a]}}function cN(r,t=!1){return T.tidy(()=>{N(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let e=r.shape[0],o=r.shape[1],n=Vc(e),s=Ur(r),i=ia([[1]],[1,1]),a=Ur(i),l=e>=o?o:e;for(let c=0;c<l;++c){let u=s,p=a,m=n;[a,s,n]=T.tidy(()=>{let f=Pt(s,[c,c],[e-c,1]),h=na(f),d=Pt(s,[c,c],[1,1]),g=se(we(d,0),ia([[-1]]),ia([[1]])),x=ut(d,R(g,h)),b=nt(f,x);b.shape[0]===1?a=Ur(i):a=ne([i,Pt(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);let C=Mt(nt(Wt(g,x),h)),w=Pt(s,[c,0],[e-c,o]),v=R(C,a),E=Rt(a);if(c===0)s=ut(w,Wt(v,Wt(E,w)));else{let F=ut(w,Wt(v,Wt(E,w)));s=ne([Pt(s,[0,0],[c,o]),F],0)}let A=Rt(v),$=Pt(n,[0,c],[e,n.shape[1]-c]);if(c===0)n=ut($,Wt(Wt($,a),A));else{let F=ut($,Wt(Wt($,a),A));n=ne([Pt(n,[0,0],[e,c]),F],1)}return[a,s,n]}),It([u,p,m])}return!t&&e>o&&(n=Pt(n,[0,0],[e,o]),s=Pt(s,[0,0],[o,o])),[n,s]})}var uN=k({qr_:LM});var jr={flipLeftRight:KI,grayscaleToRGB:jI,resizeNearestNeighbor:ud,resizeBilinear:cd,rgbToGrayscale:XI,rotateWithOffset:YI,cropAndResize:qI,nonMaxSuppression:ZI,nonMaxSuppressionAsync:tN,nonMaxSuppressionWithScore:eN,nonMaxSuppressionWithScoreAsync:rN,nonMaxSuppressionPadded:oN,nonMaxSuppressionPaddedAsync:nN,threshold:sN,transform:iN},pN={bandPart:aN,gramSchmidt:lN,qr:uN};var H={};po(H,{Serializable:()=>Kp,SerializationMap:()=>pd,getRegisteredName:()=>zM,registerClass:()=>L0});var PM=new Map,O0=new Map,Kp=class{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}},pd=class r{constructor(){this.classNameMap={}}static getMap(){return r.instance==null&&(r.instance=new r),r.instance}static register(t){r.getMap().classNameMap[t.className]=[t,t.fromConfig]}};function L0(r,t,e){N(r.className!=null,()=>"Class being registered does not have the static className property defined."),N(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),N(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof t>"u"&&(t="Custom"),typeof e>"u"&&(e=r.className);let o=e,n=t+">"+o;return pd.register(r),PM.set(n,r),O0.set(r,n),r}function zM(r){return O0.has(r)?O0.get(r):r.className}var ir=class extends Kp{minimize(t,e=!1,o){let{value:n,grads:s}=this.computeGradients(t,o);if(o!=null){let i=o.map(a=>({name:a.name,tensor:s[a.name]}));this.applyGradients(i)}else this.applyGradients(s);return It(s),e?n:(n.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return x0(t,e)}dispose(){this.iterations_!=null&&It(this.iterations_)}saveIterations(){return B(this,null,function*(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:bt(this.iterations_,"int32")}})}getWeights(){return B(this,null,function*(){throw new Error("getWeights() is not implemented for this optimizer yet.")})}setWeights(t){return B(this,null,function*(){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)})}extractIterations(t){return B(this,null,function*(){return this.iterations_=(yield t[0].tensor.data())[0],t.slice(1)})}};Object.defineProperty(ir,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var Zc=class extends ir{static get className(){return"Adadelta"}constructor(t,e,o=null){super(),this.learningRate=t,this.rho=e,this.epsilon=o,this.accumulatedGrads=[],this.accumulatedUpdates=[],o==null&&(this.epsilon=T.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let s=T.registeredVariables[o],i=!1;this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${o}/accum_grad`,variable:z(()=>gt(s).variable(i))}),this.accumulatedUpdates[n]==null&&(this.accumulatedUpdates[n]={originalName:`${o}/accum_var`,variable:z(()=>gt(s).variable(i))});let a=Array.isArray(t)?t[n].tensor:t[o];if(a==null)return;let l=this.accumulatedGrads[n].variable,c=this.accumulatedUpdates[n].variable;z(()=>{let u=j(R(l,this.rho),R(_t(a),1-this.rho)),p=R(nt(Jt(j(c,this.epsilon)),Jt(j(l,this.epsilon))),a),m=j(R(c,this.rho),R(_t(p),1-this.rho));l.assign(u),c.assign(m);let f=j(R(p,-this.learningRate),s);s.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(It(this.accumulatedGrads.map(t=>t.variable)),It(this.accumulatedUpdates.map(t=>t.variable)))}getWeights(){return B(this,null,function*(){let t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[yield this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))})}setWeights(t){return B(this,null,function*(){t=yield this.extractIterations(t);let e=t.length/2,o=!1;this.accumulatedGrads=t.slice(0,e).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.accumulatedUpdates=t.slice(e,e*2).map(n=>({originalName:n.name,variable:n.tensor.variable(o)}))})}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}};var Jc=class extends ir{static get className(){return"Adagrad"}constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let s=T.registeredVariables[o];this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${o}/accumulator`,variable:z(()=>$s(s.shape,this.initialAccumulatorValue).variable(!1))});let i=Array.isArray(t)?t[n].tensor:t[o];if(i==null)return;let a=this.accumulatedGrads[n].variable;z(()=>{let l=j(a,_t(i));a.assign(l);let c=j(R(nt(i,Jt(j(l,T.backend.epsilon()))),-this.learningRate),s);s.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&It(this.accumulatedGrads.map(t=>t.variable))}getWeights(){return B(this,null,function*(){return[yield this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(t){return B(this,null,function*(){t=yield this.extractIterations(t);let e=!1;this.accumulatedGrads=t.map(o=>({originalName:o.name,variable:o.tensor.variable(e)}))})}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}};var Qc=class extends ir{static get className(){return"Adam"}constructor(t,e,o,n=null){super(),this.learningRate=t,this.beta1=e,this.beta2=o,this.epsilon=n,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],z(()=>{this.accBeta1=bt(e).variable(),this.accBeta2=bt(o).variable()}),n==null&&(this.epsilon=T.backend.epsilon())}applyGradients(t){let e=Array.isArray(t)?t.map(o=>o.name):Object.keys(t);z(()=>{let o=ut(1,this.accBeta1),n=ut(1,this.accBeta2);e.forEach((s,i)=>{let a=T.registeredVariables[s],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${s}/m`,variable:z(()=>gt(a).variable(l))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${s}/v`,variable:z(()=>gt(a).variable(l))});let c=Array.isArray(t)?t[i].tensor:t[s];if(c==null)return;let u=this.accumulatedFirstMoment[i].variable,p=this.accumulatedSecondMoment[i].variable,m=j(R(u,this.beta1),R(c,1-this.beta1)),f=j(R(p,this.beta2),R(_t(c),1-this.beta2)),h=nt(m,o),d=nt(f,n);u.assign(m),p.assign(f);let g=j(R(nt(h,j(Jt(d),this.epsilon)),-this.learningRate),a);a.assign(g)}),this.accBeta1.assign(R(this.accBeta1,this.beta1)),this.accBeta2.assign(R(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&It(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&It(this.accumulatedSecondMoment.map(t=>t.variable))}getWeights(){return B(this,null,function*(){let t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[yield this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))})}setWeights(t){return B(this,null,function*(){t=yield this.extractIterations(t),z(()=>{this.accBeta1.assign(Rr(this.beta1,this.iterations_+1)),this.accBeta2.assign(Rr(this.beta2,this.iterations_+1))});let e=t.length/2,o=!1;this.accumulatedFirstMoment=t.slice(0,e).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(n=>({originalName:n.name,variable:n.tensor.variable(o)}))})}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}};var tu=class extends ir{static get className(){return"Adamax"}constructor(t,e,o,n=null,s=0){super(),this.learningRate=t,this.beta1=e,this.beta2=o,this.epsilon=n,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],z(()=>{this.iteration=bt(0).variable(),this.accBeta1=bt(e).variable()}),n==null&&(this.epsilon=T.backend.epsilon())}applyGradients(t){let e=Array.isArray(t)?t.map(o=>o.name):Object.keys(t);z(()=>{let o=ut(1,this.accBeta1),n=nt(-this.learningRate,j(R(this.iteration,this.decay),1));e.forEach((s,i)=>{let a=T.registeredVariables[s],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${s}/m`,variable:gt(a).variable(l)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${s}/v`,variable:gt(a).variable(l)});let c=Array.isArray(t)?t[i].tensor:t[s];if(c==null)return;let u=this.accumulatedFirstMoment[i].variable,p=this.accumulatedWeightedInfNorm[i].variable,m=j(R(u,this.beta1),R(c,1-this.beta1)),f=R(p,this.beta2),h=De(c),d=qr(f,h);u.assign(m),p.assign(d);let g=j(R(nt(n,o),nt(m,j(d,this.epsilon))),a);a.assign(g)}),this.iteration.assign(j(this.iteration,1)),this.accBeta1.assign(R(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&It(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&It(this.accumulatedWeightedInfNorm.map(t=>t.variable))}getWeights(){return B(this,null,function*(){throw new Error("getWeights() is not implemented for Adamax yet.")})}setWeights(t){return B(this,null,function*(){throw new Error("setWeights() is not implemented for Adamax yet.")})}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}};var aa=class extends ir{static get className(){return"SGD"}constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let s=Array.isArray(t)?t[n].tensor:t[o];if(s==null)return;let i=T.registeredVariables[o];z(()=>{let a=j(R(this.c,s),i);i.assign(a)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=Be(bt(-t))}dispose(){this.c.dispose()}getWeights(){return B(this,null,function*(){return[yield this.saveIterations()]})}setWeights(t){return B(this,null,function*(){if(t=yield this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")})}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}};var eu=class extends aa{static get className(){return"Momentum"}constructor(t,e,o=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=o,this.accumulations=[],this.m=bt(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let s=T.registeredVariables[o];this.accumulations[n]==null&&(this.accumulations[n]={originalName:`${o}/momentum`,variable:z(()=>gt(s).variable(!1))});let i=this.accumulations[n].variable,a=Array.isArray(t)?t[n].tensor:t[o];a!=null&&z(()=>{let l,c=j(R(this.m,i),a);this.useNesterov?l=j(R(this.c,j(a,R(c,this.m))),s):l=j(R(this.c,c),s),i.assign(c),s.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&It(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}getWeights(){return B(this,null,function*(){return[yield this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(t){return B(this,null,function*(){t=yield this.extractIterations(t);let e=!1;this.accumulations=t.map(o=>({originalName:o.name,variable:o.tensor.variable(e)}))})}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}};var ru=class extends ir{static get className(){return"RMSProp"}constructor(t,e=.9,o=0,n=null,s=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=o,this.epsilon=n,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,n==null&&(this.epsilon=T.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let s=T.registeredVariables[o],i=!1;this.accumulatedMeanSquares[n]==null&&(this.accumulatedMeanSquares[n]={originalName:`${o}/rms`,variable:z(()=>gt(s).variable(i))}),this.accumulatedMoments[n]==null&&(this.accumulatedMoments[n]={originalName:`${o}/momentum`,variable:z(()=>gt(s).variable(i))}),this.accumulatedMeanGrads[n]==null&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${o}/mg`,variable:z(()=>gt(s).variable(i))});let a=Array.isArray(t)?t[n].tensor:t[o];if(a==null)return;let l=this.accumulatedMeanSquares[n].variable,c=this.accumulatedMoments[n].variable;z(()=>{let u=j(R(l,this.decay),R(_t(a),1-this.decay));if(this.centered){let p=this.accumulatedMeanGrads[n].variable,m=j(R(p,this.decay),R(a,1-this.decay)),f=nt(R(a,this.learningRate),Jt(ut(u,j(_t(m),this.epsilon)))),h=j(R(c,this.momentum),f);l.assign(u),p.assign(m),c.assign(h);let d=ut(s,h);s.assign(d)}else{let p=j(R(l,this.decay),R(_t(a),1-this.decay)),m=j(R(c,this.momentum),nt(R(a,this.learningRate),Jt(j(p,this.epsilon))));l.assign(p),c.assign(m);let f=ut(s,m);s.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&It(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&It(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&It(this.accumulatedMoments.map(t=>t.variable))}getWeights(){return B(this,null,function*(){let t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[yield this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))})}setWeights(t){return B(this,null,function*(){t=yield this.extractIterations(t);let e=this.centered?t.length/3:t.length/2,o=!1;this.accumulatedMeanSquares=t.slice(0,e).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.accumulatedMoments=t.slice(e,e*2).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})))})}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}};var BM=[Zc,Jc,Qc,tu,eu,ru,aa];function mN(){for(let r of BM)L0(r)}var Os={};po(Os,{CompositeArrayBuffer:()=>nr,browserFiles:()=>hN,browserHTTPRequest:()=>yN,concatenateArrayBuffers:()=>FS,copyModel:()=>jS,decodeWeights:()=>Gh,decodeWeightsStream:()=>_b,encodeWeights:()=>$S,fromMemory:()=>bN,fromMemorySync:()=>G0,getLoadHandlers:()=>zS,getModelArtifactsForJSON:()=>Rc,getModelArtifactsForJSONSync:()=>Lb,getModelArtifactsInfoForJSON:()=>un,getSaveHandlers:()=>PS,getWeightSpecs:()=>Sp,http:()=>fd,isHTTPScheme:()=>md,listModels:()=>qS,loadWeights:()=>gN,moveModel:()=>XS,registerLoadRouter:()=>LS,registerSaveRouter:()=>OS,removeModel:()=>KS,weightsLoaderFactory:()=>M0,withSaveHandler:()=>wN,withSaveHandlerSync:()=>CN});var MM="model",VM=".json",GM=".weights.bin";function fN(r){return new Promise(t=>setTimeout(t)).then(r)}var ou=class r{constructor(t){if(!P().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(r.URL_SCHEME)&&(t=t.slice(r.URL_SCHEME.length)),(t==null||t.length===0)&&(t=MM),this.modelJsonFileName=t+VM,this.weightDataFileName=t+GM}save(t){return B(this,null,function*(){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let e=nr.join(t.weightData),o=window.URL.createObjectURL(new Blob([e],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],s=Uh(t,n),i=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=i,yield fN(()=>a.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){let l=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;l.download=this.weightDataFileName,l.href=o,yield fN(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:un(t)}}})}};ou.URL_SCHEME="downloads://";var P0=class{constructor(t){if(t==null||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}load(){return B(this,null,function*(){return new Promise((t,e)=>{let o=new FileReader;o.onload=n=>{let s=JSON.parse(n.target.result),i=s.modelTopology;if(i==null){e(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(s.weightsManifest==null){e(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){t({modelTopology:i});return}let l=Rc(s,c=>this.loadWeights(c));t(l)},o.onerror=n=>e(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),o.readAsText(this.jsonFile)})})}loadWeights(t){let e=[],o=[];for(let i of t)e.push(...i.weights),o.push(...i.paths);let n=this.checkManifestAndWeightFiles(t),s=o.map(i=>this.loadWeightsFile(i,n[i]));return Promise.all(s).then(i=>[e,i])}loadWeightsFile(t,e){return new Promise((o,n)=>{let s=new FileReader;s.onload=i=>{let a=i.target.result;o(a)},s.onerror=i=>n(`Failed to weights data from file of path '${t}'.`),s.readAsArrayBuffer(e)})}checkManifestAndWeightFiles(t){let e=[],o=this.weightsFiles.map(s=>Ob(s.name)),n={};for(let s of t)s.paths.forEach(i=>{let a=Ob(i);if(e.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(e.push(a),o.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);n[i]=this.weightsFiles[o.indexOf(a)]});if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return n}},UM=r=>P().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(ou.URL_SCHEME)?WM(r.slice(ou.URL_SCHEME.length)):null;Me.registerSaveRouter(UM);function WM(r="model"){return new ou(r)}function hN(r){return new P0(r)}function z0(r,t,e,o){i(r),e=e??0,o=o??1,a(e,o);let n=0,s=l=>(l.then(c=>{let u=e+ ++n/r.length*(o-e);return t(u),c}),l);function i(l){N(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,c){N(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),N(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),N(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(r.map(s))}function B0(r,t){return B(this,null,function*(){t==null&&(t={});let e=t.fetchFunc==null?P().platform.fetch:t.fetchFunc,o=r.map(p=>e(p,t.requestInit,{isBinary:!0})),a=(t.onProgress==null?yield Promise.all(o):yield z0(o,t.onProgress,0,.5)).map(p=>p.arrayBuffer());return t.onProgress==null?yield Promise.all(a):yield z0(a,t.onProgress,.5,1)})}function dN(r,t){var e;let o=t.fetchFunc==null?P().platform.fetch:t.fetchFunc,n=0,s;return(e=t.onProgress)===null||e===void 0||e.call(t,0),new ReadableStream({pull:i=>B(this,null,function*(){for(var a;n<r.length;){s||(s=(yield o(r[n],t.requestInit,{isBinary:!0})).body.getReader());let{done:l,value:c}=yield s.read();if(l){n++,s=void 0,(a=t.onProgress)===null||a===void 0||a.call(t,n/r.length);continue}i.enqueue(c);return}i.close()})})}function gN(r,t="",e,o){return B(this,null,function*(){return M0(i=>B0(i,{requestInit:o}))(r,t,e)})}function M0(r){return(t,e="",o)=>B(this,null,function*(){let n=t.map(()=>!1),s={},i=o!=null?o.map(()=>!1):[],a=[];if(t.forEach((f,h)=>{let d=0;f.weights.forEach(g=>{let x="quantization"in g?g.quantization.dtype:g.dtype,b=ks[x]*Ut(g.shape),C=()=>{n[h]=!0,s[h]==null&&(s[h]=[]),s[h].push({manifestEntry:g,groupOffset:d,sizeBytes:b})};o!=null?o.forEach((w,v)=>{w===g.name&&(C(),i[v]=!0)}):C(),a.push(g.name),d+=b})}),!i.every(f=>f)){let f=o.filter((h,d)=>!i[d]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}let l=n.reduce((f,h,d)=>(h&&f.push(d),f),[]),c=[];l.forEach(f=>{t[f].paths.forEach(h=>{let d=e+(e.endsWith("/")?"":"/")+h;c.push(d)})});let u=yield r(c),p={},m=0;return l.forEach(f=>{let h=t[f].paths.length,d=new nr(u.slice(m,m+h));s[f].forEach(x=>{let b=d.slice(x.groupOffset,x.groupOffset+x.sizeBytes),C=Gh(b,[x.manifestEntry]);for(let w in C)p[w]=C[w]}),m+=h}),p})}var HM="application/octet-stream",qM="application/json",jp=class{constructor(t,e){if(this.DEFAULT_METHOD="POST",e==null&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.weightUrlConverter=e.weightUrlConverter,e.fetchFunc!=null?(N(typeof e.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=P().platform.fetch,N(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&N(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,e.requestInit!=null&&e.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{},this.loadOptions=e}save(t){return B(this,null,function*(){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;let o=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],n=Uh(t,o);if(e.body.append("model.json",new Blob([JSON.stringify(n)],{type:qM}),"model.json"),t.weightData!=null){let i=nr.join(t.weightData);e.body.append("model.weights.bin",new Blob([i],{type:HM}),"model.weights.bin")}let s=yield this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:un(t),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)})}loadModelJSON(){return B(this,null,function*(){let t=yield this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=yield t.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}let o=e.modelTopology,n=e.weightsManifest;if(o==null&&n==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return e})}load(){return B(this,null,function*(){if(this.loadOptions.streamWeights)return this.loadStream();let t=yield this.loadModelJSON();return Rc(t,e=>this.loadWeights(e))})}loadStream(){return B(this,null,function*(){let t=yield this.loadModelJSON(),e=yield this.getWeightUrls(t.weightsManifest),o=Sp(t.weightsManifest),n=()=>dN(e,this.loadOptions);return Object.assign(Object.assign({},t),{weightSpecs:o,getWeightStream:n})})}getWeightUrls(t){return B(this,null,function*(){let e=Array.isArray(this.path)?this.path[1]:this.path,[o,n]=KM(e),s=this.weightPathPrefix||o,i=[],a=[];for(let l of t)for(let c of l.paths)this.weightUrlConverter!=null?a.push(this.weightUrlConverter(c)):i.push(s+c+n);return this.weightUrlConverter&&i.push(...yield Promise.all(a)),i})}loadWeights(t){return B(this,null,function*(){let e=yield this.getWeightUrls(t),o=Sp(t),n=yield B0(e,this.loadOptions);return[o,n]})}};jp.URL_SCHEME_REGEX=/^https?:\/\//;function KM(r){let t=r.lastIndexOf("/"),e=r.lastIndexOf("?"),o=r.substring(0,t),n=e>t?r.substring(e):"";return[o+"/",n]}function md(r){return r.match(jp.URL_SCHEME_REGEX)!=null}var xN=(r,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(r)?e=r.every(o=>md(o)):e=md(r),e)return fd(r,t)}return null};Me.registerSaveRouter(xN);Me.registerLoadRouter(xN);function fd(r,t){return new jp(r,t)}function yN(r,t){return fd(r,t)}var Xp=class{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}},hd=class{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}},V0=class{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}};function bN(r,t,e,o){let n=arguments;return new V0(G0(...n))}function G0(r,t,e,o){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new Xp(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Xp({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Xp({modelTopology:r,weightSpecs:t,weightData:e,trainingConfig:o}))}function wN(r){return new hd(r)}function CN(r){return new hd(r)}function jM(r,t){let e=r.shape.length,o=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(o<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${o}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[o-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[o-1]} vs. ${e}`);if(Ut(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let n=t.shape,s=n[n.length-1],i=1;for(let p=0;p<n.length-1;++p)i*=n[p];let a=r.shape,l=n.slice();l.pop();let c=1;for(let p=s;p<e;++p)c*=a[p],l.push(a[p]);let u=[...on(r.shape).map(p=>p/c),1].slice(0,s);return[l,i,c,u]}var Ue={};po(Ue,{assertParamsValid:()=>YM,computeFlatOffset:()=>eV,computeOutShape:()=>JM,getNormalizedAxes:()=>QM,isSliceContinous:()=>tV,maskToAxes:()=>ZM,parseSliceParams:()=>W0,sliceInfo:()=>rV,startForAxis:()=>AN,startIndicesWithElidedDims:()=>TN,stopForAxis:()=>$N,stopIndicesWithElidedDims:()=>kN,stridesForAxis:()=>EN,stridesWithElidedDims:()=>SN});var U0=-2,XM=-1;function YM(r,t,e){let o=r.shape.length;N(o===t.length,()=>`Error in slice${o}D: Length of begin ${t} must match the rank of the array (${o}).`),N(o===e.length,()=>`Error in slice${o}D: Length of size ${e} must match the rank of the array (${o}).`);for(let n=0;n<o;++n)N(t[n]+e[n]<=r.shape[n],()=>`Error in slice${o}D: begin[${n}] + size[${n}] (${t[n]+e[n]}) would overflow input.shape[${n}] (${r.shape[n]})`)}function ZM(r){let t=[],e=0;for(;r>0;)r&1&&t.push(e),r/=2,e++;return t}function JM(r,t,e){let o=[];for(let n=0;n<r.length;n++)o[n]=Math.ceil((t[n]-r[n])/e[n]);return o}function SN(r,t,e,o){let n=[...r];for(let s=n.length;s<o.length;s++)n.push(1);for(let s=0;s<e;s++)s===0?n[t]=1:(n.splice(t,0,1),n.pop());return n}function IN(r,t,e){return e<=r?e:e-(t-1)}function NN(r,t){let e=[];for(let o=0;o<r;o++)e.push(t+o);return e}function QM(r,t,e,o,n,s,i,a,l){let c=r.length,u=new Array(c),p=new Array(c),m=new Array(c);if(t.length&&e>0){let f=t[0],h=e+1;u=TN(i,f,h,o,r),p=kN(a,f,h,n,r),m=SN(s,f,h,r)}else for(let f=0;f<c;f++)u[f]=AN(i,o,s,r,f,l),p[f]=$N(a,n,s,r,f,l),m[f]=EN(s,f,l);return{begin:u,end:p,strides:m}}function TN(r,t,e,o,n){let s=[...n],i=NN(e,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{let l=IN(t,e,a),c=o[l];r&1<<l&&(c=0),s[a]=c}return s}function kN(r,t,e,o,n){let s=[...n],i=NN(e,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{let l=IN(t,e,a),c=o[l];r&1<<l&&(c=Number.MAX_SAFE_INTEGER),s[a]=c}for(let a=0;a<s.length;a++){let l=n[a];s[a]<0&&(s[a]+=l),s[a]=Ol(0,s[a],n[a])}return s}function EN(r,t,e){let o=r[t];return(e&1<<t||o==null)&&(o=1),o}function AN(r,t,e,o,n,s){let i=t[n],a=e[n]||1;(r&1<<n||s&1<<n||i==null)&&(a>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let l=o[n];return i<0&&(i+=l),i=Ol(0,i,l-1),i}function $N(r,t,e,o,n,s){let i=t[n],a=e[n]||1;(r&1<<n||s&1<<n||i==null)&&(a>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let l=o[n];return i<0&&(i+=l),a>0?i=Ol(0,i,l):i=Ol(-1,i,l-1),i}function tV(r,t,e){let o=e.length;for(let n=0;n<e.length;n++)if(e[n]>1){o=n;break}for(let n=o+1;n<e.length;n++)if(t[n]>0||e[n]!==r[n])return!1;return!0}function eV(r,t){let e=r.length>0?r[r.length-1]:1;for(let o=0;o<r.length-1;o++)e+=r[o]*t[o];return e}function W0(r,t,e){let o,n=r.shape.length;typeof t=="number"?o=[t,...new Array(n-1).fill(0)]:t.length<n?o=t.concat(new Array(n-t.length).fill(0)):o=t.slice(),o.forEach(i=>{N(i!==-1,()=>"slice() does not support negative begin indexing.")});let s;return e==null?s=new Array(n).fill(-1):typeof e=="number"?s=[e,...new Array(n-1).fill(-1)]:e.length<n?s=e.concat(new Array(n-e.length).fill(-1)):s=e,s=s.map((i,a)=>i>=0?i:(N(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${a}.`),r.shape[a]-o[a])),[o,s]}function rV(r,t,e,o,n,s,i,a,l){let c;if(o==null?(c=new Array(t.length),c.fill(1)):c=o,i!=null&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1,p={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:c.slice(),beginMask:n,endMask:s,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};for(let C=0;C<p.dims;C++)u&&1<<C&a&&p.numAddAxisAfterEllipsis++,1<<C&i&&(u=!0);u||(p.ellipsisMask|=1<<p.dims,p.dims++);let m={dims:r.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};oV(p,m);let f=!0,h=!0,d=!0,g=[],x=[];for(let C=0;C<r.length;++C){if(m.strides[C]===0)throw Error(`strides[${C}] must be non-zero`);let w=!!(m.shrinkAxisMask&1<<C),v=r[C];if(v===-1){g.push(w?1:-1);continue}let E=[m.beginMask&1<<C,m.endMask&1<<C],A=[m.strides[C]>0?0:-1,m.strides[C]>0?v:v-1];if(w&&m.strides[C]<=0)throw Error("only stride 1 allowed on non-range indexing.");d=d&&m.strides[C]===1;let $=!!(m.beginMask&1<<C&&m.endMask&1<<C);if(m.beginValid&&m.endValid){if(w){let V=m.begin[C]<0?v+m.begin[C]:m.begin[C];if(m.begin[C]=V,m.end[C]=m.begin[C]+1,V<0||V>=v)throw Error(`slice index ${m.begin[C]} of dimension ${C} out of bounds.`)}else m.begin[C]=vN(m.begin[C],0,m.strides[C],v,E,A),m.end[C]=vN(m.end[C],1,m.strides[C],v,E,A);let M=m.strides[C]===1&&m.begin[C]===0&&m.end[C]===v;f=f&&M,h=h&&(C===0&&m.strides[C]===1||M)}else f=f&&m.strides[C]===1&&$,h=h&&(C===0&&m.strides[C]===1||$);let F,L=!1;if(m.beginValid&&m.endValid?(F=m.end[C]-m.begin[C],L=!0):w?(F=1,L=!0):$&&v>=0&&(m.strides[C]<0?F=-v:F=v,L=!0),L){let M;F===0||F<0!=m.strides[C]<0?M=0:M=Math.trunc(F/m.strides[C])+(F%m.strides[C]!==0?1:0),g.push(M)}else g.push(-1)}for(let C=0;C<m.finalShapeGatherIndices.length;++C){let w=m.finalShapeGatherIndices[C];w>=0?x.push(g[w]):w===U0&&x.push(1)}return{finalShapeSparse:x.filter((C,w)=>m.finalShapeGatherIndices[w]!==U0),finalShape:x,isIdentity:f,sliceDim0:h,isSimpleSlice:d,begin:m.begin,end:m.end,strides:m.strides}}function oV(r,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=r.begin!=null,t.endValid=r.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let o=0;o<r.dims;o++)if(1<<o&r.ellipsisMask){let n=Math.min(t.dims-(r.dims-o)+1+r.numAddAxisAfterEllipsis,t.dims);for(;e<n;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=o}else if(1<<o&r.newAxisMask)t.finalShapeGatherIndices.push(U0),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);r.begin!=null&&(t.begin[e]=r.begin[o]),r.end!=null&&(t.end[e]=r.end[o]),t.strides[e]=r.strides[o],r.beginMask&1<<o&&(t.beginMask|=1<<e),r.endMask&1<<o&&(t.endMask|=1<<e),r.shrinkAxisMask&1<<o?(t.finalShapeGatherIndices.push(XM),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(o)),t.inputShapeGatherIndicesSparse[e]=o,e++}}function vN(r,t,e,o,n,s){if(n[t])return e>0?s[t]:s[t+1&1];{let i=r<0?o+r:r;return i<s[0]?s[0]:i>s[1]?s[1]:i}}var dd=class{static sgd(t){return new aa(t)}static momentum(t,e,o=!1){return new eu(t,e,o)}static rmsprop(t,e=.9,o=0,n=null,s=!1){return new ru(t,e,o,n,s)}static adam(t=.001,e=.9,o=.999,n=null){return new Qc(t,e,o,n)}static adadelta(t=.001,e=.95,o=null){return new Zc(t,e,o)}static adamax(t=.002,e=.9,o=.999,n=null,s=0){return new tu(t,e,o,n,s)}static adagrad(t,e=.1){return new Jc(t,e)}};var ul=dd;var nV=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:r=>r();function Yp(){return new Promise(r=>nV(()=>r()))}var S={};po(S,{ERF_A1:()=>bV,ERF_A2:()=>wV,ERF_A3:()=>CV,ERF_A4:()=>vV,ERF_A5:()=>SV,ERF_P:()=>yV,PARALLELIZE_THRESHOLD:()=>gd,RowPartitionType:()=>xn,SELU_SCALE:()=>q0,SELU_SCALEALPHA:()=>H0,applyActivation:()=>al,assertAndGetBroadcastShape:()=>Et,assertAxesAreInnerMostDims:()=>f3,assertParamsConsistent:()=>sV,assignToTypedArray:()=>AV,axesAreInnerMostDims:()=>c0,calculateShapes:()=>QB,checkEinsumDimSizes:()=>OV,checkPadOnDimRoundingMode:()=>ee,combineLocations:()=>pI,combineRaggedTensorToTensorShapes:()=>aV,complexWithEvenIndex:()=>TV,complexWithOddIndex:()=>kV,computeConv2DInfo:()=>qa,computeConv3DInfo:()=>rI,computeDefaultPad:()=>Zb,computeDilation2DInfo:()=>xz,computeOptimalWindowSize:()=>pV,computeOutAndReduceShapes:()=>u0,computeOutShape:()=>iV,computePool2DInfo:()=>Yb,computePool3DInfo:()=>yz,convertConv2DDataFormat:()=>oI,decodeEinsumEquation:()=>_V,eitherStridesOrDilationsAreOne:()=>Ye,expandShapeToKeepDim:()=>hn,exponent:()=>DV,exponents:()=>$V,fromStringArrayToUint8:()=>rG,fromUint8ToStringArray:()=>eG,getAxesPermutation:()=>p0,getBroadcastDims:()=>lI,getComplexWithIndex:()=>EV,getEinsumComputePath:()=>LV,getEinsumPermutation:()=>FV,getFusedBiasGradient:()=>il,getFusedDyActivation:()=>sl,getImageCenter:()=>mV,getInnerMostAxes:()=>h3,getPermuted:()=>hV,getRaggedRank:()=>cV,getReductionAxes:()=>Zt,getReshaped:()=>fV,getReshapedPermuted:()=>dV,getRowPartitionTypesHelper:()=>lV,getSliceBeginCoords:()=>gV,getSliceSize:()=>xV,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>MV,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>VV,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>GV,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>HV,getSparseReshapeInputOutputMismatchErrorMessage:()=>KV,getSparseReshapeInputOutputMultipleErrorMessage:()=>qV,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>UV,getSparseReshapeNegativeOutputDimErrorMessage:()=>WV,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>ZV,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>jV,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>XV,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>YV,getUndoAxesPermutation:()=>Rp,isIdentityPermutation:()=>PV,log:()=>lP,mergeRealAndImagArrays:()=>IV,prepareAndValidate:()=>jM,prepareSplitSize:()=>BV,segment_util:()=>j0,shouldFuse:()=>ll,slice_util:()=>Ue,splitRealAndImagArrays:()=>NV,stridesOrDilationsArePositive:()=>fn,tupleValuesAreOne:()=>no,upcastType:()=>$e,validateDefaultValueShape:()=>uV,validateInput:()=>JB,validateUpdateShape:()=>PI,warn:()=>cn});function sV(r,t){let e=r[0].length;r.forEach((n,s)=>{N(n.length===e,()=>`Error in concat${e}D: rank of tensors[${s}] must be the same as the rank of the rest (${e})`)}),N(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);let o=r[0];r.forEach((n,s)=>{for(let i=0;i<e;i++)N(i===t||n[i]===o[i],()=>`Error in concat${e}D: Shape of tensors[${s}] (${n}) does not match the shape of the rest (${o}) along the non-concatenated axis ${s}.`)})}function iV(r,t){let e=r[0].slice();for(let o=1;o<r.length;o++)e[t]+=r[o][t];return e}var xn;(function(r){r[r.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",r[r.VALUE_ROWIDS=1]="VALUE_ROWIDS",r[r.ROW_LENGTHS=2]="ROW_LENGTHS",r[r.ROW_SPLITS=3]="ROW_SPLITS",r[r.ROW_LIMITS=4]="ROW_LIMITS",r[r.ROW_STARTS=5]="ROW_STARTS"})(xn||(xn={}));function aV(r,t,e){let o=new Array;if(e==null&&t==null)return o;if(t==null)for(;o.length<r+e.length;)o.push(-1);else o=t.slice();if(e==null)return o;if(r+e.length!==o.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${r+e.length}, but shape.rank = ${o.length}`);for(let n=1;n<e.length;++n){let s=e[n],i=o[o.length-e.length+n],a=o[i];if(s>=0)if(a>=0){if(a!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${n+r}] = ${s} but shape[${n+r}] = ${a}`)}else o[i]=s}return o}function lV(r){let t={FIRST_DIM_SIZE:xn.FIRST_DIM_SIZE,VALUE_ROWIDS:xn.VALUE_ROWIDS,ROW_LENGTHS:xn.ROW_LENGTHS,ROW_SPLITS:xn.ROW_SPLITS,ROW_LIMITS:xn.ROW_LIMITS,ROW_STARTS:xn.ROW_STARTS},e=[];for(let o of r)if(o in t)e.push(t[o]);else break;return e}function cV(r){return r.length===0?0:r[0]===xn.FIRST_DIM_SIZE?r.length-1:r.length}function uV(r,t){if(r==null||t==null)return;let e=r.length,o=t.length;if(e>=o)throw new Error(`defaultValue.shape=${r} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${o})`);for(let n=0;n<Math.min(e,o-1);++n){let s=r[n],i=t[n+1];if(s>=0&&i>=0&&s!==1&&s!==i)throw new Error(`defaultValue.shape=${r}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${n-r.length}] = ${s} but ragged tensor input.flatValues.shape[${n-r.length}] = ${i}`)}}var gd=30;function pV(r){return r<=gd?r:Bl(r,Math.floor(Math.sqrt(r)))}function mV(r,t,e){let o=e*(typeof r=="number"?r:r[0]),n=t*(typeof r=="number"?r:r[1]);return[o,n]}function fV(r,t,e,o=!0){let n=[];if(o)n=n.concat(t.slice(0)),n.push(r[0]/e),n=n.concat(r.slice(1));else{n=n.concat(r[0]);let s=t.length;for(let i=0;i<s;++i)n=n.concat([r[i+1]/t[i],t[i]]);n=n.concat(r.slice(s+1))}return n}function hV(r,t,e=!0){let o=[];if(e){o.push(t);for(let n=t+1;n<r;++n)n<=2*t?(o.push(n),o.push(n-(t+1))):o.push(n)}else{let n=[],s=[];for(let i=1;i<r;++i)i>=t*2+1||i%2===1?s.push(i):n.push(i);o.push(...n),o.push(0),o.push(...s)}return o}function dV(r,t,e,o=!0){let n=[];o?n.push(r[0]/e):n.push(r[0]*e);for(let s=1;s<r.length;++s)s<=t.length?o?n.push(t[s-1]*r[s]):n.push(r[s]/t[s-1]):n.push(r[s]);return n}function gV(r,t){let e=[0];for(let o=0;o<t;++o)e.push(r[o][0]);return e}function xV(r,t,e){let o=r.slice(0,1);for(let n=0;n<e;++n)o.push(r[n+1]-t[n][0]-t[n][1]);return o}var H0=1.7580993408473768,q0=1.0507009873554805;var yV=.3275911,bV=.254829592,wV=-.284496736,CV=1.421413741,vV=-1.453152027,SV=1.061405429;function IV(r,t){if(r.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${t.length}.`);let e=new Float32Array(r.length*2);for(let o=0;o<e.length;o+=2)e[o]=r[o/2],e[o+1]=t[o/2];return e}function NV(r){let t=new Float32Array(r.length/2),e=new Float32Array(r.length/2);for(let o=0;o<r.length;o+=2)t[o/2]=r[o],e[o/2]=r[o+1];return{real:t,imag:e}}function TV(r){let t=Math.ceil(r.length/4),e=new Float32Array(t),o=new Float32Array(t);for(let n=0;n<r.length;n+=4)e[Math.floor(n/4)]=r[n],o[Math.floor(n/4)]=r[n+1];return{real:e,imag:o}}function kV(r){let t=Math.floor(r.length/4),e=new Float32Array(t),o=new Float32Array(t);for(let n=2;n<r.length;n+=4)e[Math.floor(n/4)]=r[n],o[Math.floor(n/4)]=r[n+1];return{real:e,imag:o}}function EV(r,t){let e=r[t*2],o=r[t*2+1];return{real:e,imag:o}}function AV(r,t,e,o){r[o*2]=t,r[o*2+1]=e}function $V(r,t){let e=new Float32Array(r/2),o=new Float32Array(r/2);for(let n=0;n<Math.ceil(r/2);n++){let s=(t?2:-2)*Math.PI*(n/r);e[n]=Math.cos(s),o[n]=Math.sin(s)}return{real:e,imag:o}}function DV(r,t,e){let o=(e?2:-2)*Math.PI*(r/t),n=Math.cos(o),s=Math.sin(o);return{real:n,imag:s}}var K0="->",RV=/->/g,DN=",",RN="...";function _V(r,t){r=r.replace(/\s/g,"");let e=(r.length-r.replace(RV,"").length)/K0.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${K0}").`);let[o,n]=r.split(K0);N(o.indexOf(RN)===-1,()=>`The ellipsis notation ("${RN}") is not supported yet.`);let s=o.split(DN),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let a=[];for(let m=0;m<n.length;++m){let f=n[m];if(!s.some(h=>h.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);a.indexOf(f)===-1&&a.push(f)}for(let m=0;m<o.length;++m){let f=o[m];a.indexOf(f)===-1&&f!==DN&&a.push(f)}let l=new Array(s.length);for(let m=0;m<i;++m){if(new Set(s[m].split("")).size!==s[m].length)throw new Error(`Found duplicate axes in input component ${s[m]}. Support for duplicate axes in input is not implemented yet.`);l[m]=[];for(let f=0;f<s[m].length;++f)l[m].push(a.indexOf(s[m][f]))}let c=a.length,u=n.length,p=[];for(let m=u;m<c;++m)p.push(m);return{allDims:a,summedDims:p,idDims:l}}function FV(r,t){let e=new Array(r);e.fill(-1);for(let n=0;n<t.length;++n)e[t[n]]=n;let o=[];for(let n=0;n<r;++n)e[n]===-1&&o.push(n);return e=e.filter(n=>n!==-1),{permutationIndices:e,expandDims:o}}function OV(r,t,e){let o=new Array(r);for(let n=0;n<e.length;++n){let s=e[n].shape;for(let i=0;i<t[n].length;++i)o[t[n][i]]===void 0?o[t[n][i]]=s[i]:N(o[t[n][i]]===s[i],()=>`Expected dimension ${o[t[n][i]]} at axis ${i} of input shaped ${JSON.stringify(s)}, but got dimension ${s[i]}`)}}function LV(r,t){let e=r,o=[],n=0;r.length===0&&e.push(-1),n=r.length+1;for(let i=0;i<n;++i)o.push([]);let s=[];for(let i=0;i<e.length;++i){let a=e[i],l=zV(t,a);for(let c of l)s.indexOf(c)===-1&&(o[i].push(c),s.push(c))}return{path:e,steps:o}}function PV(r){return r.every((t,e)=>t===e)}function zV(r,t){let e=[];for(let o=0;o<r.length;++o)(r[o].length===0||r[o].indexOf(t)!==-1||t===-1)&&e.push(o);return e}function BV(r,t,e=0){let o=[];if(typeof t=="number")N(r.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),o=new Array(t).fill(r.shape[e]/t);else{let n=t.reduce((i,a)=>(a===-1&&(i+=1),i),0);N(n<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(s!==-1){let i=t.reduce((a,l)=>l>0?a+l:a);t[s]=r.shape[e]-i}N(r.shape[e]===t.reduce((i,a)=>i+a),()=>"The sum of sizes must match the size of the axis dimension."),o=t}return o}function MV(r){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${r}`}function VV(r,t){return`indices(${r}, 0) is invalid: ${t} < 0`}function GV(r,t,e){return`indices(${r}, 0) is invalid: ${t} >= ${e}`}function UV(r,t){return`only one output dimension may be -1, not both ${r} and ${t}`}function WV(r,t){return`size ${r} must be non-negative, not ${t}`}function HV(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function qV(r,t){let e=Ut(r),o=Ut(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${o}. inputShape=${r} outputShape= ${t}`}function KV(r,t){let e=Ut(r),o=Ut(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${o}. inputShape=${r} outputShape=${t}`}function jV(){return"segment ids must be >= 0"}function XV(){return"segment ids are not increasing"}function YV(r,t){return`Segment id ${r} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function ZV(r,t,e){return`Bad: indices[${r}] == ${t} out of range [0, ${e})`}var j0={};po(j0,{collectGatherOpShapeInfo:()=>tG,computeOutShape:()=>QV,segOpComputeOptimalWindowSize:()=>JV});function JV(r,t){let e=!1,o;for(r<=gd?(o=r,e=!0):o=Bl(r,Math.floor(Math.sqrt(r)));!e;)o>t||o===r?e=!0:o=Bl(r,o+1);return o}function QV(r,t,e){let o=[],n=r.length;for(let s=0;s<n;s++)s!==t?o.push(r[s]):o.push(e);return o}function tG(r,t,e,o){let n=t.shape.length,s=r.shape.length;if(o!==0&&(o<-n||o>n))throw new Error(`Expect batchDims in the range of [-${n}, ${n}], but got ${o}`);if(o<0&&(o+=n),o>s)throw new Error(`batchDims (${o}) must be less than rank(x) (
    ${s}).`);if(e<o)throw new Error(`batchDims (${o}) must be less than or equal to axis (${e}).`);for(let p=0;p<o;++p)if(r.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${r.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);let i=r.shape[e],a=[],l=1,c=1,u=1;for(let p=0;p<o;++p)a.push(r.shape[p]),l*=r.shape[p];for(let p=o;p<e;p++)a.push(r.shape[p]),c*=r.shape[p];for(let p=o;p<n;p++)a.push(t.shape[p]);for(let p=e+1;p<s;p++)a.push(r.shape[p]),u*=r.shape[p];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:i,outputShape:a}}function eG(r){try{return r.map(t=>$c(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function rG(r){return r.map(t=>Ac(t))}var ar={};po(ar,{nonMaxSuppressionV3Impl:()=>id,nonMaxSuppressionV4Impl:()=>ad,nonMaxSuppressionV5Impl:()=>ld,whereImpl:()=>MI});mN();var xd={kernelName:ni,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(r,Uo(Y(e,"float32"),-1))}}};var _N={kernelName:Fn,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let o=_t(Y(e,"float32")),n=Jt(ut(bt(1),o));return Mt(nt(r,n))}}}};var FN={kernelName:On,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let o=Jt(ut(_t(Y(e,"float32")),1));return nt(r,o)}}}};var ON={kernelName:Po,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t,n=Et(e.shape,o.shape);return{a:()=>{let a=r,l=Zt(e.shape,n);return l.length>0&&(a=lt(a,l)),_(a,e.shape)},b:()=>{let a=r,l=Zt(o.shape,n);return l.length>0&&(a=lt(a,l)),_(a,o.shape)}}}};var LN={kernelName:Vl,saveAllInputs:!0,gradFunc:(r,t)=>{let e={};return t.forEach((o,n)=>{e[n]=()=>r.clone()}),e}};var PN={kernelName:si,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>gt(e)}}};var zN={kernelName:ii,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>gt(e)}}};var BN={kernelName:Ln,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>nt(r,Jt(ut(bt(1),_t(Y(e,"float32")))))}}};var MN={kernelName:Pn,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let o=Jt(j(bt(1),_t(Y(e,"float32"))));return nt(r,o)}}}};var VN={kernelName:Mn,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t,n=Et(e.shape,o.shape);return{a:()=>{let a=j(_t(e),_t(o)),l=R(r,nt(o,a)),c=Zt(e.shape,n);return c.length>0&&(l=lt(l,c)),_(l,e.shape)},b:()=>{let a=j(_t(e),_t(o)),l=Mt(R(r,nt(e,a))),c=Zt(o.shape,n);return c.length>0&&(l=lt(l,c)),_(l,o.shape)}}}};var GN={kernelName:zn,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>nt(r,j(_t(Y(e,"float32")),1))}}};var UN={kernelName:Bn,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>nt(r,ut(bt(1),_t(Y(e,"float32"))))}}};function oG(r,t,e,o,n,s){let i=I(r,"dy","avgPool3dGrad"),a=I(t,"input","avgPool3dGrad"),l=i,c=a,u=!1;a.rank===4&&(u=!0,l=_(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),c=_(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),N(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),N(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),ee("avgPool3dGrad",n,s);let p={dy:l,input:c},m={filterSize:e,strides:o,pad:n,dimRoundingMode:s},f=T.runKernel(Hl,p,m);return u?_(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}var WN=k({avgPool3dGrad_:oG});var HN={kernelName:li,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,{filterSize:n,strides:s,pad:i,dimRoundingMode:a}=e;return{x:()=>WN(r,o,n,s,i,a)}}};function nG(r,t,e,o,n){let s=I(r,"dy","avgPoolGrad"),i=I(t,"input","avgPoolGrad");N(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let a=i,l=s,c=!1;i.rank===3&&(c=!0,a=_(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=_(s,[1,s.shape[0],s.shape[1],s.shape[2]])),N(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),N(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);let u={dy:l,input:a},p={filterSize:e,strides:o,pad:n},m=T.runKernel(Wl,u,p);return c?_(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var qN=k({avgPoolGrad_:nG});var KN={kernelName:ai,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,{filterSize:n,strides:s,pad:i}=e;return{x:()=>qN(r,o,n,s,i)}}};var jN={kernelName:ci,inputsToSave:["a","b"],gradFunc:(r,t,e)=>{let[o,n]=t,{transposeA:s,transposeB:i}=e;return!s&&!i?{a:()=>Wt(r,n,!1,!0),b:()=>Wt(o,r,!0,!1)}:!s&&i?{a:()=>Wt(r,n,!1,!1),b:()=>Wt(r,o,!0,!1)}:s&&!i?{a:()=>Wt(n,r,!1,!0),b:()=>Wt(o,r,!1,!1)}:{a:()=>Wt(n,r,!0,!0),b:()=>Wt(r,o,!0,!0)}}};var XN={kernelName:ui,gradFunc:(r,t,e)=>{let{blockShape:o,crops:n}=e;return{x:()=>qc(r,o,n)}}};var YN={kernelName:Xv,gradFunc:(r,t,e)=>{let o=e,n=o.inputShape,s=o.shape,i=Array.from(s);for(let l=n.length-1;l>=0;l--)if(n[l]===s[l])i[l]=1;else if(n[l]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${s}].`);let a=[];for(let l=0;l<i.length;l++)i[l]>1&&a.push(l);return{x:()=>lt(r,a,!0)}}};var ZN={kernelName:nn,gradFunc:r=>({x:()=>r.clone()})};var JN={kernelName:Vn,gradFunc:r=>({x:()=>gt(r)})};var QN={kernelName:Gn,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,{clipValueMin:n,clipValueMax:s}=e;return{x:()=>se(hr(_r(o,n),bo(o,s)),r,gt(r))}}};var tT={kernelName:pi,inputsToSave:["x"],gradFunc:xd.gradFunc};var eT={kernelName:mi,saveAllInputs:!0,gradFunc:(r,t,e)=>{let o=t.map(l=>l.shape),{axis:n}=e,s=Oe(n,t[0].shape)[0],i=o.map(l=>l[s]);return Pe(r,i,s).map(l=>()=>l)}};var rT={kernelName:fi,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let[o,n]=t,{dilations:s,strides:i,pad:a,dataFormat:l}=e;return N(no(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Bc(o.shape,r,n,i,a,l),filter:()=>Yc(o,r,n.shape,i,a,l)}}};var oT={kernelName:hi,inputsToSave:["dy","filter"],gradFunc:(r,t,e)=>{let[o,n]=t,{strides:s,pad:i,dataFormat:a,dimRoundingMode:l}=e;return{dy:()=>Wr(r,n,s,i,a,1,l),filter:()=>Yc(r,o,n.shape,s,i,a,l)}}};function sG(r,t,e,o,n){let s=r;r.rank===4&&(s=_(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));let i=t;i.rank===4&&(i=_(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),N(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),N(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),N(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),N(s.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${e[3]}.`),N(i.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${e[4]}).`);let a={x:s,dy:i},l={strides:o,pad:n,filterShape:e};return T.runKernel(Xl,a,l)}var nT=k({conv3DBackpropFilter_:sG});var sT={kernelName:di,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let{dilations:o,strides:n,pad:s}=e;N(no(o),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);let[i,a]=t;return{x:()=>jh(i.shape,r,a,n,s),filter:()=>nT(i,r,a.shape,n,s)}}};var iT={kernelName:Un,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(Mt(Vp(Y(e,"float32"))),r)}}};var aT={kernelName:Wn,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(Gp(Y(e,"float32")),r)}}};var lT={kernelName:gi,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,{axis:n,exclusive:s,reverse:i}=e;return{x:()=>{let a=p0([n],o.rank),l=Xh(r,n,s,!i);return a!=null&&(l=Rt(l,a)),l}}}};var cT={kernelName:xi,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let{dilations:o,strides:n,pad:s,dimRoundingMode:i}=e,a=o??[1,1];N(no(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[l,c]=t;return N(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),N(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),N(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),N(Ye(n,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${n} and dilations '${a}'.`),ee("depthwiseConv2d",s,i),{x:()=>sd(l.shape,r,c,n,s,a,i),filter:()=>nd(l,r,c.shape,n,s,a,i)}}};var uT={kernelName:yi,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let[o,n]=t,s={x:o,filter:n,dy:r},i={x:o,filter:n,dy:r};return{x:()=>T.runKernel(fp,s,e),filter:()=>T.runKernel(hp,i,e)}}};var pT={kernelName:qn,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t,o={dy:r,y:e};return{x:()=>T.runKernel(nc,o)}}};var mT={kernelName:Kn,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t,o=R(Ve(Mt(_t(e))),2/Math.sqrt(Math.PI));return{x:()=>R(r,o)}}};var fT={kernelName:jn,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(r,e)}}};var hT={kernelName:bi,inputsToSave:["input"],gradFunc:(r,t)=>{let[e]=t;return{input:()=>_(r,e.shape)}}};var dT={kernelName:Xn,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(r,Ve(e))}}};var gT={kernelName:Yn,gradFunc:r=>({x:()=>gt(r)})};var xT={kernelName:Zn,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t,n=Et(e.shape,o.shape);return{a:()=>{let a=nt(r,Y(o,"float32")),l=Zt(e.shape,n);return l.length>0?_(lt(a,l),e.shape):a},b:()=>{let a=R(r,Y(e,"float32")),l=Zt(o.shape,n);l.length>0&&(a=_(lt(a,l),o.shape));let c=_t(o);return Mt(nt(a,Y(c,"float32")))}}}};var yT={kernelName:wi,inputsToSave:["x","mean","variance","scale"],gradFunc:(r,t,e)=>{let{varianceEpsilon:o}=e,[n,s,i,a]=t,l=a??bt(1),c=Zt(s.shape,n.shape),u=[];if(s.rank===1){for(let w=0;w<n.shape.length-1;++w)u.push(n.shape[w]);u.push(1)}let p=ut(n,s),m=R(r,l),f=zp(j(i,bt(o))),h=R(R(R(f,f),f),bt(-.5));return{x:()=>s.rank===1?_(R(R(r,sr(_(f,[1,1,1,s.shape[0]]),u)),l),n.shape):_(R(R(r,f),l),n.shape),mean:()=>{let w=R(R(f,bt(-1)),m);return s.rank===1&&(w=lt(w,c)),_(w,s.shape)},variance:()=>{let w=R(R(h,p),m);return s.rank===1&&(w=lt(w,c)),_(w,s.shape)},scale:()=>{let w=R(p,f),v=R(r,w);return s.rank===1&&(v=lt(v,c)),_(v,s.shape)},offset:()=>{let w=r;return s.rank===1&&(w=lt(w,c)),_(w,s.shape)}}}};var CT={kernelName:Ci,inputsToSave:["x","indices"],gradFunc:(r,t,e)=>{let[o,n]=t,{axis:s,batchDims:i}=e,a=Oe(s,o.shape)[0],l=(c,u,p)=>()=>{let m=c.shape,f=u.size,h=m.slice(0,a),d=h.length,g=m.slice(s,m.length).slice(1),x=g.length,b=bT(0,d),C=bT(d+1,d+1+x),w=wT([h,[f],g]),v=_(p,w),E=_(u,[f]),A=wT([[d],b,C]),$=Rt(v,A),F=od($,E,c.shape[a]),L=Rp(A);return F=Rt(F,L),F};if(i===1){let c=o.shape[0],u=o.split(c,0);return{x:()=>Re(u.map((f,h)=>l(f,n.slice(h,1),r.slice(h,1))())).reshape(o.shape),indices:()=>n}}else return{x:l(o,n,r),indices:()=>n}}};function bT(r,t){let e=[];for(let o=r;o<t;++o)e.push(o);return e}function wT(r){let t=[];for(let e=0;e<r.length;++e)for(let o=0;o<r[e].length;++o)t.push(r[e][o]);return t}var vT={kernelName:Jn,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t;return{a:()=>gt(e),b:()=>gt(o)}}};var ST={kernelName:sn,gradFunc:r=>({x:()=>Y(r,"float32")})};var IT={kernelName:Qn,gradFunc:r=>({x:()=>gt(r)})};var NT={kernelName:ts,gradFunc:r=>({x:()=>gt(r)})};var TT={kernelName:es,gradFunc:r=>({x:()=>gt(r)})};var kT={kernelName:vi,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,{alpha:n}=e,s=we(o,0);return{x:()=>se(s,r,R(r,n))}}};var ET={kernelName:os,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>nt(r,j(e,1))}}};var AT={kernelName:rs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>nt(r,Y(e,"float32"))}}};var $T={kernelName:Zv,inputsToSave:[],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[o]=t,{axis:n}=e;return{logits:()=>{let i=Ve(o);return ut(r,R(lt(r,n,!0),i))}}}};function iG(r,t,e,o=5,n=1,s=1,i=.5){let a={x:r,y:t,dy:e},l={depthRadius:o,bias:n,alpha:s,beta:i};return T.runKernel(uc,a,l)}var DT=k({localResponseNormalizationBackprop_:iG});var RT={kernelName:Si,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[o,n]=t,{depthRadius:s,bias:i,alpha:a,beta:l}=e;return{x:()=>DT(o,n,r,s,i,a,l)}}};function yd(r,t,e,o){return t.rank<e.rank&&(t=_(t,hn(t.shape,o))),r.rank<e.rank&&(r=_(r,hn(r.shape,o))),{x:()=>R(r,Y(vr(e,t),r.dtype))}}var X0={kernelName:Ii,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let o=e,{reductionIndices:n}=o,s=t[0],i=t[1],a=Oe(n,s.shape),l=yd(r,i,s,a);return{x:()=>l.x()}}};var _T={kernelName:ns,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t;return{a:()=>R(r,Y(_r(e,o),"float32")),b:()=>R(r,Y(Ja(e,o),"float32"))}}};function aG(r,t,e,o,n,s,i){let a=I(r,"dy","maxPool3dGrad"),l=I(t,"input","maxPool3dGrad"),c=I(e,"output","maxPool3dGrad"),u=a,p=l,m=c,f=!1;l.rank===4&&(f=!0,u=_(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),p=_(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),m=_(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),N(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),N(p.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),N(m.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${m.rank}.`),ee("maxPool3dGrad",s,i);let h={dy:u,input:p,output:m},d={filterSize:o,strides:n,pad:s,dimRoundingMode:i},g=T.runKernel(mc,h,d);return f?_(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var FT=k({maxPool3dGrad_:aG});var OT={kernelName:Ti,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[o,n]=t,{filterSize:s,strides:i,pad:a,dimRoundingMode:l}=e;return{x:()=>FT(r,o,n,s,i,a,l)}}};function lG(r,t,e,o,n,s,i){let a=I(r,"dy","maxPoolGrad"),l=I(t,"input","maxPoolGrad"),c=I(e,"output","maxPoolGrad");N(l.rank===a.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`),N(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),N(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),ee("maxPoolGrad",s,i);let u={dy:a,input:l,output:c},p={filterSize:o,strides:n,pad:s,dimRoundingMode:i};return T.runKernel(pc,u,p)}var LT=k({maxPoolGrad_:lG});var PT={kernelName:Ni,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[o,n]=t,{filterSize:s,strides:i,pad:a}=e;return{x:()=>LT(r,o,n,s,i,a)}}};var zT={kernelName:ki,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,{axis:n}=e,s=Oe(n,o.shape),a=u0(o.shape,s)[1],l=Ut(a);return{x:()=>{let u=o.shape.slice();s.forEach(f=>{u[f]=1});let p=_(r,u);return nt(R(p,Ir(o.shape,"float32")),l)}}}};var BT={kernelName:Ei,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let o=e,{axis:n}=o,[s,i]=t,a=Oe(n,s.shape),l=yd(r,i,s,a);return{x:()=>l.x()}}};var MT={kernelName:ss,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t;return{a:()=>R(r,Y(bo(e,o),"float32")),b:()=>R(r,Y(we(e,o),"float32"))}}};var VT={kernelName:Ai,inputsToSave:["x"],gradFunc:(r,t,e)=>{let o=t[0],{paddings:n}=e,s=n.map(i=>i[0]);return{x:()=>Pt(r,s,o.shape)}}};var GT={kernelName:is,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t,n=Et(e.shape,o.shape);return{a:()=>{let a=Zt(e.shape,n);return a.length>0?_(lt(r,a),e.shape):r},b:()=>{let a=R(r,Mt(_s(nt(e,o)))),l=Zt(o.shape,n);return l.length>0?_(lt(a,l),o.shape):a}}}};var UT={kernelName:as,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t,n=Et(e.shape,o.shape);return{a:()=>{let a=R(r,Y(o,"float32")),l=Zt(e.shape,n);return l.length>0?_(lt(a,l),e.shape):a},b:()=>{let a=R(r,Y(e,"float32")),l=Zt(o.shape,n);return l.length>0?_(lt(a,l),o.shape):a}}}};var WT={kernelName:$i,gradFunc:r=>({x:()=>Mt(r)})};var HT={kernelName:Ri,inputsToSave:["indices"],gradFunc:(r,t)=>{let e=t[0];return{indices:()=>ie(e.shape,"float32")}}};var qT={kernelName:Di,gradFunc:r=>({x:()=>gt(r)})};var KT={kernelName:_i,saveAllInputs:!0,gradFunc:(r,t,e)=>{let{axis:o}=e;return dr(r,o).map(s=>()=>s)}};var Y0={kernelName:Fi,inputsToSave:["x"],gradFunc:(r,t,e)=>{let o=t[0],{paddings:n}=e,s=n.map(i=>i[0]);return{x:()=>Pt(r,s,o.shape)}}};var jT={kernelName:ls,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(r,t)=>{let[e,o,n]=t,s=e,i=o,a=Et(s.shape,i.shape);return{a:()=>{let u=Y(i,"float32"),p=R(r,R(u,Rr(s,ut(u,bt(1))))),m=Zt(s.shape,a);return m.length>0&&(p=lt(p,m)),_(p,s.shape)},b:()=>{let u=we(s,0),p=se(u,Sr(s),gt(s)),m=R(r,R(n,p)),f=Zt(i.shape,a);return f.length>0&&(m=lt(m,f)),_(m,i.shape)}}}};var XT={kernelName:Oi,inputsToSave:["x","alpha"],gradFunc:(r,t)=>{let[e,o]=t,n=we(e,0);return{x:()=>se(n,r,R(r,o)),alpha:()=>{let s=se(n,gt(r),R(r,e)),i=Zt(o.shape,r.shape);return i.length>0&&(s=lt(s,i)),_(s,o.shape)}}}};function cG(r,t,e){let o=r.shape.slice();o[e]=1;let n=_(t,o),s=$p(r,e,!0,!1),i=$p(r,e,!0,!0),a=R(s,i);return R(n,a)}function uG(r,t,e){let o=r.shape.length,n=o-e.length,s=S.getAxesPermutation(e,o),i=r;s!=null&&(i=Rt(r,s));let a=i.shape.slice(),c=a.splice(o-e.length,e.length).reduce((m,f)=>m*f,1);a.push(c);let u=i.reshape(a),p=cG(u,t,n);if(p=p.reshape(i.shape),s!=null){let m=S.getUndoAxesPermutation(s);p=Rt(p,m)}return p}var YT={kernelName:Li,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,{axis:n}=e,s=[];return n==null?s=o.shape.map((i,a)=>a):typeof n=="number"?s=[n]:s=n,{x:()=>uG(o,r,s)}}};var ZT={kernelName:Hn,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t,n=Et(e.shape,o.shape);return{a:()=>{let a=nt(r,Y(o,"float32")),l=Zt(e.shape,n);return l.length>0?_(lt(a,l),e.shape):a},b:()=>{let a=R(r,Y(e,"float32")),l=Zt(o.shape,n);l.length>0&&(a=_(lt(a,l),o.shape));let c=_t(o);return Mt(nt(a,Y(c,"float32")))}}}};var JT={kernelName:cs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>nt(r,Mt(_t(e)))}}};var QT={kernelName:ps,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t,o=R(bo(e,6),Uo(e));return{x:()=>R(r,Y(o,"float32"))}}};var t1={kernelName:us,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(r,Y(Uo(e),"float32"))}}};var e1={kernelName:Pi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>_(r,e.shape)}}};var r1={kernelName:Bi,inputsToSave:["images"],gradFunc:(r,t,e)=>{let[o]=t,n={dy:r,images:o};return{images:()=>T.runKernel(bc,n,e)}}};var o1={kernelName:zi,inputsToSave:["images"],gradFunc:(r,t,e)=>{let[o]=t,n={dy:r,images:o};return{images:()=>T.runKernel(yc,n,e)}}};var n1={kernelName:Mi,gradFunc:(r,t,e)=>{let{dims:o}=e,n=Oe(o,r.shape);return{x:()=>ao(r,n)}}};var s1={kernelName:ms,gradFunc:r=>({x:()=>gt(r)})};var i1={kernelName:fs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>Mt(nt(r,R(Rr(e,1.5),2)))}}};var a1={kernelName:Vi,inputsToSave:["condition"],gradFunc:(r,t)=>{let[e]=t;return{condition:()=>Y(gt(e),"float32"),t:()=>R(r,Y(e,r.dtype)),e:()=>R(r,Y(Uc(e),r.dtype))}}};var l1={kernelName:hs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let o=we(e,bt(0)),n=bt(H0),s=bt(q0),i=R(r,s),a=R(R(r,n),Ve(Y(e,"float32")));return se(o,i,a)}}}};var c1={kernelName:ys,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(r,R(e,ut(bt(1),e)))}}};var u1={kernelName:xs,gradFunc:r=>({x:()=>gt(r)})};var p1={kernelName:ds,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(Xa(Y(e,"float32")),r)}}};var m1={kernelName:gs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(Ap(Y(e,"float32")),r)}}};var f1={kernelName:Gi,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,{begin:n,size:s}=e,i=o.shape,[a,l]=W0(o,n,s),c=[];for(let u=0;u<r.rank;u++)c.push([a[u],i[u]-a[u]-l[u]]);return{x:()=>tl(r,c)}}};var h1={kernelName:qi,outputsToSave:[!0],gradFunc:(r,t,e)=>{let[o]=t,{dim:n}=e,s=!0,i=R(r,o);return{logits:()=>ut(i,R(lt(i,[n],s),o))}}};var d1={kernelName:bs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(r,yo(e))}}};var Z0={kernelName:Wi,gradFunc:(r,t,e)=>{let{blockShape:o,paddings:n}=e;return{x:()=>zc(r,o,n)}}};var J0={kernelName:Hi,gradFunc:(r,t,e)=>{let{axis:o}=e;return{x:()=>ne(r,o)}}};var g1={kernelName:ws,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>nt(r,R(Jt(Y(e,"float32")),2))}}};var x1={kernelName:wc,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(r,R(Y(e,"float32"),2))}}};var y1={kernelName:Cs,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t,n=bt(2);return{a:()=>R(r,R(n,ut(e,o))),b:()=>R(r,R(n,ut(o,e)))}}};var b1={kernelName:Ns,gradFunc:r=>({x:()=>gt(r)})};var w1={kernelName:vs,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t,n=Et(e.shape,o.shape);return{a:()=>{let a=r,l=Zt(e.shape,n);return l.length>0&&(a=lt(a,l)),_(a,e.shape)},b:()=>{let a=r,l=Zt(o.shape,n);return l.length>0&&(a=lt(a,l)),_(Mt(a),o.shape)}}}};var C1={kernelName:Ui,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,n=o.shape.slice(),{axis:s}=e;Oe(s,o.shape).forEach(c=>{n[c]=1});let a=_(r,n),l=R(a,Ir(o.shape,"float32"));return{x:()=>l}}};var v1={kernelName:Ss,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>nt(r,_t(Xa(e)))}}};var S1={kernelName:Is,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(ut(bt(1),_t(e)),r)}}};var I1={kernelName:an,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,{reps:n}=e;return{x:()=>{let i=gt(o);if(o.rank===1)for(let a=0;a<n[0];++a)i=j(i,Pt(r,[a*o.shape[0]],[o.shape[0]]));else if(o.rank===2)for(let a=0;a<n[0];++a)for(let l=0;l<n[1];++l)i=j(i,Pt(r,[a*o.shape[0],l*o.shape[1]],[o.shape[0],o.shape[1]]));else if(o.rank===3)for(let a=0;a<n[0];++a)for(let l=0;l<n[1];++l)for(let c=0;c<n[2];++c)i=j(i,Pt(r,[a*o.shape[0],l*o.shape[1],c*o.shape[2]],[o.shape[0],o.shape[1],o.shape[2]]));else if(o.rank===4)for(let a=0;a<n[0];++a)for(let l=0;l<n[1];++l)for(let c=0;c<n[2];++c)for(let u=0;u<n[3];++u)i=j(i,Pt(r,[a*o.shape[0],l*o.shape[1],c*o.shape[2],u*o.shape[3]],[o.shape[0],o.shape[1],o.shape[2],o.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${o.rank} tensors yet.`);return i}}}};var N1={kernelName:ln,gradFunc:(r,t,e)=>{let o=e,{perm:n}=o,s=Rp(n);return{x:()=>Rt(r,s)}}};var T1={kernelName:Ki,gradFunc:(r,t,e)=>{let o=e,{axis:n}=o;return{value:()=>Re(r,n)}}};var k1={kernelName:ji,inputsToSave:["segmentIds"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>pG(r,e)}}};function pG(r,t){let e=qr(t,gt(t)),o=Ya(r,e),n=_r(t,bt(0,"int32")),s=o.rank-n.rank;for(let a=0;a<s;++a)n=ke(n,a+1);n=hr(n,Ir(o.shape,"bool"));let i=gt(o);return se(n,o,i)}var E1={kernelName:Xi,gradFunc:r=>({x:()=>gt(r)})};var mG=[xd,_N,FN,ON,LN,PN,zN,BN,MN,VN,GN,UN,HN,KN,jN,XN,YN,ZN,JN,QN,tT,eT,oT,rT,sT,iT,aT,lT,cT,uT,ZT,pT,mT,fT,hT,dT,xT,gT,yT,CT,vT,ST,IT,NT,TT,kT,ET,AT,$T,RT,X0,X0,_T,OT,PT,zT,BT,MT,VT,GT,UT,WT,HT,qT,KT,Y0,Y0,jT,XT,YT,JT,QT,t1,e1,r1,o1,n1,s1,i1,a1,l1,c1,u1,p1,m1,f1,h1,d1,Z0,Z0,J0,J0,g1,y1,x1,b1,w1,C1,v1,S1,I1,N1,T1,k1,E1];for(let r of mG)tS(r);D().prototype.abs=function(){return this.throwIfDisposed(),De(this)};D().prototype.acos=function(){return this.throwIfDisposed(),Ub(this)};D().prototype.acosh=function(){return this.throwIfDisposed(),Wb(this)};D().prototype.add=function(r){return this.throwIfDisposed(),j(this,r)};D().prototype.all=function(r,t){return this.throwIfDisposed(),Ip(this,r,t)};D().prototype.any=function(r,t){return this.throwIfDisposed(),Lc(this,r,t)};D().prototype.argMax=function(r){return this.throwIfDisposed(),oo(this,r)};D().prototype.argMin=function(r){return this.throwIfDisposed(),tI(this,r)};D().prototype.asScalar=function(){return this.throwIfDisposed(),N(this.size===1,()=>"The array must have only 1 element."),_(this,[])};D().prototype.asType=function(r){return this.throwIfDisposed(),Y(this,r)};D().prototype.as1D=function(){return this.throwIfDisposed(),_(this,[this.size])};D().prototype.as2D=function(r,t){return this.throwIfDisposed(),_(this,[r,t])};D().prototype.as3D=function(r,t,e){return this.throwIfDisposed(),_(this,[r,t,e])};D().prototype.as4D=function(r,t,e,o){return this.throwIfDisposed(),_(this,[r,t,e,o])};D().prototype.as5D=function(r,t,e,o,n){return this.throwIfDisposed(),_(this,[r,t,e,o,n])};D().prototype.asin=function(){return this.throwIfDisposed(),Hb(this)};D().prototype.asinh=function(){return this.throwIfDisposed(),qb(this)};D().prototype.atan=function(){return this.throwIfDisposed(),Kb(this)};D().prototype.atan2=function(r){return this.throwIfDisposed(),eI(this,r)};D().prototype.atanh=function(){return this.throwIfDisposed(),jb(this)};D().prototype.avgPool=function(r,t,e,o){return this.throwIfDisposed(),Ka(this,r,t,e,o)};D().prototype.batchToSpaceND=function(r,t){return this.throwIfDisposed(),zc(this,r,t)};D().prototype.batchNorm=function(r,t,e,o,n){return this.throwIfDisposed(),ra(this,r,t,e,o,n)};D().prototype.broadcastTo=function(r){return this.throwIfDisposed(),As(this,r)};D().prototype.cast=function(r){return this.throwIfDisposed(),Y(this,r)};D().prototype.ceil=function(){return this.throwIfDisposed(),r0(this)};D().prototype.clipByValue=function(r,t){return this.throwIfDisposed(),Ze(this,r,t)};D().prototype.concat=function(r,t){return this.throwIfDisposed(),r instanceof Vt&&(r=[r]),ne([this,...r],t)};D().prototype.conv1d=function(r,t,e,o,n,s){return this.throwIfDisposed(),kp(this,r,t,e,o,n,s)};D().prototype.conv2dTranspose=function(r,t,e,o,n){return this.throwIfDisposed(),Ep(this,r,t,e,o,n)};D().prototype.conv2d=function(r,t,e,o,n,s){return this.throwIfDisposed(),Wr(this,r,t,e,o,n,s)};D().prototype.cos=function(){return this.throwIfDisposed(),Xa(this)};D().prototype.cosh=function(){return this.throwIfDisposed(),Ap(this)};D().prototype.cumprod=function(r,t,e){return this.throwIfDisposed(),$p(this,r,t,e)};D().prototype.cumsum=function(r,t,e){return this.throwIfDisposed(),Xh(this,r,t,e)};D().prototype.depthToSpace=function(r,t){return this.throwIfDisposed(),iI(this,r,t)};D().prototype.depthwiseConv2d=function(r,t,e,o,n,s){return this.throwIfDisposed(),Ds(this,r,t,e,o,n,s)};D().prototype.dilation2d=function(r,t,e,o,n){return this.throwIfDisposed(),aI(this,r,t,e,o,n)};D().prototype.divNoNan=function(r){return this.throwIfDisposed(),cI(this,r)};D().prototype.div=function(r){return this.throwIfDisposed(),nt(this,r)};D().prototype.dot=function(r){return this.throwIfDisposed(),uI(this,r)};D().prototype.elu=function(){return this.throwIfDisposed(),Rs(this)};D().prototype.equal=function(r){return this.throwIfDisposed(),vr(this,r)};D().prototype.erf=function(){return this.throwIfDisposed(),Dp(this)};D().prototype.euclideanNorm=function(r,t){return this.throwIfDisposed(),fI(this,r,t)};D().prototype.exp=function(){return this.throwIfDisposed(),Ve(this)};D().prototype.expandDims=function(r){return this.throwIfDisposed(),ke(this,r)};D().prototype.expm1=function(){return this.throwIfDisposed(),f0(this)};D().prototype.fft=function(){return this.throwIfDisposed(),Hp(this)};D().prototype.flatten=function(){return this.throwIfDisposed(),_(this,[this.size])};D().prototype.floor=function(){return this.throwIfDisposed(),_s(this)};D().prototype.floorDiv=function(r){return this.throwIfDisposed(),Kh(this,r)};D().prototype.gather=function(r,t,e){return this.throwIfDisposed(),Ya(this,r,t,e)};D().prototype.greaterEqual=function(r){return this.throwIfDisposed(),_r(this,r)};D().prototype.greater=function(r){return this.throwIfDisposed(),we(this,r)};D().prototype.ifft=function(){return this.throwIfDisposed(),Xc(this)};D().prototype.irfft=function(){return this.throwIfDisposed(),A0(this)};D().prototype.isFinite=function(){return this.throwIfDisposed(),h0(this)};D().prototype.isInf=function(){return this.throwIfDisposed(),d0(this)};D().prototype.isNaN=function(){return this.throwIfDisposed(),g0(this)};D().prototype.leakyRelu=function(r){return this.throwIfDisposed(),Za(this,r)};D().prototype.lessEqual=function(r){return this.throwIfDisposed(),bo(this,r)};D().prototype.less=function(r){return this.throwIfDisposed(),Ja(this,r)};D().prototype.localResponseNormalization=function(r,t,e,o){return this.throwIfDisposed(),hI(this,r,t,e,o)};D().prototype.logSigmoid=function(){return this.throwIfDisposed(),y0(this)};D().prototype.logSoftmax=function(r){return this.throwIfDisposed(),Fp(this,r)};D().prototype.logSumExp=function(r,t){return this.throwIfDisposed(),Op(this,r,t)};D().prototype.log=function(){return this.throwIfDisposed(),Sr(this)};D().prototype.log1p=function(){return this.throwIfDisposed(),_p(this)};D().prototype.logicalAnd=function(r){return this.throwIfDisposed(),hr(this,r)};D().prototype.logicalNot=function(){return this.throwIfDisposed(),Uc(this)};D().prototype.logicalOr=function(r){return this.throwIfDisposed(),Zh(this,r)};D().prototype.logicalXor=function(r){return this.throwIfDisposed(),dI(this,r)};D().prototype.matMul=function(r,t,e){return this.throwIfDisposed(),Wt(this,r,t,e)};D().prototype.maxPool=function(r,t,e,o){return this.throwIfDisposed(),Qa(this,r,t,e,o)};D().prototype.max=function(r,t){return this.throwIfDisposed(),Je(this,r,t)};D().prototype.maximum=function(r){return this.throwIfDisposed(),qr(this,r)};D().prototype.mean=function(r,t){return this.throwIfDisposed(),le(this,r,t)};D().prototype.min=function(r,t){return this.throwIfDisposed(),oa(this,r,t)};D().prototype.minimum=function(r){return this.throwIfDisposed(),gn(this,r)};D().prototype.mirrorPad=function(r,t){return this.throwIfDisposed(),gI(this,r,t)};D().prototype.mod=function(r){return this.throwIfDisposed(),xI(this,r)};D().prototype.mul=function(r){return this.throwIfDisposed(),R(this,r)};D().prototype.neg=function(){return this.throwIfDisposed(),Mt(this)};D().prototype.norm=function(r,t,e){return this.throwIfDisposed(),na(this,r,t,e)};D().prototype.notEqual=function(r){return this.throwIfDisposed(),sa(this,r)};D().prototype.oneHot=function(r,t=1,e=0){return this.throwIfDisposed(),Hc(this,r,t,e)};D().prototype.onesLike=function(){return this.throwIfDisposed(),Ge(this)};D().prototype.pad=function(r,t){return this.throwIfDisposed(),tl(this,r,t)};D().prototype.pool=function(r,t,e,o,n,s){return this.throwIfDisposed(),yI(this,r,t,e,o,n,s)};D().prototype.pow=function(r){return this.throwIfDisposed(),Rr(this,r)};D().prototype.prelu=function(r){return this.throwIfDisposed(),el(this,r)};D().prototype.prod=function(r,t){return this.throwIfDisposed(),bI(this,r,t)};D().prototype.reciprocal=function(){return this.throwIfDisposed(),k0(this)};D().prototype.relu=function(){return this.throwIfDisposed(),Kr(this)};D().prototype.relu6=function(){return this.throwIfDisposed(),ed(this)};D().prototype.reshapeAs=function(r){return this.throwIfDisposed(),_(this,r.shape)};D().prototype.reshape=function(r){return this.throwIfDisposed(),_(this,r)};D().prototype.resizeBilinear=function(r,t,e){return this.throwIfDisposed(),cd(this,r,t,e)};D().prototype.resizeNearestNeighbor=function(r,t,e){return this.throwIfDisposed(),ud(this,r,t,e)};D().prototype.reverse=function(r){return this.throwIfDisposed(),ao(this,r)};D().prototype.rfft=function(){return this.throwIfDisposed(),$0(this)};D().prototype.round=function(){return this.throwIfDisposed(),Pp(this)};D().prototype.rsqrt=function(){return this.throwIfDisposed(),zp(this)};D().prototype.selu=function(){return this.throwIfDisposed(),Bp(this)};D().prototype.separableConv2d=function(r,t,e,o,n,s){return this.throwIfDisposed(),Mp(this,r,t,e,o,n,s)};D().prototype.sigmoid=function(){return this.throwIfDisposed(),yo(this)};D().prototype.sign=function(){return this.throwIfDisposed(),E0(this)};D().prototype.sin=function(){return this.throwIfDisposed(),Vp(this)};D().prototype.sinh=function(){return this.throwIfDisposed(),Gp(this)};D().prototype.slice=function(r,t){return this.throwIfDisposed(),Pt(this,r,t)};D().prototype.softmax=function(r){return this.throwIfDisposed(),nl(this,r)};D().prototype.softplus=function(){return this.throwIfDisposed(),dn(this)};D().prototype.spaceToBatchND=function(r,t){return this.throwIfDisposed(),qc(this,r,t)};D().prototype.split=function(r,t){return this.throwIfDisposed(),Pe(this,r,t)};D().prototype.sqrt=function(){return this.throwIfDisposed(),Jt(this)};D().prototype.square=function(){return this.throwIfDisposed(),_t(this)};D().prototype.squaredDifference=function(r){return this.throwIfDisposed(),LI(this,r)};D().prototype.squeeze=function(r){return this.throwIfDisposed(),Go(this,r)};D().prototype.stack=function(r,t){this.throwIfDisposed();let e=r instanceof Vt?[this,r]:[this,...r];return Re(e,t)};D().prototype.step=function(r){return this.throwIfDisposed(),Uo(this,r)};D().prototype.stridedSlice=function(r,t,e,o,n,s,i,a){return this.throwIfDisposed(),D0(this,r,t,e,o,n,s,i,a)};D().prototype.sub=function(r){return this.throwIfDisposed(),ut(this,r)};D().prototype.sum=function(r,t){return this.throwIfDisposed(),lt(this,r,t)};D().prototype.tan=function(){return this.throwIfDisposed(),R0(this)};D().prototype.tanh=function(){return this.throwIfDisposed(),ja(this)};D().prototype.tile=function(r){return this.throwIfDisposed(),sr(this,r)};D().prototype.toBool=function(){return this.throwIfDisposed(),Y(this,"bool")};D().prototype.toFloat=function(){return this.throwIfDisposed(),Y(this,"float32")};D().prototype.toInt=function(){return this.throwIfDisposed(),Y(this,"int32")};D().prototype.topk=function(r,t){return this.throwIfDisposed(),zI(this,r,t)};D().prototype.transpose=function(r){return this.throwIfDisposed(),Rt(this,r)};D().prototype.unique=function(r){return this.throwIfDisposed(),BI(this,r)};D().prototype.unsortedSegmentSum=function(r,t){return this.throwIfDisposed(),od(this,r,t)};D().prototype.unstack=function(r){return this.throwIfDisposed(),dr(this,r)};D().prototype.where=function(r,t){return this.throwIfDisposed(),se(r,this,t)};D().prototype.zerosLike=function(){return this.throwIfDisposed(),gt(this)};var lo=class r extends Error{constructor(t){super(t),Object.setPrototypeOf(this,r.prototype)}},Nr=class r extends Error{constructor(t){super(t),Object.setPrototypeOf(this,r.prototype)}},O=class r extends Error{constructor(t){super(t),Object.setPrototypeOf(this,r.prototype)}},Ct=class r extends Error{constructor(t){super(t),Object.setPrototypeOf(this,r.prototype)}},bd=class r extends Error{constructor(t){super(t),Object.setPrototypeOf(this,r.prototype)}};var Zp=class{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){let o=this.cache.keys().next().value;this.cache.delete(o)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){let o=this.cache.keys().next().value;this.cache.delete(o)}this.maxEntries=t}};function vo(r,t){if(Array.isArray(r)){let e=[];for(let o=0;o<t;o++)e=e.concat(r);return e}else{let e=new Array(t);return e.fill(r),e}}function co(r,t){if(!r)throw new bd(t)}function tw(r,t){let e=0;for(let o of r)o===t&&e++;return e}function We(r){return r.length===1?r[0]:r}function Ht(r){return Array.isArray(r)?r:[r]}function So(r){let e=r.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function Ls(r){return r.length<=1||r.indexOf("_")===-1?r:r.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}var Co={};function nu(r){if(r==null)return null;let t={};return t.className=r.getClassName(),t.config=r.getConfig(),t}function Q0(r){if(!(r==null||typeof r!="object"))if(Array.isArray(r))r.forEach(t=>Q0(t));else{let t=Object.keys(r);for(let e of t){let o=r[e];o!=null&&typeof o=="object"&&(!Array.isArray(o)&&o.type==="ndarray"&&typeof o.value=="number"?r[e]=o.value:Q0(o))}}}function yn(r,t={},e={},o="object",n=!1){if(typeof r=="string"){let s=r,i;if(s in e)i=e[s];else if(s in Co)i=Co[s];else if(i=t[s],i==null)throw new O(`Unknown ${o}: ${r}. This may be due to one of the following reasons:
1. The ${o} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${o} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{let s=r;if(s.className==null||s.config==null)throw new O(`${o}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let i=s.className,a,l;if(i in e?[a,l]=e[i]:i in Co?[a,l]=Co.className:i in t&&([a,l]=t[i]),a==null)throw new O(`Unknown ${o}: ${i}. This may be due to one of the following reasons:
1. The ${o} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${o} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let c={};for(let f of Object.keys(Co))c[f]=Co[f];for(let f of Object.keys(e))c[f]=e[f];let u=s.config;u.customObjects=c;let p=Object.assign({},Co);for(let f of Object.keys(e))Co[f]=e[f];Q0(s.config);let m=l(a,s.config,e,n);return Co=Object.assign({},p),m}else{let c=Object.assign({},Co);for(let p of Object.keys(e))Co[p]=e[p];let u=new a(s.config);return Co=Object.assign({},c),u}}}function fG(r,t){return r<t?-1:r>t?1:0}function Jp(r,t){return-1*fG(r,t)}function Io(r){if(r==null)return r;let t=[];for(let e of r)t.indexOf(e)===-1&&t.push(e);return t}function A1(r){if(r==null)throw new O(`Invalid value in obj: ${JSON.stringify(r)}`);for(let t in r)if(r.hasOwnProperty(t))return!1;return!0}function bn(r,t,e){if(e!=null&&r.indexOf(e)<0)throw new O(`${e} is not a valid ${t}.  Valid values are ${r} or null/undefined.`)}function wd(r,t,e=0,o=1/0){return co(e>=0),co(o>=e),Array.isArray(r)&&r.length>=e&&r.length<=o&&r.every(n=>typeof n===t)}function Se(r,t){Array.isArray(r)?(y.assert(r.length>0,()=>`${t} is unexpectedly an empty array.`),r.forEach((e,o)=>Se(e,`element ${o+1} of ${t}`))):y.assert(Number.isInteger(r)&&r>0,()=>`Expected ${t} to be a positive integer, but got ${$1(r)}.`)}function $1(r){return r===null?"null":Array.isArray(r)?"["+r.map(t=>$1(t)).join(",")+"]":typeof r=="string"?`"${r}"`:`${r}`}function D1(r,t,e){let o=e!=null?e():y.now(),n;return(...i)=>{let a=e!=null?e():y.now();return a-o<t||(o=a,n=r(...i)),n}}function Cd(r){return r==="relu"?"relu":r==="linear"?"linear":r==="elu"?"elu":null}var hG=0;function Sd(){return hG++}var vd={};function la(r=""){return r in vd||(vd[r]=0),vd[r]+=1,r+vd[r].toString()}var R1=["channelsFirst","channelsLast"],_1=["nearest","bilinear"],F1=["valid","same","causal"],O1=["max","avg"],L1=["sum","mul","concat","ave"];var su=new Map;function ce(r){bn(R1,"DataFormat",r)}function z1(r){bn(_1,"InterpolationFormat",r)}function Tr(r){bn(F1,"PaddingMode",r)}function ew(r){bn(O1,"PoolMode",r)}var Qp=[],P1="/";function Ho(r,t){Qp.push(r);try{let e=t();return Qp.pop(),e}catch(e){throw Qp.pop(),e}}function dG(){return Qp.length===0?"":Qp.join(P1)+P1}function Id(r){if(!B1(r))throw new Error("Not a valid tensor name: '"+r+"'");return dG()+r}function Nd(r){if(!B1(r))throw new Error("Not a valid tensor name: '"+r+"'");su.has(r)||su.set(r,0);let t=su.get(r);if(su.set(r,su.get(r)+1),t>0){let e=`${r}_${t}`;return su.set(e,1),e}else return r}var gG=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function B1(r){return!!r.match(gG)}function M1(r){return r===parseInt(r.toString(),10)}function No(r,t,e){t==null&&(t=0),e==null&&(e=r.length);let o=1;for(let n=t;n<e;++n)o*=r[n];return o}function pl(r){if(r.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<r.length;e++){let o=r[e];o<t&&(t=o)}return t}function qo(r){if(r.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<r.length;e++){let o=r[e];o>t&&(t=o)}return t}function kr(r,t){if(t<r)throw new O(`end (${t}) < begin (${r}) is forbidden.`);let e=[];for(let o=r;o<t;++o)e.push(o);return e}var rw;function _e(){return rw==null&&(rw=Vh().epsilon()),rw}function Er(){return"channelsLast"}function gr(r,t){return Y(r,t)}function zs(r,t=-1){let e=r.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),_(r,e)}function V1(r,t){return z(()=>{if(r.shape.length!==2)throw new O(`repeat() expects a rank-2 tensor, but received a rank-${r.shape.length} tensor.`);let e=zs(r,1);return kd(e,[1,t,1])})}function G1(r){let t=[No(r.shape)];return _(r,t)}function U1(r){if(r.rank<=1)throw new O(`batchFlatten requires a minimum rank of 2. Got rank: ${r.rank}.`);let t=[r.shape[0],No(r.shape,1)];return _(r,t)}function Ps(r,t,e){return z(()=>{switch(r.rank){case 1:return Up(r,t,e);case 2:return rd(r,[t,0],[e,r.shape[1]]);case 3:return Wp(r,[t,0,0],[e,r.shape[1],r.shape[2]]);case 4:return jc(r,[t,0,0,0],[e,r.shape[1],r.shape[2],r.shape[3]]);case 5:return Pt(r,[t,0,0,0,0],[e,r.shape[1],r.shape[2],r.shape[3],r.shape[4]]);case 6:return Pt(r,[t,0,0,0,0,0],[e,r.shape[1],r.shape[2],r.shape[3],r.shape[4],r.shape[5]]);default:throw new O(`sliceAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}})}function ow(r,t,e){return z(()=>{switch(r.rank){case 1:return Up(r,t,e);case 2:return rd(r,[0,t],[r.shape[0],e]);case 3:return Wp(r,[0,0,t],[r.shape[0],r.shape[1],e]);case 4:return jc(r,[0,0,0,t],[r.shape[0],r.shape[1],r.shape[2],e]);default:throw new O(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function tm(r,t,e,o){return z(()=>{switch(r.rank){case 1:return Up(r,t,e);case 2:switch(o){case 1:return Ps(r,t,e);case 2:return ow(r,t,e);default:throw new O(`The axis is not within the rank of the tensor ${o}`)}case 3:switch(o){case 1:return Ps(r,t,e);case 2:return Wp(r,[0,t,0],[r.shape[0],e,r.shape[2]]);case 3:return ow(r,t,e);default:throw new O(`The axis is not within the rank of the tensor ${o}`)}case 4:switch(o){case 1:return Ps(r,t,e);case 2:return jc(r,[0,t,0,0],[r.shape[0],e,r.shape[2],r.shape[3]]);case 3:return jc(r,[0,0,t,0],[r.shape[0],r.shape[1],e,r.shape[3]]);case 4:return ow(r,t,e);default:throw new O(`The axis is not within the rank of the tensor ${o}`)}default:throw new O(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function iu(r,t=-1){let e;return t<0&&(e=r[0].rank,e!==0?t=e:t=0),t===r[0].rank&&(t=-1),ne(r,t)}function sw(r,t){switch(r.rank){case 1:return o0([r,t]);case 2:return n0([r,t],0);case 3:return s0([r,t],0);case 4:return i0([r,t],0);default:throw new O(`concatAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}}function kd(r,t){if(Array.isArray(t)||(t=[t]),r.rank!==t.length)throw new O(`The length of input n (${t.length}) does not match the number of dimensions in input x (${r.rank})`);return sr(r,t)}function au(r,t=0,e=1,o,n){return td(r,t,e,o,n)}function To(r,t,e,o){if(r.rank<2||t.rank<2)throw new Ct(`dot requires both inputs to be rank >= 2 but got x shape = ${r.shape} and y shape = ${t.shape}`);if(t.rank>=3){let n=r.shape.slice(-1)[0],s=t.shape.slice(-2)[0];if(n!==s)throw new Ct(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${r.shape} and  y shape = ${t.shape}`)}if(r.rank===2&&t.rank===2)return cl.matMul({a:r,b:t,transposeA:!1,transposeB:!1,bias:o?nw(r.rank,o,Er()):null,activation:e});{let n=r.shape.slice(),s=n.pop();r=_(r,[-1,s]);let i=t.shape.slice(),a=i.pop(),l=i.pop(),c=[...i,a],u=Array.from({length:t.rank},(h,d)=>d===0?t.rank-2:d<=t.rank-2?d-1:d);t=_(Rt(t,u),[l,-1]);let p=[...n,...c];return _(cl.matMul({a:r,b:t,transposeA:!1,transposeB:!1,bias:o?nw(r.rank,o,Er()):null,activation:e}),p)}}function Ed(r,t,e){return z(()=>(Array.isArray(t)?t=Ee(t,"int32"):t=Y(t,"int32"),Ya(r,t,e)))}function ml(r){return R(r,r)}function nw(r,t,e){let o=t.shape;if(t.rank!==1&&t.rank!==r)throw new O(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${r}`);if(r===5){if(e==="channelsFirst")return o.length===1?_(t,[1,o[0],1,1,1]):_(t,[1,o[3],o[0],o[1],o[2]]);if(e==="channelsLast")return o.length===1?_(t,[1,1,1,1,o[0]]):_(t,[1].concat(o))}else if(r===4){if(e==="channelsFirst")return o.length===1?_(t,[1,o[0],1,1]):_(t,[1,o[2],o[0],o[1]]);if(e==="channelsLast")return o.length===1?_(t,[1,1,1,o[0]]):_(t,[1].concat(o))}else if(r===3){if(e==="channelsFirst")return o.length===1?_(t,[1,o[0],1]):_(t,[1,o[1],o[0]]);if(e==="channelsLast")return o.length===1?_(t,[1,1,o[0]]):_(t,[1].concat(o))}else if(r<3)return t;throw new O(`Unsupported input rank by biasAdd: ${t.rank}`)}function Ar(r,t,e){return z(()=>(e==null&&(e=Er()),ce(e),j(r,nw(r.rank,t,e))))}function W1(r,t=1){if(t!==1)throw new Ct(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Rs(r)}function H1(r){return z(()=>nt(r,j(De(r),1)))}function Ad(r,t,e,o){return z(()=>GI(r,t,e,o))}function q1(r){return z(()=>{let t=j(.5,R(.2,r));return Ze(t,0,1)})}function ca(r,t,e=!1){return e?r():t()}var K1=["fanIn","fanOut","fanAvg"],j1=["normal","uniform","truncatedNormal"];function xG(r){bn(K1,"FanMode",r)}function yG(r){bn(j1,"Distribution",r)}var $r=class extends H.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},em=class extends $r{apply(t,e){return ie(t,e)}};em.className="Zeros";H.registerClass(em);var fl=class extends $r{apply(t,e){return Ir(t,e)}};fl.className="Ones";H.registerClass(fl);var rm=class extends $r{constructor(t){if(super(),typeof t!="object")throw new O(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new O(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return z(()=>R(bt(this.value),Ir(t,e)))}getConfig(){return{value:this.value}}};rm.className="Constant";H.registerClass(rm);var om=class extends $r{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Vo(t,this.minval,this.maxval,e,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};om.className="RandomUniform";H.registerClass(om);var nm=class extends $r{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new Ct(`randomNormal does not support dType ${e}.`);return au(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};nm.className="RandomNormal";H.registerClass(nm);var sm=class extends $r{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new Ct(`truncatedNormal does not support dType ${e}.`);return qp(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};sm.className="TruncatedNormal";H.registerClass(sm);var im=class extends $r{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,e){return z(()=>{if(t.length!==2||t[0]!==t[1])throw new O("Identity matrix initializer can only be used for 2D square matrices.");return R(this.gain,Vc(t[0]))})}getConfig(){return{gain:this.gain}}};im.className="Identity";H.registerClass(im);function bG(r,t="channelsLast"){let e,o;if(ce(t),r.length===2)e=r[0],o=r[1];else if([3,4,5].indexOf(r.length)!==-1){if(t==="channelsFirst"){let n=No(r,2);e=r[1]*n,o=r[0]*n}else if(t==="channelsLast"){let n=No(r,0,r.length-2);e=r[r.length-2]*n,o=r[r.length-1]*n}}else{let n=No(r);e=Math.sqrt(n),o=Math.sqrt(n)}return[e,o]}var xr=class extends $r{constructor(t){if(super(),t.scale<0)throw new O(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,xG(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,yG(this.distribution),this.seed=t.seed}apply(t,e){let o=bG(t),n=o[0],s=o[1],i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,n):this.mode==="fanOut"?i/=Math.max(1,s):i/=Math.max(1,(n+s)/2),this.distribution==="normal"){let a=Math.sqrt(i);if(e=e||"float32",e!=="float32"&&e!=="int32")throw new Ct(`${this.getClassName()} does not support dType ${e}.`);return qp(t,0,a,e,this.seed)}else{let a=Math.sqrt(3*i);return Vo(t,-a,a,e,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};xr.className="VarianceScaling";H.registerClass(xr);var lu=class extends xr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return xr.className}};lu.className="GlorotUniform";H.registerClass(lu);var cu=class extends xr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return xr.className}};cu.className="GlorotNormal";H.registerClass(cu);var uu=class extends xr{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return xr.className}};uu.className="HeNormal";H.registerClass(uu);var pu=class extends xr{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return xr.className}};pu.className="HeUniform";H.registerClass(pu);var mu=class extends xr{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return xr.className}};mu.className="LeCunNormal";H.registerClass(mu);var fu=class extends xr{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return xr.className}};fu.className="LeCunUniform";H.registerClass(fu);var am=class extends $r{constructor(t){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed}apply(t,e){return z(()=>{if(t.length<2)throw new Ct("Shape must be at least 2D.");if(e!=="int32"&&e!=="float32"&&e!==void 0)throw new TypeError(`Unsupported data type ${e}.`);e=e;let o=y.sizeFromShape(t.slice(0,-1)),n=t[t.length-1],s=o*n;s>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${s}) elements: Slowness may result.`);let i=[Math.max(n,o),Math.min(n,o)],a=au(i,0,1,e,this.seed),l=pN.qr(a,!1),c=l[0],p=l[1].flatten().stridedSlice([0],[Math.min(n,o)*Math.min(n,o)],[Math.min(n,o)+1]);return c=R(c,p.sign()),o<n&&(c=c.transpose()),R(bt(this.gain),c.reshape(t))})}getConfig(){return{gain:this.gain,seed:this.seed}}};am.className="Orthogonal";H.registerClass(am);var X1={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Y1(r,t={}){return yn(r,H.SerializationMap.getMap().classNameMap,t,"initializer")}function re(r){return nu(r)}function Yt(r){if(typeof r=="string"){let t=r in X1?X1[r]:r;if(t==="GlorotNormal")return new cu;if(t==="GlorotUniform")return new lu;if(t==="HeNormal")return new uu;if(t==="HeUniform")return new pu;if(t==="LeCunNormal")return new mu;if(t==="LeCunUniform")return new fu;{let e={};return e.className=t,e.config={},Y1(e)}}else return r instanceof $r?r:Y1(r)}function $d(r){return Array.isArray(r)&&Array.isArray(r[0])}function hu(r){return r.length===0?[]:Array.isArray(r[0])?r:[r]}function xt(r){let t;if(Array.isArray(r)){if(r.length!==1)throw new O(`Expected Tensor length to be 1; got ${r.length}`);t=r[0]}else t=r;return t}function Dt(r){if(Array.isArray(r)&&Array.isArray(r[0])){if(r.length===1)return r=r,r[0];throw new O(`Expected exactly 1 Shape; got ${r.length}`)}else return r}function du(r){let t=0;for(let e of r)e.shape.length===0?t+=1:t+=e.shape.reduce((o,n)=>o*n);return t}var J1="Variable",lm=class{constructor(t,e="float32",o=J1,n=!0,s=null){this.dtype=e??"float32",this.shape=t.shape,this.id=Sd(),o=o??J1,this.originalName=Id(o),this.name=Nd(this.originalName),this.trainable_=n,this.constraint=s,this.val=_0(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),CG(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}};function CG(r,t){if(r.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(r.shape)+" vs. "+JSON.stringify(t.shape))}function cm(r){return r.map(t=>t.read())}function gu(r){r.forEach(t=>{t[0].write(t[1])})}var Qt=class{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}},yr=class{constructor(t,e,o,n,s,i,a){this.dtype=t,this.shape=e,this.sourceLayer=o,this.inputs=n,this.callArgs=s,this.outputTensorIndex=a,this.id=Sd(),i!=null&&(this.originalName=Id(i),this.name=Nd(this.originalName)),this.rank=e.length}},vG=0,Bs=class{constructor(t,e){this.callArgs=e,this.id=vG++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(let o of t.inboundLayers)o?.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){let t=[];for(let e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},SG=0,vt=class extends H.Serializable{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=SG++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){let o=this.getClassName();e=So(o)+"_"+la(o)}if(this.name=e,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let o;if(t.batchInputShape!=null)o=t.batchInputShape;else if(t.inputShape!=null){let s=null;t.batchSize!=null&&(s=t.batchSize),o=[s].concat(t.inputShape)}this.batchInputShape=o;let n=t.dtype;n==null&&(n=t.inputDType),n==null&&(n="float32"),this.dtype=n}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(this.inboundNodes.length===0)throw new Nr(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new O(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return We(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return We(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new lo(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new lo(`Layer ${this.name} is not connected, no input to return.`);return We(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new lo(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new lo(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return We(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){let e=Ht(t);if(this.inputSpec==null||this.inputSpec.length===0)return;let o=Ht(this.inputSpec);if(e.length!==o.length)throw new O(`Layer ${this.name} expects ${o.length} inputs, but it received ${e.length} input tensors. Input received: ${t}`);for(let n=0;n<e.length;n++){let s=e[n],i=o[n];if(i==null)continue;let a=s.rank;if(i.ndim!=null&&a!==i.ndim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${a}`);if(i.maxNDim!=null&&a>i.maxNDim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${a}`);if(i.minNDim!=null&&a<i.minNDim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${a}.`);if(i.dtype!=null&&s.dtype!==i.dtype)throw new O(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${s.dtype}.`);if(i.axes){let l=s.shape;for(let c in i.axes){let u=Number(c),p=i.axes[c],m=u>=0?l[u]:l[l.length+u];if(p!=null&&[p,null].indexOf(m)===-1)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${p} but got shape ${l}.`)}}if(i.shape!=null)for(let l=0;l<i.shape.length;++l){let c=i.shape[l],u=s.shape[l];if(c!=null&&u!=null&&c!==u)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${s.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){this._callHook!=null&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();let o=Ht(t),n=TG(t),s=kG(t);if(n===s)throw new O("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ho(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);let i=[];for(let a of Ht(t))i.push(a.shape);this.build(We(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&s&&(this._refCount=1)}if(this.assertInputCompatibility(t),s){let i=this.call(t,e);this.supportsMasking&&this.setMaskMetadata(t,i);let a=Ht(i),l=[];for(let c of a)o.indexOf(c)!==-1&&(c=c.clone()),l.push(c);if(i=We(l),this.activityRegularizer!=null)throw new Ct("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{let i=IG(t),a=this.computeOutputShape(i),l,c=NG(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?i[0]:i),a!=null&&a.length>0&&Array.isArray(a[0])?l=a.map((u,p)=>new yr(c,u,this,Ht(t),e,this.name,p)):l=new yr(c,a,this,Ht(t),e,this.name),this.addInboundNode(t,l,null,null,i,a,e),this._refCount++,this.activityRegularizer!=null)throw new Ct("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((o,n)=>{o!=null&&t[n]!=null&&t[n]!==o&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new lo(`The layer ${this.name} has never been called and thus has no defined output shape.`);let t=[];for(let e of this.inboundNodes){let o=JSON.stringify(e.outputShapes);t.indexOf(o)===-1&&t.push(o)}if(t.length===1){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&e.length===1?e[0]:e}else throw new lo(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Nr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return du(this.weights)}build(t){this.built=!0}getWeights(t=!1){return cm(t?this.trainableWeights:this.weights)}setWeights(t){z(()=>{let e=this.weights;if(e.length!==t.length)throw new O(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(e.length===0)return;let o=[],n=cm(e);for(let s=0;s<n.length;++s){let i=n[s],a=e[s],l=t[s];if(!y.arraysEqual(i.shape,l.shape))throw new O(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);o.push([a,l])}gu(o)})}addWeight(t,e,o,n,s,i,a,l){if(this._addedWeightNames.indexOf(t)!==-1)throw new O(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),o==null&&(o="float32"),this.fastWeightInitDuringBuild&&(n=l!=null?l():Yt("zeros"));let c=n.apply(e,o),u=new lm(c,o,t,i,a);return c.dispose(),s!=null&&this.addLoss(()=>s.apply(u.read())),i==null&&(i=!0),i?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=Ht(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(e!=null)if(Array.isArray(e))e.forEach(o=>{if(o!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return e}setMaskMetadata(t,e,o){if(!this.supportsMasking)return;let n=this.computeMask(t,o),s=Ht(e),i=Ht(n);if(s.length!==i.length)throw new Error(`${this.name} outputs ${s.length} tensors but ${s.length} masks for those tensors`);for(let a=0;a<s.length;a++)s[a].kerasMask=i[a]}addInboundNode(t,e,o,n,s,i,a=null){let l=Ht(t);e=Ht(e),o=Ht(o),n=Ht(n),s=hu(s),i=hu(i);let c=[],u=[],p=[];for(let m of l)c.push(m.sourceLayer),u.push(m.nodeIndex),p.push(m.tensorIndex);new Bs({outboundLayer:this,inboundLayers:c,nodeIndices:u,tensorIndices:p,inputTensors:l,outputTensors:e,inputMasks:o,outputMasks:n,inputShapes:s,outputShapes:i},a);for(let m=0;m<e.length;m++)e[m].sourceLayer=this,e[m].nodeIndex=this.inboundNodes.length-1,e[m].tensorIndex=m}getConfig(){let t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount===0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}};function IG(r){r=Ht(r);let t=[];for(let e of r)t.push(e.shape);return We(t)}function NG(r){return"float32"}function iw(r,t,e){if((t==null||e!=null&&e>0)&&(t=r.sourceLayer,e=r.nodeIndex),t.inboundNodes.length===0)return[r];{let o=t.inboundNodes[e];if(o.inboundLayers.length===0)return o.inputTensors;{let n=[];for(let s=0;s<o.inboundLayers.length;s++){let i=o.inputTensors[s],a=o.inboundLayers[s],l=o.nodeIndices[s],c=iw(i,a,l);for(let u of c)n.indexOf(u)===-1&&n.push(u)}return n}}}function TG(r){let t=!0;for(let e of Ht(r))if(!(e instanceof yr)){t=!1;break}return t}function kG(r){let t=!0;for(let e of Ht(r))if(e instanceof yr){t=!1;break}return t}var wn=class extends vt{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:la("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new O("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(e==null){if(t.inputShape==null)throw new O("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new O("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let o=t.dtype||"float32";this.batchInputShape=e,this.dtype=o,this.inputSpec=[{shape:e}];let n=new yr(this.dtype,this.batchInputShape,this,[],{},this.name);n.nodeIndex=0,n.tensorIndex=0,new Bs({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[n],outputTensors:[n],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new O(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};wn.className="InputLayer";H.registerClass(wn);function aw(r){if(r.batchShape==null&&r.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(r.batchShape!=null&&r.shape!=null)throw new O("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=r.batchShape;r.shape!=null&&t==null&&(t=[null].concat(r.shape));let e=r.dtype;return e==null&&(e="float32"),new wn({batchInputShape:t,name:r.name,dtype:e,sparse:r.sparse}).inboundNodes[0].outputTensors[0]}function EG(r,t){if(r.dtype==null||r.dtype===t.dtype)return t;try{return Y(t,r.dtype)}catch{throw new O(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${r.name}' (${r.dtype}).`)}}var Cn=class r{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof r)for(let e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(let e of t)this.add(e.key,e.value)}}add(t,e,o){if(this.id2Value[t.id]==null)this.id2Value[t.id]=EG(t,e),this.name2Id[t.name]=t.id,o!=null&&(this.id2Mask[t.id]=o);else throw new O(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof yr){if(this.id2Value[t.id]==null)throw new O(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{let e=this.name2Id[t];if(e==null)throw new O(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof yr){if(this.id2Value[t.id]==null)throw new O(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{let e=this.name2Id[t];if(e==null)throw new O(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&It(this.id2Mask)}},Dd=new Zp,Rd=new Zp;function tk(r){Dd?.setMaxEntries(r),Rd?.setMaxEntries(r)}function hl(r,t,e,o){let n=e==null?!1:e.training,s=Array.isArray(r),i=s?r:[r],a=i.map(h=>h.name),l=[],c=t.names();for(let h of a)c.indexOf(h)!==-1?l.push(t.getValue(h)):l.push(null);o!=null&&(o.maxNumTensors=-1/0,o.minNumTensors=1/0);let u=a.join(",")+"|"+t.names().sort().join(","),p=Dd.get(u),m;if(p==null){let h=AG(i,t);p=h.sorted,m=h.recipientCounts,Dd.put(u,p),Rd.put(u,m)}m={},n||Object.assign(m,Rd.get(u));let f=new Cn(t);for(let h=0;h<p.length;++h){if(o!=null){let F=vp().numTensors;F>o.maxNumTensors&&(o.maxNumTensors=F),F<o.minNumTensors&&(o.minNumTensors=F)}let d=p[h],g=d.sourceLayer;if(g instanceof wn)continue;let x=[],b=[],C=[],w=!1;for(let F of d.inputs){let L=f.getValue(F),M=f.getMask(F);x.push(L),b.push(M),M!=null&&(w=!0),n||(m[F.name]--,m[F.name]===0&&!t.hasKey(F)&&a.indexOf(F.name)===-1&&!L.isDisposed&&F.sourceLayer.stateful!==!0&&C.push(L))}w&&(e=e||{},e.mask=b[0]);let v=Ht(g.apply(x,e)),E=null;g.supportsMasking&&(E=g.computeMask(x,b));let A=DG(d),$=Array.isArray(A)?A:[A];for(let F=0;F<$.length;++F){f.hasKey($[F])||f.add($[F],v[F],Array.isArray(E)?E[0]:E);let L=a.indexOf($[F].name);L!==-1&&(l[L]=v[F])}n||It(C)}return f.disposeMasks(),s?l:l[0]}function AG(r,t){y.assert(r!=null&&r.length>0,()=>"Expected at least one fetch, got none");let e=[],o={};if(r.length===1){let n=Q1(r[0],t);e=n.sorted,o=n.recipientMap}else{let n=new Set;for(let s of r){let{sorted:i,recipientMap:a}=Q1(s,t);for(let l of i)n.has(l.name)||(e.push(l),n.add(l.name));for(let l in a)o[l]==null&&(o[l]=new Set),a[l].forEach(c=>o[l].add(c))}}return{sorted:e,recipientCounts:$G(o)}}function $G(r){let t={};for(let e in r)t[e]=r[e].size;return t}function Q1(r,t){let e=new Set,o=[],n={};for(let a of t.names())e.add(a);let s=[],i=[];for(s.push(r);s.length>0;){let a=s[s.length-1];if(e.has(a.name)){s.pop();continue}let l=i[i.length-1]===s.length-1;if(a.inputs.length===0||l)s.pop(),o.push(a),e.add(a.name),l&&i.pop();else{i.push(s.length-1);for(let c of a.inputs)n[c.name]==null&&(n[c.name]=new Set),n[c.name].add(a.name),!e.has(c.name)&&s.push(c)}}return{sorted:o,recipientMap:n}}function DG(r){let t;if(r.sourceLayer.inboundNodes.length===1)t=r.sourceLayer.output;else{let e=null;for(let o=0;o<r.sourceLayer.inboundNodes.length;++o)for(let n of r.sourceLayer.inboundNodes[o].outputTensors)if(n.id===r.id){e=o;break}t=r.sourceLayer.getOutputAt(e)}return t}var RG=P();RG.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,tk);function lw(r,t){return z(()=>Jt(lt(R(r,r),t,!0)))}var dl=class extends H.Serializable{getConfig(){return{}}},um=class extends dl{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return z(()=>{let e=lw(t,this.axis),o=Ze(e,0,this.maxValue);return R(t,nt(o,j(_e(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};um.className="MaxNorm";H.registerClass(um);var pm=class extends dl{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return z(()=>nt(t,j(_e(),lw(t,this.axis))))}getConfig(){return{axis:this.axis}}};pm.className="UnitNorm";H.registerClass(pm);var mm=class extends dl{apply(t){return Kr(t)}};mm.className="NonNeg";H.registerClass(mm);var fm=class extends dl{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return z(()=>{let e=lw(t,this.axis),o=j(R(this.rate,Ze(e,this.minValue,this.maxValue)),R(1-this.rate,e));return R(t,nt(o,j(_e(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};fm.className="MinMaxNorm";H.registerClass(fm);var ek={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function he(r){return nu(r)}function rk(r,t={}){return yn(r,H.SerializationMap.getMap().classNameMap,t,"constraint")}function de(r){if(r==null)return null;if(typeof r=="string"){let e={className:r in ek?ek[r]:r,config:{}};return rk(e)}else return r instanceof dl?r:rk(r)}function Ms(r){return B(this,null,function*(){if(r==null)return;let t=[],e=[],o=[];for(let n in r){let s=r[n];if(typeof s!="number"){let i=s;t.push(i.data()),e.push(n),o.push(i)}}if(t.length>0){let n=yield Promise.all(t);for(let s=0;s<n.length;++s)r[e[s]]=n[s][0];It(o)}})}function _d(r){if(r!=null)for(let t in r){let e=r[t];typeof e!="number"&&e.dispose()}}var ok;(function(r){r[r.SILENT=0]="SILENT",r[r.VERBOSE=1]="VERBOSE"})(ok||(ok={}));var OG=125,ua=class{constructor(){this.validationData=null}setParams(t){this.params=t}onEpochBegin(t,e){return B(this,null,function*(){})}onEpochEnd(t,e){return B(this,null,function*(){})}onBatchBegin(t,e){return B(this,null,function*(){})}onBatchEnd(t,e){return B(this,null,function*(){})}onTrainBegin(t){return B(this,null,function*(){})}onTrainEnd(t){return B(this,null,function*(){})}setModel(t){}},Fd=class{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(let e of this.callbacks)e.setParams(t)}setModel(t){for(let e of this.callbacks)e.setModel(t)}onEpochBegin(t,e){return B(this,null,function*(){e==null&&(e={});for(let o of this.callbacks)yield o.onEpochBegin(t,e)})}onEpochEnd(t,e){return B(this,null,function*(){e==null&&(e={});for(let o of this.callbacks)yield o.onEpochEnd(t,e)})}onBatchBegin(t,e){return B(this,null,function*(){e==null&&(e={});for(let o of this.callbacks)yield o.onBatchBegin(t,e)})}onBatchEnd(t,e){return B(this,null,function*(){e==null&&(e={});for(let o of this.callbacks)yield o.onBatchEnd(t,e)})}onTrainBegin(t){return B(this,null,function*(){t==null&&(t={});for(let e of this.callbacks)yield e.onTrainBegin(t)})}onTrainEnd(t){return B(this,null,function*(){t==null&&(t={});for(let e of this.callbacks)yield e.onTrainEnd(t)})}},cw=class extends ua{constructor(){super()}onEpochBegin(t){return B(this,null,function*(){this.seen=0,this.totals={}})}onBatchEnd(t,e){return B(this,null,function*(){e==null&&(e={});let o=e.size==null?0:e.size;this.seen+=o;for(let n in e){let s=e[n];if(typeof s=="number")this.totals.hasOwnProperty(n)||(this.totals[n]=0),this.totals[n]=this.totals[n]+s*o;else{let i;n in this.totals?i=this.totals[n]:this.totals[n]=0;let a=z(()=>j(this.totals[n],R(s,o)));this.totals[n]=a,i?.dispose()}}})}onEpochEnd(t,e){return B(this,null,function*(){if(e!=null)for(let o of this.params.metrics)this.totals[o]!=null&&(typeof this.totals[o]=="number"?e[o]=this.totals[o]/this.seen:z(()=>{let n=R(nt(1,this.seen),this.totals[o]);e[o]=n,this.totals[o].dispose(),Be(e[o])}))})}},Od=class extends ua{onTrainBegin(t){return B(this,null,function*(){this.epoch=[],this.history={}})}onEpochEnd(t,e){return B(this,null,function*(){e==null&&(e={}),this.epoch.push(t);for(let o in e)this.history[o]==null&&(this.history[o]=[]),this.history[o].push(e[o])})}syncData(){return B(this,null,function*(){let t=[],e=[],o=[];for(let s in this.history){let i=this.history[s];for(let a=0;a<i.length;++a)if(typeof i[a]!="number"){let l=i[a];t.push(l.data()),e.push(s),o.push(a)}}let n=yield Promise.all(t);for(let s=0;s<n.length;++s)this.history[e[s]][o[s]].dispose(),this.history[e[s]][o[s]]=n[s][0]})}},Ld=class extends ua{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||Yp,this.yieldEvery=e||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=OG),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");y.isNumber(this.yieldEvery)&&(this.maybeWait=D1(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}maybeWait(t,e,o){return B(this,null,function*(){let n=[];this.yield!=null&&(yield Ms(o),n.push(this.yield(t,e,o))),n.push(this.nextFrameFunc()),yield Promise.all(n)})}onEpochBegin(t,e){return B(this,null,function*(){this.currentEpoch=t,this.epochBegin!=null&&(yield Ms(e),yield this.epochBegin(t,e))})}onEpochEnd(t,e){return B(this,null,function*(){let o=[];this.epochEnd!=null&&(yield Ms(e),o.push(this.epochEnd(t,e))),this.yieldEvery==="epoch"&&o.push(this.nextFrameFunc()),yield Promise.all(o)})}onBatchBegin(t,e){return B(this,null,function*(){this.batchBegin!=null&&(yield Ms(e),yield this.batchBegin(t,e))})}onBatchEnd(t,e){return B(this,null,function*(){let o=[];this.batchEnd!=null&&(yield Ms(e),o.push(this.batchEnd(t,e))),this.yieldEvery==="batch"?o.push(this.nextFrameFunc()):y.isNumber(this.yieldEvery)&&o.push(this.maybeWait(this.currentEpoch,t,e)),yield Promise.all(o)})}onTrainBegin(t){return B(this,null,function*(){this.trainBegin!=null&&(yield Ms(t),yield this.trainBegin(t))})}onTrainEnd(t){return B(this,null,function*(){this.trainEnd!=null&&(yield Ms(t),yield this.trainEnd(t))})}};function Pd(r,t){return r==null&&(r={}),r instanceof ua?[r]:Array.isArray(r)&&r[0]instanceof ua?r:Ht(r).map(o=>new Ld(o,t))}var hm=class r{constructor(){}static registerCallbackConstructor(t,e){y.assert(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),r.checkForDuplicate(e),r.constructors[t]==null&&(r.constructors[t]=[]),r.constructors[t].push(e)}static checkForDuplicate(t){for(let e in r.constructors)r.constructors[+e].forEach(n=>{if(n===t)throw new O("Duplicate callback constructor.")})}static clear(){r.constructors={}}static createCallbacks(t){let e=[];for(let o in r.constructors){let n=+o;t>=n&&e.push(...r.constructors[n])}return e.map(o=>new o)}};hm.constructors={};function zd(r,t,e,o,n,s,i,a,l){let c=new Od,u=[new cw,...hm.createCallbacks(t)];r!=null&&u.push(...r),u.push(c);let p=new Fd(u);return p.setParams({epochs:e,initialEpoch:o,samples:n,steps:s,batchSize:i,verbose:t,doValidation:a,metrics:l}),{callbackList:p,history:c}}function Xr(r,t={},e=!1){return yn(r,H.SerializationMap.getMap().classNameMap,t,"layer",e)}function dm(r,t){return z(()=>{r.dtype!=="float32"&&(r=Y(r,"float32"));let e=lt(ml(r),t,!0),o=$s(e.shape,_e()),n=Jt(qr(e,o));return nt(r,n)})}function gl(r,t){return z(()=>le(ml(ut(t,r)),-1))}function xm(r,t){return z(()=>le(De(ut(t,r)),-1))}function ym(r,t){return z(()=>{let e=ut(r,t),o=Ze(De(r),_e(),Number.MAX_VALUE),n=De(nt(e,o));return R(100,le(n,-1))})}function LG(r,t){return z(()=>{let e=Ze(t,_e(),Number.MAX_VALUE),o=Sr(j(1,e)),n=Ze(r,_e(),Number.MAX_VALUE),s=Sr(j(1,n));return le(ml(ut(o,s)),-1)})}function PG(r,t){return z(()=>{let e=qr(0,ut(1,R(r,t)));return le(ml(e),-1)})}function zG(r,t){return z(()=>{let e=qr(0,ut(1,R(r,t)));return le(e,-1)})}function BG(r,t){return z(()=>{let e=lt(R(r,t),-1),o=Je(R(ut(1,r),t),-1);return qr(0,j(1,ut(o,e)))})}function MG(r,t){return z(()=>{let e=Math.log(2),o=ut(t,r),n=ut(j(o,dn(R(-2,o))),e);return le(n,-1)})}function xl(r,t,e=!1){return z(()=>{if(e)t=nl(t);else{let o=lt(t,t.shape.length-1,!0);t=nt(t,o)}return t=Ze(t,_e(),1-_e()),Mt(lt(R(Y(r,"float32"),Sr(t)),t.shape.length-1))})}function xu(r,t,e=!1){return z(()=>{let o=Y(_s(G1(r)),"int32");t=Ze(t,_e(),1-_e());let n=t.shape,s=_(Hc(o,n[n.length-1]),n);return xl(s,t,e)})}function VG(r,t){if(!y.arraysEqual(r.shape,t.shape))throw new O(`logits and labels must have the same shape, but got shapes ${JSON.stringify(r.shape)} and ${JSON.stringify(t.shape)}`);return z(()=>{let e=Kr(t),o=Mt(De(t));return j(ut(e,R(t,r)),_p(Ve(o)))})}function yu(r,t){return z(()=>{let e;return e=Ze(t,_e(),1-_e()),e=Sr(nt(e,ut(1,e))),le(VG(r,e),-1)})}function GG(r,t){return z(()=>{let e=Ze(r,_e(),1),o=Ze(t,_e(),1);return lt(R(r,Sr(nt(e,o))),-1)})}function UG(r,t){return z(()=>{let e=Sr(j(_e(),t));return le(ut(t,R(r,e)),-1)})}function Bd(r,t){return z(()=>{let e=dm(r,-1),o=dm(t,-1),n=R(e,o);return Mt(lt(n,-1))})}var gm={meanSquaredError:gl,meanAbsoluteError:xm,meanAbsolutePercentageError:ym,meanSquaredLogarithmicError:LG,squaredHinge:PG,hinge:zG,categoricalHinge:BG,logcosh:MG,categoricalCrossentropy:xl,sparseCategoricalCrossentropy:xu,binaryCrossentropy:yu,kullbackLeiblerDivergence:GG,poisson:UG,cosineProximity:Bd};function Md(r){if(typeof r=="string"){if(r in gm)return gm[r];let t=`Unknown loss ${r}`;throw r.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${r}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new O(t)}else return r}function Gd(r,t){return z(()=>{let e=R(.5,Ge(t)),o=gr(we(t,e),r.dtype);return le(vr(r,o),-1)})}function Ud(r,t){return z(()=>gr(vr(oo(r,-1),oo(t,-1)),"float32"))}function WG(r,t){return z(()=>Y(lt(hr(vr(r,1),vr(t,1))),"float32"))}function HG(r,t){return z(()=>Y(lt(hr(vr(r,0),vr(t,1))),"float32"))}function sk(r,t){return z(()=>{let e=WG(r,t),o=HG(r,t),n=j(e,o);return Y(se(we(n,0),nt(e,n),0),"float32")})}function uw(r,t){return yu(r,t)}function pw(r,t){return r.rank===t.rank&&(r=Go(r,[r.rank-1])),t=oo(t,-1),t.dtype!==r.dtype&&(t=Y(t,r.dtype)),Y(vr(r,t),"float32")}var qG=gl,KG=gl,jG=xm,XG=xm,YG=ym,ZG=ym,Wd=xl,JG=Bd,mw=xu,Vd={binaryAccuracy:Gd,categoricalAccuracy:Ud,precision:sk,categoricalCrossentropy:Wd,sparseCategoricalCrossentropy:mw,mse:qG,MSE:KG,mae:jG,MAE:XG,mape:YG,MAPE:ZG,cosine:JG};function ik(r){if(typeof r=="string"&&r in Vd)return Vd[r];if(typeof r!="string"&&r!=null)return r;throw new O(`Unknown metric ${r}`)}function bm(r){if(co(r!==null,`Unknown LossOrMetricFn ${r}`),typeof r=="string")return r;{let t;for(let e of Object.keys(gm))if(gm[e]===r){t=e;break}if(t!==void 0)return t;for(let e of Object.keys(Vd))if(Vd[e]===r){t=e;break}return t!==void 0?t:r.name}}function lk(r){let t={Adagrad:()=>ul.adagrad(.01),Adadelta:()=>ul.adadelta(1,.95,_e()),Adam:()=>ul.adam(.001,.9,.999,_e()),Adamax:()=>ul.adamax(.002,.9,.999,_e(),0),RMSProp:()=>ul.rmsprop(.001,.9,0,_e()),SGD:()=>ul.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,r in t)return t[r]();throw new O(`Unknown Optimizer ${r}`)}function hw(r,t,e=!1){if(r==null||typeof r!="object"||Object.getPrototypeOf(r)!==Object.prototype||!fw(r))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){let o=JSON.stringify(r);o.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${o.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function fw(r){if(r===null)return!0;if(typeof r=="object")if(Object.getPrototypeOf(r)===Object.prototype){let t=Object.keys(r);for(let e of t)if(typeof e!="string"||!fw(r[e]))return!1;return!0}else if(Array.isArray(r)){for(let t of r)if(!fw(t))return!1;return!0}else return!1;else{let t=typeof r;return t==="string"||t==="number"||t==="boolean"}}function ck(r,t,e,o=console.log){let n=eU(r),s=["Layer (type)","Input Shape","Output shape","Param #"];n?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(u=>Math.floor(t*u)));let i;if(!n){s.push("Receives inputs"),i=[];for(let u in r.nodesByDepth)i.push(...r.nodesByDepth[u])}o("_".repeat(t)),Hd(s,e,o),o("=".repeat(t));let a=r.layers;for(let u=0;u<a.length;++u)n?rU(a[u],e,o):oU(a[u],e,i,o),o((u===a.length-1?"=":"_").repeat(t));r.checkTrainableWeightsConsistency();let l=tU(r),c=du(r.nonTrainableWeights);o(`Total params: ${l+c}`),o(`Trainable params: ${l}`),o(`Non-trainable params: ${c}`),o("_".repeat(t))}function tU(r){let t;return r.collectedTrainableWeights!=null?t=du(r.collectedTrainableWeights):t=du(r.trainableWeights),t}function eU(r){let t=!0,e=[],o=[];for(let n in r.nodesByDepth)e.push(r.nodesByDepth[n]);for(let n of e){if(n.length>1||n.length===1&&n[0].inboundLayers.length>1){t=!1;break}o.push(...n)}if(t)for(let n of r.layers){let s=!1;for(let i of n.inboundNodes)if(o.indexOf(i)!==-1)if(s){t=!1;break}else s=!0;if(!t)break}return t}function Hd(r,t,e=console.log){let o="";for(let n=0;n<r.length;++n)n>0&&(o=o.slice(0,o.length-1)+" "),o+=r[n],o=o.slice(0,t[n]),o+=" ".repeat(t[n]-o.length);e(o)}function rU(r,t,e){let o,n;try{n=r.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{n="multiple"}try{o=JSON.stringify(r.outputShape)}catch{o="multiple"}let s=r.name,i=r.getClassName(),a=[`${s} (${i})`,n,o,r.countParams().toString()];Hd(a,t,e)}function oU(r,t,e,o){let n,s;try{s=r.inboundNodes.map(p=>JSON.stringify(p.inputShapes)).join(",")}catch{s="multiple"}try{n=JSON.stringify(r.outputShape)}catch{n="multiple"}let i=[];for(let p of r.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(p)===-1))for(let m=0;m<p.inboundLayers.length;++m){let f=p.inboundLayers[m].name,h=p.nodeIndices[m],d=p.tensorIndices[m];i.push(`${f}[${h}][${d}]`)}let a=r.name,l=r.getClassName(),c=i.length===0?"":i[0],u=[`${a} (${l})`,s,n,r.countParams().toString(),c];Hd(u,t,o);for(let p=1;p<i.length;++p)Hd(["","","","",i[p]],t,o)}function uk(r,t,e){return(r==="inboundNodes"||r==="outputLayers"||r==="inputLayers")&&t===0&&typeof e=="string"}function wm(r,t){if(r===null)return null;if(typeof r=="string")return Ls(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let e=[],o=r.length;for(let n=0;n<o;++n){let s=r[n];uk(t,n,s)?e.push(s):e.push(wm(s,t))}return e}else{let e={};for(let o of Object.keys(r)){let n=r[o];if(o==="name"&&typeof n=="string")e[o]=n;else{let s=Ls(o);e[s]=wm(n,s)}}return e}}function qd(r,t){if(r==null)return null;if(typeof r=="string")return So(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let e=[],o=r.length;for(let n=0;n<o;++n){let s=r[n];uk(t,n,s)?e.push(s):e.push(qd(s,t))}return e}else{let e={};for(let o of Object.keys(r)){let n=r[o],s=So(o);(o==="name"||o==="className")&&typeof n=="string"?e[s]=n:e[s]=qd(n,o)}return e}}var bu="4.21.0";var nU=r=>{let t=Object.keys(r);if(t.length===0)return!1;let e=t[0].split("/");return!isNaN(parseInt(e[e.length-1],10))},Kd=class r extends vt{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){let b=this.getClassName().toLowerCase();this.name=la(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],Io(this.inputs).length!==this.inputs.length)throw new O(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);Io(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let b of this.outputs){let C=b.sourceLayer,w=b.nodeIndex,v=b.tensorIndex;this.outputLayers.push(C),this.outputLayersNodeIndices.push(w),this.outputLayersTensorIndices.push(v)}for(let b of this.inputs){let C=b.sourceLayer,w=b.nodeIndex,v=b.tensorIndex;co(w===0,"input layer has >1 nodes"),co(v===0,"input layer has >1 tensors"),this.inputLayers.push(C),this.inputLayersNodeIndices.push(w),this.inputLayersTensorIndices.push(v)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){let C=this.inputLayers[b];if(!(C instanceof wn))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${b} (0-based) originates from layer type ${C.getClassName()}.`);this.inputNames.push(C.name),this.feedInputShapes.push(C.batchInputShape),this.feedInputNames.push(C.name)}for(let b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);let e={},o={},n={},s={},i={},a=[],l=(b,C,w,v,E,A)=>{(v==null||E==null||A==null)&&(v=b.sourceLayer,E=b.nodeIndex,A=b.tensorIndex);let $=v.inboundNodes[E];if(w.indexOf($)!==-1)throw new Nr(`The tensor ${b.name} at layer "${v.name}" is part of a cycle.`);if(C.indexOf($)!==-1)return;this.containerNodes.add(r.nodeKey(v,E)),v.id in i||(i[v.id]=Object.keys(i).length),w.indexOf($)===-1&&w.push($);let F=$.inboundLayers.length;for(let L=0;L<F;L++){let M=$.inputTensors[L],V=$.inboundLayers[L],G=$.nodeIndices[L],W=$.tensorIndices[L];l(M,C,w,V,G,W)}for(C.push($);w.indexOf($)>=0;)w.splice(w.indexOf($),1);a.push($)},c=[],u=[];for(let b of this.outputs)l(b,c,u);let p=a.slice().reverse();for(let b of p){o[b.id]=b,b.id in e||(e[b.id]=0);let C=e[b.id],w=n[b.outboundLayer.id]==null?0:n[b.outboundLayer.id];C=Math.max(C,w),n[b.outboundLayer.id]=C,s[b.outboundLayer.id]=b.outboundLayer,e[b.id]=C;for(let v=0;v<b.inboundLayers.length;v++){let E=b.inboundLayers[v],A=b.nodeIndices[v],$=E.inboundNodes[A],F=e[$.id]==null?0:e[$.id];e[$.id]=Math.max(C+1,F),o[$.id]=$}}let m={};for(let b in e){let C=e[b];C in m||(m[C]=[]),m[C].push(o[b])}let f={};for(let b in n){let C=n[b];C in f||(f[C]=[]),f[C].push(s[b])}let h=Object.keys(f).map(b=>parseInt(b,10)).sort(Jp);this.layers=[];for(let b of h){let C=f[b];C.sort((w,v)=>{let E=i[w.id],A=i[v.id];return E<A?-1:E>A?1:0});for(let w of C)w instanceof r&&this.internalContainerRefs.push(w),this.layers.push(w)}this.layersByDepth=f,h=Object.keys(m).map(b=>parseInt(b,10)).sort(Jp);let d=this.inputs.slice(),g=[];for(let b of h)for(let C of m[b]){let w=C.outboundLayer;if(w!=null){for(let v of C.inputTensors)if(d.indexOf(v)===-1)throw new Nr(`Graph disconnected: cannot obtain value for tensor ${v} at layer "${w.name}". The following previous layers were accessed without issue: ${g}`);for(let v of C.outputTensors)d.push(v);g.push(w.name)}}this.nodesByDepth=m;let x=this.layers.map(b=>b.name);for(let b of x){let C=x.filter(w=>w===b).length;if(C!==1)throw new Nr(`The name "${b}" is used ${C} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new Bs({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(let e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(o=>o.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new O("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(let e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){let t=[];for(let e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){let e=[];for(let o of this.layers)e.push(...o.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){let o={},n=0,s=nU(t);s&&this.parseWeights(t);for(let a of this.layers)for(let[l,c]of a.weights.entries()){let u=s?`${c.name.split("/").slice(0,-1).join("/")+"/"}${l}`:c.originalName;if(o[u]!=null)throw new O(`Duplicate weight name: ${u}`);o[u]=c,n++}let i=[];for(let a in t){let l=a;if(o[a]==null){let c=a.split("/");l=c.slice(0,-2).concat([c[c.length-1]]).join("/")}if(o[l]!=null)i.push([o[l],t[a]]);else if(e)throw new O(`Provided weight data has no target variable: ${a}`);delete o[l]}if(e){let a=[];for(let l in o)a.push(l);if(a.length>0)throw new O(`${a.length} of ${n} weights are not set: ${a}`)}gu(i)}parseWeights(t){for(let e in Object.keys(t)){let o=e.split("/"),n=["vars","layer_checkpoint_dependencies"],s=o.map(i=>i.startsWith("_")?i.slice(1):i).filter(i=>!n.includes(i)).join("/");s!==e&&(t[s]=t[e],delete t[e])}}updatedConfig(){let t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${bu}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){let o=qd(this.updatedConfig());return e?JSON.stringify(o):o}call(t,e){return z(()=>{t=Ht(t);let o=new Cn;for(let n=0;n<this.inputs.length;++n)o.add(this.inputs[n],t[n]);return hl(this.outputs,o,e)})}computeMask(t,e){return z(()=>{t=Ht(t);let o;return e==null?o=vo(null,t.length):o=Ht(e),this.runInternalGraph(t,o)[1]})}computeOutputShape(t){let e=hu(t);if(e.length!==this.inputLayers.length)throw new O(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);let o={};for(let a=0;a<e.length;a++){let l=this.inputLayers[a],c=e[a],u=l.name+"_0_0";o[u]=c}let n=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(Jp);if(n.length>1)for(let a of n){let l=this.nodesByDepth[a];for(let c of l){let u=c.outboundLayer;if(this.inputLayers.map(d=>d.id).indexOf(u.id)!==-1)continue;let p=[];for(let d=0;d<c.inboundLayers.length;d++){let g=c.inboundLayers[d],x=c.nodeIndices[d],b=c.tensorIndices[d],C=`${g.name}_${x}_${b}`,w=o[C];p.push(w)}let m=u.computeOutputShape(We(p)),f=hu(m),h=u.inboundNodes.indexOf(c);for(let d=0;d<f.length;d++){let g=`${u.name}_${h}_${d}`;o[g]=f[d]}}}let s=[],i=[];for(let a=0;a<this.outputLayers.length;a++){let l=this.outputLayers[a],c=this.outputLayersNodeIndices[a],u=this.outputLayersTensorIndices[a],p=`${l.name}_${c}_${u}`;i.push(p)}for(let a=0;a<i.length;a++){let l=i[a];co(l in o),s.push(o[l])}return We(s)}runInternalGraph(t,e){e==null&&(e=vo(null,t.length));let o={};for(let l=0;l<this.inputs.length;++l){let c=this.inputs[l],u=t[l],p=e[l];o[c.id]=[u,p]}let n=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Jp);for(let l of n){let c=this.nodesByDepth[l];for(let u of c){let p=u.outboundLayer,m=u.inputTensors,f=u.outputTensors,h=new Array;for(let d of m)d.id in o&&h.push(o[d.id]);if(h.length===m.length){let d={},g,x,b,C;if(u.callArgs!=null&&(d=u.callArgs),h.length===1){let[w,v]=h[0];d.mask==null&&(d.mask=v),b=Ht(p.call(w,d)),C=Ht(p.computeMask(w,v)),g=[w],x=[v]}else g=h.map(w=>w[0]),x=h.map(w=>w[1]),d.mask==null&&(d.mask=x),b=Ht(p.call(g,d)),C=Ht(p.computeMask(g,x));if(p.activityRegularizer)throw new Ct("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let w=0;w<f.length;++w){let v=f[w],E=b[w],A=C[w];o[v.id]=[E,A]}}}}let s=[],i=[],a=[];for(let l of this.outputs){co(l.id in o,`Could not compute output ${l.name} : ${l.id}`);let[c,u]=o[l.id];a.push(c.shape),s.push(c),i.push(u)}return[s,i,a]}buildNodeConversionMap(t){let e={},o;for(let n of this.layers){o=n instanceof r?1:0;for(let s=0;s<n.inboundNodes.length;s++){let i=r.nodeKey(n,s);this.containerNodes.has(i)&&(e[i]=o,o+=1)}}return e}getLayer(t,e){if(e!=null)return this.findLayer(e);if(t==null)throw new O("Provide either a layer name or layer index");if(typeof t=="number")return this.findLayer(t);for(let o of this.layers)if(o.name===t)return o;throw new O(`No such layer: ${t}`)}findLayer(t){if(this.layers.length<=t)throw new O(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}calculateLosses(){return z(()=>{let t=[];for(let e of this.layers)for(let o=0;o<e.inboundNodes.length;++o){let n=r.nodeKey(e,o);this.containerNodes.has(n)&&t.push(...e.calculateLosses())}return t})}getConfig(){let t={name:this.name},e=this.buildNodeConversionMap(this.layers),o=[];for(let i of this.layers){let a=i.getClassName(),l=i.getConfig(),c=[];for(let p=0;p<i.inboundNodes.length;p++){let m=i.inboundNodes[p],f=r.nodeKey(i,p),h={};if(this.containerNodes.has(f)){if(m.callArgs)try{JSON.stringify(m.callArgs),h=m.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${m.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),h={}}if(m.inboundLayers.length>0){let d=[];for(let g=0;g<m.inboundLayers.length;g++){let x=m.inboundLayers[g],b=m.nodeIndices[g],C=m.tensorIndices[g],w=r.nodeKey(x,b),v=e[w];v==null&&(v=0),d.push([x.name,v,C,h])}c.push(d)}}}let u={};u.name=i.name,u.className=a,u.config=l,u.inboundNodes=c,o.push(u)}t.layers=o;let n=[];for(let i=0;i<this.inputLayers.length;i++){let a=this.inputLayers[i],l=this.inputLayersNodeIndices[i],c=r.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=e[c];u==null&&(u=0);let p=this.inputLayersTensorIndices[i];n.push([a.name,u,p])}t.inputLayers=n;let s=[];for(let i=0;i<this.outputLayers.length;i++){let a=this.outputLayers[i],l=this.outputLayersNodeIndices[i],c=r.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=e[c];u==null&&(u=0);let p=this.outputLayersTensorIndices[i];s.push([a.name,u,p])}return t.outputLayers=s,t}static fromConfig(t,e,o={},n=!1){let s={},i={};function a(g,x){g.name in i?i[g.name].push(x):i[g.name]=[x]}function l(g,x){let b=[],C;for(let w of x){let v=w[0],E=w[1],A=w[2];if(C=w[3]==null?{}:w[3],!(v in s)){a(g,x);return}let $=s[v];if($.inboundNodes.length<=E){a(g,x);return}let F=$.inboundNodes[E];b.push(F.outputTensors[A])}b.length>0&&g.apply(We(b),C)}function c(g){let x=g.name,b=Xr(g,e.customObjects!=null?e.customObjects:{});b.setFastWeightInitDuringBuild(n),s[x]=b,g.inboundNodes.forEach(w=>{if(!(w instanceof Array))throw new O(`Corrupted configuration, expected array for nodeData: ${w}`);a(b,w)})}let u=e.name,p=e.layers;for(let g of p)c(g);for(;!A1(i);)for(let g of p){let x=s[g.name];if(x.name in i){let b=i[x.name];delete i[x.name];for(let C of b)l(x,C)}}let m=[],f=[],h=e.inputLayers;for(let g of h){let x=g[0],b=g[1],C=g[2];co(x in s);let v=s[x].inboundNodes[b].outputTensors;m.push(v[C])}let d=e.outputLayers;for(let g of d){let x=g[0],b=g[1],C=g[2];co(x in s);let v=s[x].inboundNodes[b].outputTensors;f.push(v[C])}return new t({inputs:m,outputs:f,name:u})}get stateful(){if(this._stateful)throw new O("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let t of this.layers)if(t.stateful)return!0;return!1}resetStates(){z(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}};function sU(r,t,e){let o=t.length;if(r==null||Array.isArray(r)&&r.length===0)return t.map(n=>null);if(o===1)return Array.isArray(r)&&r.length===1?r:typeof r=="object"&&t[0]in r?[r[t[0]]]:[r];if(Array.isArray(r)){if(r.length!==o)throw new Error(`Provided ${e} is an array of ${r.length} element(s), but the model has ${o} outputs. Make sure a set of weights is provided for each model output.`);return r}else if(typeof r=="object"&&Object.keys(r).length>0&&typeof r[Object.keys(r)[0]]=="object"){let n=[];return t.forEach(s=>{s in r?n.push(r[s]):n.push(null)}),n}else throw new Error(`The model has multiple (${o}) outputs, so ${e} must be either an array with ${o} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(r)}`)}function jd(r,t){return sU(r,t,"classWeight")}function Xd(r,t,e,o){return B(this,null,function*(){if(t!=null||o!=null)throw new Error("Support sampleWeight is not implemented yet");if(e!=null){let n=z(()=>{if(r.shape.length===1)return Ur(r);if(r.shape.length===2){if(r.shape[1]>1)return oo(r,1);if(r.shape[1]===1)return _(r,[r.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${r.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${r.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(yield n.data());It(n);let i=[];return s.forEach(a=>{if(e[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);i.push(e[a])}),Ee(i,"float32")}else return null})}function pk(r,t){return R(r,t)}var iU=32;function hk(r,t){let e,o,n=t;e=n.xs,o=n.ys,y.assert(e!=null&&o!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let s=mk("input",r.inputNames,e),i=mk("output",r.outputNames,o),a=s[0].shape[0];y.assert(s.length===r.inputs.length,()=>`LayersModel has ${r.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(r.inputNames)})`),y.assert(i.length===r.outputs.length,()=>`LayersModel has ${r.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(r.outputNames)})`);for(let l=0;l<s.length;l++)y.assert(s[l].shape[0]===a,()=>`Batch size mismatch: input ${r.inputNames[l]} has ${s[l].shape[0]}; expected  ${a} based on input ${r.inputNames[0]}.`);for(let l=0;l<i.length;l++)y.assert(i[l].shape[0]===a,()=>`Batch size mismatch: output ${r.outputNames[l]} has ${i[l].shape[0]}; expected  ${a} based on input ${r.inputNames[0]}.`);return{xs:s,ys:i}}function mk(r,t,e){if(e instanceof Vt)return[e];if(Array.isArray(e))return y.assert(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${r} keys ${t}.`),e;{let o=[];for(let n of t){if(e[n]==null)throw new O(`The feature data generated by the dataset lacks the required ${r} key '${n}'.`);o.push(e[n])}return o}}function aU(r){if(r.length===3)throw new Ct("Validation with sample weights is not implemented yet.");return{xs:r[0],ys:r[1]}}function dk(r,t,e){return B(this,null,function*(){let o=e.batchesPerEpoch!=null;if(y.assert(r.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),y.assert(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),y.assert(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),y.assert(!o||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),y.assert(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;try{let n=e.validationData!=null,s,i;if(n)if(fk(e.validationData))y.assert(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{let g=aU(e.validationData);s=g.xs,i=g.ys}let a=r.makeTrainFunction(),l=r.getDedupedMetricsNames(),c;n?c=l.slice().concat(l.map(g=>"val_"+g)):c=l.slice();let u=Pd(e.callbacks,e.yieldEvery),p=e.verbose==null?1:e.verbose,{callbackList:m,history:f}=zd(u,p,e.epochs,null,null,lU(t,e),null,n,c);m.setModel(r),r.history=f,yield m.onTrainBegin(),r.stopTraining_=!1;let h=e.initialEpoch==null?0:e.initialEpoch,d=yield t.iterator();for(;h<e.epochs;){let g={};yield m.onEpochBegin(h);let x=0,b=0;for(o||(d=yield t.iterator());!o||x<e.batchesPerEpoch;){let C=yield d.next();if(o&&C.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${x} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(C.value!=null){let{xs:w,ys:v}=hk(r,C.value),E={};E.batch=b,E.size=w[0].shape[0],yield m.onBatchBegin(b,E);let A=[];if(e.classWeight!=null){let L=jd(e.classWeight,r.outputNames);for(let M=0;M<L.length;++M)A.push(yield Xd(v[M],null,L[M]))}let $=w.concat(v).concat(A),F=a($);It($);for(let L=0;L<l.length;++L){let M=l[L],V=F[L];E[M]=V,Be(V)}yield m.onBatchEnd(b,E),_d(E),b++,x++}if(o?x>=e.batchesPerEpoch:C.done){if(n){let w;fk(e.validationData)?w=Ht(yield r.evaluateDataset(e.validationData,{batches:e.validationBatches})):w=Ht(r.evaluate(s,i,{batchSize:e.validationBatchSize==null?iU:e.validationBatchSize,verbose:0}));for(let v=0;v<r.metricsNames.length;++v)g[`val_${r.metricsNames[v]}`]=w[v]}break}if(r.stopTraining_)break}if(yield m.onEpochEnd(h,g),h++,r.stopTraining_)break}return yield m.onTrainEnd(),yield r.history.syncData(),r.history}finally{r.isTraining=!1}})}function lU(r,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(r.size)&&(e=r.size),e}function fk(r){return typeof r.iterator=="function"}function cU(r){return typeof r.next=="function"}function gk(r,t,e){return B(this,null,function*(){e=e||{};let o=e.batches!=null,n=r.testFunction,s=[];if(e.verbose>0)throw new Ct("Verbose mode is not implemented yet.");y.assert(!o||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);let i=cU(t)?t:yield t.iterator(),a=0,l=0;for(;!o||l<e.batches;){let c=yield i.next();if(s=z(()=>{if(c.value){let{xs:u,ys:p}=hk(r,c.value),m=u.concat(p),f=z(()=>n(m));if(It(m),l===0)for(let d=0;d<f.length;++d)s.push(bt(0));let h=m[0].shape[0];for(let d=0;d<f.length;++d){let g=f[d],x=s[d];s[d]=z(()=>j(s[d],R(h,g))),l>0&&It(x)}It(f),a+=h,++l}return s}),c.done){o&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<s.length;++c){let u=s[c];s[c]=nt(s[c],a),It(u)}return We(s)})}function Yd(r){y.assert(r>0&&Number.isInteger(r),()=>`batchSize is required to be a positive integer, but got ${r}`)}function wu(r,t,e){return r==null?[null]:Array.isArray(r)?r.map(o=>Ps(o,t,e-t)):Ps(r,t,e-t)}function Zd(r,t){return z(()=>r==null?null:Array.isArray(r)?r.map(e=>Zd(e,t)):Ed(r,t.dtype==="int32"?t:Y(t,"int32")))}function Jd(r,t){let e=[],o=0,n=null;for(;o<r;)n=o+t,n>=r&&(n=r),e.push([o,n]),o=n;return e}function dw(r){let t=[];r instanceof Vt&&(r=[r]);for(let e=0;e<r.length;++e){let o=r[e];if(o.rank===1)t.push(zs(o,1));else{if(o.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(o)}}return t}function ko(r,t){if(r==null)return;let e=[];if(t instanceof Vt)e.push(t.id);else if(Array.isArray(t))t.forEach(n=>e.push(n.id));else if(t!=null)for(let n in t){let s=t[n];e.push(s.id)}let o=[];if(r instanceof Vt)e.indexOf(r.id)===-1&&o.push(r);else if(Array.isArray(r))r.forEach(n=>{e.indexOf(n.id)===-1&&o.push(n)});else if(r!=null)for(let n in r){let s=r[n];e.indexOf(s.id)===-1&&o.push(s)}o.forEach(n=>{n.isDisposed||n.dispose()})}function uU(r){return r instanceof Vt}function gw(r){return Array.isArray(r)}function xk(r){return!uU(r)&&!gw(r)}function yk(r,t,e,o=!0,n=""){if(t==null||t.length===0){if(r!=null){let i=!1;if(gw(r)&&r.length>0)i=!0;else if(xk(r)){for(let a in r)if(r.hasOwnProperty(a)){i=!0;break}}else i=!0;if(i)throw new O(`Error when checking model ${n} expected no data, but got ${r}`)}return[]}if(r==null)return t.map(i=>null);let s;if(xk(r)){r=r,s=[];for(let i of t){if(r[i]==null)throw new O(`No data provided for "${i}". Need data for each key in: ${t}`);s.push(r[i])}}else if(gw(r)){if(r=r,r.length!==t.length)throw new O(`Error when checking model ${n}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${r}`);s=r}else{if(r=r,t.length>1)throw new O(`The model ${n} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${r.shape}`);s=[r]}if(s=dw(s),e!=null)for(let i=0;i<t.length;++i){if(e[i]==null)continue;let a=s[i];if(a.shape.length!==e[i].length)throw new O(`Error when checking ${n}: expected ${t[i]} to have ${e[i].length} dimension(s). but got array with shape ${a.shape}`);for(let l=0;l<e[i].length;++l){if(l===0&&!o)continue;let c=a.shape[l],u=e[i][l];if(u!=null&&u>=0&&c!==u)throw new O(`${n} expected a batch of elements where each example has shape [${e[i].slice(1,e[i].length)}] (i.e.,tensor shape [*,${e[i].slice(1,e[i].length)}]) but the ${n} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return s}function pU(r,t,e){let o=Io(r.map(s=>s.shape[0]));o.sort();let n=Io(t.map(s=>s.shape[0]));if(n.sort(),o.length>1)throw new O(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(r.map(s=>s.shape))}`);if(n.length>1)throw new O(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(s=>s.shape))}`);if(o.length>0&&n.length>0&&!y.arraysEqual(o,n))throw new O(`Input Tensors should have the same number of samples as target Tensors. Found ${o[0]} input sample(s) and ${n[0]} target sample(s).`)}function mU(r,t,e){let o=[gl,yu,xl];for(let n=0;n<r.length;++n){let s=r[n],i=t[n],a=e[n];if(i!=null){if(i===xl&&s.shape[s.shape.length-1]===1)throw new O(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(o.indexOf(i)!==-1){let l=s.shape.slice(1),c=a.slice(1);for(let u=0;u<l.length;++u){let p=l[u],m=c[u];if(m!=null&&p!==m)throw new O(`A target Tensor with shape ${s.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function bk(r,t,e,o=!0,n=""){let s;if(Array.isArray(r)){if(r.length!==t.length)throw new O(`Error when checking model ${n}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${r.length} Tensors(s).`);s=r}else{if(t.length>1)throw new O(`The model expects ${t.length} ${n} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(r.shape)}.`);s=[r]}if(e!=null)for(let i=0;i<t.length;++i){if(e[i]==null)continue;let a=s[i];if(a.shape.length!==e[i].length)throw new O(`Error when checking ${n}: expected ${t[i]} to have ${e[i].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let l=0;l<e[i].length;++l){if(l===0&&!o)continue;let c=a.shape[l],u=e[i][l];if(u!=null&&u!==c)throw new O(`Error when checking ${n}: expected ${t[i]} to have shape ${JSON.stringify(e[i])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function fU(r,t){if(r==null||Array.isArray(r)&&r.length===0)return t.map(o=>[]);let e;if(typeof r=="string"||typeof r=="function")e=[r];else if(Array.isArray(r)||typeof r=="object")e=r;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${r}`);if(Array.isArray(e))return t.map(o=>e);{let o=[];for(let n of t){let s=e.hasOwnProperty(n)?e[n]:[];Array.isArray(s)||(s=[s]),o.push(s)}return o}}var hU="layers-model",Eo=class extends Kd{constructor(t){super(t),this.isTraining=!1}summary(t,e,o=console.log){if(!this.built)throw new O("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");ck(this,t,e,o)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=lk(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof ir))throw new O("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(let i in t.loss)if(this.outputNames.indexOf(i)===-1)throw new O(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(let i of this.outputNames)t.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),e.push(Md(t.loss[i]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new O(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);e=t.loss.map(a=>Md(a))}else{let i=Md(t.loss);this.outputs.forEach(a=>{e.push(i)})}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){let a=this.internalOutputShapes[i],l=this.outputNames[i];this.feedOutputNames.push(l),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[i])}let o=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ho("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(o.indexOf(i)!==-1)continue;let a=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([a,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});let n=fU(t.metrics,this.outputNames),s=(i,a,l)=>{this.outputNames.length>1&&(a=this.outputNames[i]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([l,i])};Ho("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(o.indexOf(i)!==-1)continue;let a=n[i];(c=>{let u="",p,m,f;for(let h of c){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){let g=this.internalOutputShapes[i];g[g.length-1]===1||this.lossFunctions[i]===yu?["accuracy","acc"].indexOf(h)!==-1?m=Gd:["crossentropy","ce"].indexOf(h)!==-1&&(m=uw):this.lossFunctions[i]===xu?["accuracy","acc"].indexOf(h)!==-1?m=pw:["crossentropy","ce"].indexOf(h)!==-1&&(m=mw):["accuracy","acc"].indexOf(h)!==-1?m=Ud:["crossentropy","ce"].indexOf(h)!==-1&&(m=Wd);let x;["accuracy","acc"].indexOf(h)!==-1?x="acc":["crossentropy","ce"].indexOf(h)!==-1&&(x="ce"),f=m,p=u+x}else f=ik(h),p=u+bm(h);let d;Ho(p,()=>{d=f}),s(i,p,d)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,o={}){let n=o.batchSize==null?32:o.batchSize;Yd(n);let i=this.standardizeUserDataXY(t,e,!0,n);try{let a=i[0].concat(i[1]);this.makeTestFunction();let l=this.testFunction,c=this.testLoop(l,a,n,o.verbose,o.steps);return We(c)}finally{ko(i[0],t),ko(i[1],e)}}evaluateDataset(t,e){return B(this,null,function*(){return this.makeTestFunction(),gk(this,t,e)})}checkNumSamples(t,e,o,n="steps"){let s;if(o!=null){if(s=null,e!=null)throw new O(`If ${n} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else if(t!=null)Array.isArray(t)?s=t[0].shape[0]:s=t.shape[0];else throw new O(`Either the input data should have a defined shape, or ${n} shoud be specified.`);return s}execute(t,e){if(Array.isArray(e)&&e.length===0)throw new O("`outputs` is an empty Array, which is not allowed.");let o=Array.isArray(e),n=o?e:[e],s=this.retrieveSymbolicTensors(n),i=new Cn;if(t instanceof Vt&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new O(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)i.add(this.inputs[l],t[l])}else for(let l of this.inputs){let c=t[l.name];if(c==null)throw new O(`No value is provided for the model's input ${l.name}`);i.add(l,c)}let a=hl(s,i);return o?a:a[0]}retrieveSymbolicTensors(t){let e=vo(null,t.length),o=t.length;for(let n of this.layers){let s=Array.isArray(n.output)?n.output:[n.output],i=s.map(a=>a.name);for(let a=0;a<t.length;++a){let l=i.indexOf(t[a]);if(l!==-1&&(e[a]=s[l],o--),o===0)break}if(o===0)break}if(o>0){let n=[];throw e.forEach((s,i)=>{s==null&&n.push(t[i])}),new O(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(t,e=32,o=!1){return z(()=>{let n=this.checkNumSamples(t);if(o)throw new Ct("Verbose predictLoop() is not implemented yet.");let s=Jd(n,e),i=this.outputs.map(a=>[]);for(let a=0;a<s.length;++a)z(()=>{let c=s[a][0],u=s[a][1],p=wu(t,c,u),m=[];if(Array.isArray(p))for(let h=0;h<p.length;++h)m.push({key:this.inputs[h],value:p[h]});else m.push({key:this.inputs[0],value:p});let f=new Cn(m);return hl(this.outputs,f)}).forEach((c,u)=>i[u].push(c));return We(i.map(a=>ne(a,0)))})}predict(t,e={}){let o=dw(t);bk(o,this.inputNames,this.feedInputShapes,!1);try{let n=e.batchSize==null?32:e.batchSize;return Yd(n),this.predictLoop(o,n)}finally{ko(o,t)}}predictOnBatch(t){bk(t,this.inputNames,this.feedInputShapes,!0);let e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,o=!0,n){if(this.optimizer_==null)throw new Nr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let s=[];for(let i=0;i<this.feedOutputShapes.length;++i){let a=this.feedOutputShapes[i];this.feedLossFns[i]===xu?s.push(a.slice(0,a.length-1).concat([1])):s.push(a)}if(t=yk(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=yk(e,this.feedOutputNames,s,!1,"target"),pU(t,e,null),mU(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&n!=null&&n>0&&t[0].shape[0]%n!==0)throw new O(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${n}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}standardizeUserData(t,e,o,n,s=!0,i){return B(this,null,function*(){let[a,l]=this.standardizeUserDataXY(t,e,s,i);if(o!=null)throw new Error("sample weight is not supported yet.");let c=null;if(n!=null){let u=jd(n,this.outputNames);c=[];for(let p=0;p<u.length;++p)c.push(yield Xd(l[p],null,u[p]))}return[a,l,c]})}testLoop(t,e,o,n=0,s){return z(()=>{let i=this.checkNumSamples(e,o,s,"steps"),a=[];if(n>0)throw new Ct("Verbose mode is not implemented yet.");if(s!=null)throw new Ct("steps mode in testLoop() is not implemented yet");{let l=Jd(i,o),c=Ee(kr(0,i));for(let u=0;u<l.length;++u){let p=l[u][0],m=l[u][1],f=Ps(c,p,m-p),h=Zd(e,f),d=t(h);if(u===0)for(let g=0;g<d.length;++g)a.push(bt(0));for(let g=0;g<d.length;++g){let x=d[g];a[g]=j(a[g],R(m-p,x))}}for(let u=0;u<a.length;++u)a[u]=nt(a[u],i)}return a})}getDedupedMetricsNames(){let t=this.metricsNames,e=[];for(let o=0;o<t.length;++o){let n=t[o],s=n;if(tw(t,n)>1){let i=tw(t.slice(0,o),n);s+=`_${i}`}e.push(s)}return e}makeTrainFunction(){return t=>{let e=[],o=t.slice(0,this.inputs.length),n=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],a=()=>{let p=[];for(let d=0;d<this.inputs.length;++d)p.push({key:this.inputs[d],value:o[d]});let m=new Cn(p),f=hl(this.outputs,m,{training:!0}),h;for(let d=0;d<this.lossFunctions.length;++d){let g=this.lossFunctions[d],x=g(n[d],f[d]);s[d]!=null&&(x=pk(x,s[d]));let b=le(x);e.push(b),d===0?h=x:h=j(h,x)}for(let d=0;d<this.metricsTensors.length;++d){let g;if(this.outputs.length>1&&d<this.outputs.length)g=e[d];else{let x=this.metricsTensors[d][0],b=this.metricsTensors[d][1];g=le(x(n[b],f[b]))}Be(g),i.push(g)}return h=le(h),this.calculateLosses().forEach(d=>{h=j(h,d)}),h},l=this.collectedTrainableWeights.map(p=>p.read());return[this.optimizer_.minimize(a,!0,l)].concat(i)}}makeTestFunction(){this.testFunction=t=>z(()=>{let e=[],o,n=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let c=0;c<this.inputs.length;++c)i.push({key:this.inputs[c],value:n[c]});let a=new Cn(i),l=hl(this.outputs,a);for(let c=0;c<this.lossFunctions.length;++c){let u=this.lossFunctions[c],p=le(u(s[c],l[c]));c===0?o=p:o=j(o,p),e.push(o)}for(let c=0;c<this.metricsTensors.length;++c){let u=this.metricsTensors[c][0],p=this.metricsTensors[c][1],m=le(u(s[p],l[p]));e.push(m)}return e})}fit(n,s){return B(this,arguments,function*(t,e,o={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let i,a,l,c,u,p,m,f,h;try{let d=o.batchSize==null?32:o.batchSize;Yd(d);let x=yield this.standardizeUserData(t,e,o.sampleWeight,o.classWeight,!1,d);i=x[0],a=x[1],h=x[2];let b=!1,C;if(o.validationData!=null&&o.validationData.length>0){if(b=!0,o.validationData.length===2)u=o.validationData[0],p=o.validationData[1];else throw o.validationData.length===3?new Ct("validationData including sample weights is not supported yet."):new O(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${o.validationData} is invalid.`);let V=yield this.standardizeUserData(u,p,null,null,!0,d);m=V[0],f=V[1],C=m.concat(f)}else if(o.validationSplit!=null&&o.validationSplit>0&&o.validationSplit<1){b=!0;let M=Math.floor(i[0].shape[0]*(1-o.validationSplit)),V=i[0].shape[0];m=wu(i,M,V),l=i,i=wu(i,0,M),f=wu(a,M,V),c=a,a=wu(a,0,M),C=m.concat(f)}else o.validationSteps!=null&&(b=!0);let w=i.concat(a).concat(h);this.checkTrainableWeightsConsistency();let v=this.makeTrainFunction(),E=this.getDedupedMetricsNames(),A,$;b?(this.makeTestFunction(),A=this.testFunction,$=E.slice().concat(E.map(M=>"val_"+M))):(A=null,C=[],$=E.slice());let F=Pd(o.callbacks,o.yieldEvery);return yield this.fitLoop(v,w,E,d,o.epochs,o.verbose,F,A,C,o.shuffle,$,o.initialEpoch,null,null)}finally{this.isTraining=!1,ko(i,t),ko(a,e),ko(l,t),ko(c,e),ko(m,u),ko(f,p),h!=null&&It(h)}})}fitLoop(t,e,o,n,s,i,a,l,c,u,p,m,f,h){return B(this,null,function*(){n==null&&(n=32),s==null&&(s=1),u==null&&(u=!0),m==null&&(m=0);let d=!1;if(l!=null&&c!=null&&(d=!0),h!=null&&(d=!0,f==null))throw new O("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=this.checkNumSamples(e,n,f,"steps_per_epoch"),x;g!=null&&(x=kr(0,g)),i==null&&(i=1);let{callbackList:b,history:C}=zd(a,i,s,m,g,f,n,d,p);b.setModel(this),this.history=C,yield b.onTrainBegin(),this.stopTraining_=!1;for(let w=m;w<s;++w){yield b.onEpochBegin(w);let v={};if(f!=null)throw new Ct("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new Ct("batch shuffling is not implemneted yet");u&&y.shuffle(x);let E=Ee(x),A=Jd(g,n);for(let $=0;$<A.length;++$){let F={};if(yield b.onBatchBegin($,F),z(()=>{let L=A[$][0],M=A[$][1],V=Ps(E,L,M-L);F.batch=$,F.size=M-L;let G=Zd(e,V),W=t(G);for(let U=0;U<o.length;++U){let K=o[U],J=W[U];F[K]=J,Be(J)}if($===A.length-1&&d){let U=this.testLoop(l,c,n);for(let K=0;K<o.length;++K){let J=o[K],q=U[K];Be(q),v["val_"+J]=q}}}),yield b.onBatchEnd($,F),_d(F),this.stopTraining_)break}E.dispose()}if(yield b.onEpochEnd(w,v),this.stopTraining_)break}return yield b.onTrainEnd(),yield this.history.syncData(),this.history})}fitDataset(t,e){return B(this,null,function*(){return dk(this,t,e)})}trainOnBatch(t,e){return B(this,null,function*(){let o=yield this.standardizeUserData(t,e),n=o[0],s=o[1],a=this.makeTrainFunction()(n.concat(s)),l=[];for(let c of a){let u=yield c.data();l.push(u[0])}return It(a),ko(o[0],t),ko(o[1],e),We(l)})}getNamedWeights(t){let e=[],o=t!=null&&t.trainableOnly,n=o?this.trainableWeights:this.weights,s=this.getWeights(o);for(let i=0;i<n.length;++i)o&&!n[i].trainable||e.push({name:n[i].originalName,tensor:s[i]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){let t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let e=vp().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-vp().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=So(this.loss);else if(Array.isArray(this.loss)){for(let e of this.loss)if(typeof e!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(e=>So(e))}else{let e=Object.keys(this.loss);t={};let o=this.loss;for(let n of e)if(typeof o[n]=="string")t[n]=So(o[n]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[So(bm(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>So(bm(t)));{let t={};for(let e in this.metrics)t[e]=So(bm(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let e=wm(t.optimizer_config),o=Xr(e),n;if(typeof t.loss=="string")n=Ls(t.loss);else if(Array.isArray(t.loss))n=t.loss.map(i=>Ls(i));else if(t.loss!=null){n={};for(let i in t.loss)n[i]=Ls(t.loss[i])}let s;if(Array.isArray(t.metrics))s=t.metrics.map(i=>Ls(i));else if(t.metrics!=null){s={};for(let i in t.metrics)s[i]=Ls(t.metrics[i])}this.compile({loss:n,metrics:s,optimizer:o})}save(t,e){return B(this,null,function*(){if(typeof t=="string"){let c=Os.getSaveHandlers(t);if(c.length===0)throw new O(`Cannot find any save handlers for URL '${t}'`);if(c.length>1)throw new O(`Found more than one (${c.length}) save handlers for URL '${t}'`);t=c[0]}if(t.save==null)throw new O("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let o=yield Os.encodeWeights(this.getNamedWeights(e)),a={modelTopology:this.toJSON(null,!1),format:hU,generatedBy:`TensorFlow.js tfjs-layers v${bu}`,convertedBy:null};if((e==null?!1:e.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();let c="optimizer",{data:u,specs:p}=yield Os.encodeWeights(yield this.optimizer.getWeights(),c);o.specs.push(...p),o.data=Os.concatenateArrayBuffers([o.data,u])}return this.userDefinedMetadata!=null&&(hw(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=o.data,a.weightSpecs=o.specs,t.save(a)})}setUserDefinedMetadata(t){hw(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}};Eo.className="Model";H.registerClass(Eo);var Qd=class extends Eo{};Qd.className="Functional";H.registerClass(Qd);var Cu=class r extends Eo{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:la("sequential_"),t.layers!=null)for(let e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(o=>o<0))throw new O(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){let e=t instanceof r||t instanceof Eo,o;if(e){if(o=t,o.outputs.length!==1)throw new O("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(o.inputs.length!==1)throw new O("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new O("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let n=aw({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(n)}if(e)this.outputs=o.outputs,this.inputs=o.inputs;else{if(t.inboundNodes.length!==1)throw new O(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new O("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=iw(this.outputs[0])}this.inboundNodes=[],new Bs({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:vo(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(n=>n.shape),outputShapes:this.outputs[0].shape})}else{let n=t.apply(this.outputs[0]);if(Array.isArray(n))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[n],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return this.model==null&&this.build(),this.model.call(t,e)}build(t){if(Dt(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Eo({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,o=console.log){this.built||this.build(),super.summary(t,e,o)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,e,o={}){if(!this.built)throw new Nr("The model needs to be compiled before being used.");return this.model.evaluate(t,e,o)}evaluateDataset(t,e){return B(this,null,function*(){if(!this.built)throw new Nr("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)})}predict(t,e={}){return this.model==null&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}fit(n,s){return B(this,arguments,function*(t,e,o={}){if(!this.built)throw new Nr("The model needs to be compiled before being used.");return this.model.fit(t,e,o)})}fitDataset(t,e){return B(this,null,function*(){if(!this.built)throw new Nr("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)})}trainOnBatch(t,e){return B(this,null,function*(){return this.model.trainOnBatch(t,e)})}static fromConfig(t,e,o={},n=!1){let s,i={};if(e instanceof Array){if(e[0].className==null||e[0].className==="Merge")throw new O("Legacy serialization format not supported yet.");s=e}else y.assert(e.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=e.layers,delete e.layers,i=e;let a=new t(i);if(!(a instanceof r))throw new Ct(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(let l of s){let u=Xr(l,void 0,n);n&&u.setFastWeightInitDuringBuild(!0),a.add(u)}return a}set stopTraining(t){if(this.model==null)throw new O("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new O("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let t=[];for(let e of this.layers){let o={};o.className=e.getClassName(),o.config=e.getConfig(),t.push(o)}return{name:this.name,layers:t}}};Cu.className="Sequential";H.registerClass(Cu);var Qe=class extends H.Serializable{getConfig(){return{}}},tg=class extends Qe{apply(t,e=1){return W1(t,e)}};tg.className="elu";H.registerClass(tg);var eg=class extends Qe{apply(t){return Bp(t)}};eg.className="selu";H.registerClass(eg);var rg=class extends Qe{apply(t){return Kr(t)}};rg.className="relu";H.registerClass(rg);var og=class extends Qe{apply(t){return z(()=>gn(6,Kr(t)))}};og.className="relu6";H.registerClass(og);var ng=class extends Qe{apply(t){return t}};ng.className="linear";H.registerClass(ng);var sg=class extends Qe{apply(t){return yo(t)}};sg.className="sigmoid";H.registerClass(sg);var ig=class extends Qe{apply(t){return q1(t)}};ig.className="hardSigmoid";H.registerClass(ig);var ag=class extends Qe{apply(t){return dn(t)}};ag.className="softplus";H.registerClass(ag);var lg=class extends Qe{apply(t){return H1(t)}};lg.className="softsign";H.registerClass(lg);var cg=class extends Qe{apply(t){return ja(t)}};cg.className="tanh";H.registerClass(cg);var vu=class extends Qe{apply(t,e=-1){return nl(t,e)}};vu.className="softmax";H.registerClass(vu);var ug=class extends Qe{apply(t,e=-1){return Fp(t,e)}};ug.className="logSoftmax";H.registerClass(ug);var pg=class extends Qe{apply(t){return z(()=>z(()=>{let e=Math.sqrt(2),o=R(.5,j(1,Dp(nt(t,e))));return R(t,o)}))}};pg.className="gelu";H.registerClass(pg);var mg=class extends Qe{apply(t){return z(()=>R(.5,R(t,j(1,ja(R(Jt(nt(2,Math.PI)),j(t,R(.044715,Rr(t,3)))))))))}};mg.className="gelu_new";H.registerClass(mg);var fg=class extends Qe{apply(t){return z(()=>R(t,ja(dn(t))))}};fg.className="mish";H.registerClass(fg);var hg=class extends Qe{apply(t,e=1){return z(()=>R(yo(R(t,e)),t))}};hg.className="swish";H.registerClass(hg);function Ko(r){return r.getClassName()}function xw(r,t={}){return yn(r,H.SerializationMap.getMap().classNameMap,t,"activation")}function jo(r){if(r==null){let t={};return t.className="linear",t.config={},xw(t)}if(typeof r=="string"){let t={};return t.className=r,t.config={},xw(t)}else return r instanceof Qe?r:xw(r)}function gU(r){if(r!=null&&typeof r!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${r}`)}var dg=class extends H.Serializable{},Cm=class extends dg{constructor(t){super(),gU(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return z(()=>{let e=ie([1]);return this.hasL1&&(e=j(e,lt(R(this.l1,De(t))))),this.hasL2&&(e=j(e,lt(R(this.l2,ml(t))))),_(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}};Cm.className="L1L2";H.registerClass(Cm);var wk={l1l2:"L1L2"};function Kt(r){return nu(r)}function Ck(r,t={}){return yn(r,H.SerializationMap.getMap().classNameMap,t,"regularizer")}function te(r){if(r==null)return null;if(typeof r=="string"){let e={className:r in wk?wk[r]:r,config:{}};return Ck(e)}else return r instanceof dg?r:Ck(r)}var vm=class extends vt{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,e){t=xt(t);let o=Kr(t);return this.maxValue!=null&&(o=Ze(o,0,this.maxValue)),o}computeOutputShape(t){return t}getConfig(){let t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}};vm.className="ReLU";H.registerClass(vm);var Sm=class extends vt{constructor(t){super(t??{}),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){let o=xt(t);return Za(o,this.alpha)}computeOutputShape(t){return t}getConfig(){let t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}};Sm.className="LeakyReLU";H.registerClass(Sm);var Im=class extends vt{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Yt(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=te(t.alphaRegularizer),this.alphaConstraint=de(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new O(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=Dt(t);let e=t.slice(1);if(this.sharedAxes!=null)for(let n of this.sharedAxes)e[n-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let o={};if(this.sharedAxes!=null)for(let n=1;n<t.length;++n)o[n]=t[n];this.inputSpec=[new Qt({ndim:t.length,axes:o})],this.built=!0}call(t,e){return t=xt(t),el(t,this.alpha.read())}getConfig(){let t={alphaInitializer:re(this.alphaInitializer),alphaRegularizer:Kt(this.alphaRegularizer),alphaConstraint:he(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}};Im.className="PReLU";H.registerClass(Im);var Nm=class extends vt{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new Ct(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){let o=xt(t);return Rs(o)}computeOutputShape(t){return t}getConfig(){let t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}};Nm.className="ELU";H.registerClass(Nm);var Tm=class extends vt{constructor(t){super(t??{}),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,e){let o=xt(t);return R(o,Y(we(o,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){let t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}};Tm.className="ThresholdedReLU";H.registerClass(Tm);var km=class extends vt{constructor(t){super(t??{}),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new vu().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,e){return z(()=>{let o=xt(t),n=e.mask;if(n!=null){let s=R(ut(Ir(o.shape),Y(n,o.dtype)),bt(-1e9));o=j(o,s)}return this.axis instanceof Array?this.axis.length>1?Ve(ut(o,Op(o,this.axis,!0))):this.softmax(o,this.axis[0]):this.softmax(o,this.axis)})}computeOutputShape(t){return t}getConfig(){let t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}};km.className="Softmax";H.registerClass(km);function pa(r,t,e){if(typeof r=="number")return vo(r,t);if(r.length!==t)throw new O(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${r.length} elements.`);for(let o=0;o<t;++o){let n=r[o];if(!M1(n))throw new O(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(r)} including a non-integer number ${n}`)}return r}function Fr(r,t,e,o,n=1){if(r==null)return r;let s=t+(t-1)*(n-1),i;return e==="same"?i=r:i=r-s+1,Math.floor((i+o-1)/o)}function Xo(r,t,e,o){if(r==null)return null;if(o==="valid")r=r*t+qo([e-t,0]);else if(o==="same")r=r*t;else throw new O(`Unsupport padding mode: ${o}.`);return r}function Om(r,t){return z(()=>(ce(t),t==="channelsFirst"?Rt(r,[0,2,3,1]):r))}function yw(r,t){return z(()=>(ce(t),t==="channelsFirst"?Rt(r,[0,2,3,4,1]):r))}function yU(r,t,e,o=1,n="valid",s,i=1){return z(()=>{if(s==null&&(s=Er()),ce(s),r.shape.length!==3)throw new O(`The input of a conv1dWithBias operation should be 3, but is ${r.shape.length} instead.`);if(t.shape.length!==3)throw new O(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new O(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(s==="channelsFirst"&&(r=Rt(r,[0,2,1])),n==="causal")throw new Ct("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=kp(r,t,o,n==="same"?"same":"valid","NWC",i);return e!=null&&(a=Ar(a,e)),a})}function vk(r,t,e,o=[1,1],n="valid",s,i,a=null){return z(()=>{if(s==null&&(s=Er()),ce(s),r.rank!==3&&r.rank!==4)throw new O(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${r.rank}.`);if(t.rank!==3&&t.rank!==4)throw new O(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${r.rank}.`);let l=Om(r,s);if(n==="causal")throw new Ct("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=cl.conv2d({x:l,filter:t,strides:o,pad:n==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:e,activation:a}),s==="channelsFirst"&&(l=Rt(l,[0,3,1,2])),l})}function bU(r,t,e,o=[1,1,1],n="valid",s,i){return z(()=>{if(s==null&&(s=Er()),ce(s),r.rank!==4&&r.rank!==5)throw new O(`conv3dWithBias expects input to be of rank 4 or 5, but received ${r.rank}.`);if(t.rank!==4&&t.rank!==5)throw new O(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${r.rank}.`);let a=yw(r,s);if(n==="causal")throw new Ct("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=a0(a,t,o,n==="same"?"same":"valid","NDHWC",i),e!=null&&(a=Ar(a,e)),s==="channelsFirst"&&(a=Rt(a,[0,4,1,2,3])),a})}var Em=class r extends vt{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",r.verifyArgs(e),this.rank=t,Se(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Ct(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=pa(e.kernelSize,t,"kernelSize"),this.strides=pa(e.strides==null?1:e.strides,t,"strides"),this.padding=e.padding==null?"valid":e.padding,Tr(this.padding),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,ce(this.dataFormat),this.activation=jo(e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.biasInitializer=Yt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=de(e.biasConstraint),this.biasRegularizer=te(e.biasRegularizer),this.activityRegularizer=te(e.activityRegularizer),this.dilationRate=pa(e.dilationRate==null?1:e.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new O(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new O(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new O(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(co("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!wd(t.kernelSize,"number",1,3))throw new O(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){let t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Ko(this.activation),useBias:this.useBias,biasInitializer:re(this.biasInitializer),biasRegularizer:Kt(this.biasRegularizer),activityRegularizer:Kt(this.activityRegularizer),biasConstraint:he(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}},Su=class r extends Em{constructor(t,e){super(t,e),this.kernel=null,r.verifyArgs(e),this.filters=e.filters,Se(this.filters,"filters"),this.kernelInitializer=Yt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=de(e.kernelConstraint),this.kernelRegularizer=te(e.kernelRegularizer)}build(t){t=Dt(t);let e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new O(`The channel dimension of the input should be defined. Found ${t[e]}`);let o=t[e],n=this.kernelSize.concat([o,this.filters]);this.kernel=this.addWeight("kernel",n,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:o}}],this.built=!0}call(t,e){return z(()=>{t=xt(t);let o,n=this.bias==null?null:this.bias.read(),s=Cd(this.activation.getClassName());if(s!=null&&this.rank===2)o=vk(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)o=yU(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)o=vk(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)o=bU(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Ct("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(o=this.activation.apply(o))}return o})}computeOutputShape(t){t=Dt(t);let e=[],o=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let s=0;s<o.length;++s){let i=Fr(o[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);e.push(i)}let n=[t[0]];return this.dataFormat==="channelsLast"?(n=n.concat(e),n.push(this.filters)):(n.push(this.filters),n=n.concat(e)),n}getConfig(){let t={filters:this.filters,kernelInitializer:re(this.kernelInitializer),kernelRegularizer:Kt(this.kernelRegularizer),kernelConstraint:he(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new O(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}},Iu=class r extends Su{constructor(t){super(2,t),r.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!wd(t.kernelSize,"number",1,2))throw new O(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}};Iu.className="Conv2D";H.registerClass(Iu);var Nu=class r extends Su{constructor(t){super(3,t),r.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new O(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}};Nu.className="Conv3D";H.registerClass(Nu);var Am=class extends Iu{constructor(t){if(super(t),this.inputSpec=[new Qt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new O(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Dt(t),t.length!==4)throw new O("Input should have rank 4; Received input shape: "+JSON.stringify(t));let e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new O("The channel dimension of the inputs should be defined. Found `None`.");let o=t[e],n=this.kernelSize.concat([this.filters,o]);this.kernel=this.addWeight("kernel",n,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Qt({ndim:4,axes:{[e]:o}})],this.built=!0}call(t,e){return z(()=>{let o=xt(t);if(o.shape.length!==4)throw new O(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${o.shape.length}`);let n=o.shape,s=n[0],i,a;this.dataFormat==="channelsFirst"?(i=2,a=3):(i=1,a=2);let l=n[i],c=n[a],u=this.kernelSize[0],p=this.kernelSize[1],m=this.strides[0],f=this.strides[1],h=Xo(l,m,u,this.padding),d=Xo(c,f,p,this.padding),g=[s,h,d,this.filters];this.dataFormat!=="channelsLast"&&(o=Rt(o,[0,2,3,1]));let x=Ep(o,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(x=Rt(x,[0,3,1,2])),this.bias!=null&&(x=Ar(x,this.bias.read(),this.dataFormat)),this.activation!=null&&(x=this.activation.apply(x)),x})}computeOutputShape(t){t=Dt(t);let e=t.slice(),o,n,s;this.dataFormat==="channelsFirst"?(o=1,n=2,s=3):(o=3,n=1,s=2);let i=this.kernelSize[0],a=this.kernelSize[1],l=this.strides[0],c=this.strides[1];return e[o]=this.filters,e[n]=Xo(e[n],l,i,this.padding),e[s]=Xo(e[s],c,a,this.padding),e}getConfig(){let t=super.getConfig();return delete t.dilationRate,t}};Am.className="Conv2DTranspose";H.registerClass(Am);var $m=class extends Nu{constructor(t){if(super(t),this.inputSpec=[new Qt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new O(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Dt(t),t.length!==5)throw new O("Input should have rank 5; Received input shape: "+JSON.stringify(t));let e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new O("The channel dimension of the inputs should be defined. Found `None`.");let o=t[e],n=this.kernelSize.concat([this.filters,o]);this.kernel=this.addWeight("kernel",n,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Qt({ndim:5,axes:{[e]:o}})],this.built=!0}call(t,e){return z(()=>{let o=xt(t);if(o.shape.length!==5)throw new O(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${o.shape.length}`);let n=o.shape,s=n[0],i,a,l;this.dataFormat==="channelsFirst"?(l=2,i=3,a=4):(l=1,i=2,a=3);let c=n[l],u=n[i],p=n[a],m=this.kernelSize[0],f=this.kernelSize[1],h=this.kernelSize[2],d=this.strides[0],g=this.strides[1],x=this.strides[2],b=Xo(c,d,m,this.padding),C=Xo(u,g,f,this.padding),w=Xo(p,x,h,this.padding),v=[s,b,C,w,this.filters];this.dataFormat!=="channelsLast"&&(o=Rt(o,[0,2,3,4,1]));let E=l0(o,this.kernel.read(),v,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(E=Rt(E,[0,4,1,2,3])),this.bias!==null&&(E=Ar(E,this.bias.read(),this.dataFormat)),this.activation!==null&&(E=this.activation.apply(E)),E})}computeOutputShape(t){t=Dt(t);let e=t.slice(),o,n,s,i;this.dataFormat==="channelsFirst"?(o=1,n=2,s=3,i=4):(o=4,n=1,s=2,i=3);let a=this.kernelSize[0],l=this.kernelSize[1],c=this.kernelSize[2],u=this.strides[0],p=this.strides[1],m=this.strides[2];return e[o]=this.filters,e[n]=Xo(e[n],u,a,this.padding),e[s]=Xo(e[s],p,l,this.padding),e[i]=Xo(e[i],m,c,this.padding),e}getConfig(){let t=super.getConfig();return delete t.dilationRate,t}};$m.className="Conv3DTranspose";H.registerClass($m);var gg=class extends Su{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,e.filters==null)throw new O("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(e.kernelInitializer!=null||e.kernelRegularizer!=null||e.kernelConstraint!=null)throw new O("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(e.padding!=null&&e.padding!=="same"&&e.padding!=="valid")throw new O(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Yt(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=te(e.depthwiseRegularizer),this.depthwiseConstraint=de(e.depthwiseConstraint),this.pointwiseInitializer=Yt(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=te(e.pointwiseRegularizer),this.pointwiseConstraint=de(e.pointwiseConstraint)}build(t){if(t=Dt(t),t.length<this.rank+2)throw new O(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);let e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null||t[e]<0)throw new O(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);let o=t[e],n=this.kernelSize.concat([o,this.depthMultiplier]),s=[];for(let a=0;a<this.rank;++a)s.push(1);s.push(o*this.depthMultiplier,this.filters);let i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",n,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new Qt({ndim:this.rank+2,axes:{[e]:o}})],this.built=!0}call(t,e){return z(()=>{t=xt(t);let o;if(this.rank===1)throw new Ct("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=Rt(t,[0,2,3,1])),o=Mp(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(o=Ar(o,this.bias.read(),this.dataFormat)),this.activation!=null&&(o=this.activation.apply(o)),this.dataFormat==="channelsFirst"&&(o=Rt(o,[0,3,1,2])),o})}getConfig(){let t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=re(this.depthwiseInitializer),t.pointwiseInitializer=re(this.pointwiseInitializer),t.depthwiseRegularizer=Kt(this.depthwiseRegularizer),t.pointwiseRegularizer=Kt(this.pointwiseRegularizer),t.depthwiseConstraint=he(this.depthwiseConstraint),t.pointwiseConstraint=he(this.pointwiseConstraint),t}};gg.className="SeparableConv";var Dm=class extends gg{constructor(t){super(2,t)}};Dm.className="SeparableConv2D";H.registerClass(Dm);var Rm=class r extends Su{constructor(t){super(1,t),r.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){let t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!wd(t.kernelSize,"number",1,1))throw new O(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}};Rm.className="Conv1D";H.registerClass(Rm);var _m=class extends vt{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return z(()=>{if(t=xt(t),this.dataFormat==="channelsLast"){let o=tm(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return tm(o,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let o=tm(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return tm(o,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}};_m.className="Cropping2D";H.registerClass(_m);var Fm=class extends vt{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,ce(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,z1(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){let e=t[2]==null?null:this.size[0]*t[2],o=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],e,o]}else{let e=t[1]==null?null:this.size[0]*t[1],o=t[2]==null?null:this.size[1]*t[2];return[t[0],e,o,t[3]]}}call(t,e){return z(()=>{let o=xt(t),n=o.shape;if(this.dataFormat==="channelsFirst"){o=Rt(o,[0,2,3,1]);let s=this.size[0]*n[2],i=this.size[1]*n[3],a=this.interpolation==="nearest"?jr.resizeNearestNeighbor(o,[s,i]):jr.resizeBilinear(o,[s,i]);return Rt(a,[0,3,1,2])}else{let s=this.size[0]*n[1],i=this.size[1]*n[2];return this.interpolation==="nearest"?jr.resizeNearestNeighbor(o,[s,i]):jr.resizeBilinear(o,[s,i])}})}getConfig(){let t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}};Fm.className="UpSampling2D";H.registerClass(Fm);function wU(r,t,e=[1,1],o="valid",n,s){return z(()=>{n==null&&(n=Er()),ce(n);let i=Om(r,n);if(r.rank!==4)throw new O(`Input for depthwiseConv2d is required to be 4-D, but is instead ${r.rank}-D`);if(t.rank!==4)throw new O(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Ds(i,t,e,o==="same"?"same":"valid","NHWC",s),n==="channelsFirst"&&(i=Rt(i,[0,3,1,2])),i})}var Lm=class extends Em{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Yt(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=de(t.depthwiseConstraint),this.depthwiseRegularizer=te(t.depthwiseRegularizer)}build(t){if(t=Dt(t),t.length<4)throw new O(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);let e=this.dataFormat==="channelsFirst"?1:3;if(t[e]==null||t[e]<0)throw new O(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);let o=t[e],n=[this.kernelSize[0],this.kernelSize[1],o,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",n,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[o*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return z(()=>{t=xt(t);let o=wU(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(o=Ar(o,this.bias.read(),this.dataFormat)),this.activation!=null&&(o=this.activation.apply(o)),o})}computeOutputShape(t){t=Dt(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],o=this.dataFormat==="channelsFirst"?t[3]:t[2],n=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=Fr(e,this.kernelSize[0],this.padding,this.strides[0]),i=Fr(o,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],n,s,i]:[t[0],s,i,n]}getConfig(){let t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=re(this.depthwiseInitializer),t.depthwiseRegularizer=Kt(this.depthwiseRegularizer),t.depthwiseConstraint=he(this.depthwiseRegularizer),t}};Lm.className="DepthwiseConv2D";H.registerClass(Lm);function bw(r,t,e,o){if(Array.isArray(r)){if(t!=null||e!=null)throw new O("When inputs is an array, neither initialState or constants should be provided");o!=null&&(e=r.slice(r.length-o,r.length),r=r.slice(0,r.length-o)),r.length>1&&(t=r.slice(1,r.length)),r=r[0]}function n(s){return s==null||Array.isArray(s)?s:[s]}return t=n(t),e=n(e),{inputs:r,initialState:t,constants:e}}function ww(r,t,e,o=!1,n,s,i=!1,a=!1){return z(()=>{let l=t.shape.length;if(l<3)throw new O(`Input should be at least 3D, but is ${l}D.`);let c=[1,0].concat(kr(2,l));if(t=Rt(t,c),s!=null)throw new Ct("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),n!=null&&(n=Y(Y(n,"bool"),"float32"),n.rank===l-1&&(n=ke(n,-1)),n=Rt(n,c)),o&&(t=ao(t,0),n!=null&&(n=ao(n,0)));let u=[],p,m=e,f=t.shape[0],h=dr(t),d;n!=null&&(d=dr(n));for(let x=0;x<f;++x){let b=h[x],C=z(()=>r(b,m));if(n==null)p=C[0],m=C[1];else{let w=z(()=>{let v=d[x],E=ut(Ge(v),v),A=j(R(C[0],v),R(m[0],E)),$=m.map((F,L)=>j(R(C[1][L],v),R(F,E)));return{output:A,newStates:$}});p=w.output,m=w.newStates}a&&u.push(p)}let g;return a&&(g=Re(u,1)),[p,g,m]})}var Yo=class r extends vt{constructor(t){super(t);let e;if(t.cell==null)throw new O("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?e=new Eu({cells:t.cell}):e=t.cell,e.stateSize==null)throw new O("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new Qt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return kr(0,t).map(e=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){$d(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);let o=e[0],n;if(this.returnSequences?n=[t[0],t[1],o]:n=[t[0],o],this.returnState){let s=[];for(let i of e)s.push([t[0],i]);return[n].concat(s)}else return n}computeMask(t,e){return z(()=>{Array.isArray(e)&&(e=e[0]);let o=this.returnSequences?e:null;if(this.returnState){let n=this.states.map(s=>null);return[o].concat(n)}else return o})}get states(){if(this.states_==null){let t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let o=0;o<t;++o)e.push(null);return e}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new Ct("Constants support is not implemented in RNN yet.");$d(t)&&(t=t[0]),t=t;let o=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new Qt({shape:[o,null,...n]});let s=[t[0]].concat(t.slice(2));this.cell.build(s);let i;if(Array.isArray(this.cell.stateSize)?i=this.cell.stateSize:i=[this.cell.stateSize],this.stateSpec!=null){if(!y.arraysEqual(this.stateSpec.map(a=>a.shape[a.shape.length-1]),i))throw new O(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(a=>new Qt({shape:[null,a]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){z(()=>{if(!this.stateful)throw new lo("Cannot call resetStates() on an RNN Layer that is not stateful.");let o=this.inputSpec[0].shape[0];if(o==null)throw new O("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(n=>ie([o,n])):this.states_=[ie([o,this.cell.stateSize])];else if(t==null)It(this.states_),this.keptStates!=null&&(It(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(n=>ie([o,n])):this.states_[0]=ie([o,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new O(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e===!0?this.keptStates.push(this.states_.slice()):It(this.states_);for(let n=0;n<this.states_.length;++n){let s=t[n],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[n]:this.cell.stateSize,a=[o,i];if(!y.arraysEqual(s.shape,a))throw new O(`State ${n} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${s.shape}`);this.states_[n]=s}}this.states_=this.states_.map(n=>Be(n.clone()))})}apply(t,e){let o=e==null?null:e.initialState,n=e==null?null:e.constants;e==null&&(e={});let s=bw(t,o,n,this.numConstants);t=s.inputs,o=s.initialState,n=s.constants;let i=[],a=[];if(o!=null){e.initialState=o,i=i.concat(o),this.stateSpec=[];for(let c of o)this.stateSpec.push(new Qt({shape:c.shape}));a=a.concat(this.stateSpec)}if(n!=null&&(e.constants=n,i=i.concat(n),this.numConstants=n.length),i[0]instanceof yr){let c=[t].concat(i),u=this.inputSpec.concat(a),p=this.inputSpec;this.inputSpec=u;let m=super.apply(c,e);return this.inputSpec=p,m}else return super.apply(t,e)}call(t,e){return z(()=>{let o=e==null?null:e.mask,n=e==null?null:e.training,s=e==null?null:e.initialState;t=xt(t),s==null&&(this.stateful?s=this.states_:s=this.getInitialState(t));let i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==i)throw new O(`RNN Layer has ${i} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let a={training:n},c=ww((h,d)=>{let g=this.cell.call([h].concat(d),a);return[g[0],g.slice(1)]},t,s,this.goBackwards,o,null,this.unroll,this.returnSequences),u=c[0],p=c[1],m=c[2];this.stateful&&this.resetStates(m,n);let f=this.returnSequences?p:u;return this.returnState?[f].concat(m):f})}getInitialState(t){return z(()=>{let e=ie(t.shape);return e=lt(e,[1,2]),e=zs(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(o=>o>1?kd(e,[1,o]):e):this.cell.stateSize>1?[kd(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){let t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(e.numConstants=this.numConstants);let o=this.cell.getConfig();return this.getClassName()===r.className&&(e.cell={className:this.cell.getClassName(),config:o}),Object.assign(Object.assign(Object.assign({},o),t),e)}static fromConfig(t,e,o={}){let n=e.cell,s=Xr(n,o);return new t(Object.assign(e,{cell:s}))}};Yo.className="RNN";H.registerClass(Yo);var ma=class extends vt{},Tu=class extends ma{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Se(this.units,"units"),this.activation=jo(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Yt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Yt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Yt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=te(t.kernelRegularizer),this.recurrentRegularizer=te(t.recurrentRegularizer),this.biasRegularizer=te(t.biasRegularizer),this.kernelConstraint=de(t.kernelConstraint),this.recurrentConstraint=de(t.recurrentConstraint),this.biasConstraint=de(t.biasConstraint),this.dropout=pl([1,qo([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=pl([1,qo([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Dt(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return z(()=>{if(t=t,t.length!==2)throw new O(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let o=t[1];t=t[0];let n=e.training==null?!1:e.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Vs({ones:()=>Ge(t),rate:this.dropout,training:n,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Vs({ones:()=>Ge(o),rate:this.recurrentDropout,training:n,dropoutFunc:this.dropoutFunc}));let s,i=this.dropoutMask,a=this.recurrentDropoutMask;i!=null?s=To(R(t,i),this.kernel.read()):s=To(t,this.kernel.read()),this.bias!=null&&(s=Ar(s,this.bias.read())),a!=null&&(o=R(o,a));let l=j(s,To(o,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){let t=super.getConfig(),e={units:this.units,activation:Ko(this.activation),useBias:this.useBias,kernelInitializer:re(this.kernelInitializer),recurrentInitializer:re(this.recurrentInitializer),biasInitializer:re(this.biasInitializer),kernelRegularizer:Kt(this.kernelRegularizer),recurrentRegularizer:Kt(this.recurrentRegularizer),biasRegularizer:Kt(this.biasRegularizer),activityRegularizer:Kt(this.activityRegularizer),kernelConstraint:he(this.kernelConstraint),recurrentConstraint:he(this.recurrentConstraint),biasConstraint:he(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),e)}};Tu.className="SimpleRNNCell";H.registerClass(Tu);var Pm=class extends Yo{constructor(t){t.cell=new Tu(t),super(t)}call(t,e){return z(()=>{this.cell.dropoutMask!=null&&(It(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(It(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let o=e==null?null:e.mask,n=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:o,training:n,initialState:s})})}static fromConfig(t,e){return new t(e)}};Pm.className="SimpleRNN";H.registerClass(Pm);var ku=class extends ma{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new O("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Se(this.units,"units"),this.activation=jo(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=jo(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Yt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Yt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Yt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=te(t.kernelRegularizer),this.recurrentRegularizer=te(t.recurrentRegularizer),this.biasRegularizer=te(t.biasRegularizer),this.kernelConstraint=de(t.kernelConstraint),this.recurrentConstraint=de(t.recurrentConstraint),this.biasConstraint=de(t.biasConstraint),this.dropout=pl([1,qo([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=pl([1,qo([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Dt(t);let e=t[t.length-1];this.kernel=this.addWeight("kernel",[e,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return z(()=>{if(t=t,t.length!==2)throw new O(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);let o=e.training==null?!1:e.training,n=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Vs({ones:()=>Ge(t),rate:this.dropout,training:o,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Vs({ones:()=>Ge(n),rate:this.recurrentDropout,training:o,count:3,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,i=this.recurrentDropoutMask,a,l,c;0<this.dropout&&this.dropout<1&&(t=R(t,s[0]));let u=To(t,this.kernel.read());this.useBias&&(u=Ar(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(n=R(n,i[0]));let p=this.recurrentKernel.read(),[m,f]=Pe(p,[2*this.units,this.units],p.rank-1),h=To(n,m),[d,g,x]=Pe(u,3,u.rank-1),[b,C]=Pe(h,2,h.rank-1);a=this.recurrentActivation.apply(j(d,b)),l=this.recurrentActivation.apply(j(g,C));let w=To(R(l,n),f);c=this.activation.apply(j(x,w));let v=j(R(a,n),R(j(1,Mt(a)),c));return[v,v]})}getConfig(){let t=super.getConfig(),e={units:this.units,activation:Ko(this.activation),recurrentActivation:Ko(this.recurrentActivation),useBias:this.useBias,kernelInitializer:re(this.kernelInitializer),recurrentInitializer:re(this.recurrentInitializer),biasInitializer:re(this.biasInitializer),kernelRegularizer:Kt(this.kernelRegularizer),recurrentRegularizer:Kt(this.recurrentRegularizer),biasRegularizer:Kt(this.biasRegularizer),activityRegularizer:Kt(this.activityRegularizer),kernelConstraint:he(this.kernelConstraint),recurrentConstraint:he(this.recurrentConstraint),biasConstraint:he(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),e)}};ku.className="GRUCell";H.registerClass(ku);var zm=class extends Yo{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new ku(t),super(t)}call(t,e){return z(()=>{this.cell.dropoutMask!=null&&(It(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(It(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let o=e==null?null:e.mask,n=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:o,training:n,initialState:s})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}};zm.className="GRU";H.registerClass(zm);var fa=class extends ma{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Se(this.units,"units"),this.activation=jo(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=jo(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Yt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Yt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Yt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=te(t.kernelRegularizer),this.recurrentRegularizer=te(t.recurrentRegularizer),this.biasRegularizer=te(t.biasRegularizer),this.kernelConstraint=de(t.kernelConstraint),this.recurrentConstraint=de(t.recurrentConstraint),this.biasConstraint=de(t.biasConstraint),this.dropout=pl([1,qo([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=pl([1,qo([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;t=Dt(t);let o=t[t.length-1];this.kernel=this.addWeight("kernel",[o,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let n;if(this.useBias){if(this.unitForgetBias){let s=this.biasInitializer,i=this.units;n=new(e=class extends $r{apply(l,c){let u=s.apply([i]),p=new fl().apply([i]),m=s.apply([i*2]);return sw(sw(u,p),m)}},e.className="CustomInit",e)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return z(()=>{let o=e.training==null?!1:e.training;if(t=t,t.length!==3)throw new O(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let n=t[1],s=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Vs({ones:()=>Ge(t),rate:this.dropout,training:o,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Vs({ones:()=>Ge(n),rate:this.recurrentDropout,training:o,count:4,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,a=this.recurrentDropoutMask,l,c,u,p;0<this.dropout&&this.dropout<1&&(t=R(t,i[0]));let m=To(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(n=R(n,a[0])),m=j(m,To(n,this.recurrentKernel.read())),this.useBias&&(m=Ar(m,this.bias.read()));let[f,h,d,g]=Pe(m,4,m.rank-1);l=this.recurrentActivation.apply(f),c=this.recurrentActivation.apply(h),u=j(R(c,s),R(l,this.activation.apply(d))),p=this.recurrentActivation.apply(g);let x=R(p,this.activation.apply(u));return[x,x,u]})}getConfig(){let t=super.getConfig(),e={units:this.units,activation:Ko(this.activation),recurrentActivation:Ko(this.recurrentActivation),useBias:this.useBias,kernelInitializer:re(this.kernelInitializer),recurrentInitializer:re(this.recurrentInitializer),biasInitializer:re(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Kt(this.kernelRegularizer),recurrentRegularizer:Kt(this.recurrentRegularizer),biasRegularizer:Kt(this.biasRegularizer),activityRegularizer:Kt(this.activityRegularizer),kernelConstraint:he(this.kernelConstraint),recurrentConstraint:he(this.recurrentConstraint),biasConstraint:he(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),e)}};fa.className="LSTMCell";H.registerClass(fa);var Bm=class extends Yo{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new fa(t),super(t)}call(t,e){return z(()=>{this.cell.dropoutMask!=null&&(It(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(It(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let o=e==null?null:e.mask,n=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:o,training:n,initialState:s})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}};Bm.className="LSTM";H.registerClass(Bm);var Eu=class extends ma{constructor(t){super(t),this.cells=t.cells}get stateSize(){let t=[];for(let e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return z(()=>{t=t;let o=t.slice(1),n=[];for(let a of this.cells.slice().reverse())Array.isArray(a.stateSize)?n.push(o.splice(0,a.stateSize.length)):n.push(o.splice(0,1));n.reverse();let s=[],i;for(let a=0;a<this.cells.length;++a){let l=this.cells[a];o=n[a],a===0?i=[t[0]].concat(o):i=[i[0]].concat(o),i=l.call(i,e),s.push(i.slice(1))}o=[];for(let a of s.slice().reverse())o.push(...a);return[i[0]].concat(o)})}build(t){$d(t)&&(t=t[0]),t=t;let e;this.cells.forEach((o,n)=>{Ho(`RNNCell_${n}`,()=>{o.build(t),Array.isArray(o.stateSize)?e=o.stateSize[0]:e=o.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){let t=super.getConfig(),e=s=>({className:s.getClassName(),config:s.getConfig()}),n={cells:this.cells.map(e)};return Object.assign(Object.assign({},t),n)}static fromConfig(t,e,o={}){let n=[];for(let s of e.cells)n.push(Xr(s,o));return new t({cells:n})}get trainableWeights(){if(!this.trainable)return[];let t=[];for(let e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){let t=[];for(let e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){let e=[];for(let o of this.cells)e.push(...o.trainableWeights);return e.concat(t)}return t}getWeights(){let t=[];for(let e of this.cells)t.push(...e.weights);return cm(t)}setWeights(t){let e=[];for(let o of this.cells){let n=o.weights.length,s=t.splice(n);for(let i=0;i<o.weights.length;++i)e.push([o.weights[i],s[i]])}gu(e)}};Eu.className="StackedRNNCells";H.registerClass(Eu);function Vs(r){let{ones:t,rate:e,training:o=!1,count:n=1,dropoutFunc:s}=r,i=()=>s!=null?s(t(),e):Ad(t(),e),a=()=>ca(i,t,o);return!n||n<=1?Be(a().clone()):Array(n).fill(void 0).map(a).map(c=>Be(c.clone()))}var CU=function(r,t){var e={};for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&t.indexOf(o)<0&&(e[o]=r[o]);if(r!=null&&typeof Object.getOwnPropertySymbols=="function")for(var n=0,o=Object.getOwnPropertySymbols(r);n<o.length;n++)t.indexOf(o[n])<0&&Object.prototype.propertyIsEnumerable.call(r,o[n])&&(e[o[n]]=r[o[n]]);return e};var xg=class extends Yo{constructor(t){if(t.unroll)throw new Ct("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Ct("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new Qt({ndim:5})]}call(t,e){return z(()=>{if(this.cell.dropoutMask!=null&&(It(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(It(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new O("ConvRNN2D cell does not support constants");let o=e==null?null:e.mask,n=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:o,training:n,initialState:s})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return z(()=>{let{stateSize:e}=this.cell,o=t.shape,n=this.computeSingleOutputShape(o),s=[n[0],...n.slice(2)],i=ie(s);return Array.isArray(e)?Array(e.length).fill(i):[i]})}resetStates(t,e=!1){z(()=>{if(!this.stateful)throw new lo("Cannot call resetStates() on an RNN Layer that is not stateful.");let o=this.inputSpec[0].shape,n=this.computeSingleOutputShape(o),s=[n[0],...n.slice(2)];if(o[0]==null)throw new O("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>ie(s)):this.states_=[ie(s)];else if(t==null)It(this.states_),this.keptStates!=null&&(It(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>ie(s)):this.states_[0]=ie(s);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new O(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):It(this.states_);for(let a=0;a<this.states_.length;++a){let l=t[a],c=s;if(!y.arraysEqual(l.shape,c))throw new O(`State ${a} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${l.shape}`);this.states_[a]=l}}this.states_=this.states_.map(a=>Be(a.clone()))})}computeSingleOutputShape(t){let{dataFormat:e,filters:o,kernelSize:n,padding:s,strides:i,dilationRate:a}=this.cell,l=e==="channelsFirst",c=t[l?3:2],u=t[l?4:3],p=Fr(c,n[0],s,i[0],a[0]),m=Fr(u,n[1],s,i[1],a[1]);return[...t.slice(0,2),...l?[o,p,m]:[p,m,o]]}};xg.className="ConvRNN2D";var Au=class extends fa{constructor(t){let{filters:e,kernelSize:o,strides:n,padding:s,dataFormat:i,dilationRate:a}=t;super(Object.assign(Object.assign({},t),{units:e})),this.filters=e,Se(this.filters,"filters"),this.kernelSize=pa(o,2,"kernelSize"),this.kernelSize.forEach(l=>Se(l,"kernelSize")),this.strides=pa(n||1,2,"strides"),this.strides.forEach(l=>Se(l,"strides")),this.padding=s||"valid",Tr(this.padding),this.dataFormat=i||"channelsLast",ce(this.dataFormat),this.dilationRate=pa(a||1,2,"dilationRate"),this.dilationRate.forEach(l=>Se(l,"dilationRate"))}build(t){var e;t=Dt(t);let o=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[o]==null)throw new O(`The channel dimension of the input should be defined. Found ${t[o]}`);let n=t[o],s=4,i=this.kernelSize.concat([n,this.filters*s]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let a=this.kernelSize.concat([this.filters,this.filters*s]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){let c=this.biasInitializer,u=this.filters;l=new(e=class extends $r{apply(m,f){let h=c.apply([u]),d=Ir([u]),g=c.apply([u*2]);return iu([h,d,g])}},e.className="CustomInit",e)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*s],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return z(()=>{if(t.length!==3)throw new O(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let o=e.training||!1,n=t[0],s=t[1],i=t[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Vs({ones:()=>Ge(n),rate:this.dropout,training:o,count:a,dropoutFunc:this.dropoutFunc}));let l=this.dropoutMask,c=(rt,ot,it)=>!ot||!ot[it]?rt:R(ot[it],rt),u=c(n,l,0),p=c(n,l,1),m=c(n,l,2),f=c(n,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Vs({ones:()=>Ge(s),rate:this.recurrentDropout,training:o,count:a,dropoutFunc:this.dropoutFunc}));let h=this.recurrentDropoutMask,d=c(s,h,0),g=c(s,h,1),x=c(s,h,2),b=c(s,h,3),C=3,[w,v,E,A]=Pe(this.kernel.read(),a,C),[$,F,L,M]=this.useBias?Pe(this.bias.read(),a):[null,null,null,null];u=this.inputConv(u,w,$,this.padding),p=this.inputConv(p,v,F,this.padding),m=this.inputConv(m,E,L,this.padding),f=this.inputConv(f,A,M,this.padding);let[V,G,W,U]=Pe(this.recurrentKernel.read(),a,C);d=this.recurrentConv(d,V),g=this.recurrentConv(g,G),x=this.recurrentConv(x,W),b=this.recurrentConv(b,U);let K=this.recurrentActivation.apply(j(u,d)),J=this.recurrentActivation.apply(j(p,g)),q=j(R(J,i),R(K,this.activation.apply(j(m,x)))),Q=R(this.recurrentActivation.apply(j(f,b)),this.activation.apply(q));return[Q,Q,q]})}getConfig(){let t=super.getConfig(),{units:e}=t,o=CU(t,["units"]),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},o),n)}inputConv(t,e,o,n){let s=Wr(t,e,this.strides,n||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return o?Ar(s,o,this.dataFormat):s}recurrentConv(t,e){return Wr(t,e,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};Au.className="ConvLSTM2DCell";H.registerClass(Au);var Mm=class extends xg{constructor(t){let e=new Au(t);super(Object.assign(Object.assign({},t),{cell:e}))}static fromConfig(t,e){return new t(e)}};Mm.className="ConvLSTM2D";H.registerClass(Mm);var $u=class extends vt{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;let e=t.shape,o=[];for(let n=0;n<this.noiseShape.length;++n)o.push(this.noiseShape[n]==null?e[n]:this.noiseShape[n]);return o}call(t,e){return z(()=>{this.invokeCallHook(t,e);let o=xt(t);if(0<this.rate&&this.rate<1){let n=e.training==null?!1:e.training,s=this.getNoiseShape(o);return ca(()=>Ad(o,this.rate,s,this.seed),()=>o,n)}return t})}getConfig(){let t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}};$u.className="Dropout";H.registerClass($u);var Vm=class extends $u{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){let e=t.shape;return[e[0],1,e[2]]}};Vm.className="SpatialDropout1D";H.registerClass(Vm);var Gm=class extends vt{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let e=null;t.batchSize!=null&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Se(this.units,"units"),this.activation=jo(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=Yt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Yt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=de(t.kernelConstraint),this.biasConstraint=de(t.biasConstraint),this.kernelRegularizer=te(t.kernelRegularizer),this.biasRegularizer=te(t.biasRegularizer),this.activityRegularizer=te(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=Dt(t);let e=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){t=Dt(t);let e=t.slice();return e[e.length-1]=this.units,e}call(t,e){return z(()=>{this.invokeCallHook(t,e);let o=xt(t),n=Cd(this.activation.getClassName()),s;return n!=null?s=To(o,this.kernel.read(),n,this.bias?this.bias.read():null):(s=To(o,this.kernel.read()),this.bias!=null&&(s=Ar(s,this.bias.read())),this.activation!=null&&(s=this.activation.apply(s))),s})}getConfig(){let t={units:this.units,activation:Ko(this.activation),useBias:this.useBias,kernelInitializer:re(this.kernelInitializer),biasInitializer:re(this.biasInitializer),kernelRegularizer:Kt(this.kernelRegularizer),biasRegularizer:Kt(this.biasRegularizer),activityRegularizer:Kt(this.activityRegularizer),kernelConstraint:he(this.kernelConstraint),biasConstraint:he(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}};Gm.className="Dense";H.registerClass(Gm);var Um=class extends vt{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Dt(t);for(let e of t.slice(1))if(e==null)throw new O(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],No(t,1)]}call(t,e){return z(()=>{this.invokeCallHook(t,e);let o=xt(t);if(this.dataFormat==="channelsFirst"&&o.rank>1){let n=[0];for(let s=2;s<o.rank;++s)n.push(s);n.push(1),o=Rt(o,n)}return U1(o)})}getConfig(){let t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);let e=super.getConfig();return Object.assign(t,e),t}};Um.className="Flatten";H.registerClass(Um);var Wm=class extends vt{constructor(t){super(t),this.supportsMasking=!0,this.activation=jo(t.activation)}call(t,e){return z(()=>{this.invokeCallHook(t,e);let o=xt(t);return this.activation.apply(o)})}getConfig(){let t={activation:Ko(this.activation)},e=super.getConfig();return Object.assign(t,e),t}};Wm.className="Activation";H.registerClass(Wm);var Hm=class extends vt{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return z(()=>(t=xt(t),V1(t,this.n)))}getConfig(){let t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}};Hm.className="RepeatVector";H.registerClass(Hm);var qm=class extends vt{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,e){let o="Total size of new array must be unchanged.",n=e.slice(),s=1,i=null;for(let l=0;l<n.length;++l){let c=n[l];if(this.isUnknown(c))if(i===null)i=l;else throw new O("Can only specifiy one unknown dimension.");else s*=c}let a=No(t);if(i!==null){if(s===0||a%s!==0)throw new O(o);n[i]=a/s}else if(a!==s)throw new O(o);return n}computeOutputShape(t){let e=!1;for(let o=0;o<t.length;++o)if(this.isUnknown(t[o])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return z(()=>{this.invokeCallHook(t,e);let o=xt(t),n=o.shape,s=n.slice(0,1).concat(this.fixUnknownDimension(n.slice(1),this.targetShape));return _(o,s)})}getConfig(){let t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}};qm.className="Reshape";H.registerClass(qm);var Km=class extends vt{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);let e=kr(1,t.dims.length+1);if(!y.arraysEqual(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Qt({ndim:this.dims.length+1})]}computeOutputShape(t){t=Dt(t);let e=t.slice();return this.dims.forEach((o,n)=>{e[n+1]=t[o]}),e}call(t,e){return Rt(xt(t),this.dimsIncludingBatch)}getConfig(){let t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}};Km.className="Permute";H.registerClass(Km);var jm=class extends vt{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){let o=xt(t);return Lc(sa(o,this.maskValue),-1)}call(t,e){return z(()=>{this.invokeCallHook(t,e);let o=xt(t),i=Lc(sa(o,this.maskValue),-1,!0);return R(o,Y(i,o.dtype))})}};jm.className="Masking";H.registerClass(jm);var Xm=class extends vt{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let e=null;t.batchSize!=null&&(e=t.batchSize),t.inputLength==null?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(Ht(t.inputLength))}this.inputDim=t.inputDim,Se(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Se(this.outputDim,"outputDim"),this.embeddingsInitializer=Yt(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=te(t.embeddingsRegularizer),this.activityRegularizer=te(t.activityRegularizer),this.embeddingsConstraint=de(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return z(()=>this.maskZero?(t=xt(t),sa(t,gt(t))):null)}computeOutputShape(t){if(t=Dt(t),this.inputLength==null)return[...t,this.outputDim];let e=Ht(this.inputLength);if(e.length!==t.length-1)throw new O(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let o=0;for(let n=0;n<e.length;++n){let s=e[n],i=t[n+1];if(s!=null&&i!=null&&s!==i)throw new O(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);s==null&&(e[o]=i),o++}}return[t[0],...e,this.outputDim]}call(t,e){return z(()=>{this.invokeCallHook(t,e);let o=xt(t);o.dtype!=="int32"&&(o=gr(o,"int32"));let n=Ed(this.embeddings.read(),_(o,[o.size]));return _(n,Dt(this.computeOutputShape(o.shape)))})}getConfig(){let t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:re(this.embeddingsInitializer),embeddingsRegularizer:Kt(this.embeddingsRegularizer),activityRegularizer:Kt(this.activityRegularizer),embeddingsConstraint:he(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}};Xm.className="Embedding";H.registerClass(Xm);var Gs=class extends vt{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Ct}computeElementwiseOpOutputShape(t,e){if(t==null||e==null)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(e.length===0)return t;let o=t.slice(0,t.length-e.length);for(let n=0;n<e.length;++n){let s=t[t.length-e.length+n],i=e[n];if(s==null||i==null||s<0||i<0)o.push(null);else if(s===1)o.push(i);else if(i===1)o.push(s);else{if(s!==i)throw new O("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));o.push(s)}}return o}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Dt(t)]),t=t,t.length<2)throw new O(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(let s of t)s!=null&&s[0]!==null&&e.push(s[0]);if(e=Io(e),e.length>1)throw new O(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let o=t[0]==null?null:t[0].slice(1);for(let s=1;s<t.length;++s){let i=t[s]==null?null:t[s].slice(1);o=this.computeElementwiseOpOutputShape(o,i)}let n=t.map(s=>s.length);t.indexOf(null)===-1&&Io(n).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return z(()=>{if(t=t,this.reshapeRequired){let o=[],n=t.map(s=>s.rank);if(n.indexOf(null)===-1){let s=qo(n);for(let i of t){let a=i.rank;for(let l=0;l<s-a;++l)i=zs(i,1);o.push(i)}return this.mergeFunction(o)}else{let s=!1;for(let l of t){let c=l.rank;if(c==null){let u=l.shape,p=u[0],m=u.slice(1).concat([p]),f=_(l,[p].concat(No(u.slice(1))));f=Rt(f,[1,0]),f=_(f,m),o.push(f),s=!0}else if(c>1){let u=kr(1,c).concat([0]);o.push(Rt(l,u)),s=!0}else o.push(l)}let i=this.mergeFunction(o),a=i.rank;if(s){if(a==null){let l=i.shape,c=l.length,u=l[c-1],p=[u].concat(l.slice(0,l.length-1));i=_(Rt(_(i,[-1,u]),[1,0]),p)}else if(a>1){let l=[a-1].concat(kr(0,a-1));i=Rt(i,l)}}return i}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let e;t[0]==null?e=null:e=t[0].slice(1);for(let n=1;n<t.length;++n){let s=t[n]==null?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,s)}let o=[];for(let n of t)n!=null&&n[0]!==null&&o.push(n[0]);return o=Io(o),o.length===1?e=o.concat(e):e=[null].concat(e),e}computeMask(t,e){return z(()=>{if(e==null)return null;if(!Array.isArray(e))throw new O("`mask` should be an Array");if(!Array.isArray(t))throw new O("`inputs` should be an Array");if(e.length!==t.length)throw new O(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(n=>n==null))return null;e=e.map(n=>n==null?n:ke(n,0));let o=e[0];for(let n=1;n<e.length-1;++n)o=hr(o,e[n]);return o})}},Zm=class extends Gs{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0].clone();for(let o=1;o<t.length;++o)e=j(e,t[o]);return e})}};Zm.className="Add";H.registerClass(Zm);var Jm=class extends Gs{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0].clone();for(let o=1;o<t.length;++o)e=R(e,t[o]);return e})}};Jm.className="Multiply";H.registerClass(Jm);var Qm=class extends Gs{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0].clone();for(let o=1;o<t.length;++o)e=j(e,t[o]);return R(1/t.length,e)})}};Qm.className="Average";H.registerClass(Qm);var tf=class extends Gs{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0];for(let o=1;o<t.length;++o)e=qr(e,t[o]);return e})}};tf.className="Maximum";H.registerClass(tf);var ef=class extends Gs{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0];for(let o=1;o<t.length;++o)e=gn(e,t[o]);return e})}};ef.className="Minimum";H.registerClass(ef);var rf=class extends Gs{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new O("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(let n of t)if(n!=null){e=!1;break}if(e)return;let o=[];for(let n=0;n<t.length;++n){let s=t[n].slice();s.splice(this.axis,1);let i=!1;for(let a of o)if(y.arraysEqual(a,s)){i=!0;break}i||o.push(s)}if(o.length>1)throw new O("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return z(()=>iu(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new O("A `Concatenate` layer should be called on a list of inputs.");let e=t,o=e[0].slice(),n=this.axis<0?o.length+this.axis:this.axis;for(let s of e.slice(1)){if(o[n]==null||s[n]==null){o[n]=null;break}o[n]+=s[n]}return o}computeMask(t,e){if(e==null)return null;if(!Array.isArray(e))throw new O("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new O("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new O(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return z(()=>{let o=!0;if(e.forEach(i=>{if(i!=null){o=!1;return}}),o)return null;let n=[];for(let i=0;i<t.length;++i)e[i]==null?n.push(Y(Ge(t[i]),"bool")):e[i].rank<t[i].rank?n.push(ke(e[i],-1)):n.push(e[i]);let s=ne(n,this.axis);return Ip(s,-1,!1)})}getConfig(){let t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}};rf.className="Concatenate";H.registerClass(rf);function Ym(r,t){for(;r<0;)r+=t;return r}function vU(r,t,e){if(r.shape.length>3||t.shape.length>3)throw new Ct("batchDot is not implemented for tensors of 4D or higher rank yet");if(y.assert(r.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${r.shape.length}`),y.assert(r.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),r.dtype==="complex64"||t.dtype==="complex64")throw new Ct("batchDot is not implemented for complex64-type Tensors yet.");let o=r.shape.length,n=t.shape.length;e==null&&(e=[o-1,n-2]);let s=e;return z(()=>{let i;if(o>n){i=o-n;let l=[];for(let c=0;c<i;++c)l.push(1);t=_(t,t.shape.concat(l))}else if(n>o){i=n-o;let l=[];for(let c=0;c<i;++c)l.push(1);r=_(r,r.shape.concat(l))}else i=0;let a;if(r.shape.length===2&&t.shape.length===2)s[0]===s[1]?a=lt(R(r,t),s[0]):a=lt(R(Rt(r,[1,0]),t),s[1]);else{let l=s[0]!==r.shape.length-1,c=s[1]===t.shape.length-1;a=Wt(r,t,l,c)}if(i>0){let l;o>n?l=o+n-3:l=o-1;let c=[];for(let u=l;u<l+i;++u)c.push(u);a=Go(a,c)}return a.shape.length===1&&(a=ke(a,1)),a})}var of=class extends Gs{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){y.assert(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let e=t[0],o=t[1];if(e.length>3||o.length>3)throw new Ct("Dot layer does not support tensors of 4D or higher rank yet.");let n=this.interpretAxes(e,o);if(e[n[0]]!==o[n[1]])throw new O(`Dimension incompatibility: ${e[n[0]]} !== ${o[n[1]]}`)}mergeFunction(t){if(t.length!==2)throw new O(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e=t[0],o=t[1],n;return Array.isArray(this.axes)?n=this.axes.map((s,i)=>Ym(s,t[i].shape.length)):n=[Ym(this.axes,e.shape.length),Ym(this.axes,o.shape.length)],this.normalize&&(e=dm(e,n[0]),o=dm(o,n[1])),vU(e,o,n)}interpretAxes(t,e){let o;return Array.isArray(this.axes)?o=this.axes:o=[Ym(this.axes,t.length),Ym(this.axes,e.length)],o}computeOutputShape(t){y.assert(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let e=t[0].slice(),o=t[1].slice();if(e.length>3||o.length>3)throw new Ct("Dot layer does not support tensors of 4D or higher rank yet.");let n=this.interpretAxes(e,o);e.splice(n[0],1),o.splice(n[1],1),o.splice(0,1);let s=e.concat(o);return s.length===1&&s.push(1),s}computeMask(t,e){return null}getConfig(){let t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}};of.className="Dot";H.registerClass(of);var nf=class extends vt{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return z(()=>{this.invokeCallHook(t,e);let o=xt(t);return ca(()=>j(au(o.shape,0,this.stddev),o),()=>o,e.training||!1)})}};nf.className="GaussianNoise";H.registerClass(nf);var sf=class extends vt{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return z(()=>{this.invokeCallHook(t,e);let o=xt(t);return this.rate>0&&this.rate<1?ca(()=>{let s=Math.sqrt(this.rate/(1-this.rate));return R(o,au(o.shape,1,s))},()=>o,e.training||!1):o})}};sf.className="GaussianDropout";H.registerClass(sf);var af=class extends vt{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||xt(t).shape}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return z(()=>{if(this.rate<1&&this.rate>0){let o=this._getNoiseShape(t);return ca(()=>{let s=xt(t),l=-1.6732632423543772*1.0507009873554805,c=_r(Vo(o),this.rate);c=gr(c,"float32");let u=((1-this.rate)*(1+this.rate*l**2))**-.5,p=-u*l*this.rate,m=j(R(s,c),R(j(c,-1),l));return j(R(m,u),p)},()=>xt(t),e.training||!1)}return t})}};af.className="AlphaDropout";H.registerClass(af);function lf(r,t,e,o,n,s=.001){let i;if(r.rank===2)i=Qb(r,t,e,o,n,s);else if(r.rank===3)i=t0(r,t,e,o,n,s);else if(r.rank===4)i=e0(r,t,e,o,n,s);else throw new Ct(`batchNormalization is not implemented for array of rank ${r.rank} yet`);return i}function SU(r,t,e,o,n=.001){return z(()=>{let s=Wc(r,o),i=s.mean,a=s.variance;return[lf(r,i,a,e,t,n),i,a]})}function IU(r,t,e,o,n=.001){return z(()=>{let s=Wc(r,o),i=s.mean,a=s.variance,l=[];for(let h of kr(0,r.rank))o.indexOf(h)!==-1?l.push(1):l.push(r.shape[h]);let c=_(i,l),u=_(a,l),p=t==null?null:_(t,l),m=e==null?null:_(e,l);return[lf(r,c,u,m,p,n),i,a]})}function NU(r,t,e,o,n=.001){return y.arraysEqual(o.slice().sort(),kr(0,r.rank-1))?SU(r,t,e,o,n):IU(r,t,e,o,n)}var cf=class extends vt{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=Yt(t.betaInitializer||"zeros"),this.gammaInitializer=Yt(t.gammaInitializer||"ones"),this.movingMeanInitializer=Yt(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Yt(t.movingVarianceInitializer||"ones"),this.betaConstraint=de(t.betaConstraint),this.gammaConstraint=de(t.gammaConstraint),this.betaRegularizer=te(t.betaRegularizer),this.gammaRegularizer=te(t.gammaRegularizer)}build(t){t=Dt(t);let e=this.axis>=0?this.axis:this.axis+t.length,o=t[e];if(o==null)throw new O(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new Qt({ndim:t.length,axes:{[e]:o}})];let n=[o];this.scale&&(this.gamma=this.addWeight("gamma",n,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",n,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",n,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",n,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return z(()=>{let o=e.training==null?!1:e.training,n=xt(t),s=n.shape,i=s.length,a=kr(0,i),l=this.axis>=0?this.axis:this.axis+i;a.splice(l,1);let c=vo(1,i);c[l]=s[l];let u=a.slice();u.sort();let p=!y.arraysEqual(u,kr(0,i).slice(0,i-1)),m=()=>{if(p){let b=_(this.movingMean.read(),c),C=_(this.movingVariance.read(),c),w=this.center?_(this.beta.read(),c):null,v=this.scale?_(this.gamma.read(),c):null;return lf(n,b,C,w,v,this.epsilon)}else return lf(n,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!o)return m();let[f,h,d]=NU(n,this.gamma.read(),this.beta.read(),a,this.epsilon),g=(b,C,w)=>{z(()=>{let v=1-w,E=b.read(),A=R(ut(E,C),v);b.write(ut(E,A))})};return(()=>{g(this.movingMean,h,this.momentum),g(this.movingVariance,d,this.momentum)})(),f})}getConfig(){let t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:re(this.betaInitializer),gammaInitializer:re(this.gammaInitializer),movingMeanInitializer:re(this.movingMeanInitializer),movingVarianceInitializer:re(this.movingVarianceInitializer),betaRegularizer:Kt(this.betaRegularizer),gammaRegularizer:Kt(this.gammaRegularizer),betaConstraint:he(this.betaConstraint),gammaConstraint:he(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}};cf.className="BatchNormalization";H.registerClass(cf);var uf=class extends vt{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=Yt(t.betaInitializer||"zeros"),this.gammaInitializer=Yt(t.gammaInitializer||"ones"),this.betaRegularizer=te(t.betaRegularizer),this.gammaRegularizer=te(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=Dt(t);let e=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=e);for(let s of this.axis)if(s<0||s>=e)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==Io(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let o=this.axis.map(s=>t[s]),n=!0;this.scale?this.gamma=this.addWeight("gamma",o,"float32",this.gammaInitializer,this.gammaRegularizer,n):this.gamma=null,this.center?this.beta=this.addWeight("beta",o,"float32",this.betaInitializer,this.betaRegularizer,n):this.beta=null,this.built=!0}call(t,e){let o=xt(t),n=o.shape,s=n.length;return z(()=>{let{mean:a,variance:l}=Wc(o,this.axis,!0),c=vo(1,s);for(let d of this.axis)c[d]=n[d];let u=d=>d!=null&&d.shape.length!==s?_(d,c):d,p=this.scale?u(this.gamma.read()):null,m=this.center?u(this.beta.read()):null,f=[],h=[];for(let d=0;d<s;++d)this.axis.indexOf(d)!==-1?(f.push(n[d]),h.push(1)):(f.push(1),h.push(n[d]));return a=sr(a,f),l=sr(l,f),p!=null&&(p=sr(p,h)),m!=null&&(m=sr(m,h)),lf(o,a,l,m,p,this.epsilon)})}getConfig(){let t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:re(this.betaInitializer),gammaInitializer:re(this.gammaInitializer),betaRegularizer:Kt(this.betaRegularizer),gammaRegularizer:Kt(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}};uf.className="LayerNormalization";H.registerClass(uf);function TU(r,t,e){return z(()=>{if(r.rank!==4)throw new O(`temporalPadding expects input tensor to be 4-D, but received a ${r.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new O("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=Er()),e!=="channelsLast"&&e!=="channelsFirst")throw new O(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let o;return e==="channelsFirst"?o=[[0,0],[0,0],t[0],t[1]]:o=[[0,0],t[0],t[1],[0,0]],tl(r,o)})}var pf=class extends vt{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?Er():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new O(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,o;if(typeof t.padding[0]=="number")e=[t.padding[0],t.padding[0]],o=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new O(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],t.padding[1].length!==2)throw new O(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);o=t.padding[1]}this.padding=[e,o]}this.inputSpec=[new Qt({ndim:4})]}computeOutputShape(t){t=Dt(t);let e,o;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?e=t[2]+this.padding[0][0]+this.padding[0][1]:e=null,t[3]!=null&&t[3]>=0?o=t[3]+this.padding[1][0]+this.padding[1][1]:o=null,[t[0],t[1],e,o]):(t[1]!=null&&t[1]>=0?e=t[1]+this.padding[0][0]+this.padding[0][1]:e=null,t[2]!=null&&t[2]>=0?o=t[2]+this.padding[1][0]+this.padding[1][1]:o=null,[t[0],e,o,t[3]])}call(t,e){return z(()=>TU(xt(t),this.padding,this.dataFormat))}getConfig(){let t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}};pf.className="ZeroPadding2D";H.registerClass(pf);function Sg(r,t,e,o,n,s){return z(()=>{ce(n),ew(s),Tr(o),e==null&&(e=[1,1]),o==null&&(o="valid"),n==null&&(n=Er()),s==null&&(s="max"),r=Om(r,n);let i,a=o==="same"?"same":"valid";return s==="max"?i=Qa(r,t,e,a):i=Ka(r,t,e,a),n==="channelsFirst"&&(i=Rt(i,[0,3,1,2])),i})}function Sk(r,t,e,o,n,s){return z(()=>{ce(n),ew(s),Tr(o),e==null&&(e=[1,1,1]),o==null&&(o="valid"),n==null&&(n=Er()),s==null&&(s="max"),r=yw(r,n);let i,a=o==="same"?"same":"valid";return s==="max"?i=b0(r,t,e,a):i=Jb(r,t,e,a),n==="channelsFirst"&&(i=Rt(i,[0,4,1,2,3])),i})}var yg=class extends vt{constructor(t){if(t.poolSize==null&&(t.poolSize=2),super(t),typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new O(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if(Se(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new O(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);Se(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,Tr(this.padding),this.inputSpec=[new Qt({ndim:3})]}computeOutputShape(t){t=Dt(t);let e=Fr(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return z(()=>{this.invokeCallHook(t,e),t=zs(xt(t),2);let o=this.poolingFunction(xt(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Go(o,[2])})}getConfig(){let t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}},mf=class extends yg{constructor(t){super(t)}poolingFunction(t,e,o,n,s){return ce(s),Tr(n),Sg(t,e,o,n,s,"max")}};mf.className="MaxPooling1D";H.registerClass(mf);var ff=class extends yg{constructor(t){super(t)}poolingFunction(t,e,o,n,s){return ce(s),Tr(n),Sg(t,e,o,n,s,"avg")}};ff.className="AveragePooling1D";H.registerClass(ff);var bg=class extends vt{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new O(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Se(this.poolSize,"poolSize"),Se(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,ce(this.dataFormat),Tr(this.padding),this.inputSpec=[new Qt({ndim:4})]}computeOutputShape(t){t=Dt(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],o=this.dataFormat==="channelsFirst"?t[3]:t[2];return e=Fr(e,this.poolSize[0],this.padding,this.strides[0]),o=Fr(o,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,o]:[t[0],e,o,t[3]]}call(t,e){return z(()=>(this.invokeCallHook(t,e),this.poolingFunction(xt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}},hf=class extends bg{constructor(t){super(t)}poolingFunction(t,e,o,n,s){return ce(s),Tr(n),Sg(t,e,o,n,s,"max")}};hf.className="MaxPooling2D";H.registerClass(hf);var df=class extends bg{constructor(t){super(t)}poolingFunction(t,e,o,n,s){return ce(s),Tr(n),Sg(t,e,o,n,s,"avg")}};df.className="AveragePooling2D";H.registerClass(df);var wg=class extends vt{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new O(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Se(this.poolSize,"poolSize"),Se(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,ce(this.dataFormat),Tr(this.padding),this.inputSpec=[new Qt({ndim:5})]}computeOutputShape(t){t=Dt(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],o=this.dataFormat==="channelsFirst"?t[3]:t[2],n=this.dataFormat==="channelsFirst"?t[4]:t[3];return e=Fr(e,this.poolSize[0],this.padding,this.strides[0]),o=Fr(o,this.poolSize[1],this.padding,this.strides[1]),n=Fr(n,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,o,n]:[t[0],e,o,n,t[4]]}call(t,e){return z(()=>(this.invokeCallHook(t,e),this.poolingFunction(xt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}},gf=class extends wg{constructor(t){super(t)}poolingFunction(t,e,o,n,s){return ce(s),Tr(n),Sk(t,e,o,n,s,"max")}};gf.className="MaxPooling3D";H.registerClass(gf);var xf=class extends wg{constructor(t){super(t)}poolingFunction(t,e,o,n,s){return ce(s),Tr(n),Sk(t,e,o,n,s,"avg")}};xf.className="AveragePooling3D";H.registerClass(xf);var Cg=class extends vt{constructor(t){super(t),this.inputSpec=[new Qt({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Ct}},yf=class extends Cg{constructor(t){super(t||{})}call(t,e){return z(()=>{let o=xt(t);return le(o,1)})}};yf.className="GlobalAveragePooling1D";H.registerClass(yf);var bf=class extends Cg{constructor(t){super(t||{})}call(t,e){return z(()=>{let o=xt(t);return Je(o,1)})}};bf.className="GlobalMaxPooling1D";H.registerClass(bf);var vg=class extends vt{constructor(t){super(t),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,ce(this.dataFormat),this.inputSpec=[new Qt({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Ct}getConfig(){let t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}},wf=class extends vg{call(t,e){return z(()=>{let o=xt(t);return this.dataFormat==="channelsLast"?le(o,[1,2]):le(o,[2,3])})}};wf.className="GlobalAveragePooling2D";H.registerClass(wf);var Cf=class extends vg{call(t,e){return z(()=>{let o=xt(t);return this.dataFormat==="channelsLast"?Je(o,[1,2]):Je(o,[2,3])})}};Cf.className="GlobalMaxPooling2D";H.registerClass(Cf);var Ig=class extends vt{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){let t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,o={}){let n=e.layer,s=Xr(n,o);delete e.layer;let i={layer:s};return Object.assign(i,e),new t(i)}},vf=class extends Ig{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=Dt(t),t.length<3)throw new O(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];let e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=Dt(t);let e=[t[0]].concat(t.slice(2)),o=this.layer.computeOutputShape(e),n=t[1];return[o[0],n].concat(o.slice(1))}call(t,e){return z(()=>(t=xt(t),ww((i,a)=>[xt(this.layer.call(i,e)),[]],t,[],!1,null,null,!1,!0)[1]))}};vf.className="TimeDistributed";H.registerClass(vf);function kU(r){bn(L1,"BidirectionalMergeMode",r)}var EU="concat",Sf=class extends Ig{constructor(t){super(t);let e=t.layer.getConfig(),o={};o.className=t.layer.getClassName(),o.config=e,this.forwardLayer=Xr(o),e.goBackwards=e.goBackwards!==!0;let n={};if(n.className=t.layer.getClassName(),n.config=e,this.backwardLayer=Xr(n),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?EU:t.mergeMode,kU(this.mergeMode),t.weights)throw new Ct("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){let e=t.length,o=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,o)),this.backwardLayer.setWeights(t.slice(o))}computeOutputShape(t){let e=this.forwardLayer.computeOutputShape(t);Array.isArray(e)&&Array.isArray(e[0])||(e=[e]),e=e;let o,n,s;return this.returnState&&(s=e.slice(1)),o=e[0],o=o,this.mergeMode==="concat"?(o[o.length-1]*=2,n=[o]):this.mergeMode==null?n=[o,o.slice()]:n=[o],this.returnState?this.mergeMode==null?n.concat(s).concat(s.slice()):[o].concat(s).concat(s.slice()):We(n)}apply(t,e){let o=e==null?null:e.initialState,n=e==null?null:e.constants;e==null&&(e={});let s=bw(t,o,n,this.numConstants);if(t=s.inputs,o=s.initialState,n=s.constants,Array.isArray(t)&&(o=t.slice(1),t=t[0]),(o==null||o.length===0)&&n==null)return super.apply(t,e);let i=[],a=[];if(o!=null){let c=o.length;if(c%2>0)throw new O("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=o,i.push(...o);let u=o.map(p=>new Qt({shape:p.shape}));this.forwardLayer.stateSpec=u.slice(0,c/2),this.backwardLayer.stateSpec=u.slice(c/2),a.push(...u)}if(n!=null)throw new Ct("Support for constants in Bidirectional layers is not implemented yet.");let l=i[0]instanceof yr;for(let c of i)if(c instanceof yr!==l)throw new O("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){let c=[t].concat(i),u=this.inputSpec.concat(a),p=this.inputSpec;this.inputSpec=u;let m=super.apply(c,e);return this.inputSpec=p,m}else return super.apply(t,e)}call(t,e){return z(()=>{let o=e.initialState,n,s;if(o==null)n=this.forwardLayer.call(t,e),s=this.backwardLayer.call(t,e);else{let l=o.slice(0,o.length/2),c=o.slice(o.length/2);n=this.forwardLayer.call(t,Object.assign(e,{initialState:l})),s=this.backwardLayer.call(t,Object.assign(e,{initialState:c}))}let i;this.returnState&&(Array.isArray(n)&&(i=n.slice(1).concat(s.slice(1))),n=n[0],s=s[0]),this.returnSequences&&(s=ao(s,1));let a;return this.mergeMode==="concat"?a=iu([n,s]):this.mergeMode==="sum"?a=j(n,s):this.mergeMode==="ave"?a=R(.5,j(n,s)):this.mergeMode==="mul"?a=R(n,s):this.mergeMode==null&&(a=[n,s]),this.returnState?this.mergeMode==null?a.concat(i):[a].concat(i):a})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Ho(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),Ho(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){Array.isArray(e)&&(e=e[0]);let o;if(this.returnSequences?this.mergeMode==null?o=[e,e]:o=e:this.mergeMode==null?o=[null,null]:o=null,this.returnState){let s=this.forwardLayer.states.map(i=>null);return Array.isArray(o)?o.concat(s).concat(s):[o].concat(s).concat(s)}else return o}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){let t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){let o=Xr(e.layer);if(delete e.layer,e.numConstants!=null)throw new Ct("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let n=e;return n.layer=o,new t(n)}};Sf.className="Bidirectional";H.registerClass(Sf);var If=class extends vt{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){let t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return z(()=>(t=xt(t),t.dtype!=="float32"&&(t=gr(t,"float32")),j(R(t,this.scale),this.offset)))}};If.className="Rescaling";H.registerClass(If);var{resizeBilinear:AU,cropAndResize:$U}=jr,Nf=class extends vt{constructor(t){super(t),this.height=t.height,this.width=t.width}centerCrop(t,e,o,n,s,i,a,l){return z(()=>{let c,u=!1,p=e/i,m=o/a,f=(n+e)/i,h=(s+o)/a,d=[p,m,f,h],g=[];t.rank===3?(u=!0,c=Re([t])):c=t;for(let v=0;v<c.shape[0];v++)g.push(d);let x=Gr(g,[g.length,4]),b=Fs(0,g.length,1,"int32"),w=$U(c,x,b,[n,s],"nearest");return u?gr(xt(dr(w)),l):gr(w,l)})}upsize(t,e,o,n){return z(()=>{let s=AU(t,[e,o]);return gr(s,n)})}call(t,e){return z(()=>{let o=xt(t),n=o.dtype,s=o.shape,i=s[s.length-3],a=s[s.length-2],l=0;i!==this.height&&(l=Math.floor((i-this.height)/2));let c=0;return a!==this.width&&(c=Math.floor((a-this.width)/2),c===0&&(c=1)),l>=0&&c>=0?this.centerCrop(o,l,c,this.height,this.width,i,a,n):this.upsize(t,this.height,this.width,n)})}getConfig(){let t={height:this.height,width:this.width},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){t=Dt(t);let e=t.length-3,o=t.length-2;return t[e]=this.height,t[o]=this.width,t}};Nf.className="CenterCrop";H.registerClass(Nf);function Ik(r,t,e,o){let n=xt(r);if(n.dtype!=="int32"&&(n=gr(n,"int32")),t==="int")return n;let s=n.shape;if(n.rank===0&&(n=ke(n,-1)),t==="oneHot"&&n.shape[n.shape.length-1]!==1&&(n=ke(n,-1)),n.rank>2)throw new O(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${s} which would result in output rank ${n.rank}.`);let i=["multiHot","oneHot"].includes(t),a=n,l;if(typeof o<"u"&&t==="count"?l=Yh(a,o,e,i):l=Yh(a,[],e,i),t!=="tfIdf")return l;if(o)return R(l,o);throw new O("When outputMode is 'tfIdf', weights must be provided.")}var Tf=class extends vt{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){let t={numTokens:this.numTokens,outputMode:this.outputMode},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){return t=Dt(t),t==null?[this.numTokens]:this.outputMode==="oneHot"&&t[t.length-1]!==1?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,e){return z(()=>{t=xt(t),t.dtype!=="int32"&&(t=gr(t,"int32"));let o;if(typeof e.countWeights<"u"){if(this.outputMode!=="count")throw new O(`countWeights is not used when outputMode !== count.
              Received countWeights=${e.countWeights}`);o=xt(e.countWeights)}let n=Je(t),s=oa(t),i=we(this.numTokens,n).bufferSync().get(0),a=_r(s,0).bufferSync().get(0);if(!(i&&a))throw new O(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return Ik(t,this.outputMode,this.numTokens,o)})}};Tf.className="CategoryEncoding";H.registerClass(Tf);var RU=["bilinear","nearest"],Nk=new Set(RU),kf=class extends vt{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation)if(Nk.has(t.interpolation))this.interpolation=t.interpolation;else throw new O(`Invalid interpolation parameter: ${t.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!t.cropToAspectRatio}computeOutputShape(t){t=Dt(t);let e=t[2];return[this.height,this.width,e]}getConfig(){let t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return z(()=>{let o=[this.height,this.width];if(this.interpolation==="bilinear")return jr.resizeBilinear(t,o,!this.cropToAspectRatio);if(this.interpolation==="nearest")return jr.resizeNearestNeighbor(t,o,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...Nk]} are supported`)})}};kf.className="Resizing";H.registerClass(kf);var Ef=class{constructor(t){this.seed=t}next(){if(this.seed!==void 0)return this.seed++}};Ef.className="RandomSeed";var Af=class extends vt{constructor(t){super(t),this.randomGenerator=new Ef(t.seed)}getConfig(){let t={seed:this.randomGenerator.seed},e=super.getConfig();return Object.assign(t,e),t}};Af.className="BaseRandomLayer";var _U=["bilinear","nearest"],Tk=new Set(_U),$f=class extends Af{constructor(t){super(t);let{factor:e,interpolation:o="bilinear"}=t;if(this.factor=e,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new O(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new O(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new O(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(o)if(Tk.has(o))this.interpolation=o;else throw new O(`Invalid interpolation parameter: ${o} is not implemented`)}getConfig(){let t={factor:this.factor,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){t=Dt(t);let e=t[2];return[this.imgHeight,-1,e]}call(t,e){return z(()=>{let o=xt(t);this.imgHeight=o.shape[o.shape.length-3];let n=o.shape[o.shape.length-2];this.widthFactor=Vo([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let s=this.widthFactor.dataSync()[0]*n;s=Math.round(s);let i=[this.imgHeight,s];switch(this.interpolation){case"bilinear":return jr.resizeBilinear(t,i);case"nearest":return jr.resizeNearestNeighbor(t,i);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...Tk]} are supported`)}})}};$f.className="RandomWidth";H.registerClass($f);var BU=P();BU.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,r=>{r&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var Cw;(function(r){r[r.DT_INVALID=0]="DT_INVALID",r[r.DT_FLOAT=1]="DT_FLOAT",r[r.DT_DOUBLE=2]="DT_DOUBLE",r[r.DT_INT32=3]="DT_INT32",r[r.DT_UINT8=4]="DT_UINT8",r[r.DT_INT16=5]="DT_INT16",r[r.DT_INT8=6]="DT_INT8",r[r.DT_STRING=7]="DT_STRING",r[r.DT_COMPLEX64=8]="DT_COMPLEX64",r[r.DT_INT64=9]="DT_INT64",r[r.DT_BOOL=10]="DT_BOOL",r[r.DT_QINT8=11]="DT_QINT8",r[r.DT_QUINT8=12]="DT_QUINT8",r[r.DT_QINT32=13]="DT_QINT32",r[r.DT_BFLOAT16=14]="DT_BFLOAT16",r[r.DT_QINT16=15]="DT_QINT16",r[r.DT_QUINT16=16]="DT_QUINT16",r[r.DT_UINT16=17]="DT_UINT16",r[r.DT_COMPLEX128=18]="DT_COMPLEX128",r[r.DT_HALF=19]="DT_HALF",r[r.DT_RESOURCE=20]="DT_RESOURCE",r[r.DT_VARIANT=21]="DT_VARIANT",r[r.DT_UINT32=22]="DT_UINT32",r[r.DT_UINT64=23]="DT_UINT64",r[r.DT_FLOAT_REF=101]="DT_FLOAT_REF",r[r.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",r[r.DT_INT32_REF=103]="DT_INT32_REF",r[r.DT_UINT8_REF=104]="DT_UINT8_REF",r[r.DT_INT16_REF=105]="DT_INT16_REF",r[r.DT_INT8_REF=106]="DT_INT8_REF",r[r.DT_STRING_REF=107]="DT_STRING_REF",r[r.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",r[r.DT_INT64_REF=109]="DT_INT64_REF",r[r.DT_BOOL_REF=110]="DT_BOOL_REF",r[r.DT_QINT8_REF=111]="DT_QINT8_REF",r[r.DT_QUINT8_REF=112]="DT_QUINT8_REF",r[r.DT_QINT32_REF=113]="DT_QINT32_REF",r[r.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",r[r.DT_QINT16_REF=115]="DT_QINT16_REF",r[r.DT_QUINT16_REF=116]="DT_QUINT16_REF",r[r.DT_UINT16_REF=117]="DT_UINT16_REF",r[r.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",r[r.DT_HALF_REF=119]="DT_HALF_REF",r[r.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",r[r.DT_VARIANT_REF=121]="DT_VARIANT_REF",r[r.DT_UINT32_REF=122]="DT_UINT32_REF",r[r.DT_UINT64_REF=123]="DT_UINT64_REF"})(Cw||(Cw={}));var kk;(function(r){let t;(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(t=r.CheckpointFormatVersion||(r.CheckpointFormatVersion={}))})(kk||(kk={}));var iE=ip(Lp());var oE=ip(Lp());function Zk(r,t){return Jk(r,t)}function Jk(r,t,e=new Map,o=new Set){if(r==null)return null;if(typeof Blob=="function"&&r instanceof Blob)return r.slice();if(o.has(r))throw new Error("Circular references are not supported.");if(e.has(r))return e.get(r);let n=t(r);if(n.recurse&&n.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(n.recurse)if(_u(r)){let s=Array.isArray(r)?[]:{};o.add(r);for(let i in r){let a=r[i],l=Jk(a,t,e,o);s[i]=l}return o.delete(r),r.__proto__&&(s.__proto__=r.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return e.set(r,n.value),n.value}function Qk(r,t=Fw){return tE(r,t)}function tE(r,t,e=new Set){let o=r[0];if(e.has(o))throw new Error("Circular references are not supported.");let n=t(r);if(n.recurse&&n.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(n.recurse)if(_u(o)){let s=Array.isArray(o)?[]:{};e.add(o);for(let i in o){let a=r.map(c=>c[i]),l=tE(a,t,e);s[i]=l}return e.delete(o),s}else throw new Error(`Can't recurse into non-iterable type: ${o}`);else return n.value}function Fw(r){return r===null?null:_u(r[0])?{value:null,recurse:!0}:{value:r,recurse:!1}}function _u(r){let t=!1;if(P().get("IS_BROWSER"))t=r instanceof TextDecoder;else{let{StringDecoder:e}=Yk();t=r instanceof e}return r!=null&&!ArrayBuffer.isView(r)&&(Array.isArray(r)||typeof r=="object"&&!(r instanceof Vt)&&!(r instanceof Promise)&&!t)}function eE(r){return r==null||C4(r)||Array.isArray(r)||typeof r=="object"&&r instanceof Vt||y.isTypedArray(r)}function C4(r){return r===null||typeof r!="object"&&typeof r!="function"}function rE(r){return Zk(r,v4)}function v4(r){return r instanceof Vt?{value:r.clone(),recurse:!1}:_u(r)?{value:null,recurse:!0}:{value:r,recurse:!1}}var Fu=class{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,t==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(let e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.wrap(this.begin+t),o=this.get(e);return this.set(e,this.pop()),o}};var Rf=class r extends Fu{constructor(){super(r.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){let t=this.capacity*2,e=new Array(t),o=this.length();for(let n=0;n<o;n++)e[n]=this.get(this.wrap(this.begin+n));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=o}};Rf.INITIAL_CAPACITY=32;function nE(r){return new Ow(r)}function Kw(r){return new Lw(r)}function sE(r,t){return new Dg(r,t)}var tr=class{toArray(){return B(this,null,function*(){let t=[],e=yield this.next();for(;!e.done;)t.push(e.value),e=yield this.next();return t})}toArrayForTest(){return B(this,null,function*(){let t=this.prefetch(100),e=[],o=yield t.next();for(;!o.done;)e.push(o.value),o=yield t.next();return e})}resolveFully(){return B(this,null,function*(){let t=yield this.next();for(;!t.done;)t=yield this.next()})}resolveWhile(t){return B(this,null,function*(){let e=yield this.next(),o=t(e.value);for(;!e.done&&o;)e=yield this.next(),o=t(e.value)})}handleErrors(t){return new Uw(this,t)}filter(t){return new Vw(this,t)}map(t){return new Gw(this,t)}mapAsync(t){return new $g(this,t)}serialMapAsync(t){return new $g(this,t).serial()}flatmap(t){return new Ww(this,t)}forEachAsync(t){return B(this,null,function*(){return this.map(t).resolveFully()})}serialForEach(t){return B(this,null,function*(){return this.serialMapAsync(t).resolveWhile(e=>e===!0)})}rowMajorBatch(t,e=!0){return new Mw(this,t,e)}columnMajorBatch(t,e=!0,o=Fw){return this.rowMajorBatch(t,e).map(s=>Qk(s,o))}concatenate(t,e){return new Dg(nE([this,t]),e)}take(t){return t<0||t==null?this:new Bw(this,t)}skip(t){return t<0||t==null?this:new zw(this,t)}prefetch(t){return new Rg(this,t)}shuffle(t,e){return new qw(this,t,e)}serial(){return new Pw(this)}},Ow=class extends tr{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}next(){return B(this,null,function*(){if(this.trav>=this.items.length)return{value:null,done:!0};let t=this.items[this.trav];return this.trav++,{value:rE(t),done:!1}})}},Lw=class extends tr{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}next(){return B(this,null,function*(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}})}},Pw=class extends tr{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}next(){return B(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return B(this,null,function*(){return this.upstream.next()})}},zw=class extends tr{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}next(){return B(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return B(this,null,function*(){for(;this.count++<this.maxCount;){let t=yield this.upstream.next();if(t.done)return t;It(t.value)}return this.upstream.next()})}},Bw=class extends tr{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}next(){return B(this,null,function*(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()})}},Mw=class extends tr{constructor(t,e,o=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=o,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}next(){return B(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return B(this,null,function*(){let t=[];for(;t.length<this.batchSize;){let e=yield this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}})}},Vw=class extends tr{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}next(){return B(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return B(this,null,function*(){for(;;){let t=yield this.upstream.next();if(t.done||this.predicate(t.value))return t;It(t.value)}})}},Gw=class extends tr{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}next(){return B(this,null,function*(){let t=yield this.upstream.next();if(t.done)return{value:null,done:!0};let e=go.getTensorsInContainer(t.value),o=this.transform(t.value),n=go.getTensorsInContainer(o);for(let s of e)go.isTensorInList(s,n)||s.dispose();return{value:o,done:!1}})}},Uw=class extends tr{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}next(){return B(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return B(this,null,function*(){for(;;)try{return yield this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}})}},$g=class extends tr{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}next(){return B(this,null,function*(){let t=yield this.upstream.next();if(t.done)return{value:null,done:!0};let e=go.getTensorsInContainer(t.value),o=yield this.transform(t.value),n=go.getTensorsInContainer(o);for(let s of e)go.isTensorInList(s,n)||s.dispose();return{value:o,done:!1}})}},_f=class extends tr{constructor(){super(),this.outputQueue=new Rf,this.lastRead=Promise.resolve({value:null,done:!1})}next(){return B(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return B(this,null,function*(){for(;this.outputQueue.length()===0;)if(!(yield this.pump()))return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}})}},Ww=class extends _f{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}pump(){return B(this,null,function*(){let t=yield this.upstream.next();if(t.done)return!1;let e=go.getTensorsInContainer(t.value),o=this.transform(t.value),n=go.getTensorsInContainer(o);this.outputQueue.pushAll(o);for(let s of e)go.isTensorInList(s,n)||s.dispose();return!0})}},Dg=class extends tr{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}next(){return B(this,null,function*(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead})}readFromChain(t){return B(this,null,function*(){if(yield t,this.iterator==null){let o=yield this.moreIterators.next();if(o.done)return{value:null,done:!0};this.iterator=o.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let e=yield this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e})}},Hw;(function(r){r[r.FAIL=0]="FAIL",r[r.SHORTEST=1]="SHORTEST",r[r.LONGEST=2]="LONGEST"})(Hw||(Hw={}));var Rg=class extends tr{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new Fu(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}},qw=class extends Rg{constructor(t,e,o){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=oE.alea(o||y.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}next(){return B(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}serialNext(){return B(this,null,function*(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let t=this.chooseIndex(),e=yield this.buffer.shuffleExcise(t);if(e.done)this.upstreamExhausted=!0;else return this.refill(),e}return{value:null,done:!0}})}};var Cl=class{constructor(){this.size=null}batch(t,e=!0){let o=this;y.assert(t>0,()=>`batchSize needs to be positive, but it is
      ${t}`);let n;return this.size===1/0||this.size==null?n=this.size:e?n=Math.ceil(this.size/t):n=Math.floor(this.size/t),Zo(()=>B(this,null,function*(){return(yield o.iterator()).columnMajorBatch(t,e,I4)}),n)}concatenate(t){let e=this,o;return this.size===1/0||t.size===1/0?o=1/0:this.size!=null&&t.size!=null?o=this.size+t.size:o=null,Zo(()=>B(this,null,function*(){return(yield e.iterator()).concatenate(yield t.iterator())}),o)}filter(t){let e=this,o;return this.size===1/0?o=1/0:o=null,Zo(()=>B(this,null,function*(){return(yield e.iterator()).filter(n=>z(()=>t(n)))}),o)}forEachAsync(t){return B(this,null,function*(){return(yield this.iterator()).forEachAsync(t)})}map(t){let e=this;return Zo(()=>B(this,null,function*(){return(yield e.iterator()).map(o=>z(()=>t(o)))}),this.size)}mapAsync(t){let e=this;return Zo(()=>B(this,null,function*(){return(yield e.iterator()).mapAsync(t)}),this.size)}prefetch(t){if(t==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let e=this;return Zo(()=>B(this,null,function*(){return(yield e.iterator()).prefetch(t)}),this.size)}repeat(t){let e=this,o;return this.size!=null&&t>0?o=this.size*t:t===0?o=0:this.size!=null&&(t===void 0||t<0)?o=1/0:o=null,Zo(()=>B(this,null,function*(){let n=Kw(()=>B(this,null,function*(){return{value:yield e.iterator(),done:!1}}));return sE(n.take(t))}),o)}skip(t){let e=this,o;return this.size!=null&&t>=0&&this.size>=t?o=this.size-t:this.size!=null&&(this.size<t||t===void 0||t<0)?o=0:o=null,Zo(()=>B(this,null,function*(){return(yield e.iterator()).skip(t)}),o)}shuffle(t,e,o=!0){if(t==null||t<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let n=this,s=iE.alea(e||y.now().toString());return Zo(()=>B(this,null,function*(){let i=s.int32();return o&&(i+=s.int32()),(yield n.iterator()).shuffle(t,i.toString())}),this.size)}take(t){let e=this,o;return this.size!=null&&this.size>t?o=t:this.size!=null&&this.size<=t?o=this.size:o=null,Zo(()=>B(this,null,function*(){return(yield e.iterator()).take(t)}),o)}toArray(){return B(this,null,function*(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(yield this.iterator()).toArray()})}toArrayForTest(){return B(this,null,function*(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(yield this.iterator()).toArrayForTest()})}};Cl.MAX_BUFFER_SIZE=1e4;function Zo(r,t=null){return new class extends Cl{constructor(){super(...arguments),this.size=t}iterator(){return B(this,null,function*(){return r()})}}}function I4(r){if(r===null)return null;let t=r[0];return eE(t)?{value:N4(r),recurse:!1}:{value:null,recurse:!0}}function N4(r){if(r.length===0)throw new Error("Can't make a batch of zero elements.");return r[0]instanceof Vt?Re(r):Gr(r)}var r6t=Symbol("out"),o6t=Symbol("field"),n6t=Symbol("quote"),s6t=Symbol("quoteafterquote"),i6t=Symbol("quoteinquote");function X(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&y.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var O4=ar.whereImpl,Ff=class r extends Rn{nextDataId(){return r.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new va(this,xo())}write(t,e,o){this.firstUse&&(this.firstUse=!1,P().get("IS_NODE")&&S.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let n={id:this.nextDataId()};return this.data.set(n,{values:t,dtype:o,refCount:1}),n}makeTensorInfo(t,e,o){let n;if(e==="string"&&o!=null&&o.length>0&&y.isString(o[0])){let s=o.map(i=>y.encodeString(i));n=this.write(s,t,e)}else n=this.write(o,t,e);return{dataId:n,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){let e=this.data.get(t);e.refCount++}decRef(t){if(this.data.has(t)){let e=this.data.get(t);e.refCount--}}move(t,e,o,n,s){this.data.set(t,{values:e,dtype:n,refCount:s})}numDataIds(){return this.data.numDataIds()}read(t){return B(this,null,function*(){return this.readSync(t)})}readSync(t){let{dtype:e,complexTensorInfos:o}=this.data.get(t);if(e==="complex64"){let n=this.readSync(o.real.dataId),s=this.readSync(o.imag.dataId);return S.mergeRealAndImagArrays(n,s)}return y.convertBackendValuesAndArrayBuffer(this.data.get(t).values,e)}bufferSync(t){let e=this.readSync(t.dataId);if(t.dtype==="string")try{let o=e.map(n=>y.decodeString(n));return dt(t.shape,t.dtype,o)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return dt(t.shape,t.dtype,e)}makeOutput(t,e,o){return xo().makeTensorFromTensorInfo(this.makeTensorInfo(e,o,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;let{complexTensorInfos:o}=this.data.get(t);o!=null&&(this.disposeData(o.real.dataId,!0),this.disposeData(o.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}time(t){return B(this,null,function*(){let e=y.now();return t(),{kernelMs:y.now()-e}})}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){X([t],"where");let e=this.readSync(t.dataId);return O4(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};Ff.nextDataId=0;var IC={};po(IC,{addImpl:()=>Yw,bincountImpl:()=>Pu,bincountReduceImpl:()=>_g,bitwiseAndImpl:()=>Zw,castImpl:()=>Xw,ceilImpl:()=>Jw,concatImpl:()=>Fg,equalImpl:()=>Qw,expImpl:()=>eC,expm1Impl:()=>oC,floorDivImpl:()=>sC,floorImpl:()=>nC,gatherNdImpl:()=>Og,gatherV2Impl:()=>Lg,greaterEqualImpl:()=>aC,greaterImpl:()=>iC,lessEqualImpl:()=>cC,lessImpl:()=>lC,linSpaceImpl:()=>Pg,logImpl:()=>uC,maxImpl:()=>zg,maximumImpl:()=>pC,minimumImpl:()=>mC,multiplyImpl:()=>Of,negImpl:()=>fC,notEqualImpl:()=>hC,prodImpl:()=>dC,raggedGatherImpl:()=>Bg,raggedRangeImpl:()=>Mg,raggedTensorToTensorImpl:()=>Vg,rangeImpl:()=>Gg,rsqrtImpl:()=>xC,scatterImpl:()=>Jo,sigmoidImpl:()=>PE,simpleAbsImpl:()=>jw,sliceImpl:()=>bC,sparseFillEmptyRowsImpl:()=>Ug,sparseReshapeImpl:()=>Wg,sparseSegmentReductionImpl:()=>Bu,sqrtImpl:()=>ME,squaredDifferenceImpl:()=>wC,staticRegexReplaceImpl:()=>CC,stridedSliceImpl:()=>Hg,stringNGramsImpl:()=>qg,stringSplitImpl:()=>Kg,stringToHashBucketFastImpl:()=>jg,subImpl:()=>SC,tileImpl:()=>Xg,topKImpl:()=>Yg,transposeImpl:()=>zu,uniqueImpl:()=>Zg});function jw(r){let t=new Float32Array(r.length);for(let e=0;e<r.length;++e)t[e]=Math.abs(r[e]);return t}var L4=r=>{let{x:t}=r.inputs,e=r.backend;X(t,"abs");let o=new Float32Array(y.sizeFromShape(t.shape)),n=e.data.get(t.dataId).values;return o=jw(n),e.makeOutput(o,t.shape,t.dtype)},aE={kernelName:ni,backendName:"cpu",kernelFunc:L4};function Ot(r){return(t,e,o,n,s)=>{let i=S.assertAndGetBroadcastShape(t,e),a=i.length,l=y.computeStrides(i),c=y.sizeFromShape(i),u=y.getTypedArrayFromDType(s,c),p=t.length,m=e.length,f=y.computeStrides(t),h=y.computeStrides(e),d=S.getBroadcastDims(t,i),g=S.getBroadcastDims(e,i);if(d.length+g.length===0)for(let x=0;x<u.length;++x)u[x]=r(o[x%o.length],n[x%n.length]);else for(let x=0;x<u.length;++x){let b=y.indexToLoc(x,a,l),C=b.slice(-p);d.forEach(A=>C[A]=0);let w=y.locToIndex(C,p,f),v=b.slice(-m);g.forEach(A=>v[A]=0);let E=y.locToIndex(v,m,h);u[x]=r(o[w],n[E])}return[u,i]}}function ze(r){let{inputs:t,backend:e}=r,{real:o,imag:n}=t,s=e.data.get(o.dataId).values,i=e.data.get(n.dataId).values,a=e.makeTensorInfo(o.shape,"complex64"),l=e.data.get(a.dataId);return l.complexTensorInfos={real:e.makeTensorInfo(o.shape,"float32",s),imag:e.makeTensorInfo(n.shape,"float32",i)},a}var lE={kernelName:Kl,backendName:"cpu",kernelFunc:ze};function Ou(r,t,e="float32"){if(e==="complex64"){let n=Ou(r,t,"float32"),s=Ou(r,t,"float32");return ze({inputs:{real:n,imag:s},backend:r})}let o=y.makeZerosTypedArray(y.sizeFromShape(t),e);return r.makeTensorInfo(t,e,o)}function cr(r){let{inputs:t,backend:e}=r,{x:o}=t;return e.incRef(o.dataId),{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}var cE={kernelName:sn,backendName:"cpu",kernelFunc:cr};function $o(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.data.get(o.dataId).complexTensorInfos.real,s=e.data.get(n.dataId).values;return e.makeTensorInfo(n.shape,n.dtype,s)}var uE={kernelName:xc,backendName:"cpu",kernelFunc:$o};function Xw(r,t,e,o){if(o==="int32"){let n=Int32Array.from(r);return[t,"int32",n]}if(o==="bool"){let n=y.toTypedArray([0],e),[s,i]=Ot((a,l)=>a!==l?1:0)(t,[],r,n,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${e} to ${o}`)}function Do(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dtype:s}=o;if(s==="complex64"){if(n.dtype==="complex64")return cr({inputs:{x:n},backend:e});let u=Ou(e,n.shape,n.dtype),p=Do({inputs:{x:n},backend:e,attrs:{dtype:"float32"}}),m=ze({inputs:{real:p,imag:u},backend:e});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(p),m}if(n.dtype==="complex64"){let u=$o({inputs:{input:n},backend:e}),p=Do({inputs:{x:u},backend:e,attrs:{dtype:s}});return e.disposeIntermediateTensorInfo(u),p}if(!y.hasEncodingLoss(n.dtype,s)){let u=cr({inputs:{x:n},backend:e});return{dataId:u.dataId,shape:u.shape,dtype:s}}let i=e.data.get(n.dataId).values,[a,l,c]=Xw(i,n.shape,n.dtype,s);return e.makeTensorInfo(a,l,c)}var pE={kernelName:nn,backendName:"cpu",kernelFunc:Do};function Gt(r,t,e,o){return e==null?({inputs:n,backend:s})=>{let{a:i,b:a}=n,l=s;X([i,a],r);let c=l.data.get(i.dataId).values,u=l.data.get(a.dataId).values,p=i.dtype==="string"?S.fromUint8ToStringArray(c):c,m=i.dtype==="string"?S.fromUint8ToStringArray(u):u,f=o||i.dtype,[h,d]=t(i.shape,a.shape,p,m,f);return l.makeTensorInfo(d,f,h)}:({inputs:n,backend:s})=>{let{a:i,b:a}=n,l=s;if(i.dtype==="complex64"||a.dtype==="complex64"){let c=Do({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),p=u.complexTensorInfos.real,m=u.complexTensorInfos.imag,f=l.data.get(p.dataId).values,h=l.data.get(m.dataId).values,d=Do({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(d.dataId),x=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,C=l.data.get(x.dataId).values,w=l.data.get(b.dataId).values,[v,E,A]=e(i.shape,a.shape,f,h,C,w),$=l.makeTensorInfo(A,"float32",v),F=l.makeTensorInfo(A,"float32",E),L=ze({inputs:{real:$,imag:F},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(d),l.disposeIntermediateTensorInfo($),l.disposeIntermediateTensorInfo(F),L}else{let c=l.data.get(i.dataId).values,u=l.data.get(a.dataId).values,p=o||i.dtype,[m,f]=t(i.shape,a.shape,c,u,p);return l.makeTensorInfo(f,p,m)}}}function Lu(r){return(t,e,o,n,s,i)=>{let a=S.assertAndGetBroadcastShape(t,e),l=y.sizeFromShape(a),c=a.length,u=y.computeStrides(a),p=y.getTypedArrayFromDType("float32",l),m=y.getTypedArrayFromDType("float32",l),f=S.getBroadcastDims(t,a),h=S.getBroadcastDims(e,a),d=S.mergeRealAndImagArrays(o,n),g=S.mergeRealAndImagArrays(s,i),x=t.length,b=y.computeStrides(t),C=e.length,w=y.computeStrides(e);if(f.length+h.length===0)for(let v=0;v<p.length;v++){let E=v%d.length,A=v%g.length,$=r(d[E*2],d[E*2+1],g[A*2],g[A*2+1]);p[v]=$.real,m[v]=$.imag}else for(let v=0;v<p.length;v++){let E=y.indexToLoc(v,c,u),A=E.slice(-x);f.forEach(V=>A[V]=0);let $=y.locToIndex(A,x,b),F=E.slice(-C);h.forEach(V=>F[V]=0);let L=y.locToIndex(F,C,w),M=r(d[$*2],d[$*2+1],g[L*2],g[L*2+1]);p[v]=M.real,m[v]=M.imag}return[p,m,a]}}var Yw=Ot((r,t)=>r+t),P4=Lu((r,t,e,o)=>({real:r+e,imag:t+o})),Nn=Gt(Po,Yw,P4),mE={kernelName:Po,backendName:"cpu",kernelFunc:Nn};function Pu(r,t,e,o,n){let s=y.sizeFromShape(o),i=y.makeZerosTypedArray(n,e);for(let a=0;a<r.length;a++){let l=r[a];if(l<0)throw new Error("Input x must be non-negative!");l>=n||(s>0?i[l]+=t[a]:i[l]+=1)}return i}function _g(r,t,e,o=!1){let n=r.shape[0],s=r.shape[1],i=dt([n,e],t.dtype);for(let a=0;a<n;a++)for(let l=0;l<s;l++){let c=r.get(a,l);if(c<0)throw new Error("Input x must be non-negative!");c>=e||(o?i.set(1,a,c):t.size>0?i.set(i.get(a,c)+t.get(a,l),a,c):i.set(i.get(a,c)+1,a,c))}return i}var Zw=Ot((r,t)=>r&t),z4=Gt(mp,Zw),fE={kernelName:mp,backendName:"cpu",kernelFunc:z4};function Ke(r){return(t,e,o)=>{let n=y.getArrayFromDType(e,t.length);for(let s=0;s<t.length;++s)n[s]=r(t[s],o);return n}}function St(r,t,e){let o=Ke(t);return Or(r,o,e)}function Or(r,t,e){return({inputs:o,attrs:n,backend:s})=>{let{x:i}=o;X(i,r);let a=s,l=a.data.get(i.dataId).values,c;if(i.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");c=S.fromUint8ToStringArray(l)}else c=l;let u=e||i.dtype,p=t(c,u,n);return a.makeTensorInfo(i.shape,u,p)}}var Jw=Ke(r=>Math.ceil(r)),B4=Or(Vn,Jw),hE={kernelName:Vn,backendName:"cpu",kernelFunc:B4};function Fg(r,t,e,o){let n=y.getArrayFromDType(e,y.sizeFromShape(t));if(o&&e!=="string"){let s=0;r.forEach(i=>{let a=y.sizeFromShape(i.shape);n.set(i.vals,s),s+=a})}else{let s=0;r.forEach(i=>{let a=e==="string"?S.fromUint8ToStringArray(i.vals):i.vals,l=0;for(let c=0;c<i.shape[0];++c){let u=c*t[1]+s;for(let p=0;p<i.shape[1];++p)n[u+p]=a[l++]}s+=i.shape[1]})}return n}var Qw=Ot((r,t)=>r===t?1:0),tC=Gt(Ta,Qw,null,"bool"),dE={kernelName:Ta,backendName:"cpu",kernelFunc:tC};var eC=Ke(r=>Math.exp(r)),rC=Or(jn,eC,"float32"),gE={kernelName:jn,backendName:"cpu",kernelFunc:rC};var oC=Ke(r=>Math.expm1(r)),M4=Or(Xn,oC),xE={kernelName:Xn,backendName:"cpu",kernelFunc:M4};var nC=Ke(r=>Math.floor(r)),V4=Or(Yn,nC),yE={kernelName:Yn,backendName:"cpu",kernelFunc:V4};var sC=Ot((r,t)=>Math.floor(r/t)),G4=Gt(Zn,sC,null,"int32"),bE={kernelName:Zn,backendName:"cpu",kernelFunc:G4};function Og(r,t,e,o,n,s,i,a,l){let c=dt([o,s],e);for(let u=0;u<o;u++){let p=[],m=0;for(let f=0;f<n;f++){let h=r[u*n+f];m+=h*i[f],p.push(h)}if(m<0||m>=l/s)throw new Error(`Invalid indices: ${p} does not index into ${a}`);for(let f=0;f<s;f++)c.values[u*s+f]=t.get(...t.indexToLoc(m*s+f))}return c}function Lg(r,t,e){let o=dt(e,r.dtype);for(let n=0;n<o.size;++n){let i=o.indexToLoc(n).slice(),a=i[0],l=i[2],c=t.locToIndex([a,l]);i[2]=t.values[c];let u=r.locToIndex(i);0<=u&&u<r.values.length&&(o.values[n]=r.values[u])}return o}var iC=Ot((r,t)=>r>t?1:0),U4=Gt(ka,iC,null,"bool"),wE={kernelName:ka,backendName:"cpu",kernelFunc:U4};var aC=Ot((r,t)=>r>=t?1:0),W4=Gt(Jn,aC,null,"bool"),CE={kernelName:Jn,backendName:"cpu",kernelFunc:W4};var lC=Ot((r,t)=>r<t?1:0),H4=Gt(Ea,lC,null,"bool"),vE={kernelName:Ea,backendName:"cpu",kernelFunc:H4};var cC=Ot((r,t)=>r<=t?1:0),q4=Gt(Aa,cC,null,"bool"),SE={kernelName:Aa,backendName:"cpu",kernelFunc:q4};function Pg(r,t,e){let o=(t-r)/(e-1),n=y.makeZerosTypedArray(e,"float32");n[0]=r;for(let s=1;s<n.length;s++)n[s]=n[s-1]+o;return n}var uC=Ke(r=>Math.log(r)),K4=Or(rs,uC),IE={kernelName:rs,backendName:"cpu",kernelFunc:K4};function zg(r,t,e,o){let n=y.getTypedArrayFromDType(o,y.sizeFromShape(e));for(let s=0;s<n.length;++s){let i=s*t,a=r[i];for(let l=0;l<t;++l){let c=r[i+l];(Number.isNaN(c)||c>a)&&(a=c)}n[s]=a}return n}var pC=Ot((r,t)=>Math.max(r,t)),j4=Gt(ns,pC),NE={kernelName:ns,backendName:"cpu",kernelFunc:j4};var mC=Ot((r,t)=>Math.min(r,t)),X4=Gt(ss,mC),TE={kernelName:ss,backendName:"cpu",kernelFunc:X4};var Of=Ot((r,t)=>r*t),Y4=Lu((r,t,e,o)=>({real:r*e-t*o,imag:r*o+t*e})),vl=Gt(as,Of,Y4),kE={kernelName:as,backendName:"cpu",kernelFunc:vl};function fC(r,t,e){let o=y.createScalarValue(-1,e);return Of([],t,o,r,e)}function Z4(r){let{inputs:t,backend:e}=r,{x:o}=t;X(o,"neg");let n=e.data.get(o.dataId).values,[s,i]=fC(n,o.shape,o.dtype);return e.makeTensorInfo(i,o.dtype,s)}var EE={kernelName:$i,backendName:"cpu",kernelFunc:Z4};var hC=Ot((r,t)=>r!==t?1:0),J4=Gt(_a,hC,null,"bool"),AE={kernelName:_a,backendName:"cpu",kernelFunc:J4};function zu(r,t,e,o,n){let s=t.length,i=y.sizeFromShape(t),a=y.computeStrides(t),l=y.computeStrides(n),c=y.getTypedArrayFromDType(e,y.sizeFromShape(n));for(let u=0;u<i;++u){let p=y.indexToLoc(u,s,a),m=new Array(p.length);for(let h=0;h<m.length;h++)m[h]=p[o[h]];let f=y.locToIndex(m,s,l);c[f]=r[u]}return c}function ge(r){let{inputs:t,attrs:e,backend:o}=r,{x:n}=t,{perm:s}=e;X(n,"transpose");let i=n.shape.length,a=new Array(i);for(let p=0;p<a.length;p++)a[p]=n.shape[s[p]];let l=o.data.get(n.dataId).values,c=zu(l,n.shape,n.dtype,s,a);return{dataId:o.write(c,a,n.dtype),shape:a,dtype:n.dtype}}var $E={kernelName:ln,backendName:"cpu",kernelFunc:ge};function dC(r,t,e,o){let[n,s]=S.computeOutAndReduceShapes(r,o),i=$e(t,"int32"),a=y.makeZerosTypedArray(y.sizeFromShape(n),i),l=y.sizeFromShape(s);for(let c=0;c<a.length;++c){let u=c*l,p=1;for(let m=0;m<l;++m)p*=e[u+m];a[c]=p}return{outVals:a,outShape:n,outDtype:i}}function Q4(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o;X(n,"prod");let a=n.shape.length,l=y.parseAxisParam(s,n.shape),c=S.getAxesPermutation(l,a),u=l,p=n,m=[];c!=null&&(p=ge({inputs:{x:n},backend:e,attrs:{perm:c}}),m.push(p),u=S.getInnerMostAxes(u.length,a));let f=e.data.get(p.dataId).values,{outVals:h,outShape:d,outDtype:g}=dC(p.shape,p.dtype,f,u),x=d;return i&&(x=S.expandShapeToKeepDim(d,l)),m.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.makeTensorInfo(x,g,h)}var DE={kernelName:Li,backendName:"cpu",kernelFunc:Q4};function tH(r,t,e){r.forEach((o,n)=>{if(o<0||o>=e){let s=y.indexToLoc(n,t.length,y.computeStrides(t)).join(",");throw new Error(`indices[${s}] = ${o} is not in [0, ${e})`)}})}function eH(r,t){for(let e=0;e<r.length;++e){let o=r[e],n=e===r.length-1?t:r[e+1].length;if(o.length===0)throw new Error("Ragged splits may not be empty");if(o[0]<0)throw new Error("Ragged splits must be non-negative");if(o[o.length-1]>n)throw new Error("Ragged splits must not point past values");for(let s=1;s<o.length;++s)if(o[s-1]>o[s])throw new Error("Ragged splits must be sorted in ascending order")}}function rH(r,t,e,o){let n=[],s=0,i=t.length-1+e.length,a=new Array(i).fill(null).map(()=>[0]);eH(e,o);let l=1;for(let c=0;c<t.length-1;++c){l*=t[c];let u=t[c+1];for(let p=1;p<l+1;++p)a[c].push(p*u)}for(let c=0;c<r.length;++c){let u=r[c],p=r[c]+1;for(let m=0;m<e.length;++m){let f=e[m],h=m+t.length-1;if(h>=0){let d=a[h],g=d[d.length-1]-f[u];for(let x=u;x<p;++x)a[h].push(f[x+1]+g)}u=f[u],p=f[p]}p!==u&&(n.push([u,p]),s+=p-u)}return{outSplits:a,valueSlices:n,numValues:s}}function oH(r){let t=[];for(let e=0;e<r.length;++e){let o=r[e].length,n=y.getArrayFromDType("int32",o);t.push(n),r[e].forEach((s,i)=>n[i]=s)}return t}function RE(r,t){let e=r.slice(0,t);for(;e.length<t;)e.push(1);for(let o=t;o<r.length;o++)e[t-1]*=r[o];return e}function nH(r,t,e,o,n,s){let i=RE(t,2)[1],a=RE(s,2)[1],l=0;for(let c of e)for(let u=c[0];u<c[1];++u){for(let p=0;p<o;++p)n[l*a+p]=r[u*i+p];++l}}function sH(r,t,e,o,n){let s=t.slice();s[0]=n;let i=y.getArrayFromDType(e,y.sizeFromShape(s)),a=r.length,l=a===0?0:a/t[0];return nH(r,t,o,l,i,s),[i,s]}function Bg(r,t,e,o,n,s,i,a){if(r.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");let l=t[0][0]-1;if(tH(s,i,l),o.length===0)throw new Error("params.rank must be nonzero");let c=o[0],{outSplits:u,valueSlices:p,numValues:m}=rH(s,i,r,c),f=oH(u),h=sH(e,o,n,p,m);return[f,h[0],h[1]]}var _E=2147483647;function Mg(r,t,e,o,n,s,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(n.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");let a=t.length===0,l=n.length===0,c=i.length===0,u=[];a||u.push(t[0]),l||u.push(n[0]),c||u.push(i[0]);for(let g=1;g<u.length;++g)if(u[g]!==u[g-1])throw new Error("starts, limits, and deltas must have the same shape");let p=u.length===0?1:u[0],m=y.getArrayFromDType("int32",p+1);m[0]=0;for(let g=0;g<p;++g){let x=a?r[0]:r[g],b=l?o[0]:o[g],C=c?s[0]:s[g];if(C===0)throw new Error("Requires delta != 0");let w;if(C>0&&b<x||C<0&&b>x)w=0;else if(w=Math.ceil(Math.abs((b-x)/C)),w>_E)throw new Error(`Requires ((limit - start) / delta) <= ${_E}`);m[g+1]=m[g]+w}let f=m[p],h=y.getArrayFromDType(e,f),d=0;for(let g=0;g<p;++g){let x=m[g+1]-m[g],b=a?r[0]:r[g],C=c?s[0]:s[g];for(let w=0;w<x;++w)h[d++]=b,b+=C}return[m,h]}var Ro=S.RowPartitionType,gC=class r{constructor(t,e,o,n,s,i,a,l,c,u){this.shape=t,this.shapeShape=e,this.values=o,this.valuesShape=n,this.valuesDType=s,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=S.getRowPartitionTypesHelper(u),this.raggedRank=S.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===Ro.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===Ro.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){let e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case Ro.VALUE_ROWIDS:return r.getMaxWidthValueRowID(e);case Ro.ROW_SPLITS:return r.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${Ro[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){let e=t.length;if(e===0||e===1)return 0;let o=0;for(let n=0;n<e-1;++n){let s=t[n+1]-t[n];s>o&&(o=s)}return o}static getMaxWidthValueRowID(t){let e=t.length;if(e===0)return 0;let o=0,n=t[0],s=0;for(let i=1;i<e;++i){let a=t[i];a!==n&&(n=a,s=Math.max(i-o,s),o=i)}return Math.max(e-o,s)}tensorShapeFromTensor(t,e,o=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return OE(t,o)}calculateOutputSize(t){let e=this.valuesShape,o=this.defaultValueShape;S.validateDefaultValueShape(o,e);let n=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=S.combineRaggedTensorToTensorShapes(this.raggedRank,n,e);i[0]<0&&(i[0]=t);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(t,e,o){let n=Math.min(t,o),s=[],i=0;for(let a=0;a<n;++a,i+=e)s.push(i);for(let a=n;a<t;++a)s.push(-1);return y.assert(s.length===t,()=>"Final length of result must be equal to firstDimension."),s}calculateOutputIndexRowSplit(t,e,o,n){let s=t.length,i=[];for(let a=0;a<s-1;++a){let l=t[a+1]-t[a],c=Math.min(n,l),u=e[a];u===-1&&(c=0);for(let p=0;p<c;++p)i.push(u),u+=o;for(let p=0;p<l-c;++p)i.push(-1)}if(s>0&&i.length!==t[s-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(t,e,o,n){let s=t.length,i=[];if(s===0)return[];let a=0,l=t[0];if(l>=e.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${e.length}`);let c=e[l];i.push(c);for(let u=1;u<s;++u){let p=t[u];if(p===l)c>=0&&(++a,a<n?c+=o:c=-1);else{if(a=0,l=p,p>=e.length)throw new Error(`Got nextValueRowId=${p} which is not less than ${e.length}`);c=e[p]}i.push(c)}if(i.length!==t.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(t,e,o,n){let s=this.getRowPartitionTensor(t),i=this.getRowPartitionTypeByDimension(t);switch(i){case Ro.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,e,o,n);case Ro.ROW_SPLITS:if(s.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(s,e,o,n);default:throw new Error(`Unsupported partition type: ${Ro[i]}`)}}getFirstDimensionSize(){let t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let e=this.rowPartitionTypes[0];switch(e){case Ro.FIRST_DIM_SIZE:return t[0];case Ro.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Ro.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Ro[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),o=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let l=n.length-2;l>=0;--l)n[l]=n[l+1]*o[l+1];let s=OE(o,!1),i=y.getArrayFromDType(this.valuesDType,y.sizeFromShape(s));if(n[0]*o[0]>0){let l=this.calculateFirstParentOutputIndex(e,n[0],o[0]);for(let c=1;c<=this.raggedRank;++c)l=this.calculateOutputIndex(c-1,l,n[c],o[c]);this.setOutput(this.raggedRank,l,i,s)}return[s,i]}setOutput(t,e,o,n){if(o.length===0)return;let s=this.values,i=o,a=n.slice();a=a.slice(t+1);let l=y.sizeFromShape(a),c=e.length,u=this.defaultValue;if(u.length!==l&&u.length!==1){let h=this.defaultValueShape;z(()=>{let d=_(u,h);u=As(d,a).dataSync()})}let p=0,m=0,f=0;for(let h=0;h<=c;++h){let d=h<c?e[h]:-1;if(d===f){++f;continue}if(m<f){let g=s.subarray(p*l),x=i.subarray(m*l),b=(f-m)*l;FE(x,g,b)}if(h>=c){let g=o.length;d=Math.floor(g/l)}if(d>f)if(this.defaultValue.length===1)i.subarray(f*l,d*l).fill(this.defaultValue[0]),f=d;else for(;d>f;){let g=i.slice(f*l);FE(g,u,l),++f}d<0?(p=h+1,m=f):(p=h,m=f,f=m+1)}}};function FE(r,t,e){for(let o=0;o<e;o++)r[o]=t[o]}function OE(r,t){let e=[];for(let o of r){if(o<0){if(!t)throw new Error(`Dimension ${o} must be >= 0`);if(o<-1)throw new Error(`Dimension ${o} must be >= -1`);o=-1}e.push(o)}return e}function Vg(r,t,e,o,n,s,i,a,l,c){return new gC(r,t,e,o,n,s,i,a,l,c).compute()}function Gg(r,t,e,o){let n=r===t,s=r<t&&e<0,i=t<r&&e>1;if(n||s||i)return y.makeZerosTypedArray(0,o);let a=Math.abs(Math.ceil((t-r)/e)),l=y.makeZerosTypedArray(a,o);t<r&&e===1&&(e=-1),l[0]=r;for(let c=1;c<l.length;c++)l[c]=l[c-1]+e;return l}var xC=Ke(r=>1/Math.sqrt(r)),iH=Or(fs,xC),LE={kernelName:fs,backendName:"cpu",kernelFunc:iH};function Jo(r,t,e,o,n,s,i,a,l,c){let u=[o/n,n],p=r.values,m=t.values;if(o===0)return dt(e,t.dtype);let f=l instanceof jt?l:dt(u,t.dtype);typeof l=="string"||typeof l=="number"?f.values.fill(l):typeof l=="boolean"&&f.values.fill(+l);for(let h=0;h<s;h++){let d=[],g=0;for(let x=0;x<i;x++){let b=p[h*i+x];d.push(b),g+=b*a[x]}if(g<0||g>=o/n)throw new Error(`Invalid indices: ${d} does not index into ${e}`);for(let x=0;x<n;x++)c?f.values[g*n+x]+=m[h*n+x]:f.values[g*n+x]=t.rank===0?m[0]:m[h*n+x]}return f}var PE=Ke(r=>1/(1+Math.exp(-r))),yC=St(ys,r=>1/(1+Math.exp(-r))),zE={kernelName:ys,backendName:"cpu",kernelFunc:yC};function bC(r,t,e,o,n){let s=Ue.isSliceContinous(o,t,e),i=y.sizeFromShape(e),a=y.computeStrides(o);if(s){let p=Ue.computeFlatOffset(t,a);return n==="string"?r.slice(p,p+i):r.subarray(p,p+i)}let l=n==="string"?S.fromUint8ToStringArray(r):r,c=dt(o,n,l),u=dt(e,n);for(let p=0;p<u.size;++p){let m=u.indexToLoc(p),f=m.map((h,d)=>h+t[d]);u.set(c.get(...f),...m)}return n==="string"?S.fromStringArrayToUint8(u.values):u.values}function _o(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:s,size:i}=o;X(n,"slice");let[a,l]=Ue.parseSliceParams(n,s,i);Ue.assertParamsValid(n,a,l);let c=e.data.get(n.dataId).values,u=bC(c,a,l,n.shape,n.dtype);return e.makeTensorInfo(l,n.dtype,u)}var BE={kernelName:Gi,backendName:"cpu",kernelFunc:_o};function Ug(r,t,e,o,n,s,i){let a=t[0],l=s[0],c=new Array(l),u=new Array(a),p=t[1];if(l===0){if(a!==0)throw new Error(S.getSparseFillEmptyRowsIndicesDenseShapeMismatch(a));let g=y.getArrayFromDType(e,0),x=y.getArrayFromDType(n,0);return[g,[0,p],x,c,u]}let m=!0,f=0,h=new Array(l).fill(0);for(let g=0;g<a;++g){let x=r[g*p];if(x<0)throw new Error(S.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,x));if(x>=l)throw new Error(S.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,x,l));++h[x],m=m&&x>=f,f=x}let d=!0;for(let g=0;g<l;++g){let x=h[g]===0;c[g]=x,d=d&&!x,h[g]=Math.max(h[g],1),g>0&&(h[g]+=h[g-1])}if(d&&m){let g=r,x=o;for(let b=0;b<a;++b)u[b]=b;return[g,[a,p],x,c,u]}else{let g=h[l-1],x=y.getArrayFromDType(e,g*p),b=y.getArrayFromDType(n,g),C=new Array(l).fill(0);for(let w=0;w<a;++w){let v=r[w*p],E=C[v],A=(v===0?0:h[v-1])+E;C[v]++;for(let $=0;$<p;++$)x[A*p+$]=r[w*p+$];b[A]=o[w],u[w]=A}for(let w=0;w<l;++w)if(C[w]===0){let E=w===0?0:h[w-1];x[E*p+0]=w;for(let A=1;A<p;++A)x[E*p+A]=0;b[E]=i}return[x,[g,p],b,c,u]}}function Wg(r,t,e,o,n){let s=y.sizeFromShape(o),i=t[0],a=n.length,l=[],c=1,u=-1;for(let g=0;g<a;++g){let x=n[g];if(x===-1){if(u!==-1)throw new Error(S.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(u,g));u=g,l.push(1)}else{if(x<0)throw new Error(S.getSparseReshapeNegativeOutputDimErrorMessage(g,x));c*=x,l.push(x)}}if(u!==-1){if(c<=0)throw new Error(S.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(s/c);if(c*g!==s)throw new Error(S.getSparseReshapeInputOutputMultipleErrorMessage(o,l));l[u]=g}if(y.sizeFromShape(l)!==s)throw new Error(S.getSparseReshapeInputOutputMismatchErrorMessage(o,l));let m=o.length,f=[];if(m>0){f[m-1]=1;for(let g=m-2;g>=0;--g)f[g]=f[g+1]*o[g+1]}let h=[];if(a>0){h[a-1]=1;for(let g=a-2;g>=0;--g)h[g]=h[g+1]*l[g+1]}let d=y.getArrayFromDType(e,i*a);for(let g=0;g<i;++g){let x=0;for(let b=0;b<m;++b)x+=r[g*m+b]*f[b];for(let b=0;b<a;++b)d[g*a+b]=Math.trunc(x/h[b]),x%=h[b]}return[d,[i,a],l]}function Bu(r,t,e,o,n,s=!1,i=0){let a=o.length,l=[t[0],r.length/t[0]],c=l[1],p=a>0?n[a-1]+1:0;if(p<0)throw new Error(S.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=t.slice();m[0]=p;let f=m.reduce((C,w)=>C*w,1),h=y.getArrayFromDType(e,f);if(a===0)return p>0&&h.fill(i),[h,m];if(p<=0)throw new Error(S.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=0,g=1,x=0,b=n[d];for(;;){let C=0;if(g<a){if(C=n[g],b===C){++g;continue}if(b>=C)throw new Error(S.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(b<0||b>=p)throw new Error(S.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b,p));b>x&&h.fill(i,x*c,b*c);for(let w=d;w<g;++w){let v=o[w];if(v<0||v>=l[0])throw new Error(S.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(w,o[w],l[0]));for(let E=0;E<c;E++)h[b*c+E]+=r[v*c+E]}if(s)for(let w=0;w<c;w++)h[b*c+w]/=g-d;if(d=g,++g,x=b+1,b=C,g>a)break}return x<p&&h.fill(i,x*c,p*c),[h,m]}var ME=Ke(r=>Math.sqrt(r)),aH=St(ws,r=>Math.sqrt(r)),VE={kernelName:ws,backendName:"cpu",kernelFunc:aH};var wC=Ot((r,t)=>{let e=r-t;return e*e}),lH=Gt(Cs,wC),GE={kernelName:Cs,backendName:"cpu",kernelFunc:lH};var CC=Ke((r,t)=>{let{pattern:e,replaceGlobal:o,rewrite:n}=t;return r.replace(new RegExp(e,o?"g":""),n)}),cH=Or(dp,CC),UE={kernelName:dp,backendName:"cpu",kernelFunc:cH};function Hg(r,t,e,o){let n=dt(r,t.dtype);for(let s=0;s<n.size;s++){let i=n.indexToLoc(s),a=new Array(i.length);for(let l=0;l<a.length;l++)a[l]=i[l]*e[l]+o[l];n.set(t.get(...a),...i)}return n}var vC=class{constructor(t,e,o,n,s,i){this.separator=y.encodeString(t),this.nGramWidths=e,this.leftPad=y.encodeString(o),this.rightPad=y.encodeString(n),this.padWidth=s,this.preserveShort=i}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){let o=this.getPadWidth(e);return Math.max(0,t+2*o-e+1)}createNGrams(t,e,o,n,s,i){for(let a=0;a<s;++a){let l=this.getPadWidth(i),c=Math.max(0,l-a),u=Math.max(0,l-(s-(a+1))),p=i-(c+u),m=e+(c>0?0:a-l),f=0;f+=c*this.leftPad.length;for(let b=0;b<p;++b)f+=t[m+b].length;f+=u*this.rightPad.length;let h=c+u+p-1;f+=h*this.separator.length,o[n+a]=new Uint8Array(f);let d=o[n+a],g=0,x=b=>b.forEach(C=>d[g++]=C);for(let b=0;b<c;++b)x(this.leftPad),x(this.separator);for(let b=0;b<p-1;++b)x(t[m+b]),x(this.separator);if(p>0){x(t[m+p-1]);for(let b=0;b<u;++b)x(this.separator),x(this.rightPad)}else{for(let b=0;b<u-1;++b)x(this.rightPad),x(this.separator);x(this.rightPad)}}}compute(t,e){let o=t.length,n=e.length;if(n>0){let l=e[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let c=1;c<n;++c){let u=e[c]>=l;if(u=u&&e[c]<=o,!u)throw new Error(`Invalid split value ${e[c]}, must be in [${l}, ${o}]`);l=e[c]}if(l!==o)throw new Error(`Last split value must be data size. Expected ${o}, got ${l}`)}let s=n-1,i=y.getArrayFromDType("int32",n);if(o===0||n===0){let l=new Array(o);for(let c=0;c<=s;++c)i[c]=0;return[l,i]}i[0]=0;for(let l=1;l<=s;++l){let c=e[l]-e[l-1],u=0;this.nGramWidths.forEach(p=>{u+=this.getNumNGrams(c,p)}),this.preserveShort&&c>0&&u===0&&(u=1),i[l]=i[l-1]+u}let a=new Array(i[s]);for(let l=0;l<s;++l){let c=e[l],u=i[l];if(this.nGramWidths.forEach(p=>{let m=e[l+1]-e[l],f=this.getNumNGrams(m,p);this.createNGrams(t,c,a,u,f,p),u+=f}),this.preserveShort&&u===i[l]){let p=e[l+1]-e[l];if(p===0)continue;let m=p+2*this.padWidth;this.createNGrams(t,c,a,u,1,m)}}return[a,i]}};function qg(r,t,e,o,n,s,i,a){return new vC(e,o,n,s,i,a).compute(r,t)}function uH(r,t,e,o){if(!r.length)return;if(t.length===0){for(let s=0;s<r.length;++s)o.push(r.subarray(s,s+1));return}if(t.length===1){let s=t[0],i=r.indexOf(s);for(;i!==-1;){let a=r.subarray(0,i);(!e||a.length!==0)&&o.push(a),r=r.subarray(i+1),i=r.indexOf(s)}(!e||r.length!==0)&&o.push(r);return}let n=0;for(let s=0;s<r.length+1;s++)if(s===r.length||t.indexOf(r[s])!==-1){let i=r.subarray(n,s);(!e||i.length!==0)&&o.push(i),n=s+1}}function Kg(r,t,e){let o=r.length,n=[],s=0,i=0,a=new Array(o);for(let m=0;m<o;++m){let f=n.length;uH(r[m],t,e,n);let h=n.length-f;a[m]=h,s+=h,i=Math.max(i,h)}let l=y.getArrayFromDType("int32",s*2),c=new Array(s),u=[o,i],p=0;for(let m=0;m<o;++m)for(let f=0;f<a[m];++f)l[p*2]=m,l[p*2+1]=f,c[p]=n[p],++p;return[l,c,u]}function jg(r,t){let e=y.getArrayFromDType("int32",r.length);for(let o=0;o<r.length;++o)e[o]=y.fingerPrint64(r[o]).modulo(t).getLowBitsUnsigned();return e}var SC=Ot((r,t)=>r-t),pH=Lu((r,t,e,o)=>({real:r-e,imag:t-o})),Lf=Gt(vs,SC,pH),WE={kernelName:vs,backendName:"cpu",kernelFunc:Lf};function Xg(r,t){let e=new Array(r.rank);for(let n=0;n<e.length;n++)e[n]=r.shape[n]*t[n];let o=dt(e,r.dtype);for(let n=0;n<o.values.length;++n){let s=o.indexToLoc(n),i=new Array(r.rank);for(let l=0;l<i.length;l++)i[l]=s[l]%r.shape[l];let a=r.locToIndex(i);o.values[n]=r.values[a]}return o}var Pf=(r,t)=>{let e=t.value-r.value;return e===0?r.index-t.index:e};function HE(r,t,e=0,o=r.length-1){for(;o>e;){if(o-e>600){let a=o-e+1,l=t-e+1,c=Math.log(a),u=.5*Math.exp(2*c/3),p=.5*Math.sqrt(c*u*(a-u)/a)*Math.sign(l-a/2),m=Math.max(e,Math.floor(t-l*u/a+p)),f=Math.min(o,Math.floor(t+(a-l)*u/a+p));HE(r,t,m,f)}let n=r[t],s=e,i=o;for(y.swap(r,e,t),Pf(r[o],n)>0&&y.swap(r,e,o);s<i;){for(y.swap(r,s,i),s++,i--;Pf(r[s],n)<0;)s=s+1;for(;Pf(r[i],n)>0;)i=i-1}Pf(r[e],n)===0?y.swap(r,e,i):(i=i+1,y.swap(r,i,o)),i<=t&&(e=i+1),t<=i&&(o=i-1)}}function Yg(r,t,e,o,n){let s=t[t.length-1],[i,a]=[r.length/s,s],l=y.getTypedArrayFromDType(e,i*o),c=y.getTypedArrayFromDType("int32",i*o);for(let p=0;p<i;p++){let m=p*a,f=r.subarray(m,m+a),h=new Array(f.length);f.forEach((b,C)=>h[C]={value:b,index:C}),o<h.length&&(HE(h,o),h=h.slice(0,o)),n&&h.sort(Pf);let d=p*o,g=l.subarray(d,d+o),x=c.subarray(d,d+o);for(let b=0;b<o;b++)g[b]=h[b].value,x[b]=h[b].index}let u=t.slice();return u[u.length-1]=o,[dt(u,e,l),dt(u,"int32",c)]}function Zg(r,t,e,o){let n=y.parseAxisParam(t,e)[0],s=[1,e[0],1];for(let h=0;h<n;h++)s[0]*=e[h];s[1]=e[n];for(let h=n+1;h<e.length;h++)s[2]*=e[h];let i=new Map,a=new Int32Array(e[n]),l=new jt(s,o,r),c=[],u=s[0]===1&&s[2]===1;for(let h=0;h<e[n];h++){let d;if(u)d=r[h].toString();else{let x=[];for(let b=0;b<s[0];b++)for(let C=0;C<s[2];C++)x.push(l.get(b,h,C));d=x.join(",")}let g=i.get(d);if(g!=null)a[h]=g;else{let x=i.size;i.set(d,x),a[h]=x,c.push(h)}}let p=s.slice();p[1]=i.size;let m=new jt(p,o);c.forEach((h,d)=>{for(let g=0;g<s[0];g++)for(let x=0;x<s[2];x++)m.set(l.get(g,h,x),g,d,x)});let f=e.slice();return f[n]=p[1],{outputValues:m.values,outputShape:f,indices:a}}Mh("cpu",()=>new Ff,1);var NC=St(qn,r=>r>=0?r:Math.exp(r)-1),qE={kernelName:qn,backendName:"cpu",kernelFunc:NC};function TC(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{alpha:s}=o;X([n],"leakyRelu");let i=y.sizeFromShape(n.shape),a=e.data.get(n.dataId).values,l=y.getTypedArrayFromDType("float32",i);for(let c=0;c<a.length;c++)l[c]=a[c]<0?s*a[c]:a[c];return e.makeTensorInfo(n.shape,"float32",l)}var KE={kernelName:vi,backendName:"cpu",kernelFunc:TC};var mH=Ot((r,t)=>r<0?t*r:r);function kC(r){let{inputs:t,backend:e}=r,{x:o,alpha:n}=t;X([o,n],"prelu");let s=e.data.get(o.dataId).values,i=e.data.get(n.dataId).values,[a,l]=mH(o.shape,n.shape,s,i,"float32");return e.makeTensorInfo(l,"float32",a)}var jE={kernelName:Oi,backendName:"cpu",kernelFunc:kC};var EC=St(us,r=>Math.max(0,r)),XE={kernelName:us,backendName:"cpu",kernelFunc:EC};var AC=St(ps,r=>Math.min(Math.max(0,r),6)),YE={kernelName:ps,backendName:"cpu",kernelFunc:AC};function Sl(r,t,e,o,n){if(e==="linear")return cr({inputs:{x:t},backend:r});if(e==="relu")return EC({inputs:{x:t},backend:r});if(e==="elu")return NC({inputs:{x:t},backend:r});if(e==="relu6")return AC({inputs:{x:t},backend:r});if(e==="prelu")return kC({inputs:{x:t,alpha:o},backend:r});if(e==="leakyrelu")return TC({inputs:{x:t},backend:r,attrs:{alpha:n}});if(e==="sigmoid")return yC({inputs:{x:t},backend:r});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}function Lt(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{shape:s}=o,i=y.sizeFromShape(n.shape),a=y.inferFromImplicitShape(s,i),l=y.sizeFromShape(a);y.assert(i===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${n.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),e.incRef(n.dataId);let c=e.data.get(n.dataId);if(c.complexTensorInfos!=null){let u=c.complexTensorInfos.real,p=c.complexTensorInfos.imag;u.shape=a,p.shape=a}return{dataId:n.dataId,shape:a,dtype:n.dtype}}var ZE={kernelName:Pi,backendName:"cpu",kernelFunc:Lt};function $C(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:s}=t,{transposeA:i,transposeB:a}=o;X([n,s],"matMul");let l=n.shape.length,c=s.shape.length,u=i?n.shape[l-2]:n.shape[l-1],p=a?s.shape[c-1]:s.shape[c-2],m=i?n.shape[l-1]:n.shape[l-2],f=a?s.shape[c-2]:s.shape[c-1],h=n.shape.slice(0,-2),d=s.shape.slice(0,-2),g=y.sizeFromShape(h),x=y.sizeFromShape(d),C=Hr.assertAndGetBroadcastShape(n.shape.slice(0,-2),s.shape.slice(0,-2)).concat([m,f]);y.assert(u===p,()=>`Error in matMul: inner shapes (${u}) and (${p}) of Tensors with shapes ${n.shape} and ${s.shape} and transposeA=${i} and transposeB=${a} must match.`);let w=i?[g,u,m]:[g,m,u],v=a?[x,f,p]:[x,p,f],E=Lt({inputs:{x:n},backend:e,attrs:{shape:w}}),A=Lt({inputs:{x:s},backend:e,attrs:{shape:v}}),$=i?E.shape[1]:E.shape[2],F=i?E.shape[2]:E.shape[1],L=a?A.shape[1]:A.shape[2],M=Math.max(g,x),V=e.data.get(E.dataId).values,G=e.data.get(A.dataId).values,W=y.computeStrides(E.shape),U=y.computeStrides(A.shape),[K,J,q]=i?[W[0],1,W[1]]:[W[0],W[1],1],[Q,rt,ot]=a?[1,U[1],U[0]]:[U[1],1,U[0]],it=F*L,st=dt([M,F,L],E.dtype),pt=st.values,at=e.blockSize;for(let ft=0;ft<M;ft++){let Nt=ft%g,$t=ft%x;for(let kt=0;kt<F;kt+=at){let zt=Math.min(kt+at,F);for(let Bt=0;Bt<L;Bt+=at){let oe=Math.min(Bt+at,L);for(let pe=0;pe<$;pe+=at){let Ae=Math.min(pe+at,$);for(let me=kt;me<zt;me++)for(let ae=Bt;ae<oe;ae++){let Te=0;for(let Ce=pe;Ce<Ae;Ce++){let $n=V[Nt*K+me*J+Ce*q],or=G[Ce*Q+ae*rt+$t*ot];Te+=$n*or}pt[ft*it+(me*L+ae)]+=Te}}}}}return e.disposeIntermediateTensorInfo(E),e.disposeIntermediateTensorInfo(A),e.makeTensorInfo(C,st.dtype,st.values)}var JE={kernelName:ci,backendName:"cpu",kernelFunc:$C};function fH(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:s,bias:i,preluActivationWeights:a}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:p}=o,m,f,h,d=[];m=$C({inputs:{a:n,b:s},attrs:{transposeA:l,transposeB:c},backend:e}),i&&(f=Nn({inputs:{a:m,b:i},backend:e}),d.push(m),m=f),u&&(h=Sl(e,m,u,a,p),d.push(m),m=h);for(let x of d)e.disposeIntermediateTensorInfo(x);return m}var QE={kernelName:Fa,backendName:"cpu",kernelFunc:fH};var hH=St(Fn,r=>Math.acos(r)),tA={kernelName:Fn,backendName:"cpu",kernelFunc:hH};var dH=St(On,r=>Math.acosh(r)),eA={kernelName:On,backendName:"cpu",kernelFunc:dH};function gH(r){let{inputs:t,backend:e}=r,o=t;X(t,"addN");let n=o.map(a=>e.data.get(a.dataId).values),s=dt(o[0].shape,o[0].dtype),i=s.values;for(let a=0;a<o.length;a++){let l=n[a];for(let c=0;c<i.length;c++)i[c]+=l[c]}return e.makeTensorInfo(s.shape,s.dtype,s.values)}var rA={kernelName:Vl,backendName:"cpu",kernelFunc:gH};function xH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o;X(n,"all");let a=y.parseAxisParam(s,n.shape),l=a,c=S.getAxesPermutation(l,n.shape.length),u=n;c!=null&&(u=ge({inputs:{x:n},backend:e,attrs:{perm:c}}),l=S.getInnerMostAxes(l.length,n.shape.length)),S.assertAxesAreInnerMostDims("all",l,u.shape.length);let[p,m]=S.computeOutAndReduceShapes(u.shape,l),f=y.sizeFromShape(m),h=y.makeZerosTypedArray(y.sizeFromShape(p),u.dtype),d=e.data.get(u.dataId).values;for(let x=0;x<h.length;++x){let b=x*f,C=d[b];for(let w=0;w<f;++w){let v=d[b+w];C=C&&v}h[x]=C}c!=null&&e.disposeIntermediateTensorInfo(u);let g=e.makeTensorInfo(p,u.dtype,h);if(i){let x=S.expandShapeToKeepDim(p,a),b=Lt({inputs:{x:g},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(g),b}return g}var oA={kernelName:Gl,backendName:"cpu",kernelFunc:xH};function yH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o;X(n,"any");let a=y.parseAxisParam(s,n.shape),l=a,c=S.getAxesPermutation(l,n.shape.length),u=n;c!=null&&(u=ge({inputs:{x:n},backend:e,attrs:{perm:c}}),l=S.getInnerMostAxes(l.length,n.shape.length)),S.assertAxesAreInnerMostDims("any",l,u.shape.length);let[p,m]=S.computeOutAndReduceShapes(u.shape,l),f=y.sizeFromShape(m),h=y.makeZerosTypedArray(y.sizeFromShape(p),u.dtype),d=e.data.get(u.dataId).values;for(let x=0;x<h.length;++x){let b=x*f,C=d[b];for(let w=0;w<f;++w){let v=d[b+w];C=C||v}h[x]=C}c!=null&&e.disposeIntermediateTensorInfo(u);let g=e.makeTensorInfo(p,u.dtype,h);if(i){let x=S.expandShapeToKeepDim(p,a),b=Lt({inputs:{x:g},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(g),b}return g}var nA={kernelName:Ul,backendName:"cpu",kernelFunc:yH};function bH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s}=o;X(n,"argMax");let i=y.parseAxisParam(s,n.shape),a=S.getAxesPermutation(i,n.shape.length),l=n,c=[];a!=null&&(l=ge({inputs:{x:n},backend:e,attrs:{perm:a}}),c.push(l),i=S.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],S.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[u,p]=S.computeOutAndReduceShapes(l.shape,i),m=y.sizeFromShape(u),f=y.makeZerosTypedArray(m,"int32"),h=y.sizeFromShape(p),d=e.data.get(l.dataId).values;for(let g=0;g<f.length;++g){let x=g*h,b=d[x],C=0;for(let w=0;w<h;++w){let v=d[x+w];v>b&&(b=v,C=w)}f[g]=C}return c.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(u,"int32",f)}var sA={kernelName:si,backendName:"cpu",kernelFunc:bH};function wH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s}=o;X(n,"argMin");let i=y.parseAxisParam(s,n.shape),a=S.getAxesPermutation(i,n.shape.length),l=n,c=[];a!=null&&(l=ge({inputs:{x:n},backend:e,attrs:{perm:a}}),c.push(l),i=S.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],S.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[u,p]=S.computeOutAndReduceShapes(l.shape,i),m=y.sizeFromShape(u),f=y.makeZerosTypedArray(m,"int32"),h=y.sizeFromShape(p),d=e.data.get(l.dataId).values;for(let g=0;g<f.length;++g){let x=g*h,b=d[x],C=0;for(let w=0;w<h;++w){let v=d[x+w];v<b&&(b=v,C=w)}f[g]=C}return c.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(u,"int32",f)}var iA={kernelName:ii,backendName:"cpu",kernelFunc:wH};var CH=St(Ln,r=>Math.asin(r)),aA={kernelName:Ln,backendName:"cpu",kernelFunc:CH};var vH=St(Pn,r=>Math.asinh(r)),lA={kernelName:Pn,backendName:"cpu",kernelFunc:vH};var SH=St(zn,r=>Math.atan(r)),cA={kernelName:zn,backendName:"cpu",kernelFunc:SH};var IH=Ot((r,t)=>Math.atan2(r,t)),NH=Gt(Mn,IH),uA={kernelName:Mn,backendName:"cpu",kernelFunc:NH};var TH=St(Bn,r=>Math.atanh(r)),pA={kernelName:Bn,backendName:"cpu",kernelFunc:TH};function Mu(r,t,e,o,n,s){let i=n.strideHeight,a=n.strideWidth,l=n.dilationHeight,c=n.dilationWidth,u=n.effectiveFilterHeight,p=n.effectiveFilterWidth,m=n.padInfo.top,f=n.padInfo.left,h=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,d=dt(n.outShape,e),g=d.values,x=n.outShape[1]*n.outShape[2]*n.outShape[3],b=n.outShape[2]*n.outShape[3],C=n.outShape[3];for(let w=0;w<n.batchSize;++w){let v=w*x,E=w*o[0];for(let A=0;A<n.inChannels;++A)for(let $=0;$<n.outHeight;++$){let F=$*i-m,L=Math.max(0,F),M=Math.min(n.inHeight,u+F),V=v+$*b;for(let G=0;G<n.outWidth;++G){let W=G*a-f,U=Math.max(0,W),K=Math.min(n.inWidth,p+W),J=h,q=0,Q=0;for(let ot=L;ot<M;ot+=l){let it=E+ot*o[1];for(let st=U;st<K;st+=c){let pt=it+st*o[2],at=r[pt+A];s==="max"&&at>J?J=at:s==="avg"&&(q+=at,Q++)}if(isNaN(J))break}let rt=V+G*C+A;g[rt]=s==="avg"?q/Q:J}}}return d}function Jg(r,t,e,o,n=!1,s=!1){let i=dt(o.outShape,"int32"),a=o.strideHeight,l=o.strideWidth,c=o.dilationHeight,u=o.dilationWidth,p=o.effectiveFilterHeight,m=o.effectiveFilterWidth,f=o.padInfo.top,h=o.padInfo.left,d=dt(t,e,r);for(let g=0;g<o.batchSize;++g)for(let x=0;x<o.inChannels;++x)for(let b=0;b<o.outHeight;++b){let C=b*a-f,w=C;for(;w<0;)w+=c;let v=Math.min(o.inHeight,p+C);for(let E=0;E<o.outWidth;++E){let A=E*l-h,$=A;for(;$<0;)$+=u;let F=Math.min(o.inWidth,m+A),L=Number.NEGATIVE_INFINITY,M=-1;for(let V=w;V<v;V+=c){let G=V-C;for(let W=$;W<F;W+=u){let U=W-A,K=d.get(g,V,W,x);K>L&&(L=K,n?M=s?((g*o.inHeight+V)*o.inWidth+W)*o.inChannels+x:(V*o.inWidth+W)*o.inChannels+x:M=G*m+U)}}i.set(M,g,b,E,x)}}return i}function Qg(r,t,e,o,n,s){let i=n.strideDepth,a=n.strideHeight,l=n.strideWidth,c=n.dilationDepth,u=n.dilationHeight,p=n.dilationWidth,m=n.effectiveFilterDepth,f=n.effectiveFilterHeight,h=n.effectiveFilterWidth,d=n.padInfo.front,g=n.padInfo.top,x=n.padInfo.left,b=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,C=dt(n.outShape,e),w=C.values,v=n.outShape[1]*n.outShape[2]*n.outShape[3]*n.outShape[4],E=n.outShape[2]*n.outShape[3]*n.outShape[4],A=n.outShape[3]*n.outShape[4],$=n.outShape[4];for(let F=0;F<n.batchSize;++F){let L=F*v,M=F*o[0];for(let V=0;V<n.inChannels;++V)for(let G=0;G<n.outDepth;++G){let W=G*i-d,U=W;for(;U<0;)U+=c;let K=Math.min(n.inDepth,m+W),J=L+G*E;for(let q=0;q<n.outHeight;++q){let Q=q*a-g,rt=Q;for(;rt<0;)rt+=u;let ot=Math.min(n.inHeight,f+Q),it=J+q*A;for(let st=0;st<n.outWidth;++st){let pt=st*l-x,at=pt;for(;at<0;)at+=p;let ft=Math.min(n.inWidth,h+pt),Nt=it+st*$,$t=b,kt=0,zt=0;for(let oe=U;oe<K;oe+=c){let pe=M+oe*o[1];for(let Ae=rt;Ae<ot;Ae+=u){let me=pe+Ae*o[2];for(let ae=at;ae<ft;ae+=p){let Te=me+ae*o[3],Ce=r[Te+V];if(s==="max"&&Ce>$t?$t=Ce:s==="avg"&&(kt+=Ce,zt++),isNaN($t))break}if(isNaN($t))break}if(isNaN($t))break}let Bt=Nt+V;w[Bt]=s==="avg"?kt/Math.max(zt,1):$t}}}}return C}function mA(r,t){let e=dt(t.outShape,"int32"),o=t.strideDepth,n=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,a=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,u=t.effectiveFilterHeight,p=t.effectiveFilterWidth,m=t.padInfo.front,f=t.padInfo.top,h=t.padInfo.left;for(let d=0;d<t.batchSize;++d)for(let g=0;g<t.inChannels;++g)for(let x=0;x<t.outDepth;++x){let b=x*o-m,C=b;for(;C<0;)C+=i;let w=Math.min(t.inDepth,c+b);for(let v=0;v<t.outHeight;++v){let E=v*n-f,A=E;for(;A<0;)A+=a;let $=Math.min(t.inHeight,u+E);for(let F=0;F<t.outWidth;++F){let L=F*s-h,M=L;for(;M<0;)M+=l;let V=Math.min(t.inWidth,p+L),G=Number.NEGATIVE_INFINITY,W=-1;for(let U=C;U<w;U+=i){let K=U-b;for(let J=A;J<$;J+=a){let q=J-E;for(let Q=M;Q<V;Q+=l){let rt=Q-L,ot=r.get(d,U,J,Q,g);ot>=G&&(G=ot,W=K*u*p+q*u+rt)}}}e.set(W,d,x,v,F,g)}}}return e}function kH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t;X(n,"avgPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:l}=o,c=1;y.assert(S.eitherStridesOrDilationsAreOne(i,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let u=S.computePool2DInfo(n.shape,s,i,c,a,l),p;if(u.filterWidth===1&&u.filterHeight===1&&y.arraysEqual(u.inShape,u.outShape))p=cr({inputs:{x:n},backend:e});else{let m=e.data.get(n.dataId).values,f=y.computeStrides(n.shape),h=Mu(m,n.shape,n.dtype,f,u,"avg");p=e.makeTensorInfo(u.outShape,n.dtype,h.values)}return p}var fA={kernelName:ai,backendName:"cpu",kernelFunc:kH};function EH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:s,strides:i,pad:a,dimRoundingMode:l,dataFormat:c}=o;X(n,"avgPool3d");let u=S.computePool3DInfo(n.shape,s,i,1,a,l,c),p=e.data.get(n.dataId).values,m=Qg(p,n.shape,n.dtype,y.computeStrides(n.shape),u,"avg");return e.makeTensorInfo(m.shape,"float32",m.values)}var hA={kernelName:li,backendName:"cpu",kernelFunc:EH};function AH(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:s}=t,{filterSize:i,strides:a,pad:l,dimRoundingMode:c}=o;X([n,s],"avgPool3DGrad");let u=S.computePool3DInfo(s.shape,i,a,1,l,c),p=u.strideDepth,m=u.strideHeight,f=u.strideWidth,h=u.filterDepth,d=u.filterHeight,g=u.filterWidth,x=u.dilationDepth,b=u.dilationHeight,C=u.dilationWidth,w=u.effectiveFilterDepth,v=u.effectiveFilterHeight,E=u.effectiveFilterWidth,A=w-1-u.padInfo.front,$=E-1-u.padInfo.left,F=v-1-u.padInfo.top,L=dt(s.shape,"float32"),M=1/(h*d*g),V=e.bufferSync(n);for(let G=0;G<u.batchSize;++G)for(let W=0;W<u.inChannels;++W)for(let U=0;U<u.inDepth;++U)for(let K=0;K<u.inHeight;++K)for(let J=0;J<u.inWidth;++J){let q=U-A,Q=K-F,rt=J-$,ot=0;for(let it=0;it<w;it+=x){let st=(q+it)/p;if(!(st<0||st>=u.outDepth||Math.floor(st)!==st))for(let pt=0;pt<v;pt+=b){let at=(Q+pt)/m;if(!(at<0||at>=u.outHeight||Math.floor(at)!==at))for(let ft=0;ft<E;ft+=C){let Nt=(rt+ft)/f;if(Nt<0||Nt>=u.outWidth||Math.floor(Nt)!==Nt)continue;let $t=V.get(G,st,at,Nt,W);ot+=$t}}}L.set(ot*M,G,U,K,J,W)}return e.makeTensorInfo(L.shape,L.dtype,L.values)}var dA={kernelName:Hl,backendName:"cpu",kernelFunc:AH};function $H(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:s}=t,i=s;X([n,s],"avgPoolGrad");let{filterSize:a,strides:l,pad:c}=o,u=S.computePool2DInfo(i.shape,a,l,1,c),p=u.strideHeight,m=u.strideWidth,f=u.filterHeight,h=u.filterWidth,d=u.dilationHeight,g=u.dilationWidth,x=u.effectiveFilterHeight,b=u.effectiveFilterWidth,C=b-1-u.padInfo.left,w=x-1-u.padInfo.top,v=dt(i.shape,"float32"),E=1/(f*h),A=e.data.get(n.dataId).values,$=dt(n.shape,"float32",A);for(let F=0;F<u.batchSize;++F)for(let L=0;L<u.inChannels;++L)for(let M=0;M<u.inHeight;++M)for(let V=0;V<u.inWidth;++V){let G=M-w,W=V-C,U=0;for(let K=0;K<x;K+=d){let J=(G+K)/p;if(!(J<0||J>=u.outHeight||Math.floor(J)!==J))for(let q=0;q<b;q+=g){let Q=(W+q)/m;if(Q<0||Q>=u.outWidth||Math.floor(Q)!==Q)continue;let rt=$.get(F,J,Q,L);U+=rt}}v.set(U*E,F,M,V,L)}return e.makeTensorInfo(v.shape,v.dtype,v.values)}var gA={kernelName:Wl,backendName:"cpu",kernelFunc:$H};function DH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,scale:s,offset:i,mean:a,variance:l}=t;y.assert(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),y.assert(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),y.assert(s==null||a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),X([n,a,l,s,i],"batchNorm");let{varianceEpsilon:c}=o;c==null&&(c=.001);let u=e.data.get(n.dataId).values,p=e.data.get(a.dataId).values,m=e.data.get(l.dataId).values,f=s?e.data.get(s.dataId).values:new Float32Array([1]),h=i?e.data.get(i.dataId).values:new Float32Array([0]),d=new Float32Array(u.length),g=h.length,x=f.length,b=m.length,C=p.length,w=0,v=0,E=0,A=0;for(let $=0;$<u.length;++$)d[$]=h[w++]+(u[$]-p[v++])*f[E++]/Math.sqrt(m[A++]+c),w>=g&&(w=0),v>=C&&(v=0),E>=x&&(E=0),A>=b&&(A=0);return e.makeTensorInfo(n.shape,n.dtype,d)}var xA={kernelName:wi,backendName:"cpu",kernelFunc:DH};function RH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:s,crops:i}=o;X([n],"batchToSpaceND");let a=s.reduce((x,b)=>x*b),l=S.getReshaped(n.shape,s,a),c=S.getPermuted(l.length,s.length),u=S.getReshapedPermuted(n.shape,s,a),p=S.getSliceBeginCoords(i,s.length),m=S.getSliceSize(u,i,s.length),f=Lt({inputs:{x:n},backend:e,attrs:{shape:l}}),h=ge({inputs:{x:f},backend:e,attrs:{perm:c}}),d=Lt({inputs:{x:h},backend:e,attrs:{shape:u}}),g=_o({inputs:{x:d},backend:e,attrs:{begin:p,size:m}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),g}var yA={kernelName:ui,backendName:"cpu",kernelFunc:RH};function _H(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:s}=t,{size:i}=o,a=e.data.get(n.dataId).values,l=e.data.get(s.dataId).values,c=Pu(a,l,s.dtype,s.shape,i);return e.makeTensorInfo([i],s.dtype,c)}var bA={kernelName:ql,backendName:"cpu",kernelFunc:_H};function FH(r){let{inputs:t,backend:e}=r,{s0:o,s1:n}=t,s=e.data.get(o.dataId).values,i=e.data.get(n.dataId).values,a=S.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}var wA={kernelName:ch,backendName:"cpu",kernelFunc:FH};var OH=St(Gn,(r,t)=>{let e=t;return r>e.clipValueMax?e.clipValueMax:r<e.clipValueMin?e.clipValueMin:r}),CA={kernelName:Gn,backendName:"cpu",kernelFunc:OH};var LH=r=>{let{x:t}=r.inputs,e=r.backend,o=new Float32Array(y.sizeFromShape(t.shape)),n=e.data.get(t.dataId),s=n.complexTensorInfos.real,i=n.complexTensorInfos.imag,a=e.data.get(s.dataId).values,l=e.data.get(i.dataId).values;for(let c=0;c<a.length;c++){let u=a[c],p=l[c];o[c]=Math.hypot(u,p)}return e.makeOutput(o,t.shape,"float32")},vA={kernelName:pi,backendName:"cpu",kernelFunc:LH};function Tn(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.data.get(o.dataId).complexTensorInfos.imag,s=e.data.get(n.dataId).values;return e.makeTensorInfo(n.shape,n.dtype,s)}var SA={kernelName:cc,backendName:"cpu",kernelFunc:Tn};function ha(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o,s=y.parseAxisParam(n,t[0].shape)[0],i=t.map(d=>d.shape);S.assertParamsConsistent(i,s);let a=S.computeOutShape(t.map(d=>d.shape),s);if(y.sizeFromShape(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);let l=t.filter(d=>y.sizeFromShape(d.shape)>0);if(l.length===1)return cr({inputs:{x:l[0]},backend:e});if(l[0].dtype==="complex64"){let d=l.map(w=>$o({inputs:{input:w},backend:e})),g=l.map(w=>Tn({inputs:{input:w},backend:e})),x=ha({inputs:d,backend:e,attrs:{axis:s}}),b=ha({inputs:g,backend:e,attrs:{axis:s}}),C=ze({inputs:{real:x,imag:b},backend:e});return d.forEach(w=>e.disposeIntermediateTensorInfo(w)),g.forEach(w=>e.disposeIntermediateTensorInfo(w)),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(b),C}let c=l.map(d=>{let x=[-1,y.sizeFromShape(d.shape.slice(s))];return Lt({inputs:{x:d},backend:e,attrs:{shape:x}})}),u=c.map(d=>({vals:e.data.get(d.dataId).values,shape:d.shape}));a=S.computeOutShape(c.map(d=>d.shape),1);let p=c[0].shape[0]===1,m=Fg(u,a,t[0].dtype,p),f=S.computeOutShape(l.map(d=>d.shape),s),h=e.makeTensorInfo(f,t[0].dtype,m);return c.forEach(d=>e.disposeIntermediateTensorInfo(d)),h}var IA={kernelName:mi,backendName:"cpu",kernelFunc:ha};function DC(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s}=t,{strides:i,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=o;X([n,s],"conv2d");let p=S.convertConv2DDataFormat(l),m=S.computeConv2DInfo(n.shape,s.shape,i,c,a,u,!1,p),f=m.filterHeight,h=m.filterWidth,d=m.dilationHeight,g=m.dilationWidth,x=m.padInfo.left,b=m.padInfo.top,C=m.dataFormat==="channelsLast",w=new jt(m.outShape,n.dtype),v=y.computeStrides(n.shape),E=y.computeStrides(s.shape),A=v[0],$=C?v[1]:v[2],F=C?v[2]:1,L=C?1:v[1],M=w.strides[0],V=C?w.strides[1]:w.strides[2],G=C?w.strides[2]:1,W=C?1:w.strides[1],U=e.data.get(n.dataId).values,K=e.data.get(s.dataId).values,J=w.values;for(let q=0;q<m.batchSize;++q){let Q=q*A,rt=q*M;for(let ot=0;ot<m.outHeight;++ot){let it=rt+ot*V,st=ot*m.strideHeight-b;for(let pt=0;pt<f;++pt){let at=st+pt*d;if(at<0||at>=m.inHeight)continue;let ft=pt*E[0],Nt=Q+at*$;for(let $t=0;$t<m.outWidth;++$t){let kt=it+$t*G,zt=$t*m.strideWidth-x;for(let Bt=0;Bt<h;++Bt){let oe=zt+Bt*g;if(oe<0||oe>=m.inWidth)continue;let pe=ft+Bt*E[1],Ae=Nt+oe*F,me=pe;for(let ae=0;ae<m.inChannels;++ae){let Te=U[Ae+ae*L];for(let Ce=0;Ce<m.outChannels;++Ce)J[kt+Ce*W]+=Te*K[me+Ce];me+=m.outChannels}}}}}}return e.makeTensorInfo(w.shape,w.dtype,J)}var NA={kernelName:fi,backendName:"cpu",kernelFunc:DC};function PH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:s}=t,{strides:i,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=o;X([n,s],"conv2dBackpropFilter");let p=S.convertConv2DDataFormat(l),m=S.computeConv2DInfo(n.shape,u,i,1,a,c,!1,p),{strideHeight:f,strideWidth:h,filterHeight:d,filterWidth:g}=m,x=m.dataFormat==="channelsLast",b=new jt(m.filterShape,"float32"),C=m.padInfo.left,w=m.padInfo.top,v=e.data.get(n.dataId).values,E=e.data.get(s.dataId).values,A=new jt(n.shape,n.dtype,v),$=new jt(s.shape,s.dtype,E);for(let F=0;F<d;++F){let L=Math.max(0,Math.ceil((w-F)/f)),M=Math.min(m.outHeight,(m.inHeight+w-F)/f);for(let V=0;V<g;++V){let G=Math.max(0,Math.ceil((C-V)/h)),W=Math.min(m.outWidth,(m.inWidth+C-V)/h);for(let U=0;U<m.inChannels;++U)for(let K=0;K<m.outChannels;++K){let J=0;for(let q=0;q<m.batchSize;++q)for(let Q=L;Q<M;++Q){let rt=F+Q*f-w;for(let ot=G;ot<W;++ot){let it=V+ot*h-C;x?J+=A.get(q,rt,it,U)*$.get(q,Q,ot,K):J+=A.get(q,U,rt,it)*$.get(q,K,Q,ot)}}b.set(J,F,V,U,K)}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}var TA={kernelName:jl,backendName:"cpu",kernelFunc:PH};function zH(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:s}=t,{inputShape:i,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=o;X([n,s],"conv2dBackpropInput");let p=y.computeStrides(s.shape),m=y.computeStrides(n.shape),f=S.convertConv2DDataFormat(c),h=S.computeConv2DInfo(i,s.shape,a,1,l,u,!1,f),d=new jt(h.inShape,"float32"),g=d.values,x=e.data.get(n.dataId).values,b=e.data.get(s.dataId).values,[C,w,v]=p,{batchSize:E,filterHeight:A,filterWidth:$,inChannels:F,inHeight:L,inWidth:M,outChannels:V,outHeight:G,outWidth:W,strideHeight:U,strideWidth:K}=h;f=h.dataFormat;let J=A-1-h.padInfo.top,q=$-1-h.padInfo.left,Q=f==="channelsLast",rt=d.strides[0],ot=Q?d.strides[1]:d.strides[2],it=Q?d.strides[2]:1,st=Q?1:d.strides[1],pt=m[0],at=Q?m[1]:m[2],ft=Q?m[2]:1,Nt=Q?1:m[1];for(let $t=0;$t<E;++$t)for(let kt=0;kt<F;++kt)for(let zt=0;zt<L;++zt){let Bt=zt-J,oe=Math.max(0,Math.ceil(Bt/U)),pe=Math.min(G,(A+Bt)/U);for(let Ae=0;Ae<M;++Ae){let me=Ae-q,ae=Math.max(0,Math.ceil(me/K)),Te=Math.min(W,($+me)/K),Ce=0;for(let or=oe;or<pe;++or){let Xs=or*U-Bt;for(let eo=ae;eo<Te;++eo){let Ca=eo*K-me,Oo=pt*$t+at*or+ft*eo,Dn=C*(A-1-Xs)+w*($-1-Ca)+v*kt;for(let Ys=0;Ys<V;++Ys){let Zs=x[Oo+Nt*Ys],Js=b[Dn+Ys];Ce+=Zs*Js}}}let $n=rt*$t+ot*zt+it*Ae+st*kt;g[$n]=Ce}}return e.makeTensorInfo(d.shape,d.dtype,d.values)}var kA={kernelName:hi,backendName:"cpu",kernelFunc:zH};function BH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s}=t,{strides:i,pad:a,dilations:l}=o;X([n,s],"conv3d");let c=S.computeConv3DInfo(n.shape,s.shape,i,l,a),{filterDepth:u,filterHeight:p,filterWidth:m,dilationDepth:f,dilationHeight:h,dilationWidth:d,padInfo:g}=c,x=g.front,b=g.left,C=g.top,w=new jt(c.outShape,n.dtype),v=e.data.get(n.dataId).values,E=e.data.get(s.dataId).values,A=w.values,$=y.computeStrides(n.shape),F=y.computeStrides(s.shape);for(let L=0;L<c.batchSize;++L){let M=L*$[0],V=L*w.strides[0];for(let G=0;G<c.outDepth;++G){let W=V+G*w.strides[1],U=G*c.strideDepth-x;for(let K=0;K<u;++K){let J=U+K*f;if(J<0||J>=c.inDepth)continue;let q=K*F[0],Q=M+J*$[1];for(let rt=0;rt<c.outHeight;++rt){let ot=W+rt*w.strides[2],it=rt*c.strideHeight-C;for(let st=0;st<p;++st){let pt=it+st*h;if(pt<0||pt>=c.inHeight)continue;let at=q+st*F[1],ft=Q+pt*$[2];for(let Nt=0;Nt<c.outWidth;++Nt){let $t=ot+Nt*c.outChannels,kt=Nt*c.strideWidth-b;for(let zt=0;zt<m;++zt){let Bt=kt+zt*d;if(Bt<0||Bt>=c.inWidth)continue;let oe=at+zt*F[2],pe=ft+Bt*c.inChannels,Ae=oe;for(let me=0;me<c.inChannels;++me){let ae=v[pe+me];for(let Te=0;Te<c.outChannels;++Te)A[$t+Te]+=ae*E[Ae+Te];Ae+=c.outChannels}}}}}}}}return e.makeTensorInfo(w.shape,w.dtype,w.values)}var EA={kernelName:di,backendName:"cpu",kernelFunc:BH};function MH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:s}=t,{strides:i,pad:a,filterShape:l}=o;X([n,s],"conv3dBackpropFilterV2");let c=y.computeStrides(n.shape),u=y.computeStrides(s.shape),p=S.computeConv3DInfo(n.shape,l,i,1,a),m=p.strideDepth,f=p.strideHeight,h=p.strideWidth,d=p.filterDepth,g=p.filterHeight,x=p.filterWidth,b=new jt(p.filterShape,"float32"),C=b.values,[w,v,E,A]=b.strides,$=e.data.get(s.dataId).values,[F,L,M,V]=u,G=e.data.get(n.dataId).values,[W,U,K,J]=c,q=p.padInfo.front,Q=p.padInfo.left,rt=p.padInfo.top;for(let ot=0;ot<d;++ot){let it=Math.max(0,Math.ceil((q-ot)/m)),st=Math.min(p.outDepth,(p.inDepth+q-ot)/m),pt=ot*w;for(let at=0;at<g;++at){let ft=Math.max(0,Math.ceil((rt-at)/f)),Nt=Math.min(p.outHeight,(p.inHeight+rt-at)/f),$t=at*v+pt;for(let kt=0;kt<x;++kt){let zt=Math.max(0,Math.ceil((Q-kt)/h)),Bt=Math.min(p.outWidth,(p.inWidth+Q-kt)/h),oe=kt*E+$t;for(let pe=0;pe<p.inChannels;++pe){let Ae=pe*A+oe;for(let me=0;me<p.outChannels;++me){let ae=0;for(let Te=0;Te<p.batchSize;++Te){let Ce=Te*W,$n=Te*F;for(let or=it;or<st;++or){let eo=(ot+or*m-q)*U+Ce,Ca=or*L+$n;for(let Oo=ft;Oo<Nt;++Oo){let Ys=(at+Oo*f-rt)*K+eo,Zs=Oo*M+Ca;for(let Js=zt;Js<Bt;++Js){let ob=(kt+Js*h-Q)*J+Ys,nb=Js*V+Zs;ae+=G[ob+pe]*$[nb+me]}}}}C[Ae+me]=ae}}}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}var AA={kernelName:Xl,backendName:"cpu",kernelFunc:MH};function VH(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:s}=t,{pad:i,strides:a,inputShape:l}=o;X([n],"conv3dBackpropInputV2");let c=y.computeStrides(n.shape),u=y.computeStrides(s.shape),p=S.computeConv3DInfo(l,s.shape,a,1,i),m=new jt(p.inShape,"float32"),f=m.values,[h,d,g,x]=m.strides,b=e.data.get(n.dataId).values,[C,w,v,E]=c,A=e.data.get(s.dataId).values,[$,F,L,M]=u,{batchSize:V,filterDepth:G,filterHeight:W,filterWidth:U,inChannels:K,inDepth:J,inHeight:q,inWidth:Q,outChannels:rt,outDepth:ot,outHeight:it,outWidth:st,strideDepth:pt,strideHeight:at,strideWidth:ft}=p,Nt=G-1-p.padInfo.front,$t=W-1-p.padInfo.top,kt=U-1-p.padInfo.left;for(let zt=0;zt<V;++zt)for(let Bt=0;Bt<K;++Bt)for(let oe=0;oe<J;++oe){let pe=oe-Nt,Ae=Math.max(0,Math.ceil(pe/pt)),me=Math.min(ot,(G+pe)/pt);for(let ae=0;ae<q;++ae){let Te=ae-$t,Ce=Math.max(0,Math.ceil(Te/at)),$n=Math.min(it,(W+Te)/at);for(let or=0;or<Q;++or){let Xs=or-kt,eo=Math.max(0,Math.ceil(Xs/ft)),Ca=Math.min(st,(U+Xs)/ft),Oo=0;for(let Dn=Ae;Dn<me;++Dn){let Ys=Dn*pt-pe;for(let Zs=Ce;Zs<$n;++Zs){let Js=Zs*at-Te;for(let sp=eo;sp<Ca;++sp){let ob=sp*ft-Xs,nb=C*zt+w*Dn+v*Zs+E*sp,TL=$*(G-1-Ys)+F*(W-1-Js)+L*(U-1-ob)+M*Bt;for(let sh=0;sh<rt;++sh){let kL=b[nb+sh],EL=A[TL+sh];Oo+=kL*EL}}}}f[h*zt+d*oe+g*ae+x*or+Bt]=Oo}}}return e.makeTensorInfo(m.shape,m.dtype,m.values)}var $A={kernelName:Yl,backendName:"cpu",kernelFunc:VH};var GH=St(Un,r=>Math.cos(r)),DA={kernelName:Un,backendName:"cpu",kernelFunc:GH};var UH=St(Wn,r=>Math.cosh(r)),RA={kernelName:Wn,backendName:"cpu",kernelFunc:UH};function WH(r){let{inputs:t,backend:e,attrs:o}=r,{image:n,boxes:s,boxInd:i}=t,{cropSize:a,method:l,extrapolationValue:c}=o,[u,p,m,f]=n.shape,h=s.shape[0],[d,g]=a,x=dt([h,d,g,f],"float32"),b=e.data.get(s.dataId).values,C=e.data.get(i.dataId).values,w=e.data.get(n.dataId).values,v=y.computeStrides(n.shape),E=y.computeStrides(x.shape);for(let A=0;A<h;A++){let $=A*4,F=b[$],L=b[$+1],M=b[$+2],V=b[$+3],G=C[A];if(G>=u)continue;let W=d>1?(M-F)*(p-1)/(d-1):0,U=g>1?(V-L)*(m-1)/(g-1):0;for(let K=0;K<d;K++){let J=d>1?F*(p-1)+K*W:.5*(F+M)*(p-1);if(J<0||J>p-1){for(let q=0;q<g;q++)for(let Q=0;Q<f;Q++){let rt=Q+q*E[2]+K*E[1]+A*E[0];x.values[rt]=c}continue}if(l==="bilinear"){let q=Math.floor(J),Q=Math.ceil(J),rt=J-q;for(let ot=0;ot<g;ot++){let it=g>1?L*(m-1)+ot*U:.5*(L+V)*(m-1);if(it<0||it>m-1){for(let ft=0;ft<f;ft++){let Nt=ft+ot*E[2]+K*E[1]+A*E[0];x.values[Nt]=c}continue}let st=Math.floor(it),pt=Math.ceil(it),at=it-st;for(let ft=0;ft<f;ft++){let Nt=ft+st*v[2]+q*v[1]+G*v[0],$t=w[Nt];Nt=ft+pt*v[2]+q*v[1]+G*v[0];let kt=w[Nt];Nt=ft+st*v[2]+Q*v[1]+G*v[0];let zt=w[Nt];Nt=ft+pt*v[2]+Q*v[1]+G*v[0];let Bt=w[Nt],oe=$t+(kt-$t)*at,pe=zt+(Bt-zt)*at;Nt=ft+ot*E[2]+K*E[1]+A*E[0],x.values[Nt]=oe+(pe-oe)*rt}}}else for(let q=0;q<g;++q){let Q=g>1?L*(m-1)+q*U:.5*(L+V)*(m-1);if(Q<0||Q>m-1){for(let it=0;it<f;it++){let st=it+q*E[2]+K*E[1]+A*E[0];x.values[st]=c}continue}let rt=Math.round(Q),ot=Math.round(J);for(let it=0;it<f;it++){let st=it+rt*v[2]+ot*v[1]+G*v[0],pt=it+q*E[2]+K*E[1]+A*E[0];x.values[pt]=w[st]}}}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}var _A={kernelName:Jl,backendName:"cpu",kernelFunc:WH};function HH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,exclusive:i,reverse:a}=o;X(n,"cumprod");let l=S.getAxesPermutation([s],n.shape.length),c=n;l!=null&&(c=ge({inputs:{x:n},backend:e,attrs:{perm:l}}));let u=S.getInnerMostAxes(1,n.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);let p=$e(c.dtype,"int32"),m=y.makeOnesTypedArray(y.sizeFromShape(c.shape),p),f=e.data.get(c.dataId).values,h=c.shape[c.shape.length-1],d=a?(x,b)=>x+h-b-1:(x,b)=>x+b;for(let x=0;x<f.length;x+=h)for(let b=0;b<h;b++){let C=d(x,b);if(b===0)m[C]=i?1:f[C];else{let w=d(x,b-1);m[C]=i?f[w]*m[w]:f[C]*m[w]}}let g=e.makeTensorInfo(c.shape,p,m);if(l!=null){let x=S.getUndoAxesPermutation(l),b=ge({inputs:{x:g},backend:e,attrs:{perm:x}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(c),b}return g}var FA={kernelName:Zl,backendName:"cpu",kernelFunc:HH};function qH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,exclusive:i,reverse:a}=o;X(n,"cumsum");let l=S.getAxesPermutation([s],n.shape.length),c=n;l!=null&&(c=ge({inputs:{x:n},backend:e,attrs:{perm:l}}));let u=S.getInnerMostAxes(1,n.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);let p=$e(c.dtype,"int32"),m=y.makeZerosTypedArray(y.sizeFromShape(c.shape),p),f=e.data.get(c.dataId).values,h=c.shape[c.shape.length-1],d=a?(x,b)=>x+h-b-1:(x,b)=>x+b;for(let x=0;x<f.length;x+=h)for(let b=0;b<h;b++){let C=d(x,b);if(b===0)m[C]=i?0:f[C];else{let w=d(x,b-1);m[C]=i?f[w]+m[w]:f[C]+m[w]}}let g=e.makeTensorInfo(c.shape,p,m);if(l!=null){let x=S.getUndoAxesPermutation(l),b=ge({inputs:{x:g},backend:e,attrs:{perm:x}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(c),b}return g}var OA={kernelName:gi,backendName:"cpu",kernelFunc:qH};function KH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:s}=t,{size:i,binaryOutput:a}=o;if(n.shape.length===1){let l=e.data.get(n.dataId).values,c=e.data.get(s.dataId).values,u=Pu(l,c,s.dtype,s.shape,i);return e.makeTensorInfo([i],s.dtype,u)}else if(n.shape.length===2){let l=e.bufferSync(n),c=e.bufferSync(s),u=_g(l,c,i,a);return e.makeTensorInfo(u.shape,s.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${n.shape.length}.`)}var LA={kernelName:Ql,backendName:"cpu",kernelFunc:KH};function jH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockSize:s,dataFormat:i}=o;y.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let a=n.shape[0],l=n.shape[1],c=n.shape[2],u=n.shape[3],p=l*s,m=c*s,f=u/(s*s),h=e.data.get(n.dataId).values,d=new Float32Array(a*p*m*f),g=0;for(let x=0;x<a;++x)for(let b=0;b<p;++b){let C=Math.floor(b/s),w=b%s;for(let v=0;v<m;++v){let E=Math.floor(v/s),A=v%s,$=(w*s+A)*f;for(let F=0;F<f;++F){let M=F+$+u*(E+c*(C+l*x));d[g++]=h[M]}}}return e.makeTensorInfo([a,p,m,f],n.dtype,d)}var PA={kernelName:tc,backendName:"cpu",kernelFunc:jH};function RC(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s}=t,{strides:i,pad:a,dilations:l,dimRoundingMode:c}=o;X([n,s],"depthwiseConv2DNative");let u=y.computeStrides(n.shape),p=y.computeStrides(s.shape),m=l;m==null&&(m=[1,1]),y.assert(S.eitherStridesOrDilationsAreOne(i,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${m}'`);let f=S.computeConv2DInfo(n.shape,s.shape,i,m,a,c,!0),{filterHeight:h,filterWidth:d,dilationHeight:g,dilationWidth:x,padInfo:b}=f,C=b.left,w=b.top,v=f.outChannels/f.inChannels,E=new jt(f.outShape,n.dtype),A=e.data.get(n.dataId).values,$=e.data.get(s.dataId).values,F=E.values;for(let L=0;L<f.batchSize;++L){let M=L*u[0],V=L*E.strides[0];for(let G=0;G<f.outHeight;++G){let W=V+G*E.strides[1],U=G*f.strideHeight-w;for(let K=0;K<h;++K){let J=U+K*g;if(J<0||J>=f.inHeight)continue;let q=K*p[0],Q=M+J*u[1];for(let rt=0;rt<f.outWidth;++rt){let ot=W+rt*E.strides[2],it=rt*f.strideWidth-C;for(let st=0;st<d;++st){let pt=it+st*x;if(pt<0||pt>=f.inWidth)continue;let at=q+st*p[1],ft=Q+pt*f.inChannels,Nt=ot,$t=at;for(let kt=0;kt<f.inChannels;++kt){let zt=A[ft+kt];for(let Bt=0;Bt<v;++Bt)F[Nt+Bt]+=zt*$[$t+Bt];Nt+=v,$t+=v}}}}}}return e.makeTensorInfo(E.shape,E.dtype,E.values)}var zA={kernelName:xi,backendName:"cpu",kernelFunc:RC};function XH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:s}=t,{strides:i,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=o;X([n,s],"depthwiseConv2dNativeBackpropFilter");let p=S.computeConv2DInfo(n.shape,u,i,a,l,c,!0),{strideHeight:m,strideWidth:f,filterHeight:h,filterWidth:d}=p,g=new jt(p.filterShape,"float32"),x=p.padInfo.left,b=p.padInfo.top,C=p.outChannels/p.inChannels,w=e.data.get(n.dataId).values,v=new jt(n.shape,n.dtype,w),E=e.data.get(s.dataId).values,A=new jt(s.shape,s.dtype,E);for(let $=0;$<h;++$){let F=Math.max(0,Math.ceil((b-$)/m)),L=Math.min(p.outHeight,(p.inHeight+b-$)/m);for(let M=0;M<d;++M){let V=Math.max(0,Math.ceil((x-M)/f)),G=Math.min(p.outWidth,(p.inWidth+x-M)/f);for(let W=0;W<p.outChannels;++W){let U=Math.trunc(W/C),K=W%C,J=0;for(let q=0;q<p.batchSize;++q)for(let Q=F;Q<L;++Q){let rt=$+Q*m-b;for(let ot=V;ot<G;++ot){let it=M+ot*f-x;J+=v.get(q,rt,it,U)*A.get(q,Q,ot,W)}}g.set(J,$,M,U,K)}}}return e.makeTensorInfo(g.shape,g.dtype,g.values)}var BA={kernelName:ec,backendName:"cpu",kernelFunc:XH};function YH(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:s}=t,{strides:i,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=o;X([n,s],"depthwiseConv2DNativeBackpropInput");let p=y.computeStrides(n.shape),m=y.computeStrides(s.shape),f=S.computeConv2DInfo(u,s.shape,i,a,l,c,!0),h=new jt(f.inShape,"float32"),d=h.values,[g,x,b]=h.strides,C=e.data.get(n.dataId).values,[w,v,E]=p,A=e.data.get(s.dataId).values,[$,F,L]=m,{batchSize:M,filterHeight:V,filterWidth:G,inChannels:W,inHeight:U,inWidth:K,outChannels:J,outHeight:q,outWidth:Q,strideHeight:rt,strideWidth:ot}=f,it=V-1-f.padInfo.top,st=G-1-f.padInfo.left,pt=J/W;for(let at=0;at<M;++at)for(let ft=0;ft<W;++ft)for(let Nt=0;Nt<U;++Nt){let $t=Nt-it,kt=Math.max(0,Math.ceil($t/rt)),zt=Math.min(q,(V+$t)/rt);for(let Bt=0;Bt<K;++Bt){let oe=Bt-st,pe=Math.max(0,Math.ceil(oe/ot)),Ae=Math.min(Q,(G+oe)/ot),me=0;for(let ae=kt;ae<zt;++ae){let Te=ae*rt-$t;for(let Ce=pe;Ce<Ae;++Ce){let $n=Ce*ot-oe,or=w*at+v*ae+E*Ce,Xs=$*(V-1-Te)+F*(G-1-$n)+L*ft;for(let eo=0;eo<pt;++eo){let Ca=ft*pt+eo,Oo=C[or+Ca],Dn=A[Xs+eo];me+=Oo*Dn}}}d[g*at+x*Nt+b*Bt+ft]=me}}return e.makeTensorInfo(h.shape,h.dtype,h.values)}var MA={kernelName:rc,backendName:"cpu",kernelFunc:YH};function ZH(r){let{inputs:t,backend:e}=r,{x:o}=t,n=y.sizeFromShape(o.shape),s=e.data.get(o.dataId).values,i=dt([n,n],o.dtype),a=i.values;for(let c=0;c<s.length;c++)a[c*n+c]=s[c];let l=[...o.shape,...o.shape];return e.makeTensorInfo(l,i.dtype,i.values)}var VA={kernelName:uh,backendName:"cpu",kernelFunc:ZH};var GA={kernelName:yi,backendName:"cpu",kernelFunc:({inputs:r,backend:t,attrs:e})=>{let{x:o,filter:n}=r,{strides:s,pad:i,dilations:a}=e,l=t,c=l.data.get(o.dataId).values,u=o.shape.length,p=l.data.get(n.dataId).values,m=n.shape.length,{batchSize:f,inHeight:h,inWidth:d,inChannels:g,outHeight:x,outWidth:b,padInfo:C,strideHeight:w,strideWidth:v,filterHeight:E,filterWidth:A,dilationHeight:$,dilationWidth:F,outShape:L}=S.computeDilation2DInfo(o.shape,n.shape,s,i,"NHWC",a),M=y.sizeFromShape(L),V=L.length,G=y.getArrayFromDType(o.dtype,M);for(let U=0;U<f;++U)for(let K=0;K<x;++K){let J=K*w-C.top;for(let q=0;q<b;++q){let Q=q*v-C.left;for(let rt=0;rt<g;++rt){let ot=Number.MIN_SAFE_INTEGER;for(let st=0;st<E;++st){let pt=J+st*$;if(pt>=0&&pt<h)for(let at=0;at<A;++at){let ft=Q+at*F;if(ft>=0&&ft<d){let Nt=y.locToIndex([U,pt,ft,rt],u,y.computeStrides(o.shape)),$t=y.locToIndex([st,at,rt],m,y.computeStrides(n.shape)),kt=c[Nt]+p[$t];kt>ot&&(ot=kt)}}}let it=y.locToIndex([U,K,q,rt],V,y.computeStrides(L));G[it]=ot}}}return{dataId:l.write(y.toTypedArray(G,o.dtype),L,o.dtype),shape:L,dtype:o.dtype}}};var UA={kernelName:hp,backendName:"cpu",kernelFunc:({inputs:r,backend:t,attrs:e})=>{let{x:o,filter:n,dy:s}=r,{strides:i,pad:a,dilations:l}=e,c=t,u=y.toNestedArray(o.shape,c.data.get(o.dataId).values),p=y.toNestedArray(n.shape,c.data.get(n.dataId).values),{batchSize:m,inHeight:f,inWidth:h,inChannels:d,outHeight:g,outWidth:x,padInfo:b,strideHeight:C,strideWidth:w,filterHeight:v,filterWidth:E,dilationHeight:A,dilationWidth:$,outShape:F}=S.computeDilation2DInfo(o.shape,n.shape,i,a,"NHWC",l);y.assert(s.rank===F.length,()=>`Error in ${hp}, dy must have the same rank as output ${F.length}, but got ${s.rank}`);let L=y.toNestedArray(F,c.data.get(s.dataId).values),M=y.makeZerosNestedTypedArray(n.shape,n.dtype);for(let G=0;G<m;++G)for(let W=0;W<g;++W){let U=W*C-b.top;for(let K=0;K<x;++K){let J=K*w-b.left;for(let q=0;q<d;++q){let Q=Number.MIN_SAFE_INTEGER,rt=0,ot=0;for(let it=0;it<v;++it){let st=U+it*A;if(st>=0&&st<f)for(let pt=0;pt<E;++pt){let at=J+pt*$;if(at>=0&&at<h){let ft=u[G][st][at][q]+p[it][pt][q];ft>Q&&(Q=ft,rt=it,ot=pt)}}}M[rt][ot][q]+=L[G][W][K][q]}}}return{dataId:c.write(y.toTypedArray(M,o.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var WA={kernelName:fp,backendName:"cpu",kernelFunc:({inputs:r,backend:t,attrs:e})=>{let{x:o,filter:n,dy:s}=r,{strides:i,pad:a,dilations:l}=e,c=t,u=y.toNestedArray(o.shape,c.data.get(o.dataId).values),p=y.toNestedArray(n.shape,c.data.get(n.dataId).values),{batchSize:m,inHeight:f,inWidth:h,inChannels:d,outHeight:g,outWidth:x,padInfo:b,strideHeight:C,strideWidth:w,filterHeight:v,filterWidth:E,dilationHeight:A,dilationWidth:$,outShape:F}=S.computeDilation2DInfo(o.shape,n.shape,i,a,"NHWC",l);y.assert(s.rank===F.length,()=>`Error in ${fp}, dy must have the same rank as output ${F.length}, but got ${s.rank}`);let L=y.toNestedArray(F,c.data.get(s.dataId).values),M=y.makeZerosNestedTypedArray(o.shape,o.dtype);for(let G=0;G<m;++G)for(let W=0;W<g;++W){let U=W*C-b.top;for(let K=0;K<x;++K){let J=K*w-b.left;for(let q=0;q<d;++q){let Q=Number.MIN_SAFE_INTEGER,rt=U<0?0:U,ot=J<0?0:J;for(let it=0;it<v;++it){let st=U+it*A;if(st>=0&&st<f)for(let pt=0;pt<E;++pt){let at=J+pt*$;if(at>=0&&at<h){let ft=u[G][st][at][q]+p[it][pt][q];ft>Q&&(Q=ft,rt=st,ot=at)}}}M[G][rt][ot][q]+=L[G][W][K][q]}}}return{dataId:c.write(y.toTypedArray(M,o.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};function JH(r){let{inputs:t,backend:e,attrs:o}=r,{image:n}=t,{canvas:s,options:i}=o,{contextOptions:a,imageOptions:l}=i||{},c=l?.alpha||1,u=a?.contextType||"2d";if(u!=="2d")throw new Error(`Context type ${a.contextType} is not supported by the CPU backend.`);let p=s.getContext(u,a?.contextAttributes||{});if(p==null)throw new Error(`Could not get the context with ${u} type.`);let[m,f]=n.shape.slice(0,2),h=n.shape.length===2?1:n.shape[2],d=e.data.get(n.dataId).values,g=n.dtype==="float32"?255:1,x=new Uint8ClampedArray(f*m*4);for(let C=0;C<m*f;++C){let w=[0,0,0,255*c];for(let E=0;E<h;E++){let A=d[C*h+E];if(n.dtype==="float32"){if(A<0||A>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${A}.`)}else if(n.dtype==="int32"&&(A<0||A>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${A}.`);h===1?(w[0]=A*g,w[1]=A*g,w[2]=A*g):w[E]=A*g}let v=C*4;x[v+0]=Math.round(w[0]),x[v+1]=Math.round(w[1]),x[v+2]=Math.round(w[2]),x[v+3]=Math.round(w[3])}s.width=f,s.height=m;let b=new ImageData(x,f,m);return p.putImageData(b,0,0),n}var HA={kernelName:Yv,backendName:"cpu",kernelFunc:JH};function Ws(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o;X(n,"sum");let a;n.dtype==="bool"?a=Do({inputs:{x:n},backend:e,attrs:{dtype:"int32"}}):a=cr({inputs:{x:n},backend:e});let l=a.shape.length,c=y.parseAxisParam(s,a.shape),u=S.getAxesPermutation(c,l),p=c,m=a;u!=null&&(m=ge({inputs:{x:a},backend:e,attrs:{perm:u}}),p=S.getInnerMostAxes(p.length,l)),S.assertAxesAreInnerMostDims("sum",p,m.shape.length);let[f,h]=S.computeOutAndReduceShapes(m.shape,p),d=S.upcastType(m.dtype,"int32"),g=Ou(e,f,d),x=y.sizeFromShape(h),b=e.data.get(g.dataId).values,C=e.data.get(m.dataId).values;for(let w=0;w<b.length;++w){let v=w*x,E=0;for(let A=0;A<x;++A)E+=C[v+A];b[w]=E}if(i){let w=S.expandShapeToKeepDim(g.shape,c),v=g;g=Lt({inputs:{x:g},backend:e,attrs:{shape:w}}),e.disposeIntermediateTensorInfo(v)}return e.disposeIntermediateTensorInfo(a),u!=null&&e.disposeIntermediateTensorInfo(m),g}var qA={kernelName:Ui,backendName:"cpu",kernelFunc:Ws};function QH(r){let{inputs:t,backend:e,attrs:o}=r,{equation:n}=o,s=t,{allDims:i,summedDims:a,idDims:l}=S.decodeEinsumEquation(n,s.length);S.checkEinsumDimSizes(i.length,l,s);let{path:c,steps:u}=S.getEinsumComputePath(a,l),p=u.length,m=null,f=i.length,h=[];for(let d=0;d<p;++d){for(let g of u[d]){let{permutationIndices:x,expandDims:b}=S.getEinsumPermutation(f,l[g]),C;S.isIdentityPermutation(x)?C=s[g]:(C=ge({inputs:{x:s[g]},backend:e,attrs:{perm:x}}),h.push(C));let w=C.shape.slice();for(let v=0;v<b.length;++v)w.splice(b[v],0,1);y.arraysEqual(C.shape,w)||(C=Lt({inputs:{x:C},backend:e,attrs:{shape:w}}),h.push(C)),m===null?m=C:(m=vl({inputs:{a:C,b:m},backend:e}),h.push(m))}d<p-1&&(c[d]>=0&&(m=Ws({inputs:{x:m},backend:e,attrs:{axis:c[d]-(i.length-f),keepDims:!1}}),h.push(m)),f--)}for(let d of h)d!==m&&e.disposeIntermediateTensorInfo(d);return m}var KA={kernelName:oc,backendName:"cpu",kernelFunc:QH};function tq(r){let{inputs:t,backend:e}=r,{dy:o,y:n}=t;X([o,n],"eluGrad");let s=new Float32Array(y.sizeFromShape(n.shape)),i=e.data.get(n.dataId).values,a=e.data.get(o.dataId).values;for(let l=0;l<i.length;++l){let c=i[l];c>=0?s[l]=a[l]:s[l]=a[l]*(c+1)}return e.makeTensorInfo(n.shape,"float32",s)}var jA={kernelName:nc,backendName:"cpu",kernelFunc:tq};var eq=S.ERF_P,rq=S.ERF_A1,oq=S.ERF_A2,nq=S.ERF_A3,sq=S.ERF_A4,iq=S.ERF_A5,aq=St(Kn,r=>{let t=Math.sign(r),e=Math.abs(r),o=1/(1+eq*e);return t*(1-((((iq*o+sq)*o+nq)*o+oq)*o+rq)*o*Math.exp(-e*e))}),XA={kernelName:Kn,backendName:"cpu",kernelFunc:aq};function Vu(r){let{inputs:t,backend:e,attrs:o}=r,{input:n}=t,{dim:s}=o,i=n.shape.length,a=n.shape.slice(),l=s;return s<0&&(y.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),a.splice(l,0,1),Lt({inputs:{x:n},backend:e,attrs:{shape:a}})}var YA={kernelName:bi,backendName:"cpu",kernelFunc:Vu};var lq=Ot((r,t)=>r/t),zf=Gt(Hn,lq),Bf={kernelName:Hn,backendName:"cpu",kernelFunc:zf};function tx(r,t,e){let o=r.shape,n=o[0],s=o[1],i=e.data.get(r.dataId),a=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,c=[n,s],u=y.sizeFromShape(c),p=y.getTypedArrayFromDType("float32",u),m=y.getTypedArrayFromDType("float32",u);for(let g=0;g<n;g++){let x=_o({inputs:{x:a},backend:e,attrs:{begin:[g,0],size:[1,s]}}),b=_o({inputs:{x:l},backend:e,attrs:{begin:[g,0],size:[1,s]}}),C=ze({inputs:{real:x,imag:b},backend:e}),{real:w,imag:v}=cq(C,t,e),E=S.mergeRealAndImagArrays(w,v);for(let A=0;A<s;A++){let $=S.getComplexWithIndex(E,A);p[g*s+A]=$.real,m[g*s+A]=$.imag}e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(C)}let f=e.makeTensorInfo(c,"float32",p),h=e.makeTensorInfo(c,"float32",m),d=ze({inputs:{real:f,imag:h},backend:e});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),d}function cq(r,t,e){let o=y.sizeFromShape(r.shape),n=e.data.get(r.dataId),s=e.data.get(n.complexTensorInfos.real.dataId).values,i=e.data.get(n.complexTensorInfos.imag.dataId).values;if(uq(o)){let a=_C(s,i,o,t,e),l=[r.shape[0],r.shape[1]];if(t){let c=e.makeTensorInfo(l,"float32",a.real),u=e.makeTensorInfo(l,"float32",a.imag),p=e.makeTensorInfo([],"float32",y.createScalarValue(o,"float32")),m=cr({inputs:{x:p},backend:e}),f=Bf.kernelFunc({inputs:{a:c,b:p},backend:e}),h=Bf.kernelFunc({inputs:{a:u,b:m},backend:e}),d=e.data.get(f.dataId).values,g=e.data.get(h.dataId).values;return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),{real:d,imag:g}}return a}else{let a=S.mergeRealAndImagArrays(s,i),l=pq(a,o,t);return S.splitRealAndImagArrays(l)}}function uq(r){return(r&r-1)===0}function _C(r,t,e,o,n){if(e===1)return{real:r,imag:t};let s=S.mergeRealAndImagArrays(r,t),i=e/2,a=S.complexWithEvenIndex(s),l=a.real,c=a.imag,u=[l.length],p=n.makeTensorInfo(u,"float32",l),m=n.makeTensorInfo(u,"float32",c),f=ze({inputs:{real:p,imag:m},backend:n}),h=S.complexWithOddIndex(s),d=h.real,g=h.imag,x=[d.length],b=n.makeTensorInfo(x,"float32",d),C=n.makeTensorInfo(x,"float32",g),w=ze({inputs:{real:b,imag:C},backend:n}),v=_C(l,c,i,o,n),E=v.real,A=v.imag,$=[E.length],F=n.makeTensorInfo($,"float32",E),L=n.makeTensorInfo($,"float32",A),M=ze({inputs:{real:F,imag:L},backend:n}),V=_C(d,g,i,o,n),G=V.real,W=V.imag,U=[G.length],K=n.makeTensorInfo(U,"float32",G),J=n.makeTensorInfo(U,"float32",W),q=ze({inputs:{real:K,imag:J},backend:n}),Q=S.exponents(e,o),rt=[Q.real.length],ot=n.makeTensorInfo(rt,"float32",Q.real),it=n.makeTensorInfo(rt,"float32",Q.imag),st=ze({inputs:{real:ot,imag:it},backend:n}),pt=vl({inputs:{a:st,b:q},backend:n}),at=Nn({inputs:{a:M,b:pt},backend:n}),ft=Lf({inputs:{a:M,b:pt},backend:n}),Nt=$o({inputs:{input:at},backend:n}),$t=$o({inputs:{input:ft},backend:n}),kt=Tn({inputs:{input:at},backend:n}),zt=Tn({inputs:{input:ft},backend:n}),Bt=ha({inputs:[Nt,$t],backend:n,attrs:{axis:0}}),oe=ha({inputs:[kt,zt],backend:n,attrs:{axis:0}}),pe=n.data.get(Bt.dataId).values,Ae=n.data.get(oe.dataId).values;return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(C),n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(F),n.disposeIntermediateTensorInfo(L),n.disposeIntermediateTensorInfo(M),n.disposeIntermediateTensorInfo(K),n.disposeIntermediateTensorInfo(J),n.disposeIntermediateTensorInfo(q),n.disposeIntermediateTensorInfo(ot),n.disposeIntermediateTensorInfo(it),n.disposeIntermediateTensorInfo(st),n.disposeIntermediateTensorInfo(pt),n.disposeIntermediateTensorInfo(at),n.disposeIntermediateTensorInfo(ft),n.disposeIntermediateTensorInfo(Nt),n.disposeIntermediateTensorInfo(kt),n.disposeIntermediateTensorInfo($t),n.disposeIntermediateTensorInfo(zt),n.disposeIntermediateTensorInfo(Bt),n.disposeIntermediateTensorInfo(oe),{real:pe,imag:Ae}}function pq(r,t,e){let o=new Float32Array(t*2);for(let n=0;n<t;n++){let s=0,i=0;for(let a=0;a<t;a++){let l=S.exponent(n*a,t,e),c=S.getComplexWithIndex(r,a);s+=c.real*l.real-c.imag*l.imag,i+=c.real*l.imag+c.imag*l.real}e&&(s/=t,i/=t),S.assignToTypedArray(o,s,i,n)}return o}function mq(r){let{inputs:t,backend:e}=r,{input:o}=t,n=y.sizeFromShape(o.shape),s=o.shape[o.shape.length-1],i=n/s,a=Lt({inputs:{x:o},backend:e,attrs:{shape:[i,s]}}),l=tx(a,!1,e),c=Lt({inputs:{x:l},backend:e,attrs:{shape:o.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),c}var ZA={kernelName:sc,backendName:"cpu",kernelFunc:mq};function Mf(r){let{backend:t,attrs:e}=r,{shape:o,value:n,dtype:s}=e,i=s||y.inferDtype(n),a=y.getArrayFromDType(i,y.sizeFromShape(o));return fq(a,n,i),t.makeTensorInfo(o,i,a)}var JA={kernelName:ic,backendName:"cpu",kernelFunc:Mf};function fq(r,t,e){r.fill(t)}var QA={kernelName:ac,backendName:"cpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:o}=r,n=e,s=y.getTypedArrayFromDType(o.dtype,y.sizeFromShape(o.shape)),[i,a,l,c]=o.shape,u=n.data.get(o.dataId).values;for(let m=0;m<i;m++){let f=m*l*a*c;for(let h=0;h<a;h++){let d=h*(l*c);for(let g=0;g<l;g++){let x=g*c;for(let b=0;b<c;b++){let C=Math.round(l-g-1),w=f+d+x+b,v=u[w];if(C>=0&&C<l){let E=C*c,A=f+d+E+b;v=u[A]}s[w]=v}}}}return{dataId:n.write(s,o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};function hq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s,bias:i,preluActivationWeights:a}=t,{strides:l,pad:c,dataFormat:u,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:h}=o,d=DC({inputs:{x:n,filter:s},backend:e,attrs:{strides:l,pad:c,dataFormat:u,dilations:p,dimRoundingMode:m}});if(i){let g=d;if(u==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){let x=Lt({inputs:{x:i},backend:e,attrs:{shape:[i.shape[0],1,1]}});d=Nn({inputs:{a:d,b:x},backend:e}),e.disposeIntermediateTensorInfo(x)}else d=Nn({inputs:{a:d,b:i},backend:e});e.disposeIntermediateTensorInfo(g)}if(f){let g=d;if(u==="NCHW"&&f==="prelu"&&a.shape.length===1&&a.shape[0]!==1){let x=Lt({inputs:{x:a},backend:e,attrs:{shape:[a.shape[0],1,1]}});d=Sl(e,d,f,x,h),e.disposeIntermediateTensorInfo(x)}else d=Sl(e,d,f,a,h);e.disposeIntermediateTensorInfo(g)}return d}var t2={kernelName:Oa,backendName:"cpu",kernelFunc:hq};function dq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s,bias:i,preluActivationWeights:a}=t,{strides:l,pad:c,dataFormat:u,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:h}=o,d=RC({inputs:{x:n,filter:s},backend:e,attrs:{strides:l,pad:c,dataFormat:u,dilations:p,dimRoundingMode:m}});if(i){let g=d;d=Nn({inputs:{a:d,b:i},backend:e}),e.disposeIntermediateTensorInfo(g)}if(f){let g=d;d=Sl(e,d,f,a,h),e.disposeIntermediateTensorInfo(g)}return d}var e2={kernelName:La,backendName:"cpu",kernelFunc:dq};function gq(r){let{inputs:t,backend:e}=r,{params:o,indices:n}=t,s=y.sizeFromShape(o.shape),i=n.shape,a=i[i.length-1],[l,c,u,p]=S.prepareAndValidate(o,n);if(c===0)return e.makeTensorInfo(l,o.dtype,[]);let m=e.data.get(n.dataId).values,f=e.bufferSync(o),h=Og(m,f,o.dtype,c,a,u,p,o.shape,s);return e.makeTensorInfo(l,o.dtype,h.values)}var r2={kernelName:ph,backendName:"cpu",kernelFunc:gq};function xq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,indices:s}=t,{axis:i,batchDims:a}=o;X([n,s],"gatherV2");let l=y.parseAxisParam(i,n.shape)[0],c=e.data.get(s.dataId).values,u=n.shape[l];for(let w=0;w<c.length;++w){let v=c[w];y.assert(v<=u-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${u-1}]`)}let p=a;a==null&&(p=0);let m=y.sizeFromShape(s.shape),f=S.segment_util.collectGatherOpShapeInfo(n,s,l,p),h=Lt({inputs:{x:n},backend:e,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),d=Lt({inputs:{x:s},backend:e,attrs:{shape:[f.batchSize,m/f.batchSize]}}),g=[f.batchSize,f.outerSize,m/f.batchSize,f.sliceSize],x=e.bufferSync(d),b=e.bufferSync(h),C=Lg(b,x,g);return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.makeTensorInfo(f.outputShape,C.dtype,C.values)}var o2={kernelName:Ci,backendName:"cpu",kernelFunc:xq};function yq(r){let{inputs:t,backend:e}=r,{input:o}=t,n=y.sizeFromShape(o.shape),s=o.shape[o.shape.length-1],i=n/s,a=Lt({inputs:{x:o},backend:e,attrs:{shape:[i,s]}}),l=tx(a,!0,e),c=Lt({inputs:{x:l},backend:e,attrs:{shape:o.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),c}var n2={kernelName:lc,backendName:"cpu",kernelFunc:yq};var bq=St(Qn,r=>Number.isFinite(r)?1:0,"bool"),s2={kernelName:Qn,backendName:"cpu",kernelFunc:bq};var wq=St(ts,r=>Math.abs(r)===1/0?1:0,"bool"),i2={kernelName:ts,backendName:"cpu",kernelFunc:wq};var Cq=St(es,r=>Number.isNaN(r)?1:0,"bool"),a2={kernelName:es,backendName:"cpu",kernelFunc:Cq};function vq(r){let{backend:t,attrs:e}=r,{start:o,stop:n,num:s}=e,i=Pg(o,n,s);return t.makeTensorInfo([i.length],"float32",i)}var l2={kernelName:mh,backendName:"cpu",kernelFunc:vq};var Sq=St(os,r=>Math.log1p(r)),c2={kernelName:os,backendName:"cpu",kernelFunc:Sq};var Iq=Ot((r,t)=>r&&t),Nq=Gt($a,Iq,null,"bool"),u2={kernelName:$a,backendName:"cpu",kernelFunc:Nq};var Tq=St(Da,r=>r?0:1,"bool"),p2={kernelName:Da,backendName:"cpu",kernelFunc:Tq};var kq=Ot((r,t)=>r||t),Eq=Gt(Ra,kq,null,"bool"),m2={kernelName:Ra,backendName:"cpu",kernelFunc:Eq};function Aq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{depthRadius:s,bias:i,alpha:a,beta:l}=o;X(n,"LRN");let c=n.shape[3],u=c-1,p=e.data.get(n.dataId).values,m=y.sizeFromShape(n.shape),f=new Float32Array(m);function h(d){let g=d%c,x=d-g+Math.max(0,g-s),b=d-g+Math.min(g+s,u),C=0;for(;x<=b;x++){let w=p[x];C+=w*w}return C}for(let d=0;d<m;d++){let g=h(d),x=p[d]*Math.pow(i+a*g,-l);f[d]=x}return e.makeTensorInfo(n.shape,n.dtype,f)}var f2={kernelName:Si,backendName:"cpu",kernelFunc:Aq};function $q(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,y:s,dy:i}=t,{depthRadius:a,bias:l,alpha:c,beta:u}=o;X(i,"LRNGrad");let p=y.sizeFromShape(i.shape),m=i.shape[3],f=e.data.get(i.dataId).values,h=e.data.get(n.dataId).values,d=e.data.get(s.dataId).values,g=new Float32Array(p),x=p;for(let b=0;b<x;b++){let C=b%m,w=b-C+Math.max(0,C-a),v=b-C+Math.min(m,C+a+1),E=0;for(let A=w;A<v;A++)E+=Math.pow(h[A],2);E=c*E+l;for(let A=w;A<v;A++){let $=-2*c*u*h[A]*d[b]/E;b===A&&($+=Math.pow(E,-u)),$*=f[b],g[A]+=$}}return e.makeTensorInfo(i.shape,n.dtype,g)}var h2={kernelName:uc,backendName:"cpu",kernelFunc:$q};function FC(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reductionIndices:s,keepDims:i}=o,a=e,l=n.shape,c=l.length,u=y.parseAxisParam(s,l),p=u,m=S.getAxesPermutation(p,c),f=a.data.get(n.dataId).values;if(m!=null){let w=new Array(c);for(let v=0;v<w.length;v++)w[v]=l[m[v]];f=zu(f,l,n.dtype,m,w),p=S.getInnerMostAxes(p.length,c),l=w}X(n,"max"),S.assertAxesAreInnerMostDims("max",p,c);let[h,d]=S.computeOutAndReduceShapes(l,p),g=y.sizeFromShape(d),x=zg(f,g,h,n.dtype),b=a.write(x,h,n.dtype),C=h;return i&&(C=S.expandShapeToKeepDim(h,u)),{dataId:b,shape:C,dtype:n.dtype}}var d2={kernelName:Ii,backendName:"cpu",kernelFunc:FC};function Dq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t;X(n,"maxPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:l}=o,c=1;y.assert(S.eitherStridesOrDilationsAreOne(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let u=S.computePool2DInfo(n.shape,s,i,c,a,l),p;if(u.filterWidth===1&&u.filterHeight===1&&y.arraysEqual(u.inShape,u.outShape))p=cr({inputs:{x:n},backend:e});else{let m=e.data.get(n.dataId).values,f=y.computeStrides(n.shape),h=Mu(m,n.shape,n.dtype,f,u,"max");p=e.makeTensorInfo(u.outShape,n.dtype,h.values)}return p}var g2={kernelName:Ni,backendName:"cpu",kernelFunc:Dq};function Rq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:s,strides:i,pad:a,dimRoundingMode:l,dataFormat:c}=o;X(n,"maxPool3d");let u=S.computePool3DInfo(n.shape,s,i,1,a,l,c),p=e.data.get(n.dataId).values,m=Qg(p,n.shape,n.dtype,y.computeStrides(n.shape),u,"max");return e.makeTensorInfo(m.shape,"float32",m.values)}var x2={kernelName:Ti,backendName:"cpu",kernelFunc:Rq};function _q(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:s}=t,{filterSize:i,strides:a,pad:l,dimRoundingMode:c}=o;X([n,s],"maxPool3DGrad");let u=S.computePool3DInfo(s.shape,i,a,1,l,c),p=e.bufferSync(s),m=mA(p,u),f=u.strideDepth,h=u.strideHeight,d=u.strideWidth,g=u.dilationDepth,x=u.dilationHeight,b=u.dilationWidth,C=u.effectiveFilterDepth,w=u.effectiveFilterHeight,v=u.effectiveFilterWidth,E=C-1-u.padInfo.front,A=v-1-u.padInfo.left,$=w-1-u.padInfo.top,F=dt(s.shape,"float32"),L=e.bufferSync(n);for(let M=0;M<u.batchSize;++M)for(let V=0;V<u.inChannels;++V)for(let G=0;G<u.inDepth;++G)for(let W=0;W<u.inHeight;++W)for(let U=0;U<u.inWidth;++U){let K=G-E,J=W-$,q=U-A,Q=0;for(let rt=0;rt<C;rt+=g){let ot=(K+rt)/f;if(!(ot<0||ot>=u.outDepth||Math.floor(ot)!==ot))for(let it=0;it<w;it+=x){let st=(J+it)/h;if(!(st<0||st>=u.outHeight||Math.floor(st)!==st))for(let pt=0;pt<v;pt+=b){let at=(q+pt)/d;if(at<0||at>=u.outWidth||Math.floor(at)!==at)continue;let ft=C*w*v-1-m.get(M,ot,st,at,V),Nt=rt*w*v+it*v+pt,$t=ft===Nt?1:0;if($t===0)continue;let kt=L.get(M,ot,st,at,V);Q+=kt*$t}}}F.set(Q,M,G,W,U,V)}return e.makeTensorInfo(F.shape,F.dtype,F.values)}var y2={kernelName:mc,backendName:"cpu",kernelFunc:_q};function Fq(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:s,output:i}=t,a=s;X([s,i],"maxPoolGrad");let{filterSize:l,strides:c,pad:u,dimRoundingMode:p}=o,m=S.computePool2DInfo(a.shape,l,c,1,u,p),f=e.data.get(a.dataId).values,h=dt(m.outShape,a.dtype,Jg(f,a.shape,a.dtype,m).values),d=m.strideHeight,g=m.strideWidth,x=m.dilationHeight,b=m.dilationWidth,C=m.effectiveFilterHeight,w=m.effectiveFilterWidth,v=w-1-m.padInfo.left,E=C-1-m.padInfo.top,A=dt(a.shape,"float32"),$=e.data.get(n.dataId).values,F=dt(n.shape,"float32",$);for(let L=0;L<m.batchSize;++L)for(let M=0;M<m.inChannels;++M)for(let V=0;V<m.inHeight;++V)for(let G=0;G<m.inWidth;++G){let W=V-E,U=G-v,K=0;for(let J=0;J<C;J+=x){let q=(W+J)/d;if(!(q<0||q>=m.outHeight||Math.floor(q)!==q))for(let Q=0;Q<w;Q+=b){let rt=(U+Q)/g;if(rt<0||rt>=m.outWidth||Math.floor(rt)!==rt)continue;let ot=C*w-1-h.get(L,q,rt,M),it=J*w+Q,st=ot===it?1:0;if(st===0)continue;let pt=F.get(L,q,rt,M);K+=pt*st}}A.set(K,L,V,G,M)}return e.makeTensorInfo(A.shape,A.dtype,A.values)}var b2={kernelName:pc,backendName:"cpu",kernelFunc:Fq};function w2(r,t,e,o,n){let s=y.computeStrides(t),i=Mu(r,t,e,s,n,"max"),a=Jg(r,t,e,n,!0,o);return[i.values,a.values]}var C2={kernelName:fh,backendName:"cpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:o}=r,{filterSize:n,strides:s,pad:i,includeBatchInIndex:a}=t,l=e;X(o,"MaxPoolWithArgmax");let c=l.data.get(o.dataId).values,u=S.computePool2DInfo(o.shape,n,s,[1,1],i),[p,m]=w2(c,o.shape,o.dtype,a,u),f=l.write(p,u.outShape,o.dtype),h=l.write(m,u.outShape,o.dtype);return[{dataId:f,shape:u.outShape,dtype:o.dtype},{dataId:h,shape:u.outShape,dtype:"int32"}]}};function Oq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o,a=y.parseAxisParam(s,n.shape),c=S.computeOutAndReduceShapes(n.shape,a)[1],u=y.sizeFromShape(c),p=[],m=e.makeTensorInfo([],"float32",new Float32Array([u]));p.push(m);let f=Do({inputs:{x:n},backend:e,attrs:{dtype:"float32"}});p.push(f);let h=zf({inputs:{a:f,b:m},backend:e});p.push(h);let d=Ws({inputs:{x:h},backend:e,attrs:{axis:s,keepDims:i}});return p.forEach(g=>e.disposeIntermediateTensorInfo(g)),d}var v2={kernelName:ki,backendName:"cpu",kernelFunc:Oq};function Lq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o;X(n,"min");let a=y.parseAxisParam(s,n.shape),l=a,c=S.getAxesPermutation(l,n.shape.length),u=n;c!=null&&(u=ge({inputs:{x:n},backend:e,attrs:{perm:c}}),l=S.getInnerMostAxes(l.length,n.shape.length)),S.assertAxesAreInnerMostDims("min",l,u.shape.length);let[p,m]=S.computeOutAndReduceShapes(u.shape,l),f=y.sizeFromShape(m),h=y.makeZerosTypedArray(y.sizeFromShape(p),u.dtype),d=e.data.get(u.dataId).values;for(let x=0;x<h.length;++x){let b=x*f,C=d[b];for(let w=0;w<f;++w){let v=d[b+w];(Number.isNaN(v)||v<C)&&(C=v)}h[x]=C}c!=null&&e.disposeIntermediateTensorInfo(u);let g=e.makeTensorInfo(p,u.dtype,h);if(i){let x=S.expandShapeToKeepDim(p,a),b=Lt({inputs:{x:g},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(g),b}return g}var S2={kernelName:Ei,backendName:"cpu",kernelFunc:Lq};function Pq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{paddings:s,mode:i}=o;X(n,"mirrorPad");let a=s.map((C,w)=>C[0]+n.shape[w]+C[1]),l=s.map(C=>C[0]),c=s.map((C,w)=>C[0]+n.shape[w]),u=i==="reflect"?0:1,p=e.data.get(n.dataId).values,m=n.shape.length,f=y.computeStrides(n.shape),h=y.sizeFromShape(a),d=a.length,g=y.computeStrides(a),x=y.getTypedArrayFromDType(n.dtype,h);for(let C=0;C<h;C++){let w=y.indexToLoc(C,d,g);for(let E=0;E<d;E++)w[E]<l[E]?w[E]=l[E]*2-w[E]-u:w[E]>=c[E]&&(w[E]=(c[E]-1)*2-w[E]+u);w=w.map((E,A)=>E-l[A]);let v=y.locToIndex(w,m,f);x[C]=p[v]}return{dataId:e.write(x,a,n.dtype),shape:a,dtype:n.dtype}}var I2={kernelName:Ai,backendName:"cpu",kernelFunc:Pq};var zq=Ot((r,t)=>{let e=r%t;return r<0&&t<0||r>=0&&t>=0?e:(e+t)%t}),Bq=Gt(is,zq),N2={kernelName:is,backendName:"cpu",kernelFunc:Bq};var k2=ip(Lp());function OC(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{dim:s}=o,i=n.shape.length,a=s;if(a===-1&&(a=i-1),a!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${a}`);let l=y.parseAxisParam([a],n.shape),c=FC({inputs:{x:n},backend:e,attrs:{reductionIndices:l,keepDims:!1}}),u=S.expandShapeToKeepDim(c.shape,l),p=Lt({inputs:{x:c},backend:e,attrs:{shape:u}}),m=Lf({inputs:{a:n,b:p},backend:e}),f=rC({inputs:{x:m},backend:e}),h=Ws({inputs:{x:f},backend:e,attrs:{axis:l,keepDims:!1}}),d=Lt({inputs:{x:h},backend:e,attrs:{shape:u}}),g=zf({inputs:{a:f,b:d},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),g}var T2={kernelName:qi,backendName:"cpu",kernelFunc:OC};function Mq(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{numSamples:s,seed:i,normalized:a}=o;X(n,"multinomial");let l=a?n:OC({inputs:{logits:n},backend:e,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],p=e.data.get(l.dataId).values,m=[c,s],f=y.makeZerosTypedArray(y.sizeFromShape(m),"int32");for(let h=0;h<c;++h){let d=h*u,g=new Float32Array(u-1);g[0]=p[d];for(let C=1;C<g.length;++C)g[C]=g[C-1]+p[d+C];let x=k2.alea(i.toString()),b=h*s;for(let C=0;C<s;++C){let w=x();f[b+C]=g.length;for(let v=0;v<g.length;v++)if(w<g[v]){f[b+C]=v;break}}}return a||e.disposeIntermediateTensorInfo(l),e.makeTensorInfo(m,"int32",f)}var E2={kernelName:hh,backendName:"cpu",kernelFunc:Mq};var Vq=ar.nonMaxSuppressionV3Impl;function Gq(r){let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=o;X(n,"NonMaxSuppression");let c=e.data.get(n.dataId).values,u=e.data.get(s.dataId).values,{selectedIndices:p}=Vq(c,u,i,a,l);return e.makeTensorInfo([p.length],"int32",new Int32Array(p))}var A2={kernelName:fc,backendName:"cpu",kernelFunc:Gq};var Uq=ar.nonMaxSuppressionV4Impl;function Wq(r){let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=o;X(n,"NonMaxSuppressionPadded");let u=e.data.get(n.dataId).values,p=e.data.get(s.dataId).values,{selectedIndices:m,validOutputs:f}=Uq(u,p,i,a,l,c);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([],"int32",new Int32Array([f]))]}var $2={kernelName:hc,backendName:"cpu",kernelFunc:Wq};var Hq=ar.nonMaxSuppressionV5Impl;function qq(r){let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=o;X(n,"NonMaxSuppressionWithScore");let u=e.data.get(n.dataId).values,p=e.data.get(s.dataId).values,m=i,f=a,h=l,d=c,{selectedIndices:g,selectedScores:x}=Hq(u,p,m,f,h,d);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([x.length],"float32",new Float32Array(x))]}var D2={kernelName:dc,backendName:"cpu",kernelFunc:qq};function Kq(r){let{inputs:t,backend:e,attrs:o}=r,{indices:n}=t,{dtype:s,depth:i,onValue:a,offValue:l}=o;X(n,"oneHot");let c=y.sizeFromShape(n.shape),u=new Float32Array(c*i);u.fill(l);let p=e.data.get(n.dataId).values;for(let m=0;m<c;++m)p[m]>=0&&p[m]<i&&(u[m*i+p[m]]=a);return e.makeTensorInfo([...n.shape,i],s,u)}var R2={kernelName:Ri,backendName:"cpu",kernelFunc:Kq};function Vf(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(o.dtype==="complex64"){let n=$o({inputs:{input:o},backend:e}),s=Vf({inputs:{x:n},backend:e}),i=Tn({inputs:{input:o},backend:e}),a=Vf({inputs:{x:i},backend:e}),l=ze({inputs:{real:s,imag:a},backend:e});return e.disposeIntermediateTensorInfo(n),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),l}else return Mf({backend:e,attrs:{shape:o.shape,value:0,dtype:o.dtype}})}var _2={kernelName:Xi,backendName:"cpu",kernelFunc:Vf};function F2(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(o.dtype==="complex64"){let n=$o({inputs:{input:o},backend:e}),s=F2({inputs:{x:n},backend:e}),i=Tn({inputs:{input:o},backend:e}),a=Vf({inputs:{x:i},backend:e}),l=ze({inputs:{real:s,imag:a},backend:e});return e.disposeIntermediateTensorInfo(n),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),l}else return Mf({backend:e,attrs:{shape:o.shape,value:1,dtype:o.dtype}})}var O2={kernelName:Di,backendName:"cpu",kernelFunc:F2};function LC(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o;if(t.length===1)return Vu({inputs:{input:t[0]},backend:e,attrs:{dim:n}});let s=t[0].shape,i=t[0].dtype;t.forEach(u=>{y.assertShapesMatch(s,u.shape,"All tensors passed to stack must have matching shapes"),y.assert(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],l=t.map(u=>{let p=Vu({inputs:{input:u},backend:e,attrs:{dim:n}});return a.push(p),p}),c=ha({inputs:l,backend:e,attrs:{axis:n}});return a.forEach(u=>e.disposeIntermediateTensorInfo(u)),c}var L2={kernelName:_i,backendName:"cpu",kernelFunc:LC};function jq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{paddings:s,constantValue:i}=o;X(n,"pad");let a=s.map((b,C)=>b[0]+n.shape[C]+b[1]),l=s.map(b=>b[0]),c=e.data.get(n.dataId).values,u=y.sizeFromShape(n.shape),p=n.shape.length,m=y.computeStrides(n.shape),f=y.sizeFromShape(a),h=a.length,d=y.computeStrides(a),g=y.getTypedArrayFromDType(n.dtype,f);i!==0&&g.fill(i);for(let b=0;b<u;b++){let w=y.indexToLoc(b,p,m).map((E,A)=>E+l[A]),v=y.locToIndex(w,h,d);g[v]=c[b]}return{dataId:e.write(g,a,n.dtype),shape:a,dtype:n.dtype}}var ex={kernelName:Fi,backendName:"cpu",kernelFunc:jq};var Xq=Ot((r,t)=>Math.pow(r,t)),Yq=Gt(ls,Xq),P2={kernelName:ls,backendName:"cpu",kernelFunc:Yq};function Zq(r){let{inputs:t,backend:e,attrs:o}=r,{paramsNestedSplits:n,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:a}=o,l=n.map(x=>e.data.get(x.dataId).values),c=n.map(x=>x.shape),u=e.data.get(s.dataId).values,p=e.data.get(i.dataId).values,[m,f,h]=Bg(l,c,u,s.shape,s.dtype,p,i.shape,a),d=m.map(x=>e.makeTensorInfo([x.length],"int32",x)),g=e.makeTensorInfo(h,s.dtype,f);return d.concat([g])}var z2={kernelName:dh,backendName:"cpu",kernelFunc:Zq};function Jq(r){let{inputs:t,backend:e}=r,{starts:o,limits:n,deltas:s}=t,i=e.data.get(o.dataId).values,a=e.data.get(n.dataId).values,l=e.data.get(s.dataId).values,[c,u]=Mg(i,o.shape,o.dtype,a,n.shape,l,s.shape),p=e.makeTensorInfo([c.length],"int32",c),m=e.makeTensorInfo([u.length],o.dtype,u);return[p,m]}var B2={kernelName:gh,backendName:"cpu",kernelFunc:Jq};function Qq(r){let{inputs:t,backend:e,attrs:o}=r,{shape:n,values:s,defaultValue:i,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=o,c=e.data.get(n.dataId).values,u=e.data.get(s.dataId).values,p=e.data.get(i.dataId).values,m=a.map(g=>e.data.get(g.dataId).values),f=a.map(g=>g.shape),[h,d]=Vg(c,n.shape,u,s.shape,s.dtype,p,i.shape,m,f,l);return e.makeTensorInfo(h,s.dtype,d)}var M2={kernelName:xh,backendName:"cpu",kernelFunc:Qq};function tK(r){let{backend:t,attrs:e}=r,{start:o,stop:n,dtype:s,step:i}=e,a=Gg(o,n,i,s);return t.makeTensorInfo([a.length],s,a)}var V2={kernelName:gc,backendName:"cpu",kernelFunc:tK};var eK=St(cs,r=>1/r),G2={kernelName:cs,backendName:"cpu",kernelFunc:eK};function rK(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:s,halfPixelCenters:i,size:a}=o;X(n,"resizeBilinear");let l=y.computeStrides(n.shape),[c,u]=a,[p,m,f,h]=n.shape,d=e.data.get(n.dataId).values,g=new Float32Array(y.sizeFromShape([p,c,u,h])),x=[s&&c>1?m-1:m,s&&u>1?f-1:f],b=[s&&c>1?c-1:c,s&&u>1?u-1:u],C=0,w=x[0]/b[0],v=x[1]/b[1];for(let E=0;E<p;E++)for(let A=0;A<c;A++){let $;i?$=w*(A+.5)-.5:$=w*A;let F=Math.max(0,Math.floor($)),L=$-F,M=Math.min(m-1,Math.ceil($)),V=E*l[0]+F*l[1],G=E*l[0]+M*l[1];for(let W=0;W<u;W++){let U;i?U=v*(W+.5)-.5:U=v*W;let K=Math.max(0,Math.floor(U)),J=U-K,q=Math.min(f-1,Math.ceil(U)),Q=V+K*l[2],rt=G+K*l[2],ot=V+q*l[2],it=G+q*l[2];for(let st=0;st<h;st++){let pt=d[Q+st],at=d[rt+st],ft=d[ot+st],Nt=d[it+st],$t=pt+(ft-pt)*J,kt=at+(Nt-at)*J,zt=$t+(kt-$t)*L;g[C++]=zt}}}return e.makeTensorInfo([p,c,u,h],"float32",g)}var U2={kernelName:Bi,backendName:"cpu",kernelFunc:rK};function oK(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:s}=t,{alignCorners:i}=o;X([s,n],"resizeBilinearGrad");let a=y.computeStrides(n.shape),[l,c,u,p]=n.shape,[,m,f]=s.shape,h=new Float32Array(l*c*u*p),d=[i&&m>1?c-1:c,i&&f>1?u-1:u],g=[i&&m>1?m-1:m,i&&f>1?f-1:f],x=d[0]/g[0],b=d[1]/g[1],C=e.data.get(s.dataId).values,w=0;for(let v=0;v<l;v++){let E=v*a[0];for(let A=0;A<m;A++){let $=A*x,F=Math.floor($),L=Math.min(Math.ceil($),c-1),M=E+F*a[1],V=E+L*a[1],G=$-F,W=1-G;for(let U=0;U<f;U++){let K=U*b,J=Math.floor(K),q=Math.min(Math.ceil(K),u-1),Q=K-J,rt=1-Q,ot=M+J*a[2],it=M+q*a[2],st=V+J*a[2],pt=V+q*a[2],at=W*rt,ft=W*Q,Nt=G*rt,$t=G*Q;for(let kt=0;kt<p;kt++){let zt=C[w++];h[ot+kt]+=zt*at,h[it+kt]+=zt*ft,h[st+kt]+=zt*Nt,h[pt+kt]+=zt*$t}}}}return e.makeTensorInfo([l,u,c,p],"float32",h)}var W2={kernelName:bc,backendName:"cpu",kernelFunc:oK};function nK(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:s,halfPixelCenters:i,size:a}=o;X(n,"resizeNearestNeighbor");let l=y.computeStrides(n.shape),[c,u]=a,[p,m,f,h]=n.shape,d=e.data.get(n.dataId).values,g=new Float32Array(p*c*u*h),x=[s&&c>1?m-1:m,s&&u>1?f-1:f],b=[s&&c>1?c-1:c,s&&u>1?u-1:u],C=x[0]/b[0],w=x[1]/b[1],v=0;for(let E=0;E<p;E++){let A=E*l[0];for(let $=0;$<c;$++){let F=i?C*($+.5):C*$,L=Math.min(m-1,s?Math.round(F):Math.floor(F));i&&(L=Math.max(0,L));let M=A+L*l[1];for(let V=0;V<u;V++){let G=i?w*(V+.5):w*V,W=Math.min(f-1,s?Math.round(G):Math.floor(G));i&&(W=Math.max(0,W));let U=M+W*l[2];for(let K=0;K<h;K++){let J=d[U+K];g[v++]=J}}}}return e.makeTensorInfo([p,c,u,h],n.dtype,g)}var H2={kernelName:zi,backendName:"cpu",kernelFunc:nK};function sK(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:s}=t,{alignCorners:i}=o;X([s,n],"resizeNearestNeighborGrad");let a=y.computeStrides(n.shape),l=y.computeStrides(s.shape),[c,u,p,m]=n.shape,[,f,h]=s.shape,d=new Float32Array(c*u*p*m),g=e.data.get(s.dataId).values,x=[i&&f>1?u-1:u,i&&h>1?p-1:p],b=[i&&f>1?f-1:f,i&&h>1?h-1:h],C=x[0]/b[0],w=x[1]/b[1],v=1/C,E=1/w,A=Math.ceil(v)*2+2,$=Math.ceil(E)*2+2;for(let F=0;F<c;F++){let L=F*a[0];for(let M=0;M<u;M++){let V=L+M*a[1],G=Math.floor(M*v),W=Math.floor(G-A/2);for(let U=0;U<p;U++){let K=V+U*a[2],J=Math.floor(U*E),q=Math.floor(J-$/2);for(let Q=0;Q<m;Q++){let rt=0;for(let ot=0;ot<A;ot++){let it=ot+W;if(it<0||it>=f)continue;let st=L+it*l[1],pt=it*C,at=Math.min(u-1,i?Math.round(pt):Math.floor(pt));if(M===at)for(let ft=0;ft<$;ft++){let Nt=ft+q;if(Nt<0||Nt>=h)continue;let $t=st+Nt*l[2],kt=Nt*w,zt=Math.min(p-1,i?Math.round(kt):Math.floor(kt));U===zt&&(rt+=g[$t+Q])}}d[K+Q]=rt}}}}return e.makeTensorInfo(n.shape,n.dtype,d)}var q2={kernelName:yc,backendName:"cpu",kernelFunc:sK};function iK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dims:s}=o;X(n,"reverse");let i=n.shape.length,a=y.parseAxisParam(s,n.shape);if(i===0)return cr({inputs:{x:n},backend:e});let l=new jt(n.shape,n.dtype),c=e.bufferSync(n);for(let u=0;u<l.size;u++){let p=l.indexToLoc(u),m=p.slice();a.forEach(f=>m[f]=n.shape[f]-1-m[f]),l.set(c.get(...m),...p)}return e.makeTensorInfo(l.shape,l.dtype,l.values)}var K2={kernelName:Mi,backendName:"cpu",kernelFunc:iK};var j2={kernelName:Nc,backendName:"cpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:o}=r,{radians:n,fillValue:s,center:i}=t,a=e,l=y.getTypedArrayFromDType(o.dtype,y.sizeFromShape(o.shape)),[c,u,p,m]=o.shape,[f,h]=S.getImageCenter(i,u,p),d=255,g=Math.sin(n),x=Math.cos(n),b=a.data.get(o.dataId).values;for(let w=0;w<c;w++){let v=w*p*u*m;for(let E=0;E<u;E++){let A=E*(p*m);for(let $=0;$<p;$++){let F=$*m;for(let L=0;L<m;L++){let M=[c,E,$,L],V=M[2],G=M[1],W=(V-f)*x-(G-h)*g,U=(V-f)*g+(G-h)*x;W=Math.round(W+f),U=Math.round(U+h);let K=s;if(typeof s!="number"&&(L===3?K=d:K=s[L]),W>=0&&W<p&&U>=0&&U<u){let q=U*(p*m),Q=W*m,rt=v+q+Q+L;K=b[rt]}let J=v+A+F+L;l[J]=K}}}}return{dataId:a.write(l,o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};var aK=St(ms,r=>{let t=Math.floor(r);return r-t<.5?Math.floor(r):r-t>.5?Math.ceil(r):t%2===0?t:t+1}),X2={kernelName:ms,backendName:"cpu",kernelFunc:aK};function lK(r){let{inputs:t,backend:e,attrs:o}=r,{indices:n,updates:s}=t,{shape:i}=o,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:p}=S.calculateShapes(s,n,i),m=!0,f=e.bufferSync(n),h=e.bufferSync(s),d=Jo(f,h,i,p,c,l,a,u,0,m);return e.makeTensorInfo(i,d.dtype,d.values)}var Y2={kernelName:yh,backendName:"cpu",kernelFunc:lK};function cK(r,t){let e=0,o=r.length,n=0;for(;e<o;)n=Math.floor((e+o)/2),r[n]<t?e=n+1:o=n;return o}function uK(r,t){let e=0,o=r.length,n=0;for(;e<o;)n=Math.floor((e+o)/2),r[n]<=t?e=n+1:o=n;return o}function Z2(r,t,e,o,n,s){let i=y.getArrayFromDType("int32",e*n);for(let a=0;a<e;++a){let l=r.slice(a*o,(a+1)*o),c=a*n;for(let u=0;u<n;++u)i[c+u]=s==="left"?cK(l,t[u+c]):uK(l,t[u+c])}return i}function pK(r){let{inputs:t,backend:e,attrs:o}=r,{sortedSequence:n,values:s}=t,{side:i}=o,a=e.data.get(n.dataId).values,l=e.data.get(s.dataId).values,c=Z2(a,l,n.shape[0],n.shape[1],s.shape[1],i);return e.makeTensorInfo(s.shape,"int32",c)}var J2={kernelName:wh,backendName:"cpu",kernelFunc:pK};function mK(r){let{inputs:t,backend:e}=r,{condition:o,t:n,e:s}=t;X([o,n,s],"select");let i=o.shape.length,a=e.data.get(o.dataId).values,l=e.data.get(n.dataId).values,c=e.data.get(s.dataId).values,u=$e(n.dtype,s.dtype),p=y.makeZerosTypedArray(y.sizeFromShape(n.shape),u),m=0,f=i===0||i>1||n.shape.length===1?1:y.sizeFromShape(n.shape.slice(1));for(let h=0;h<a.length;h++)for(let d=0;d<f;d++)a[h]===1?p[m++]=l[h]:p[m++]=c[h];return e.makeTensorInfo(n.shape,u,p)}var Q2={kernelName:Vi,backendName:"cpu",kernelFunc:mK};var fK=S.SELU_SCALEALPHA,hK=S.SELU_SCALE,dK=St(hs,r=>r>=0?hK*r:fK*(Math.exp(r)-1)),t$={kernelName:hs,backendName:"cpu",kernelFunc:dK};var gK=St(xs,r=>r<0?-1:r>0?1:0),e$={kernelName:xs,backendName:"cpu",kernelFunc:gK};var xK=St(ds,r=>Math.sin(r)),r$={kernelName:ds,backendName:"cpu",kernelFunc:xK};var yK=St(gs,r=>Math.sinh(r)),o$={kernelName:gs,backendName:"cpu",kernelFunc:yK};var bK=11920928955078125e-23,n$=Math.log(bK)+2,wK=St(bs,r=>{let t=r>-n$,e=r<n$,o=Math.exp(r),n;return e?n=o:t?n=r:n=Math.log(1+o),n}),s$={kernelName:bs,backendName:"cpu",kernelFunc:wK};function CK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:s,paddings:i}=o;X([n],"spaceToBatchND");let a=y.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let E=1+s.length;E<n.shape.length;++E)l.push([0,0]);let c=ex.kernelFunc({inputs:{x:n},backend:e,attrs:{paddings:l,constantValue:0}}),u=S.getReshaped(c.shape,s,a,!1),p=S.getPermuted(u.length,s.length,!1),m=S.getReshapedPermuted(c.shape,s,a,!1),d=Lt({inputs:{x:c},backend:e,attrs:{shape:u}}),b=ge({inputs:{x:d},backend:e,attrs:{perm:p}}),v=Lt({inputs:{x:b},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(b),v}var i$={kernelName:Wi,backendName:"cpu",kernelFunc:CK};function vK(r){let{inputs:t,backend:e}=r,{indices:o,values:n,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(o.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${o.shape}`);if(n.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${n.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let a=e.data.get(o.dataId).values,l=e.data.get(n.dataId).values,c=e.data.get(s.dataId).values,u=e.data.get(i.dataId).values[0],[p,m,f,h,d]=Ug(a,o.shape,o.dtype,l,n.dtype,c,u);return[e.makeTensorInfo(m,o.dtype,p),e.makeTensorInfo([m[0]],n.dtype,f),e.makeTensorInfo([h.length],"bool",new Uint8Array(h.map(g=>Number(g)))),e.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}var a$={kernelName:Ch,backendName:"cpu",kernelFunc:vK};function SK(r){let{inputs:t,backend:e}=r,{inputIndices:o,inputShape:n,newShape:s}=t;if(o.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${o.shape}`);if(n.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${n.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(e.data.get(n.dataId).values),a=e.data.get(o.dataId).values,l=Array.from(e.data.get(s.dataId).values),[c,u,p]=Wg(a,o.shape,o.dtype,i,l);return[e.makeTensorInfo(u,o.dtype,c),e.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}var l$={kernelName:vh,backendName:"cpu",kernelFunc:SK};function IK(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:s}=t;if(o.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${n.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(n.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=e.data.get(o.dataId).values,a=e.data.get(n.dataId).values,l=e.data.get(s.dataId).values,[c,u]=Bu(i,o.shape,o.dtype,a,l,!0);return e.makeTensorInfo(u,o.dtype,c)}var c$={kernelName:Sh,backendName:"cpu",kernelFunc:IK};function NK(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:s}=t;if(o.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${n.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(n.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=e.data.get(o.dataId).values,a=e.data.get(n.dataId).values,l=e.data.get(s.dataId).values,[c,u]=Bu(i,o.shape,o.dtype,a,l);return e.makeTensorInfo(u,o.dtype,c)}var u$={kernelName:Ih,backendName:"cpu",kernelFunc:NK};function TK(r){let{inputs:t,backend:e,attrs:o}=r,{sparseIndices:n,sparseValues:s,defaultValue:i}=t,{outputShape:a}=o,{sliceRank:l,numUpdates:c,sliceSize:u,strides:p,outputSize:m}=S.calculateShapes(s,n,a),f=!1,h=e.bufferSync(n),d;switch(s.dtype){case"bool":{let g=e.bufferSync(s),x=!!e.data.get(i.dataId).values[0];d=Jo(h,g,a,m,u,c,l,p,x,f);break}case"float32":{let g=e.bufferSync(s),x=e.data.get(i.dataId).values[0];d=Jo(h,g,a,m,u,c,l,p,x,f);break}case"int32":{let g=e.bufferSync(s),x=e.data.get(i.dataId).values[0];d=Jo(h,g,a,m,u,c,l,p,x,f);break}case"string":{let g=e.bufferSync(s),x=y.decodeString(e.data.get(i.dataId).values[0]);d=Jo(h,g,a,m,u,c,l,p,x,f);break}default:throw new Error(`Unsupported type ${s.dtype}`)}return e.makeTensorInfo(a,d.dtype,d.values)}var p$={kernelName:Nh,backendName:"cpu",kernelFunc:TK};function kK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{numOrSizeSplits:s,axis:i}=o,a=y.parseAxisParam(i,n.shape)[0],l=S.prepareSplitSize(n,s,a),c=new Array(n.shape.length).fill(0),u=n.shape.slice();return l.map(p=>{let m=[...u];m[a]=p;let f=_o({inputs:{x:n},backend:e,attrs:{begin:c,size:m}});return c[a]+=p,f})}var m$={kernelName:Hi,backendName:"cpu",kernelFunc:kK};var f$={kernelName:wc,backendName:"cpu",kernelFunc:({inputs:r,backend:t})=>{let{x:e}=r,o=t;X(e,"square");let n=o.data.get(e.dataId).values,s=new Float32Array(n.length);for(let a=0;a<n.length;++a){let l=n[a];s[a]=l*l}return{dataId:o.write(s,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}};var EK=St(Ns,(r,t)=>{let e=t;return isNaN(r)?NaN:r>0?1:e.alpha}),h$={kernelName:Ns,backendName:"cpu",kernelFunc:EK};function AK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:s,end:i,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:p,shrinkAxisMask:m}=o;X(n,"stridedSlice");let{finalShapeSparse:f,finalShape:h,isIdentity:d,sliceDim0:g,isSimpleSlice:x,begin:b,end:C,strides:w}=Ue.sliceInfo(n.shape,s,i,a,l,c,u,p,m),v;if(d)v=Lt({inputs:{x:n},backend:e,attrs:{shape:h}});else if(g||x){y.assert(n.shape.length>=1,()=>`Input must have rank at least 1, got: ${n.shape.length}`);let E=Ue.computeOutShape(b,C,w),A=_o({inputs:{x:n},backend:e,attrs:{begin:b,size:E}});v=Lt({inputs:{x:A},backend:e,attrs:{shape:h}}),e.disposeIntermediateTensorInfo(A)}else{let E=e.bufferSync(n),A=Hg(f,E,w,b);v=e.makeTensorInfo(h,A.dtype,A.values)}return v}var d$={kernelName:Cc,backendName:"cpu",kernelFunc:AK};function $K(r){let{inputs:t,backend:e,attrs:o}=r,{separator:n,nGramWidths:s,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:c}=o,{data:u,dataSplits:p}=t,m=e.data.get(u.dataId).values,f=e.data.get(p.dataId).values,[h,d]=qg(m,f,n,s,i,a,l,c);return[e.makeTensorInfo([h.length],"string",h),e.makeTensorInfo(p.shape,"int32",d)]}var g$={kernelName:Th,backendName:"cpu",kernelFunc:$K};function DK(r){let{inputs:t,backend:e,attrs:o}=r,{skipEmpty:n}=o,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let a=e.data.get(s.dataId).values,l=e.data.get(i.dataId).values[0],[c,u,p]=Kg(a,l,n),m=u.length;return[e.makeTensorInfo([m,2],"int32",c),e.makeTensorInfo([m],"string",u),e.makeTensorInfo([2],"int32",new Int32Array(p))]}var x$={kernelName:kh,backendName:"cpu",kernelFunc:DK};function RK(r){let{inputs:t,backend:e,attrs:o}=r,{numBuckets:n}=o,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(n<=0)throw new Error("Number of buckets must be at least 1");let i=e.data.get(s.dataId).values,a=jg(i,n);return e.makeTensorInfo(s.shape,"int32",a)}var y$={kernelName:Eh,backendName:"cpu",kernelFunc:RK};var _K=St(Ss,r=>Math.tan(r)),b$={kernelName:Ss,backendName:"cpu",kernelFunc:_K};var FK=St(Is,r=>Math.tanh(r)),w$={kernelName:Is,backendName:"cpu",kernelFunc:FK};function OK(r){let{inputs:t,backend:e}=r,{tensor:o,indices:n,updates:s}=t,{sliceRank:i,numUpdates:a,sliceSize:l,strides:c,outputSize:u}=S.calculateShapes(s,n,o.shape),p=!1,m=e.bufferSync(n),f=e.bufferSync(s),h=e.bufferSync(o),d=Jo(m,f,o.shape,u,l,a,i,c,h,p);return e.makeTensorInfo(o.shape,d.dtype,d.values)}var C$={kernelName:bh,backendName:"cpu",kernelFunc:OK};function LK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reps:s}=o;X(n,"tile");let i=Xg(e.bufferSync(n),s);return e.makeTensorInfo(i.shape,i.dtype,i.values)}var v$={kernelName:an,backendName:"cpu",kernelFunc:LK};function PK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{k:s,sorted:i}=o;X(n,"topk");let a=e.data.get(n.dataId).values,[l,c]=Yg(a,n.shape,n.dtype,s,i);return[e.makeTensorInfo(l.shape,l.dtype,l.values),e.makeTensorInfo(c.shape,c.dtype,c.values)]}var S$={kernelName:vc,backendName:"cpu",kernelFunc:PK};function zK(r){let{inputs:t,attrs:e,backend:o}=r,{image:n,transforms:s}=t,{interpolation:i,fillMode:a,fillValue:l,outputShape:c}=e,[u,p,m,f]=n.shape,[h,d]=c??[p,m],g=[u,h,d,f],x=y.computeStrides(n.shape),b=x[0],C=x[1],w=x[2],v=y.computeStrides(g),E=v[0],A=v[1],$=v[2],F=y.getTypedArrayFromDType(n.dtype,y.sizeFromShape(g));F.fill(l);let L=o.data.get(n.dataId).values,M=o.data.get(s.dataId).values;for(let G=0;G<u;++G){let W=s.shape[0]===1?M:M.subarray(G*8,G*8+8);for(let U=0;U<h;++U)for(let K=0;K<d;++K)for(let J=0;J<f;++J){let q,Q=W[6]*K+W[7]*U+1;if(Q===0)continue;let rt=(W[0]*K+W[1]*U+W[2])/Q,ot=(W[3]*K+W[4]*U+W[5])/Q,it=I$(rt,m,a),st=I$(ot,p,a);switch(i){case"nearest":q=UK(L,p,m,b,C,w,G,st,it,J,l);break;case"bilinear":q=WK(L,p,m,b,C,w,G,st,it,J,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let pt=G*E+U*A+K*$+J;F[pt]=q}return o.makeTensorInfo(g,n.dtype,F)}return{dataId:o.write(F,g,n.dtype),shape:n.shape,dtype:n.dtype}}var N$={kernelName:Sc,backendName:"cpu",kernelFunc:zK};function I$(r,t,e){switch(e){case"reflect":return BK(r,t);case"wrap":return MK(r,t);case"nearest":return GK(r,t);case"constant":default:return VK(r,t)}}function BK(r,t){let e=r;if(e<0)if(t<=1)e=0;else{let o=2*t;e<o&&(e=o*Math.trunc(-e/o)+e),e=e<-t?e+o:-e-1}else if(e>t-1)if(t<=1)e=0;else{let o=2*t;e-=o*Math.trunc(e/o),e>=t&&(e=o-e-1)}return y.clamp(0,e,t-1)}function MK(r,t){let e=r;if(e<0)if(t<=1)e=0;else{let o=t-1;e+=t*(Math.trunc(-e/o)+1)}else if(e>t-1)if(t<=1)e=0;else{let o=t-1;e-=t*Math.trunc(e/o)}return y.clamp(0,e,t-1)}function VK(r,t){return r}function GK(r,t){return y.clamp(0,r,t-1)}function Gf(r,t,e,o,n,s,i,a,l,c,u){let p=i*o+a*n+l*s+c;return 0<=a&&a<t&&0<=l&&l<e?r[p]:u}function UK(r,t,e,o,n,s,i,a,l,c,u){let p=Math.round(a),m=Math.round(l);return Gf(r,t,e,o,n,s,i,p,m,c,u)}function WK(r,t,e,o,n,s,i,a,l,c,u){let p=Math.floor(a),m=Math.floor(l),f=p+1,h=m+1,d=(h-l)*Gf(r,t,e,o,n,s,i,p,m,c,u)+(l-m)*Gf(r,t,e,o,n,s,i,p,h,c,u),g=(h-l)*Gf(r,t,e,o,n,s,i,f,m,c,u)+(l-m)*Gf(r,t,e,o,n,s,i,f,h,c,u);return(f-a)*d+(a-p)*g}function HK(r){let{inputs:t,attrs:e,backend:o}=r,{axis:n}=e,{x:s}=t;X(s,"unique");let i=o.data.get(s.dataId).values,{outputValues:a,outputShape:l,indices:c}=Zg(i,n,s.shape,s.dtype);return[o.makeTensorInfo(l,s.dtype,a),o.makeTensorInfo([c.length],"int32",c)]}var T$={kernelName:Ic,backendName:"cpu",kernelFunc:HK};function qK(r){let{inputs:t,backend:e,attrs:o}=r,{value:n}=t,{axis:s}=o;s<0&&(s+=n.shape.length);let i=n.shape.length,a=n.shape[s],l=new Array(i-1),c=0;for(let f=0;f<i;f++)f!==s&&(l[c++]=n.shape[f]);let u=new Array(i).fill(0),p=n.shape.slice();p[s]=1;let m=new Array(a);for(let f=0;f<m.length;f++){u[s]=f;let h=_o({inputs:{x:n},backend:e,attrs:{begin:u,size:p}});m[f]=Lt({inputs:{x:h},backend:e,attrs:{shape:l}}),e.disposeIntermediateTensorInfo(h)}return m}var k$={kernelName:Ki,backendName:"cpu",kernelFunc:qK};function KK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,segmentIds:s}=t,{numSegments:i}=o;X(n,"unsortedSegmentSum");let a=n.shape.length,l=s.shape.length,c=[],u=[],p=a-l,m=s;for(let h=0;h<p;++h){let d=Vu({inputs:{input:m},backend:e,attrs:{dim:h+1}});m=d,u.push(d)}for(let h=0;h<i;++h){let d=y.createScalarValue(h,"int32"),g=e.makeTensorInfo([],"int32",d),x=tC({inputs:{a:g,b:m},backend:e}),b=Do({inputs:{x},backend:e,attrs:{dtype:"float32"}}),C=vl({inputs:{a:b,b:n},backend:e}),w=Ws({inputs:{x:C},backend:e,attrs:{axis:0,keepDims:!1}});c.push(w),u.push(g),u.push(x),u.push(b),u.push(C),u.push(w)}let f=LC({inputs:c,backend:e,attrs:{axis:0}});return u.forEach(h=>e.disposeIntermediateTensorInfo(h)),f}var E$={kernelName:ji,backendName:"cpu",kernelFunc:KK};var jK=[QE,aE,tA,eA,mE,rA,oA,nA,sA,iA,aA,lA,cA,uA,pA,fA,hA,dA,gA,JE,xA,yA,bA,fE,wA,pE,hE,CA,lE,vA,IA,NA,TA,kA,EA,AA,$A,DA,RA,_A,FA,OA,LA,PA,zA,BA,MA,VA,GA,UA,WA,HA,KA,qE,jA,dE,XA,gE,YA,xE,ZA,JA,QA,yE,bE,t2,e2,r2,o2,wE,CE,cE,n2,SA,s2,i2,a2,KE,vE,SE,l2,IE,c2,u2,p2,m2,f2,h2,d2,NE,g2,x2,y2,b2,C2,v2,S2,TE,I2,N2,E2,kE,EE,A2,$2,D2,AE,R2,O2,L2,ex,P2,jE,DE,z2,B2,M2,V2,uE,Bf,G2,XE,YE,ZE,U2,W2,H2,q2,K2,j2,X2,LE,Y2,J2,Q2,t$,zE,e$,r$,o$,BE,T2,s$,i$,a$,l$,c$,u$,p$,m$,VE,f$,GE,UE,h$,d$,g$,x$,y$,WE,qA,b$,w$,C$,v$,S$,N$,$E,T$,k$,E$,_2];for(let r of jK)$h(r);var Il={},rx={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function A$(r,t){Il[r]=t}function Zr(r,t){if(!(r in Il)||t!=null){let o=YK(r,t);if(o!==null)Il[r]=o;else return console.log("Could not get context for WebGL version",r),null}let e=Il[r];return e==null||e.isContextLost()?(delete Il[r],Zr(r)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Il[r])}function XK(r){if(!P().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&r===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function YK(r,t){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let e=t??XK(r);return e.addEventListener("webglcontextlost",o=>{o.preventDefault(),delete Il[r]},!1),P().getBool("SOFTWARE_WEBGL_ENABLED")&&(rx.failIfMajorPerformanceCaveat=!1),r===1?e.getContext("webgl",rx)||e.getContext("experimental-webgl",rx):e.getContext("webgl2",rx)}var da;(function(r){r[r.DENSE=0]="DENSE",r[r.SHARED_BATCH=1]="SHARED_BATCH"})(da||(da={}));var ur;(function(r){r[r.RENDER=0]="RENDER",r[r.UPLOAD=1]="UPLOAD",r[r.PIXELS=2]="PIXELS",r[r.DOWNLOAD=3]="DOWNLOAD"})(ur||(ur={}));var er;(function(r){r[r.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",r[r.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",r[r.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",r[r.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",r[r.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(er||(er={}));function Nl(r,t){return[t,r]}function $$(r,t){return r*t}function Uf(r){let t=y.sizeFromShape(r),e=Math.ceil(t/4);return y.sizeToSquarishShape(e)}function kn(r,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(r/2))]}function D$(r,t){let[e,o]=kn(r,t);return e*o*4}function Wf(r,t){let e=r,o,n,s,i,a,l,c,u,p,m;return P().getNumber("WEBGL_VERSION")===2?(o=e.R32F,n=e.R16F,s=e.RGBA16F,i=e.RGBA32F,a=e.RED,c=4,u=1,p=e.HALF_FLOAT,m=e.FLOAT,l=e.RGBA8):(o=r.RGBA,n=r.RGBA,s=r.RGBA,i=e.RGBA,a=r.RGBA,c=4,u=4,p=t!=null?t.HALF_FLOAT_OES:null,m=r.FLOAT,l=r.RGBA),{internalFormatFloat:o,internalFormatHalfFloat:n,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:p,textureTypeFloat:m}}function mt(r,t){let e=t();return P().getBool("DEBUG")&&ZK(r),e}function ZK(r){let t=r.getError();if(t!==r.NO_ERROR)throw new Error("WebGL Error: "+tj(r,t))}var JK=596e-10,QK=65504;function R$(r){return!!(P().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||JK<Math.abs(r)&&Math.abs(r)<QK)}function tj(r,t){switch(t){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Hf(r,t){return Hs(r,()=>r.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function _$(r,t){let e=Hs(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(mt(r,()=>r.shaderSource(e,t)),mt(r,()=>r.compileShader(e)),r.getShaderParameter(e,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function F$(r,t){let e=Hs(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(mt(r,()=>r.shaderSource(e,t)),mt(r,()=>r.compileShader(e)),P().get("ENGINE_COMPILE_ONLY"))return e;if(r.getShaderParameter(e,r.COMPILE_STATUS)===!1)throw VC(t,r.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}var ej=/ERROR: [0-9]+:([0-9]+):/g;function VC(r,t){let e=ej.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(r);return}let o=+e[1],n=r.split(`
`),s=n.length.toString().length+2,i=n.map((p,m)=>y.rightPad((m+1).toString(),s)+p),a=0;for(let p=0;p<i.length;p++)a=Math.max(i[p].length,a);let l=i.slice(0,o-1),c=i.slice(o-1,o),u=i.slice(o);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${y.rightPad(c[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function O$(r){return Hs(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function L$(r,t){if(mt(r,()=>r.linkProgram(t)),!P().get("ENGINE_COMPILE_ONLY")&&r.getProgramParameter(t,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function nx(r,t){if(mt(r,()=>r.validateProgram(t)),r.getProgramParameter(t,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function P$(r,t){let e=Hs(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return mt(r,()=>r.bindBuffer(r.ARRAY_BUFFER,e)),mt(r,()=>r.bufferData(r.ARRAY_BUFFER,t,r.STATIC_DRAW)),e}function z$(r,t){let e=Hs(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return mt(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e)),mt(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,t,r.STATIC_DRAW)),e}function B$(r){return Hs(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function M$(r,t){let e=P().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||t<=0){let o=`[${r}x${t}]`;throw new Error("Requested texture size "+o+" is invalid.")}if(r>e||t>e){let o=`[${r}x${t}]`,n=`[${e}x${e}]`;throw new Error("Requested texture size "+o+" greater than WebGL maximum on this browser / GPU "+n+".")}}function V$(r){return Hs(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function GC(r,t,e,o,n,s,i){let a=r.getAttribLocation(t,e);return a===-1?!1:(mt(r,()=>r.bindBuffer(r.ARRAY_BUFFER,o)),mt(r,()=>r.vertexAttribPointer(a,n,r.FLOAT,!1,s,i)),mt(r,()=>r.enableVertexAttribArray(a)),!0)}function rj(r,t,e){nj(r,e),mt(r,()=>r.activeTexture(r.TEXTURE0+e)),mt(r,()=>r.bindTexture(r.TEXTURE_2D,t))}function G$(r,t,e){return Hs(r,()=>r.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function U$(r,t,e){return r.getUniformLocation(t,e)}function W$(r,t,e,o){mt(r,()=>rj(r,t,o)),mt(r,()=>r.uniform1i(e,o))}function sx(r,t,e){mt(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),mt(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0))}function UC(r,t){mt(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),mt(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function qf(r){let t=r.checkFramebufferStatus(r.FRAMEBUFFER);if(t!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+oj(r,t))}function oj(r,t){switch(t){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Hs(r,t,e){let o=mt(r,()=>t());if(o==null)throw new Error(e);return o}function nj(r,t){let e=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,o=t+r.TEXTURE0;if(o<r.TEXTURE0||o>e){let n=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${n}.`)}}function ga(r,t=2){return y.sizeFromShape(r.slice(0,r.length-t))}function xa(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function Kf(r){let t=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(t=[ga(r),...xa(r)]),t}function H$(r,t=!1){let e=P().getNumber("WEBGL_MAX_TEXTURE_SIZE"),o=P().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");o===1/0&&P().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(o=e/2),t&&(e=e*2,o=o*2,r=r.map((a,l)=>l>=r.length-2?y.nearestLargerEven(r[l]):r[l]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=y.squeezeShape(r).newShape);let n=y.sizeFromShape(r),s=null;r.length<=1&&n<=e?s=[1,n]:r.length===2&&r[0]<=e&&r[1]<=e?s=r:r.length===3&&r[0]*r[1]<=e&&r[2]<=e?s=[r[0]*r[1],r[2]]:r.length===3&&r[0]<=e&&r[1]*r[2]<=e?s=[r[0],r[1]*r[2]]:r.length===4&&r[0]*r[1]*r[2]<=e&&r[3]<=e?s=[r[0]*r[1]*r[2],r[3]]:r.length===4&&r[0]<=e&&r[1]*r[2]*r[3]<=e&&(s=[r[0],r[1]*r[2]*r[3]]);let i=s!=null&&Math.max(...s)>o&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(s==null||i)if(t){let a=ga(r),l=2,c=2;r.length&&([l,c]=xa(r)),n=a*(l/2)*(c/2),s=y.sizeToSquarishShape(n).map(u=>u*2)}else s=y.sizeToSquarishShape(n);return s}function ox(r){return r%2===0}function Tl(r,t){if(r=r.slice(-2),t=t.slice(-2),y.arraysEqual(r,t)||!r.length||!t.length||r[0]===0||r[1]===0||t[0]===0||t[1]===0)return!0;if(r.length!==t.length){let e=r[r.length-1],o=t[t.length-1];if(e===o||ox(e)&&ox(o)&&(r[0]===1||t[0]===1))return!0}return r[1]===t[1]&&ox(r[0])&&ox(t[0])}var zC,BC;function q$(r){if(zC==null){let t=Zr(r);zC=t.getParameter(t.MAX_TEXTURE_SIZE)}return zC}function K$(r){if(BC==null){let t=Zr(r);BC=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,BC)}function j$(r){if(r===0)return 0;let t,e=Zr(r);return uo(e,"EXT_disjoint_timer_query_webgl2")&&r===2?t=2:uo(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function uo(r,t){return r.getExtension(t)!=null}function WC(r){try{if(Zr(r)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function X$(r){if(r===0)return!1;let t=Zr(r);if(r===1){if(!uo(t,"OES_texture_float"))return!1}else if(!uo(t,"EXT_color_buffer_float"))return!1;return MC(t)}function Y$(r){if(r===0)return!1;let t=Zr(r);if(r===1){if(!uo(t,"OES_texture_float")||!uo(t,"WEBGL_color_buffer_float"))return!1}else{if(uo(t,"EXT_color_buffer_float"))return MC(t);let o="EXT_color_buffer_half_float";if(uo(t,o)){let n=t.getExtension(o);return sj(t,n)}return!1}return MC(t)}function MC(r){let t=Wf(r),e=r.createTexture();r.bindTexture(r.TEXTURE_2D,e),r.texImage2D(r.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0);let i=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(e),r.deleteFramebuffer(s),i}function sj(r,t){let e=Wf(r,t),o=r.createTexture();r.bindTexture(r.TEXTURE_2D,o),r.texImage2D(r.TEXTURE_2D,0,e.internalFormatHalfFloat,1,1,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);let i=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,i),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,o,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(o),r.deleteFramebuffer(i),a}function Z$(r){return r!==2?!1:Zr(r).fenceSync!=null}function En(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&y.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var yt=P();yt.registerFlag("HAS_WEBGL",()=>yt.getNumber("WEBGL_VERSION")>0);yt.registerFlag("WEBGL_VERSION",()=>WC(2)?2:WC(1)?1:0);yt.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);yt.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>yt.get("WEBGL_VERSION")===2);yt.registerFlag("WEBGL_CPU_FORWARD",()=>!0);yt.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);yt.registerFlag("WEBGL_PACK",()=>yt.getBool("HAS_WEBGL"));yt.registerFlag("WEBGL_PACK_NORMALIZATION",()=>yt.getBool("WEBGL_PACK"));yt.registerFlag("WEBGL_PACK_CLIP",()=>yt.getBool("WEBGL_PACK"));yt.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>yt.getBool("WEBGL_PACK"));yt.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>yt.getBool("WEBGL_PACK"));yt.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>yt.getBool("WEBGL_PACK"));yt.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>yt.getBool("WEBGL_PACK"));yt.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>yt.getBool("WEBGL_PACK"));yt.registerFlag("WEBGL_PACK_REDUCE",()=>yt.getBool("WEBGL_PACK"));yt.registerFlag("WEBGL_LAZILY_UNPACK",()=>yt.getBool("WEBGL_PACK"));yt.registerFlag("WEBGL_CONV_IM2COL",()=>yt.getBool("WEBGL_PACK"));yt.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>yt.getBool("WEBGL_PACK"));yt.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>q$(yt.getNumber("WEBGL_VERSION")));yt.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>K$(yt.getNumber("WEBGL_VERSION")));yt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=yt.getNumber("WEBGL_VERSION");return r===0?0:j$(r)});yt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>yt.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Ji.isMobile());yt.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>X$(yt.getNumber("WEBGL_VERSION")));yt.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>yt.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:yt.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));yt.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>Y$(yt.getNumber("WEBGL_VERSION")));yt.registerFlag("WEBGL_FENCE_API_ENABLED",()=>Z$(yt.getNumber("WEBGL_VERSION")));yt.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>yt.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);yt.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(typeof r!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${r}.`);if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});yt.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Ji.isMobile()?1:-1,r=>{if(typeof r!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${r}.`);if(r<0&&r!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${r}.`)});yt.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);yt.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);yt.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);yt.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);yt.registerFlag("WEBGL_EXP_CONV",()=>!1);yt.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>yt.getBool("IS_TEST"));yt.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);yt.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);yt.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);yt.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function xe(){let r,t,e,o,n,s,i,a,l,c;return P().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",t="in",e="out",o="in",n="texture",s="outputColor",i="out vec4 outputColor;",a=P().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",t="attribute",e="varying",o="varying",n="texture2D",s="gl_FragColor",i="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:t,varyingVs:e,varyingFs:o,texture2D:n,output:s,defineOutput:i,defineSpecialNaN:a,defineSpecialInf:l,defineRound:c}}function Qo(r,t,e="index"){let o=y.computeStrides(t);return o.map((n,s)=>{let i=`int ${r[s]} = ${e} / ${n}`,a=s===o.length-1?`int ${r[s+1]} = ${e} - ${r[s]} * ${n}`:`index -= ${r[s]} * ${n}`;return`${i}; ${a};`}).join("")}function kl(r,t,e="index"){let o=y.computeStrides(t);return o.map((n,s)=>{let i=`int ${r[s]} = ${e} / outShapeStrides[${s}]`,a=s===o.length-1?`int ${r[s+1]} = ${e} - ${r[s]} * outShapeStrides[${s}]`:`index -= ${r[s]} * outShapeStrides[${s}]`;return`${i}; ${a};`}).join("")}function ij(r,t){let e=r.length,o=r.map(s=>`${t}[${s}]`),n=new Array(e-1);n[e-2]=o[e-1];for(let s=e-3;s>=0;--s)n[s]=`(${n[s+1]} * ${o[s+1]})`;return n}function J$(r,t,e="index"){let o=r.map((s,i)=>i),n=ij(o,t);return n.map((s,i)=>{let a=`int ${r[i]} = ${e} / ${n[i]}`,l=i===n.length-1?`int ${r[i+1]} = ${e} - ${r[i]} * ${n[i]}`:`index -= ${r[i]} * ${n[i]}`;return`${a}; ${l};`}).join("")}function Gu(r){let t=y.computeStrides(r).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Uu(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var ax=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var{getBroadcastDims:Q$}=S;function tD(r,t,e){let o=[];if(r.forEach(f=>{let h=y.sizeFromShape(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?o.push(`uniform float ${f.name}${h>1?`[${h}]`:""};`):(o.push(`uniform sampler2D ${f.name};`),o.push(`uniform int offset${f.name};`)),e.enableShapeUniforms){let{uniformShape:d}=lx(e.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(d.length){case 1:o.push(`uniform int ${f.name}Shape;`);break;case 2:o.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:o.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:o.push(`uniform ivec4 ${f.name}Shape;`);break;default:break}o.push(`uniform ivec2 ${f.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:o.push("uniform int outShape;");break;case 2:o.push("uniform ivec2 outShape;"),o.push("uniform int outShapeStrides;");break;case 3:o.push("uniform ivec3 outShape;"),o.push("uniform ivec2 outShapeStrides;");break;case 4:o.push("uniform ivec4 outShape;"),o.push("uniform ivec3 outShapeStrides;");break;default:break}o.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(f=>{o.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});let n=o.join(`
`),s=r.map(f=>aj(f,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),i=t.texShape,a=xe(),l=uj(a),c,u,p=fj(a);return t.isPacked?(c=lj(t.logicalShape,i,e.enableShapeUniforms),u=mj(a)):(c=cj(t.logicalShape,i,e.enableShapeUniforms),u=pj(a)),e.packedInputs&&(p+=xj),[p,l,u,n,c,s,e.userCode].join(`
`)}function Hu(r,t=!1){let e=r.shapeInfo.logicalShape;switch(e.length){case 0:return Aj(r,t);case 1:return Dj(r,t);case 2:return _j(r,t);case 3:return Oj(r,t);case 4:return Pj(r,t);case 5:return zj(r);case 6:return Bj(r);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function eD(r,t){switch(r.shapeInfo.logicalShape.length){case 0:return Ej(r);case 1:return $j(r,t);case 2:return Rj(r,t);case 3:return Fj(r,t);default:return Lj(r,t)}}function aj(r,t,e=!1,o){let n="";e?n+=eD(r,o):n+=Hu(r,o);let s=r.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(e?n+=Mj(r,t):n+=Vj(r,t)),n}function lj(r,t,e){switch(r.length){case 0:return rD();case 1:return yj(r,t,e);case 2:return Tj(r,t,e);case 3:return wj(r,t,e);default:return vj(r,t,e)}}function cj(r,t,e){switch(r.length){case 0:return rD();case 1:return bj(r,t,e);case 2:return kj(r,t,e);case 3:return Cj(r,t,e);case 4:return Sj(r,t,e);case 5:return Ij(r,t);case 6:return Nj(r,t);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function uj(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function pj(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function mj(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function fj(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${hj}
    ${dj}
    ${gj}
  `}var hj=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,dj=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,gj=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,xj=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function rD(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function yj(r,t,e){let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return o[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${o[1]}.0);
      }
    `:o[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${o[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));
      return 2 * (resTexRC.x * ${o[1]} + resTexRC.y);
    }
  `}function bj(r,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function wj(r,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],n=Math.ceil(r[2]/2),s=n*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));
      int index = resTexRC.x * ${o[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec3(b, r, c);
    }
  `}function Cj(r,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${kl(["r","c","d"],r)}
    return ivec3(r, c, d);
  }
`;let o=Qo(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${o}
      return ivec3(r, c, d);
    }
  `}function vj(r,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],n=Math.ceil(r[r.length-1]/2),s=n*Math.ceil(r[r.length-2]/2),i=s,a="",l="b, r, c";for(let c=2;c<r.length-1;c++)i*=r[r.length-c-1],a=`
      int b${c} = index / ${i};
      index -= b${c} * ${i};
    `+a,l=`b${c}, `+l;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));
      int index = resTexRC.x * ${o[1]} + resTexRC.y;

      ${a}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec${r.length}(${l});
    }
  `}function Sj(r,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${kl(["r","c","d","d2"],r)}
      return ivec4(r, c, d, d2);
    }
  `;let o=Qo(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${o}
      return ivec4(r, c, d, d2);
    }
  `}function Ij(r,t){let e=Qo(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function Nj(r,t){let e=Qo(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function Tj(r,t,e){let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(y.arraysEqual(r,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${o[0]}, ${o[1]}));
      }
    `;let n=Math.ceil(r[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));

      int index = resTexRC.x * ${o[1]} + resTexRC.y;
      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec2(r, c);
    }
  `}function kj(r,t,e){return y.arraysEqual(r,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:r[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function El(r){return`offset${r}`}function Ej(r){let t=r.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),o=xe();return`
    vec4 ${e}() {
      return ${o.texture2D}(${t}, halfCR);
    }
  `}function Aj(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`float ${o}() {return ${e};}`;let[n,s]=r.shapeInfo.texShape;if(n===1&&s===1)return`
      float ${o}() {
        return sampleTexture(${e}, halfCR);
      }
    `;let i=El(e);if(t)return`
    float ${o}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${i});
      return sampleTexture(${e}, uv);
    }
  `;let[a,l]=r.shapeInfo.texShape;return`
    float ${o}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${i});
      return sampleTexture(${e}, uv);
    }
  `}function $j(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),n=r.shapeInfo.texShape,s=xe();if(t)return`
    vec4 ${o}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${e}, uv);
    }
  `;let i=[Math.ceil(n[0]/2),Math.ceil(n[1]/2)];return`
    vec4 ${o}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${s.texture2D}(${e}, uv);
    }
  `}function Dj(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`
      float ${o}(int index) {
        ${qu(r)}
      }
    `;let n=r.shapeInfo.texShape,s=n[0],i=n[1];if(i===1&&s===1)return`
      float ${o}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;let a=El(e);return i===1?t?`
      float ${o}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${o}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${s}.0);
        return sampleTexture(${e}, uv);
      }
    `:s===1?t?`
      float ${o}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${o}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${o}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${a});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${o}(int index) {
      vec2 uv = uvFromFlat(${s}, ${i}, index + ${a});
      return sampleTexture(${e}, uv);
    }
  `}function Rj(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),s=r.shapeInfo.texShape,i=s[0],a=s[1],l=xe();if(s!=null&&y.arraysEqual(e,s))return t?`
      vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}TexShape[1], ${o}TexShape[0]);

        return ${l.texture2D}(${o}, uv);
      }
    `:`
      vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);

        return ${l.texture2D}(${o}, uv);
      }
    `;if(t)return`
    vec4 ${n}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${o}TexShape[0]) / 2.0), ceil(float(${o}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${o}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${o}, uv);
    }
  `;let c=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],u=Math.ceil(e[1]/2);return`
    vec4 ${n}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${c[0]}, ${c[1]}, row, col);
      return ${l.texture2D}(${o}, uv);
    }
  `}function _j(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),s=r.shapeInfo.texShape;if(s!=null&&y.arraysEqual(e,s)){if(t)return`
      float ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `;let m=s[0],f=s[1];return`
    float ${n}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${m}.0);
      return sampleTexture(${o}, uv);
    }
  `}let{newShape:i,keptDims:a}=y.squeezeShape(e),l=i;if(l.length<e.length){let m=Ku(r,l),f=["row","col"];return`
      ${Hu(m,t)}
      float ${n}(int row, int col) {
        return ${n}(${ju(f,a)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${qu(r)}
      }
    `;let c=s[0],u=s[1],p=El(o);return u===1?t?`
      float ${n}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${o}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${o}TexShape[0]));
        return sampleTexture(${o}, uv);
      }
    `:`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${o}, uv);
    }
  `:c===1?t?`
      float ${n}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${o}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${o}TexShape[1]), 0.5);
        return sampleTexture(${o}, uv);
      }
    `:`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${o}, uv);
    }
  `:t?`
      float ${n}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o}Shape[1] + col + ${p};
        vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], index);
        return sampleTexture(${o}, uv);
      }
    `:`
  float ${n}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${p};
    vec2 uv = uvFromFlat(${c}, ${u}, index);
    return sampleTexture(${o}, uv);
  }
`}function Fj(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),s=r.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(e[0]===1){let m=e.slice(1),f=[1,2],h=Ku(r,m),d=["b","row","col"];return`
        ${eD(h,t)}
        vec4 ${n}(int b, int row, int col) {
          return ${n}(${ju(d,f)});
        }
      `}let a=xe();if(t)return`
    vec4 ${n}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${o}TexShape[0]) / 2.0), ceil(float(${o}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${o}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${o}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${o}, uv);
    }
  `;let l=i[0],c=i[1],u=Math.ceil(e[2]/2),p=u*Math.ceil(e[1]/2);return`
    vec4 ${n}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${c}, ${p}, ${u}, b, row, col);
      return ${a.texture2D}(${o}, uv);
    }
  `}function Oj(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),s=e[1]*e[2],i=e[2],{newShape:a,keptDims:l}=y.squeezeShape(e),c=a;if(c.length<e.length){let d=Ku(r,c),g=["row","col","depth"];return`
        ${Hu(d,t)}
        float ${n}(int row, int col, int depth) {
          return ${n}(${ju(g,l)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${i}, 1)));
        ${qu(r)}
      }
    `;let u=r.shapeInfo.texShape,p=u[0],m=u[1],f=r.shapeInfo.flatOffset;if(m===s&&f==null)return t?`
      float ${n}(int row, int col, int depth) {
        int stride1 = ${o}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
        float ${n}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${m}.0, ${p}.0);
          return sampleTexture(${o}, uv);
        }
      `;if(m===i&&f==null)return t?`
      float ${n}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${o}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
    float ${n}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${m}.0, ${p}.0);
      return sampleTexture(${o}, uv);
    }
  `;let h=El(o);return t?`
    float ${n}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${o}Shape[1] * ${o}Shape[2];
      int stride1 = ${o}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${h};
      vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], index);
      return sampleTexture(${o}, uv);
    }
    `:`
      float ${n}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${i} + depth + ${h};
        vec2 uv = uvFromFlat(${p}, ${m}, index);
        return sampleTexture(${o}, uv);
      }
  `}function Lj(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),n=xe();if(t)return`
    vec4 ${o}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${n.texture2D}(${e}, uv);
    }
  `;let s=r.shapeInfo.logicalShape,i=s.length,a=r.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=l[0],u=l[1],p=Math.ceil(s[i-1]/2),m=p*Math.ceil(s[i-2]/2),f="int b, int row, int col",h=`b * ${m} + (row / 2) * ${p} + (col / 2)`;for(let d=2;d<i-1;d++)f=`int b${d}, `+f,m*=s[i-d-1],h=`b${d} * ${m} + `+h;return`
    vec4 ${o}(${f}) {
      int index = ${h};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${c});
      return ${n.texture2D}(${e}, uv);
    }
  `}function Pj(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),s=e[3],i=e[2]*s,a=e[1]*i,{newShape:l,keptDims:c}=y.squeezeShape(e);if(l.length<e.length){let b=Ku(r,l),C=["row","col","depth","depth2"];return`
      ${Hu(b,t)}
      float ${n}(int row, int col, int depth, int depth2) {
        return ${n}(${ju(C,c)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${i}, ${s}, 1)));
        ${qu(r)}
      }
    `;let u=r.shapeInfo.flatOffset,p=r.shapeInfo.texShape,m=p[0],f=p[1],h=`int stride2 = ${o}Shape[3];`,d=`int stride1 = ${o}Shape[2] * stride2;`,g=`int stride0 = ${o}Shape[1] * stride1;`;if(f===a&&u==null)return t?`
      float ${n}(int row, int col, int depth, int depth2) {
        ${h}
        ${d}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${o}, uv);
      }
    `;if(f===s&&u==null)return t?`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${o}Shape[1] * ${o}Shape[2], ${o}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${o}, uv);
      }
    `;let x=El(o);return t?`
    float ${n}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${h}
      ${d}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], index + ${x});
      return sampleTexture(${o}, uv);
    }
  `:`
    float ${n}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${m}, ${f}, index + ${x});
      return sampleTexture(${o}, uv);
    }
  `}function zj(r){let t=r.shapeInfo.logicalShape,e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),n=t[4],s=t[3]*n,i=t[2]*s,a=t[1]*i,{newShape:l,keptDims:c}=y.squeezeShape(t);if(l.length<t.length){let d=Ku(r,l),g=["row","col","depth","depth2","depth3"];return`
      ${Hu(d)}
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        return ${o}(${ju(g,c)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${i}, ${s}, ${n})) +
          depth3;
        ${qu(r)}
      }
    `;let u=r.shapeInfo.flatOffset,p=r.shapeInfo.texShape,m=p[0],f=p[1];if(f===a&&u==null)return`
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${s}, ${n}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(f===n&&u==null)return`
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;let h=El(e);return`
    float ${o}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} + depth * ${s} +
          depth2 * ${n} + depth3 + ${h};
      vec2 uv = uvFromFlat(${m}, ${f}, index);
      return sampleTexture(${e}, uv);
    }
  `}function Bj(r){let t=r.shapeInfo.logicalShape,e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:n,keptDims:s}=y.squeezeShape(t);if(n.length<t.length){let g=Ku(r,n),x=["row","col","depth","depth2","depth3","depth4"];return`
      ${Hu(g)}
      float ${o}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${o}(${ju(x,s)});
      }
    `}let i=t[5],a=t[4]*i,l=t[3]*a,c=t[2]*l,u=t[1]*c;if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${c}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${qu(r)}
      }
    `;let p=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,f=m[0],h=m[1];if(h===u&&p==null)return`
      float ${o}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${a}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${f}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(h===i&&p==null)return`
      float ${o}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${f}.0);
        return sampleTexture(${e}, uv);
      }
    `;let d=El(e);return`
    float ${o}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} + depth * ${l} +
          depth2 * ${a} + depth3 * ${i} + depth4 + ${d};
      vec2 uv = uvFromFlat(${f}, ${h}, index);
      return sampleTexture(${e}, uv);
    }
  `}function qu(r){let t=r.name,e=y.sizeFromShape(r.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function Mj(r,t){let e=r.name,o=e.charAt(0).toUpperCase()+e.slice(1),n="get"+o+"AtOutCoords",s=r.shapeInfo.logicalShape.length,i=t.logicalShape.length,a=Q$(r.shapeInfo.logicalShape,t.logicalShape),l=At(i),c=i-s,u,p=["x","y","z","w","u","v"];s===0?u="":i<2&&a.length>=1?u="coords = 0;":u=a.map(b=>`coords.${p[b+c]} = 0;`).join(`
`);let m="";i<2&&s>0?m="coords":m=r.shapeInfo.logicalShape.map((b,C)=>`coords.${p[C+c]}`).join(", ");let f="return outputValue;",d=y.sizeFromShape(r.shapeInfo.logicalShape)===1,x=y.sizeFromShape(t.logicalShape)===1;if(s===1&&!d&&!x)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(d&&!x)i===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(a.length){let b=s-2,C=s-1;a.indexOf(b)>-1&&a.indexOf(C)>-1?f="return vec4(outputValue.x);":a.indexOf(b)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(C)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${n}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${o}(${m});
      ${f}
    }
  `}function Vj(r,t){let e=r.name,o=e.charAt(0).toUpperCase()+e.slice(1),n="get"+o+"AtOutCoords",s=t.texShape,i=r.shapeInfo.texShape,a=r.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!r.shapeInfo.isUniform&&a===l&&r.shapeInfo.flatOffset==null&&y.arraysEqual(i,s))return`
      float ${n}() {
        return sampleTexture(${e}, resultUV);
      }
    `;let c=At(l),u=Q$(r.shapeInfo.logicalShape,t.logicalShape),p=l-a,m,f=["x","y","z","w","u","v"];a===0?m="":l<2&&u.length>=1?m="coords = 0;":m=u.map(d=>`coords.${f[d+p]} = 0;`).join(`
`);let h="";return l<2&&a>0?h="coords":h=r.shapeInfo.logicalShape.map((d,g)=>`coords.${f[g+p]}`).join(", "),`
    float ${n}() {
      ${c} coords = getOutputCoords();
      ${m}
      return get${o}(${h});
    }
  `}function At(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function lx(r,t,e){let{newShape:o,keptDims:n}=y.squeezeShape(t),s=t.length,i=r&&s===3&&t[0]===1,a=i?t.slice(1):o,l=!r&&s>1&&!y.arraysEqual(t,e)&&o.length<s||i;return{useSqueezeShape:l,uniformShape:l?a:t,keptDims:n}}function Ku(r,t){let e=JSON.parse(JSON.stringify(r));return e.shapeInfo.logicalShape=t,e}function ju(r,t){return t.map(e=>r[e]).join(", ")}function nD(r,t,e,o){let n=e.map((u,p)=>{let m={logicalShape:u.shape,texShape:u.isUniform?null:u.texData.texShape,isUniform:u.isUniform,isPacked:u.isUniform?!1:u.texData.isPacked,flatOffset:null};return u.texData!=null&&u.texData.slice!=null&&u.texData.slice.flatOffset>0&&(m.flatOffset=u.texData.slice.flatOffset),{name:t.variableNames[p],shapeInfo:m}}),s=n.map(u=>u.shapeInfo),i={logicalShape:o.shape,texShape:o.texData.texShape,isUniform:!1,isPacked:o.texData.isPacked,flatOffset:null},a=tD(n,i,t),l=F$(r.gl,a),c=r.createProgram(l);return P().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:s,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(r.buildVao(c),Object.assign({program:t,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:s,outShapeInfo:i},HC(r,t,c)))}function HC(r,t,e){let o=[],n=[],s,i,a,l=null,c=null;c=r.getUniformLocation(e,"NAN",!1),P().getNumber("WEBGL_VERSION")===1&&(l=r.getUniformLocation(e,"INFINITY",!1));let u=!1;for(let p of t.variableNames){let m={name:p,uniform:r.getUniformLocation(e,p,u),offset:r.getUniformLocation(e,`offset${p}`,u)};t.enableShapeUniforms&&(m.shape=r.getUniformLocation(e,`${p}Shape`,u),m.texShape=r.getUniformLocation(e,`${p}TexShape`,u)),o.push(m)}if(t.enableShapeUniforms&&(s=r.getUniformLocation(e,"outShape",u),a=r.getUniformLocation(e,"outShapeStrides",u),i=r.getUniformLocation(e,"outTexShape",u)),t.customUniforms)for(let p of t.customUniforms)n.push(r.getUniformLocation(e,p.name,u));return{variablesLocations:o,customUniformLocations:n,infLoc:l,nanLoc:c,outShapeLocation:s,outShapeStridesLocation:a,outTexShapeLocation:i}}function oD(r,t){if(r.length!==t.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${t.length} inputs`);r.forEach((e,o)=>{let n=e.logicalShape,s=t[o],i=s.shape;if(!y.arraysEqual(n,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${n} and ${i} must match`);if(e.isUniform&&s.isUniform)return;let a=e.texShape,l=s.isUniform?null:s.texData.texShape;if(!y.arraysEqual(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function sD(r,t,e,o,n){t.program.enableShapeUniforms||(oD(t.inShapeInfos,e),oD([t.outShapeInfo],[o]));let s=o.texData.texture,i=o.texData.texShape;o.texData.isPacked?r.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):r.setOutputMatrixTexture(s.texture,i[0],i[1]),r.setProgram(t.webGLProgram),r.bindVertexArray(t.webGLProgram.vao),P().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&r.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&r.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<e.length;++l){let c=e[l],{uniform:u,offset:p,shape:m,texShape:f}=t.variablesLocations[l];if(m){let{uniformShape:h}=lx(t.program.packedInputs,c.shape,c.texData.texShape);switch(h.length){case 1:r.gl.uniform1iv(m,new Int32Array(h));break;case 2:r.gl.uniform2iv(m,new Int32Array(h));break;case 3:r.gl.uniform3iv(m,new Int32Array(h));break;case 4:r.gl.uniform4iv(m,new Int32Array(h));break;default:break}}if(f&&r.gl.uniform2i(f,c.texData.texShape[0],c.texData.texShape[1]),u!=null){if(c.isUniform){if(y.sizeFromShape(c.shape)<2)r.gl.uniform1f(u,c.uniformValues[0]);else{let h=c.uniformValues;h instanceof Float32Array||(h=new Float32Array(h)),r.gl.uniform1fv(u,h)}continue}c.texData.slice!=null&&p!=null&&r.gl.uniform1i(p,c.texData.slice.flatOffset),r.setInputMatrixTexture(c.texData.texture.texture,u,l)}}let a=t.outShapeLocation;if(a)switch(o.shape.length){case 1:r.gl.uniform1iv(a,new Int32Array(o.shape));break;case 2:r.gl.uniform2iv(a,new Int32Array(o.shape));break;case 3:r.gl.uniform3iv(a,new Int32Array(o.shape));break;case 4:r.gl.uniform4iv(a,new Int32Array(o.shape));break;default:break}if(t.outShapeStridesLocation){let l=y.computeStrides(o.shape);switch(o.shape.length){case 2:r.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:r.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:r.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break;default:break}}if(t.outTexShapeLocation&&r.gl.uniform2i(t.outTexShapeLocation,o.texData.texShape[0],o.texData.texShape[1]),t.program.customUniforms&&n)for(let l=0;l<t.program.customUniforms.length;++l){let c=t.program.customUniforms[l],u=t.customUniformLocations[l],p=n[l];if(c.type==="float")r.gl.uniform1fv(u,p);else if(c.type==="vec2")r.gl.uniform2fv(u,p);else if(c.type==="vec3")r.gl.uniform3fv(u,p);else if(c.type==="vec4")r.gl.uniform4fv(u,p);else if(c.type==="int")r.gl.uniform1iv(u,p);else if(c.type==="ivec2")r.gl.uniform2iv(u,p);else if(c.type==="ivec3")r.gl.uniform3iv(u,p);else if(c.type==="ivec4")r.gl.uniform4iv(u,p);else throw Error(`uniform type ${c.type} is not supported yet.`)}r.executeProgram()}function iD(r,t,e){let o="";t.concat(e).forEach(i=>{let a=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(r.enableShapeUniforms&&!i.isUniform){let l=i.texData.texShape,{useSqueezeShape:c,uniformShape:u,keptDims:p}=lx(r.packedInputs,i.shape,l),m="",f="",h="";if(u.length===1&&r.packedInputs){let v=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];m=`${v[0]>1}_${v[1]>1}`}else if(u.length===2&&!r.packedInputs)f=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!r.packedInputs){let v=y.computeStrides(u);h=`${v[0]===l[1]}_${v[v.length-1]===l[1]}`}let d=i.shape.length,g=u.length===2&&y.arraysEqual(i.shape,l),x=y.sizeFromShape(i.shape)===1,b=S.getBroadcastDims(i.shape,e.shape),C=!r.packedInputs&&d===e.shape.length&&y.arraysEqual(l,e.texData.texShape),w=r.packedInputs||u.length>2?"":`${l[0]>1}_${l[1]>1}`;o+=`${d}_${C}_${c?p:""}_${u.length}_${x}_${b}_${g}_${m}_${f}_${h}_${w}_${a}`}else{let l=i.isUniform?"uniform":i.texData.texShape;o+=`${i.shape}_${l}_${a}`}});let n=r.userCode,s=r.constructor.name;return s+="_"+o+"_"+n+`${P().getNumber("WEBGL_VERSION")}`,s}function Xt(r){return P().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&r<=4}var cx=class{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=da.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=xe();this.outputShape=t,this.enableShapeUniforms=Xt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?kl(["r","c","d"],t):Qo(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}};var ux=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=da.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=xe();this.outputShape=t,this.enableShapeUniforms=Xt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?kl(["r","c","d"],t):Qo(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}};var px=class{constructor(t){this.variableNames=["A"],this.outTexUsage=ur.DOWNLOAD;let e=xe();this.outputShape=t,this.userCode=`
      ${ax}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}};var mx=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=ur.DOWNLOAD;let e=xe();this.outputShape=t,this.userCode=`
      ${ax}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}};var Wj={R:0,G:1,B:2,A:3},jf=class{constructor(t,e=!1,o="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=xe();this.outputShape=t,this.enableShapeUniforms=Xt(this.outputShape.length);let s="result";e&&(s="floor(result * 255. + 0.5)");let i="";for(let a=0;a<o.length;a++){let l=o[a];i+=`
          if(offset == ${a}) {
            result = values[${Wj[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Uu():Gu(t)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${o.length});

        flatIndex = idiv(flatIndex, ${o.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${n.texture2D}(A, uv);
          ${i}
        }
        ${n.output} = vec4(${s}, 0., 0., 0.);
      }
    `}};var fx=class{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let o=xe();this.outputShape=t,this.enableShapeUniforms=Xt(this.outputShape.length);let n="",s="result";e&&(s="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let a=0;a<=1;a++){let l=i*2+a;n+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${o.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Uu():Gu(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${n}

          ${o.output} = ${s};
        }
    `}};function aD(r){let t=xe(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return _$(r,e)}function lD(r){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return P$(r,t)}function cD(r){let t=new Uint16Array([0,1,2,2,1,3]);return z$(r,t)}function Xf(r,t,e,o,n,s){M$(t,e);let i=B$(r),a=r.TEXTURE_2D;return mt(r,()=>r.bindTexture(a,i)),mt(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),mt(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),mt(r,()=>r.texParameteri(a,r.TEXTURE_MIN_FILTER,r.NEAREST)),mt(r,()=>r.texParameteri(a,r.TEXTURE_MAG_FILTER,r.NEAREST)),P().getNumber("WEBGL_VERSION")===1?mt(r,()=>r.texImage2D(a,0,o,t,e,0,n,s,null)):mt(r,()=>r.texStorage2D(a,1,o,t,e)),mt(r,()=>r.bindTexture(r.TEXTURE_2D,null)),{texture:i,texShape:[e,t]}}function qC(r){return r.internalFormatFloat}function uD(r,t,e,o){let[n,s]=Nl(t,e);return Xf(r,n,s,qC(o),o.textureFormatFloat,r.FLOAT)}function KC(r){return r.internalFormatHalfFloat}function pD(r,t,e,o){let[n,s]=Nl(t,e);return Xf(r,n,s,KC(o),o.textureFormatFloat,o.textureTypeHalfFloat)}function jC(r){return r.downloadTextureFormat}function mD(r,t,e,o){let[n,s]=Nl(t,e);return Xf(r,n,s,jC(o),r.RGBA,r.UNSIGNED_BYTE)}function XC(r){return r.internalFormatPackedFloat}function fD(r,t,e,o){let[n,s]=kn(t,e);return Xf(r,n,s,XC(o),r.RGBA,r.FLOAT)}function YC(r){return r.internalFormatPackedHalfFloat}function hD(r,t,e,o){let[n,s]=kn(t,e);return Xf(r,n,s,YC(o),r.RGBA,o.textureTypeHalfFloat)}function dD(r,t,e){return mt(r,()=>r.bindBuffer(r.ARRAY_BUFFER,e)),GC(r,t,"clipSpacePos",e,3,20,0)&&GC(r,t,"uv",e,2,20,12)}function gD(r,t,e,o,n,s){mt(r,()=>r.bindTexture(r.TEXTURE_2D,t));let i,a,l;n instanceof Uint8Array?(i=new Uint8Array(e*o*4),a=r.UNSIGNED_BYTE,l=r.RGBA):(i=new Float32Array(e*o*4),a=r.FLOAT,l=s.internalFormatPackedFloat),i.set(n),P().getNumber("WEBGL_VERSION")===2?mt(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,e,o,r.RGBA,a,i)):mt(r,()=>r.texImage2D(r.TEXTURE_2D,0,l,e,o,0,r.RGBA,a,i)),mt(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function xD(r,t,e){mt(r,()=>r.bindTexture(r.TEXTURE_2D,t)),e.data instanceof Uint8Array?P().getNumber("WEBGL_VERSION")===2?mt(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,e.width,e.height,r.RGBA,r.UNSIGNED_BYTE,e.data)):mt(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,e.width,e.height,0,r.RGBA,r.UNSIGNED_BYTE,e.data)):P().getNumber("WEBGL_VERSION")===2?mt(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,r.RGBA,r.UNSIGNED_BYTE,e)):mt(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,e)),mt(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function yD(r,t,e,o){let n=r.createBuffer();mt(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,n));let a=4*4*t*e;return mt(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,a,r.STREAM_READ)),mt(r,()=>r.readPixels(0,0,e,t,r.RGBA,r.FLOAT,0)),mt(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),n}function bD(r,t,e){let o=r,n=new Float32Array(e);return o.bindBuffer(o.PIXEL_PACK_BUFFER,t),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,n),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),n}function wD(r,t,e,o){let[n,s]=Nl(t,e),i=4,a=new Uint8Array($$(t*e,i));return mt(r,()=>r.readPixels(0,0,n,s,o.downloadTextureFormat,r.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function CD(r,t,e,o,n,s,i,a){let l=r,c=new Float32Array(D$(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function vD(r,t,e){let o=new Float32Array(t*e*4);return mt(r,()=>r.readPixels(0,0,e,t,r.RGBA,r.FLOAT,o)),o}var Xu=class{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let e=P().getNumber("WEBGL_VERSION");if(t!=null?(this.gl=t,A$(e,t)):this.gl=Zr(e),t=this.gl,P().getNumber("WEBGL_VERSION")===2){let s=t;this.createVertexArray=()=>mt(s,()=>s.createVertexArray()),this.bindVertexArray=i=>mt(s,()=>s.bindVertexArray(i)),this.deleteVertexArray=i=>mt(s,()=>s.deleteVertexArray(i)),this.getVertexArray=()=>mt(s,()=>s.getParameter(s.VERTEX_ARRAY_BINDING))}else if(t!=null){let s=t.getExtension("OES_vertex_array_object");if(s==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>mt(t,()=>s.createVertexArrayOES()),this.bindVertexArray=i=>mt(t,()=>s.bindVertexArrayOES(i)),this.deleteVertexArray=i=>mt(t,()=>s.deleteVertexArrayOES(i)),this.getVertexArray=()=>mt(t,()=>t.getParameter(s.VERTEX_ARRAY_BINDING_OES))}let o="WEBGL_color_buffer_float",n="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),P().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=Hf(this.gl,s),uo(this.gl,i))this.textureHalfFloatExtension=Hf(this.gl,i);else if(P().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(o),uo(this.gl,n))this.colorBufferHalfFloatExtension=Hf(this.gl,n);else if(P().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(o="EXT_color_buffer_float",uo(this.gl,o))this.colorBufferFloatExtension=this.gl.getExtension(o);else if(uo(this.gl,n))this.colorBufferHalfFloatExtension=this.gl.getExtension(n);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=lD(this.gl),this.indexBuffer=cD(this.gl),this.framebuffer=V$(this.gl),this.textureConfig=Wf(this.gl,this.textureHalfFloatExtension)}get debug(){return P().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let t=this.gl;mt(t,()=>t.finish()),mt(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),mt(t,()=>t.deleteFramebuffer(this.framebuffer)),mt(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),mt(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),mt(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),uD(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),pD(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),mD(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),xD(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,o,n){this.throwIfDisposed(),gD(this.gl,t,e,o,n,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),hD(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),fD(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(UC(this.gl,this.framebuffer),this.outputTexture=null),mt(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,o){return this.downloadMatrixDriver(t,()=>wD(this.gl,e,o,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,o,n,s,i){return CD(this.gl,t,e,o,n,s,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return bD(this.gl,t,e)}createBufferFromTexture(t,e,o){this.bindTextureToFrameBuffer(t);let n=yD(this.gl,e,o,this.textureConfig);return this.unbindTextureToFrameBuffer(),n}createAndWaitForFence(){let t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,o;if(P().getBool("WEBGL_FENCE_API_ENABLED")){let n=t,s=n.fenceSync(n.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),o=()=>{let i=n.clientWaitSync(s,0,0);return i===n.ALREADY_SIGNALED||i===n.CONDITION_SATISFIED},e=s}else P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),o=()=>this.isQueryAvailable(e,P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):o=()=>!0;return{query:e,isFencePassed:o}}downloadMatrixFromPackedTexture(t,e,o){return this.downloadMatrixDriver(t,()=>vD(this.gl,e,o))}createProgram(t){this.throwIfDisposed();let e=this.gl;this.vertexShader==null&&(this.vertexShader=aD(e));let o=O$(e);mt(e,()=>e.attachShader(o,this.vertexShader)),mt(e,()=>e.attachShader(o,t)),L$(e,o);let n=Object.assign(o,{vao:this.createVertexArray()});return this.debug&&nx(e,n),n}buildVao(t){this.setProgram(t),this.bindVertexArray(t.vao);let e=this.gl;mt(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),dD(e,t,this.vertexBuffer)}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&(mt(this.gl,()=>this.gl.deleteProgram(t)),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&nx(this.gl,this.program),mt(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,o=!0){return this.throwIfDisposed(),o?G$(this.gl,t,e):U$(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),mt(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,o){this.throwIfDisposed(),this.throwIfNoProgram(),W$(this.gl,t,e,o)}setOutputMatrixTexture(t,e,o){this.setOutputMatrixTextureDriver(t,o,e)}setOutputPackedMatrixTexture(t,e,o){this.throwIfDisposed();let[n,s]=kn(e,o);this.setOutputMatrixTextureDriver(t,n,s)}setOutputMatrixWriteRegion(t,e,o,n){this.setOutputMatrixWriteRegionDriver(o,t,n,e)}setOutputPackedMatrixWriteRegion(t,e,o,n){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&nx(this.gl,this.program),qf(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let t=this.gl;if(this.debug){let e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}mt(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),mt(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Hf(this.gl,P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let o=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=o.createQuery();return o.beginQuery(n.TIME_ELAPSED_EXT,s),s}let t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let e=this.gl,o=this.getQueryTimerExtensionWebGL2();e.endQuery(o.TIME_ELAPSED_EXT);return}let t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}waitForQueryAndGetTime(t){return B(this,null,function*(){return yield y.repeatedTry(()=>this.disposed||this.isQueryAvailable(t,P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))})}getQueryTime(t,e){if(e===0)return null;if(e===2){let o=this.gl;return o.getQueryParameter(t,o.QUERY_RESULT)/1e6}else{let o=this.getQueryTimerExtensionWebGL1();return o.getQueryObjectEXT(t,o.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){let o=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=o.getQueryParameter(t,o.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let o=this.getQueryTimerExtensionWebGL1(),n=o.getQueryObjectEXT(t,o.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){let t=qj(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){let{resolveFn:o}=this.itemsToPoll[e];o()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let o;"setTimeoutCustom"in P().platform&&(o=P().platform.setTimeoutCustom.bind(P().platform)),y.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,o)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),sx(this.gl,t,this.framebuffer),this.debug&&qf(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(sx(this.gl,this.outputTexture,this.framebuffer),this.debug&&qf(this.gl)):UC(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);let o=e();return this.unbindTextureToFrameBuffer(),o}setOutputMatrixTextureDriver(t,e,o){this.throwIfDisposed();let n=this.gl;sx(n,t,this.framebuffer),this.debug&&qf(n),this.outputTexture=t,mt(n,()=>n.viewport(0,0,e,o)),mt(n,()=>n.scissor(0,0,e,o))}setOutputMatrixWriteRegionDriver(t,e,o,n){this.throwIfDisposed(),mt(this.gl,()=>this.gl.scissor(t,e,o,n))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function qj(r){let t=0;for(;t<r.length&&r[t]();++t);return t-1}var{addImpl:SD,bincountImpl:hx,bincountReduceImpl:ID,bitwiseAndImpl:ND,castImpl:TD,ceilImpl:kD,concatImpl:ED,equalImpl:AD,expImpl:$D,expm1Impl:DD,floorImpl:RD,gatherNdImpl:_D,gatherV2Impl:FD,greaterImpl:OD,greaterEqualImpl:LD,lessImpl:PD,lessEqualImpl:zD,linSpaceImpl:BD,logImpl:MD,maxImpl:VD,maximumImpl:GD,minimumImpl:UD,multiplyImpl:WD,negImpl:HD,notEqualImpl:qD,prodImpl:KD,raggedGatherImpl:jD,raggedRangeImpl:XD,raggedTensorToTensorImpl:YD,rangeImpl:ZD,rsqrtImpl:JD,scatterImpl:QD,sigmoidImpl:tR,simpleAbsImpl:dx,sliceImpl:eR,sparseFillEmptyRowsImpl:rR,sparseReshapeImpl:oR,sparseSegmentReductionImpl:gx,sqrtImpl:nR,staticRegexReplaceImpl:sR,stridedSliceImpl:iR,stringNGramsImpl:aR,stringSplitImpl:lR,stringToHashBucketFastImpl:cR,subImpl:uR,tileImpl:pR,topKImpl:mR,transposeImpl:Al,uniqueImpl:fR}=IC;function ZC(r,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${r}.${e}`)}function Ie(r,t){return t===1?[r]:ZC(r,t)}function hR(r,t){if(r===1)return"rc";let e="";for(let o=0;o<r;o++)e+=t[o],o<r-1&&(e+=",");return e}var xx=class{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=Xt(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let e=Ie("rc",this.rank),o=At(this.rank),n=this.getOutOfBoundsCondition(e),s=this.getSetup(e),i=this.getOutput(e);this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();

          if(${n}) {
            setOutput(vec4(0));
          } else {
            ${s}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(t){let e=[];for(let o=0;o<=1;o++)for(let n=0;n<=1;n++){let s=`${o===0?"r":"rp1"}, ${n===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)s=`${t[t.length-1-i]},`+s;e.push(s)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let o=this.rank-2;o<this.rank;o++)e+=`${t[o]} >= ${this.enableShapeUniforms?`outShape[${o}]`:this.outputShape[o]}`,o<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";let e=t.slice(-2),o=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],n=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${o};
      bool rEdge = rp1 >= ${n};
    `}getOutput(t){let e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}};var Yu=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=Xt(this.outputShape.length);let o="";for(let n=0;n<4;n++){let s="thisRC = rc;";n%2===1&&(s+="thisRC.z += 1;"),n>1&&(s+="thisRC.y += 1;"),o+=`
        ${s}
        ${n>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${n}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${n>0?"}":""}
      `}this.userCode=`
      ${Kj(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Uu():Gu(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${o}

        setOutput(result);
      }
    `}};function Kj(r,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?J$(["r","c","d"],"inputShape"):Qo(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var yx=class{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(t,e,o){let n=gR(e,o),s=xR(t,n,o);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let i=dR(t,n,this.gpgpu.gl,this.gpgpu.textureConfig,o);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let l=this.freeTextures[s].pop();return this.usedTextures[s].push(l),l}let a;return n===er.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):n===er.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):n===er.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):n===er.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):n===er.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(t,e,o,n){if(this.freeTextures==null)return;let s=gR(o,n),i=xR(e,s,n);i in this.freeTextures||(this.freeTextures[i]=[]);let a=dR(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n),l=P().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;let c=this.usedTextures[i],u=c&&c.indexOf(t);if(u==null||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[u]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;let t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);let e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(let t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function jj(r,t){let e=r;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===r.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function dR(r,t,e,o,n){let s=Xj(t,o),i;if(n){let[l,c]=kn(r[0],r[1]);i=l*c}else{let[l,c]=Nl(r[0],r[1]);i=l*c}let a=jj(e,s);return i*a}function Xj(r,t){switch(r){case er.PACKED_2X2_FLOAT32:return XC(t);case er.PACKED_2X2_FLOAT16:return YC(t);case er.UNPACKED_FLOAT32:return qC(t);case er.UNPACKED_FLOAT16:return KC(t);case er.PACKED_4X1_UNSIGNED_BYTE:return jC(t);default:throw new Error(`Unknown physical texture type ${r}`)}}function Yj(r){return P().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?er.PACKED_2X2_FLOAT32:er.UNPACKED_FLOAT32:r?er.PACKED_2X2_FLOAT16:er.UNPACKED_FLOAT16}function gR(r,t){if(r===ur.UPLOAD)return er.PACKED_2X2_FLOAT32;if(r===ur.RENDER||r==null)return Yj(t);if(r===ur.DOWNLOAD||r===ur.PIXELS)return er.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${r}`)}function xR(r,t,e){return`${r[0]}_${r[1]}_${t}_${e}`}var rr=class{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=Xt(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},Le="if (isnan(x)) return x;",yR="return x;",JC="return abs(x);";var bR="return (x >= 0.0) ? x : (exp(x) - 1.0);",wR=Le+`
  return (x < 0.0) ? 0.0 : x;
`,CR=Le+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,An="return x;",vR="return 1.0 / (1.0 + exp(-1.0 * x));";var IR="return x;",NR=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,TR=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,kR=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,ER="return 1.0 / (1.0 + exp(-1.0 * x));",Lr=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=Xt(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var bx=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=Xt(this.outputShape.length);let e=t.length,o=Ie("rc",e),n=At(e),s=hR(e,o),i=o.slice(-2),a=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${n} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}};var Jj=ar.whereImpl,Qj=1e-7,t6=1e-4,wx={};function e6(r){return r in wx||(wx[r]={}),wx[r]}var r6=P().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),o6=600;function n6(){return P().global.screen==null?1024:P().global.screen.height*P().global.screen.width*window.devicePixelRatio*o6/1024/1024}var Yf=class r extends Rn{nextDataId(){return r.nextDataId++}constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!P().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(t!=null){if(t instanceof Xu)e=t;else{let o=Zr(P().getNumber("WEBGL_VERSION"),t);e=new Xu(o)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let o=Zr(P().getNumber("WEBGL_VERSION"));e=new Xu(o),this.binaryCache=e6(P().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new yx(this.gpgpu),this.numMBBeforeWarning=n6(),this.texData=new va(this,xo())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,e,o,n,s,i){let a=this.makeTensorInfo(e,o),l=this.texData.get(a.dataId);l.isPacked=!1,l.texture={texture:t,texShape:[n,s]},l.texShape=[n,s];let c=Kf(e),u=new jf(c,!1,i),p=this.runWebGLProgram(u,[a],o,[[n,s]]);return p.shape=e,l.texture=null,this.disposeIntermediateTensorInfo(a),p.dataId}write(t,e,o){if((P().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||P().getBool("DEBUG"))&&this.checkNumericalProblems(t),o==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let n={id:this.nextDataId()};return this.texData.set(n,{shape:e,dtype:o,values:t,usage:ur.UPLOAD,refCount:1}),n}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){let e=this.texData.get(t);e.refCount++}decRef(t){if(this.texData.has(t)){let e=this.texData.get(t);e.refCount--}}move(t,e,o,n,s){if(P().getBool("DEBUG")&&this.checkNumericalProblems(e),n==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:o,dtype:n,values:e,usage:ur.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){let e=this.texData.get(t),{values:o,dtype:n,complexTensorInfos:s,slice:i,shape:a,isPacked:l}=e;if(i!=null){let m;l?m=new Lr(a,An):m=new rr(a,An);let f=this.runWebGLProgram(m,[{dataId:t,shape:a,dtype:n}],n),h=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),h}if(o!=null)return this.convertAndCacheOnCPU(t);if(n==="string")return o;let c=this.activeTimers!=null,u;c&&(u=y.now());let p;if(n==="complex64"){let m=this.readSync(s.real.dataId),f=this.readSync(s.imag.dataId);p=S.mergeRealAndImagArrays(m,f)}else p=this.getValuesFromTexture(t);return c&&(this.downloadWaitMs+=y.now()-u),this.convertAndCacheOnCPU(t,p)}read(t){return B(this,null,function*(){if(this.pendingRead.has(t)){let h=this.pendingRead.get(t);return new Promise(d=>h.push(d))}let e=this.texData.get(t),{values:o,shape:n,slice:s,dtype:i,complexTensorInfos:a,isPacked:l}=e;if(s!=null){let h;l?h=new Lr(n,An):h=new rr(n,An);let d=this.runWebGLProgram(h,[{dataId:t,shape:n,dtype:i}],i),g=this.read(d.dataId);return this.disposeIntermediateTensorInfo(d),g}if(o!=null)return this.convertAndCacheOnCPU(t);if(P().getBool("DEBUG")&&!P().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&P().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,u;if(i!=="complex64"&&P().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);let h=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(h.texture.texture,...Uf(n))}this.pendingRead.set(t,[]),i!=="complex64"&&(yield this.gpgpu.createAndWaitForFence());let p;if(i==="complex64"){let h=yield Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),d=h[0],g=h[1];p=S.mergeRealAndImagArrays(d,g)}else if(c==null)p=this.getValuesFromTexture(t);else{let h=y.sizeFromShape(n);p=this.gpgpu.downloadFloat32MatrixFromBuffer(c,h)}if(u!=null&&this.disposeIntermediateTensorInfo(u),c!=null){let h=this.gpgpu.gl;mt(h,()=>h.deleteBuffer(c))}let m=this.convertAndCacheOnCPU(t,p),f=this.pendingRead.get(t);return this.pendingRead.delete(t),f.forEach(h=>h(m)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&xo().removeDataId(t,this),this.pendingDeletes--),m})}readToGPU(t,e={}){let o=this.texData.get(t),{values:n,shape:s,slice:i,dtype:a,isPacked:l,texture:c}=o;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let f;l?f=new Lr(s,An):f=new rr(s,An);let h=this.runWebGLProgram(f,[{dataId:t,shape:s,dtype:a}],a),d=this.readToGPU(h,e);return this.disposeIntermediateTensorInfo(h),d}if(c==null)throw n!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(t,e.customTexShape),p=xo().makeTensorFromTensorInfo(u),m=this.texData.get(u.dataId);return Object.assign({tensorRef:p},m.texture)}bufferSync(t){let e=this.readSync(t.dataId);if(t.dtype==="string")try{let o=e.map(n=>y.decodeString(n));return dt(t.shape,t.dtype,o)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return dt(t.shape,t.dtype,e)}checkNumericalProblems(t){if(t!=null)for(let e=0;e<t.length;e++){let o=t[e];if(!R$(o))throw P().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${o} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${o} cannot be represented on this device.`)}}getValuesFromTexture(t){let{shape:e,dtype:o,isPacked:n}=this.texData.get(t),s=y.sizeFromShape(e);if(P().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let m=this.decode(t),f=this.texData.get(m.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...Uf(e)).subarray(0,s);return this.disposeIntermediateTensorInfo(m),h}let i=P().getBool("WEBGL_PACK")&&n===!0,a=i?Kf(e):e,l=i?new mx(a):new px(a),c=this.runWebGLProgram(l,[{shape:a,dtype:o,dataId:t}],"float32"),u=this.texData.get(c.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(c),p}timerAvailable(){return P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){let e=this.activeTimers,o=[],n=!1;this.programTimersStack==null?(this.programTimersStack=o,n=!0):this.activeTimers.push(o),this.activeTimers=o,t();let s=y.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),i=y.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=e,n&&(this.programTimersStack=null);let a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return B(this,null,function*(){if(P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let l=yield Promise.all(s);a.kernelMs=y.sum(l),a.getExtraProfileInfo=()=>l.map((c,u)=>({name:i[u],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:y.now(),endMs:null}}endTimer(t){return P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=y.now(),t)}getQueryTime(t){return B(this,null,function*(){if(P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);let e=t;return e.endMs-e.startMs})}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);let{complexTensorInfos:o}=this.texData.get(t);return o!=null&&(this.disposeData(o.real.dataId,e),this.disposeData(o.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){let{texture:e,dtype:o,texShape:n,usage:s,isPacked:i,slice:a}=this.texData.get(t),l=a&&a.origDataId||t,c=this.dataRefCount.get(l);c>1?this.dataRefCount.set(l,c-1):(this.dataRefCount.delete(l),e!=null&&(this.numBytesInGPU-=this.computeBytes(n,o),this.textureManager.releaseTexture(e,n,s,i)));let u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=r6){return P().getBool("WEBGL_CPU_FORWARD")&&t.every(o=>this.texData.get(o.dataId).texture==null&&y.sizeFromShape(o.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){S.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let e=t.dataSync();return Jj(t.shape,e)}packedUnaryOp(t,e,o){let n=new Lr(t.shape,e),s=this.compileAndRun(n,[t],o);return xo().makeTensorFromTensorInfo(s)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){let n=dx(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,n)}if(P().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,JC,t.dtype);let e=new rr(t.shape,JC),o=this.compileAndRun(e,[t]);return xo().makeTensorFromTensorInfo(o)}makeTensorInfo(t,e,o){let n;if(e==="string"&&o!=null&&o.length>0&&y.isString(o[0])){let s=o.map(i=>y.encodeString(i));n=this.write(s,t,e)}else n=this.write(o,t,e);return this.texData.get(n).usage=null,{dataId:n,shape:t,dtype:e}}makeOutput(t,e,o){return xo().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,o),this)}unpackTensor(t){let e=new bx(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){let e=new xx(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){let o=[ga(t.shape),...xa(t.shape)],n={dtype:t.dtype,shape:o,dataId:t.dataId},s=[ga(e),...xa(e)],i=new Yu(s,o),a=!0,l=[o],c=this.runWebGLProgram(i,[n],t.dtype,l,a);return{dataId:c.dataId,shape:e,dtype:c.dtype}}decode(t,e){let o=this.texData.get(t),{isPacked:n,shape:s,dtype:i}=o;if(e!=null){let m=y.sizeFromShape(s),f=e[0]*e[1]*4;y.assert(m<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let a=Kf(s),l;n?l=new ux(a):l=new cx(a);let c=!0,u=[e??Uf(a)],p=this.runWebGLProgram(l,[{shape:a,dtype:i,dataId:t}],i,u,c,e);return{dtype:i,shape:s,dataId:p.dataId}}runWebGLProgram(t,e,o,n,s=!1,i){let a=this.makeTensorInfo(t.outputShape,o),l=this.texData.get(a.dataId);if(t.packedOutput&&(l.isPacked=!0),t.outPackingScheme===da.DENSE){let x=i??Uf(t.outputShape);l.texShape=x.map(b=>b*2)}if(t.outTexUsage!=null&&(l.usage=t.outTexUsage),y.sizeFromShape(a.shape)===0)return l.values=y.getTypedArrayFromDType(a.dtype,0),a;let c=[],u=e.map(x=>{if(x.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(x.dataId);if(b.texture==null){if(!t.packedInputs&&y.sizeFromShape(x.shape)<=P().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:x.shape,texData:null,isUniform:!0,uniformValues:b.values};t.packedInputs&&(b.isPacked=!0,b.shape=x.shape)}if(this.uploadToGPU(x.dataId),!!b.isPacked!=!!t.packedInputs)x=b.isPacked?this.unpackTensor(x):this.packTensor(x),c.push(x),b=this.texData.get(x.dataId);else if(b.isPacked&&!Tl(b.shape,x.shape)){let C=x,w=x.shape;x.shape=b.shape,x=this.packedReshape(x,w),c.push(x),b=this.texData.get(x.dataId),C.shape=w}return{shape:x.shape,texData:b,isUniform:!1}});this.uploadToGPU(a.dataId);let p={shape:a.shape,texData:l,isUniform:!1},m=iD(t,u,p),f=this.getAndSaveBinary(m,()=>nD(this.gpgpu,t,u,p)),h=this.activeTimers!=null,d;h&&(d=this.startTimer()),P().get("ENGINE_COMPILE_ONLY")||sD(this.gpgpu,f,u,p,n),c.forEach(x=>this.disposeIntermediateTensorInfo(x)),h&&(d=this.endTimer(d),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(d)}));let g=P().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){let x=y.now();x-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=x)}if(!P().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&s===!1){let x=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),x}return a}compileAndRun(t,e,o,n,s=!1){return o=o||e[0].dtype,this.runWebGLProgram(t,e,o,n,s)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(P().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=z(()=>{if(!P().get("WEBGL_RENDER_FLOAT32_ENABLED")){let t=P().getBool("DEBUG");P().set("DEBUG",!1);let e=this.abs(bt(1e-8)).dataSync()[0];if(P().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Qj:t6}uploadToGPU(t){let e=this.texData.get(t),{shape:o,dtype:n,values:s,texture:i,usage:a,isPacked:l}=e;if(i!=null)return;let c=this.activeTimers!=null,u;c&&(u=y.now());let p=e.texShape;if(p==null&&(p=H$(o,l),e.texShape=p),s!=null){let m=Kf(o),f,h=p[1],d=p[0],g=s instanceof Uint8Array||s instanceof Uint8ClampedArray;(l||!g)&&([h,d]=kn(p[0],p[1])),l?f=new fx(m,g):f=new jf(m,g);let x=g?[d,h]:p,b=this.makeTensorInfo(x,n),C=this.texData.get(b.dataId);g?C.usage=ur.PIXELS:C.usage=ur.UPLOAD,C.texShape=x,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),h,d,s);let w=[[d,h]],E=this.runWebGLProgram(f,[b],n,w,!0),A=this.texData.get(E.dataId);e.texShape=A.texShape,e.isPacked=A.isPacked,e.usage=A.usage,P().get("ENGINE_COMPILE_ONLY")?this.disposeData(E.dataId):(e.texture=A.texture,e.values=null,this.texData.delete(E.dataId)),this.disposeIntermediateTensorInfo(b),c&&(this.uploadWaitMs+=y.now()-u)}else{let m=this.acquireTexture(p,a,n,l);e.texture=m}}convertAndCacheOnCPU(t,e){let o=this.texData.get(t),{dtype:n}=o;return e!=null&&(o.values=s6(e,n)),o.values}acquireTexture(t,e,o,n){if(this.numBytesInGPU+=this.computeBytes(t,o),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,n)}computeBytes(t,e){return t[0]*t[1]*y.bytesPerElement(e)}checkCompileCompletion(){for(let[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}checkCompileCompletionAsync(){return B(this,null,function*(){let t=[];if(this.gpgpu.parallelCompilationExtension){for(let[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}else{for(let[,e]of Object.entries(this.binaryCache)){let o=new Promise(n=>{try{this.checkCompletion_(e),n(!0)}catch(s){throw s}});t.push(o)}return Promise.all(t)}})}checkCompletionAsync_(t){return B(this,null,function*(){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(yield Yp(),this.checkCompletionAsync_(t))})}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(VC(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let t of Object.values(this.binaryCache)){this.gpgpu.buildVao(t.webGLProgram);let{variablesLocations:e,customUniformLocations:o,infLoc:n,nanLoc:s,outShapeLocation:i,outShapeStridesLocation:a,outTexShapeLocation:l}=HC(this.gpgpu,t.program,t.webGLProgram);t.variablesLocations=e,t.customUniformLocations=o,t.infLoc=n,t.nanLoc=s,t.outShapeLocation=i,t.outShapeStridesLocation=a,t.outTexShapeLocation=l}}createTensorFromGPUData(t,e,o){t.channels=t.channels||"RGBA";let{texture:n,height:s,width:i,channels:a}=t,l=xo().backend;if(!l.gpgpu.gl.isTexture(n))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let c=l.writeTexture(n,e,o,s,i,a);return xo().makeTensorFromDataId(c,e,o,l)}};Yf.nextDataId=0;function s6(r,t){if(t==="float32"||t==="complex64")return r;if(t==="int32"||t==="bool"){let e=t==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let o=0;o<e.length;++o)e[o]=Math.round(r[o]);return e}else throw new Error(`Unknown dtype ${t}`)}Ji.isBrowser()&&Mh("webgl",()=>new Yf,2);var Zu=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var Pr=class{constructor(t,e,o){this.variableNames=["A","B"],this.outputShape=S.assertAndGetBroadcastShape(e,o),this.enableShapeUniforms=Xt(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var Qr=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;var Jr=class{constructor(t,e,o,n=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=S.assertAndGetBroadcastShape(e,o);let s=this.outputShape.length;this.enableShapeUniforms=Xt(s);let i="";if(n)if(s===0||y.sizeFromShape(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${At(s)} coords = getOutputCoords();
        `,s===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let l=Ie("coords",s);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${l[s-2]} + 1) >= outShape[${s} - 2];
            bool nextColOutOfBounds =
              (${l[s-1]} + 1) >= outShape[${s} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${l[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${l[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}};function Ne(r){let{inputs:t,backend:e}=r,{x:o}=t;return e.incRef(o.dataId),{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}var AR={kernelName:sn,backendName:"webgl",kernelFunc:Ne};function zr(r){let{inputs:t,backend:e}=r,{real:o,imag:n}=t,s=e.makeTensorInfo(o.shape,"complex64"),i=e.texData.get(s.dataId),a=Ne({inputs:{x:o},backend:e}),l=Ne({inputs:{x:n},backend:e});return i.complexTensorInfos={real:a,imag:l},s}var $R={kernelName:Kl,backendName:"webgl",kernelFunc:zr};var QC="return (a < 0.) ? b * a : a;",tv=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function i6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{alpha:s}=o,i=e.makeTensorInfo([],"float32",y.createScalarValue(s,"float32")),a=P().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jr(tv,n.shape,i.shape):new Pr(QC,n.shape,i.shape),l=e.runWebGLProgram(a,[n,i],"float32");return e.disposeIntermediateTensorInfo(i),l}var DR={kernelName:vi,backendName:"webgl",kernelFunc:i6};var ev="return (a < 0.) ? b * a : a;",rv=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function a6(r){let{inputs:t,backend:e}=r,{x:o,alpha:n}=t,s=P().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jr(rv,o.shape,n.shape):new Pr(ev,o.shape,n.shape);return e.runWebGLProgram(s,[o,n],"float32")}var RR={kernelName:Oi,backendName:"webgl",kernelFunc:a6};var Fo="if (isnan(x)) return x;";function ht({opSnippet:r,packedOpSnippet:t,cpuKernelImpl:e,dtype:o}){return({inputs:n,backend:s})=>{let{x:i}=n,a=s,l=o||i.dtype;if(a.shouldExecuteOnCPU([i])&&e!=null){let p=a.texData.get(i.dataId),m=e(p.values,l);return a.makeTensorInfo(i.shape,l,m)}let c=P().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,u;return c?u=new Lr(i.shape,t):u=new rr(i.shape,r),a.runWebGLProgram(u,[i],l)}}function qt({opSnippet:r,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:o=!1,cpuKernelImpl:n,dtype:s}){return({inputs:i,backend:a})=>{let{a:l,b:c}=i,u=a;if(o&&l.dtype==="complex64"){let h=u.texData.get(l.dataId),d=u.texData.get(c.dataId),[g,x]=[[h.complexTensorInfos.real,d.complexTensorInfos.real],[h.complexTensorInfos.imag,d.complexTensorInfos.imag]].map(C=>{let[w,v]=C,E={dataId:w.dataId,dtype:w.dtype,shape:l.shape},A={dataId:v.dataId,dtype:v.dtype,shape:c.shape},$=new Pr(r,l.shape,c.shape);return u.runWebGLProgram($,[E,A],$e(w.dtype,v.dtype))}),b=zr({inputs:{real:g,imag:x},backend:u});return u.disposeIntermediateTensorInfo(g),u.disposeIntermediateTensorInfo(x),b}let p=s||$e(l.dtype,c.dtype);if((l.dtype==="string"||c.dtype==="string"||u.shouldExecuteOnCPU([l,c]))&&n!=null){let h=u.texData.get(l.dataId).values,d=u.texData.get(c.dataId).values,g=l.dtype==="string"?S.fromUint8ToStringArray(h):h,x=l.dtype==="string"?S.fromUint8ToStringArray(d):d,[b,C]=n(l.shape,c.shape,g,x,p),w=u.makeTensorInfo(C,p),v=u.texData.get(w.dataId);return v.values=b,w}let m=P().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,f;return m?f=new Jr(t,l.shape,c.shape,e):f=new Pr(r,l.shape,c.shape),u.runWebGLProgram(f,[l,c],p)}}function qs(r,t=!1){if(r==="linear")return t?IR:yR;if(r==="relu")return t?TR:wR;if(r==="elu")return t?NR:bR;if(r==="relu6")return t?kR:CR;if(r==="prelu")return t?rv:ev;if(r==="leakyrelu")return t?tv:QC;if(r==="sigmoid")return t?ER:vR;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var Ju=class{constructor(t,e,o,n=!1,s=!1,i=!1,a=null,l=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o,this.enableShapeUniforms=Xt(this.outputShape.length);let u=n?t[1]:t[2],p=Math.ceil(u/2),m=n?"i * 2, rc.y":"rc.y, i * 2",f=s?"rc.z, i * 2":"i * 2, rc.z",h=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],d=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],g="",x="";a&&(l?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:c?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:g=`vec4 activation(vec4 x) {
          ${a}
        }`,x="result = activation(result);");let b=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let C="rc.x",w="rc.x";t[0]<e[0]?C=`imod(rc.x, ${t[0]})`:e[0]<t[0]&&(w=`imod(rc.x, ${e[0]})`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${p}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${C};
        int batchB = ${w};
        for (int i = 0; i < ${p}; i++) {
          vec4 a = getMatrixA(batchA, ${m});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${d[0]});
          result += (${h[1]} * ${d[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${x}

        setOutput(result);
      }
    `}};var ov={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},Zf=class{constructor(t,e,o){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=S.assertAndGetBroadcastShape(e,o),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var _R="return a * b;";function Jf(r){let{inputs:t,backend:e}=r,{a:o,b:n}=t,s=S.upcastType(o.dtype,n.dtype);if(o.dtype==="complex64"){let a=e.texData.get(o.dataId),l=e.texData.get(n.dataId),c=new Zf(ov.REAL,o.shape,n.shape),u=new Zf(ov.IMAG,o.shape,n.shape),p=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:o.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:n.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:n.shape}],m=e.runWebGLProgram(c,p,"float32"),f=e.runWebGLProgram(u,p,"float32"),h=zr({inputs:{real:m,imag:f},backend:e});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),h}if(e.shouldExecuteOnCPU([o,n])){let a=e.texData.get(o.dataId),l=e.texData.get(n.dataId),[c,u]=WD(o.shape,n.shape,a.values,l.values,s),p=e.makeTensorInfo(u,s),m=e.texData.get(p.dataId);return m.values=c,p}let i;return P().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Jr(_R,o.shape,n.shape):i=new Pr(_R,o.shape,n.shape),e.runWebGLProgram(i,[o,n],s)}var FR={kernelName:as,backendName:"webgl",kernelFunc:Jf};function OR(r,t,e){let o=[ga(r.shape),...xa(r.shape)],n={dtype:r.dtype,shape:o,dataId:r.dataId},s=[ga(t),...xa(t)],i=new Yu(s,o),a=!0,l=[o],c=e.runWebGLProgram(i,[n],r.dtype,l,a);return{dataId:c.dataId,shape:t,dtype:c.dtype}}function et(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{shape:s}=o,i=e,a=y.sizeFromShape(n.shape),l=y.inferFromImplicitShape(s,a),c=y.sizeFromShape(l);y.assert(a===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${n.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);let u=i.texData.get(n.dataId);return u.isPacked&&!Tl(n.shape,l)&&!(u.texture!==null&&Tl(u.shape,l))?OR(n,l,i):(i.incRef(n.dataId),{dataId:n.dataId,shape:l,dtype:n.dtype})}var LR={kernelName:Pi,backendName:"webgl",kernelFunc:et};var Qf=class{constructor(t,e){this.variableNames=["x"];let{windowSize:o,batchSize:n,inSize:s,outSize:i}=t;this.outputShape=[n,i];let a=Math.floor(o/4)*4,l=o%4,c="sumValue += dot(values, ones);";if(e!=null){let p=1/e;c=`sumValue += dot(values * ${y.isInt(p)?p.toPrecision(2):p}, ones);`}let u="";s%o>0&&(u=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}};var Cx=class{constructor(t,e){this.variableNames=["x"];let{windowSize:o,batchSize:n,inSize:s,outSize:i}=t;this.outputShape=[n,i];let a="0.0",l="";e==="prod"?a="1.0":e==="min"?(a="1.0 / 1e-20",l="min"):e==="max"&&(a="-1.0 / 1e-20",l="max");let c=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?c="sumValue":e==="prod"?c="prodValue":e==="all"?c="allValue":e==="any"&&(c="anyValue");let u=Math.floor(o/4)*4,p=o%4,m=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";e==="all"?(a="1.0",m=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):e==="any"&&(a="0.0",m=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let h="";s%o>0&&(h=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${m}
        }

        int inIdx = inOffset + ${u};
        if (${p===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${m}
        }
        setOutput(${c});
      }
    `}};function c6(r){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let e=t.length?t[t.length-1].outSize:r[1],o=S.computeOptimalWindowSize(e);t.push({inSize:e,windowSize:o,outSize:Math.ceil(e/o)})}return t}function to(r,t,e,o){let n=c6(r.shape),s=r;for(let i=0;i<n.length;i++){let{inSize:a,windowSize:l,outSize:c}=n[i],u,p;e==="mean"?u=i===0?new Qf({windowSize:l,inSize:a,batchSize:r.shape[0],outSize:c},a):new Qf({windowSize:l,inSize:a,batchSize:r.shape[0],outSize:c}):u=new Cx({windowSize:l,inSize:a,batchSize:r.shape[0],outSize:c},e),p=s,s=o.runWebGLProgram(u,[s],t),p.dataId!==r.dataId&&o.disposeIntermediateTensorInfo(p)}return s}var vx=class{constructor(t,e){this.variableNames=["A"];let o=new Array(t.length);for(let i=0;i<o.length;i++)o[i]=t[e[i]];this.outputShape=o,this.rank=o.length;let n=At(this.rank),s=u6(e);this.userCode=`
    void main() {
      ${n} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function u6(r){let t=r.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],o=new Array(t);for(let n=0;n<r.length;n++)o[r[n]]=e[n];return o.join()}var Sx=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let o=new Array(t.length);for(let u=0;u<o.length;u++)o[u]=t[e[u]];if(this.outputShape=o,this.rank=o.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let n=At(this.rank),s=ZC("rc",this.rank),i=new Array(this.rank);for(let u=0;u<e.length;u++)i[e[u]]=s[u];let a=`vec2(${i.slice(-2).join()})`,l=`++${s[this.rank-1]} < ${o[this.rank-1]}`,c=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`
    void main() {
      ${n} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${l}) {
        result[1] = ${c};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${o[this.rank-2]}) {
        result[2] = ${c};
        if(${l}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}};function ya(r,t,e){let o=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Sx(r.shape,t):new vx(r.shape,t);return e.runWebGLProgram(o,[r],r.dtype)}function PR(r,t,e,o){let n=t,s=r.shape.length,i=y.parseAxisParam(n,r.shape),a=i,l=S.getAxesPermutation(a,s),c=l!=null,u=r;c&&(u=ya(r,l,o),a=S.getInnerMostAxes(a.length,s)),S.assertAxesAreInnerMostDims("sum",a,s);let[p,m]=S.computeOutAndReduceShapes(u.shape,a),f=p;e&&(f=S.expandShapeToKeepDim(p,i));let h=y.sizeFromShape(m),g=y.sizeFromShape(r.shape)/h,x=et({inputs:{x:u},attrs:{shape:[g,h]},backend:o}),b=Ga(r.dtype),C=to(x,b,"sum",o),w=et({inputs:{x:C},attrs:{shape:f},backend:o});return o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(C),c&&o.disposeIntermediateTensorInfo(u),w}function $l(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o;return PR(n,s,i,e)}var zR={kernelName:Ui,backendName:"webgl",kernelFunc:$l};function ue(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{perm:s}=o,i=e,a=n.shape.length,l=new Array(a);for(let u=0;u<l.length;u++)l[u]=n.shape[s[u]];let c;if(i.shouldExecuteOnCPU([n])){let p=i.texData.get(n.dataId).values,m=Al(p,n.shape,n.dtype,s,l);c=i.makeTensorInfo(l,n.dtype);let f=i.texData.get(c.dataId);f.values=m}else c=ya(n,s,i);return c}var BR={kernelName:ln,backendName:"webgl",kernelFunc:ue};var nv=1e3;function Dl({a:r,b:t,transposeA:e,transposeB:o,backend:n,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:l=null}){let c=r.shape.length,u=t.shape.length,p=e?r.shape[c-2]:r.shape[c-1],m=o?t.shape[u-1]:t.shape[u-2],f=e?r.shape[c-1]:r.shape[c-2],h=o?t.shape[u-2]:t.shape[u-1],d=r.shape.slice(0,-2),g=t.shape.slice(0,-2),x=y.sizeFromShape(d),b=y.sizeFromShape(g),w=Hr.assertAndGetBroadcastShape(r.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,h]);y.assert(p===m,()=>`Error in matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${r.shape} and ${t.shape} and transposeA=${e} and transposeB=${o} must match.`);let v=e?[x,p,f]:[x,f,p],E=o?[b,h,m]:[b,m,h],A=et({inputs:{x:r},backend:n,attrs:{shape:v}}),$=et({inputs:{x:t},backend:n,attrs:{shape:E}}),F=[A,$],L=Math.max(x,b),M=e?A.shape[1]:A.shape[2],V=s!=null,G=i!=null,W=l==="leakyrelu",U=l!=null?qs(l,!0):null,K=V||G||W||U!=null,J;if((f===1||h===1)&&M>nv&&K===!1){let Q=A,rt=$;e&&(Q=ue({inputs:{x:A},backend:n,attrs:{perm:[0,2,1]}}),F.push(Q)),o&&(rt=ue({inputs:{x:$},backend:n,attrs:{perm:[0,2,1]}}),F.push(rt));let ot=h!==1,it=h===1,st=Q;ot&&(st=et({inputs:{x:Q},backend:n,attrs:{shape:[L,M,1]}}),F.push(st));let pt=h===1?2:1,at=rt;it&&(at=et({inputs:{x:rt},backend:n,attrs:{shape:[L,1,M]}}),F.push(at));let ft=Jf({inputs:{a:st,b:at},backend:n});J=$l({inputs:{x:ft},backend:n,attrs:{axis:pt,keepDims:!0}}),F.push(ft)}else{let Q=$e(r.dtype,t.dtype),rt=new Ju(v,E,[L,f,h],e,o,V,U,G,W),ot=[A,$];if(s!=null&&ot.push(s),G&&ot.push(i),W){let it=n.makeTensorInfo([],"float32",y.createScalarValue(a,"float32"));ot.push(it),F.push(it)}J=n.runWebGLProgram(rt,ot,Q)}let q=et({inputs:{x:J},backend:n,attrs:{shape:w}});F.push(J);for(let Q of F)n.disposeIntermediateTensorInfo(Q);return q}function p6(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:s,bias:i,preluActivationWeights:a}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:p}=o;return Dl({a:n,b:s,transposeA:l,transposeB:c,backend:e,bias:i,preluActivationWeights:a,leakyreluAlpha:p,activation:u})}var MR={kernelName:Fa,backendName:"webgl",kernelFunc:p6};var VR="return abs(x);";function m6(r){let{inputs:t,backend:e}=r,{x:o}=t;if(e.shouldExecuteOnCPU([o])&&o.dtype!=="complex64"){let s=e.texData.get(o.dataId),i=dx(s.values);return e.makeTensorInfo(o.shape,o.dtype,i)}let n;return P().getBool("WEBGL_PACK_UNARY_OPERATIONS")?n=new Lr(o.shape,VR):n=new rr(o.shape,VR),e.runWebGLProgram(n,[o],o.dtype)}var GR={kernelName:ni,backendName:"webgl",kernelFunc:m6};var f6=Le+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,h6=ht({opSnippet:f6}),UR={kernelName:Fn,backendName:"webgl",kernelFunc:h6};var d6=Le+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,g6=ht({opSnippet:d6}),WR={kernelName:On,backendName:"webgl",kernelFunc:g6};var HR="return a + b;",x6=qt({opSnippet:HR,packedOpSnippet:HR,supportsComplex:!0,cpuKernelImpl:SD}),qR={kernelName:Po,backendName:"webgl",kernelFunc:x6};var Ix=class{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((s,i)=>`T${i}`);let o=[];this.variableNames.forEach(s=>{o.push(`float v${s} = get${s}AtOutCoords();`)});let n=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${o.join(`
        `)}

        float result = ${n};
        setOutput(result);
      }
    `}};var Nx=class{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((s,i)=>`T${i}`);let o=[];this.variableNames.forEach(s=>{o.push(`vec4 v${s} = get${s}AtOutCoords();`)});let n=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${o.join(`
        `)}

        vec4 result = ${n};
        setOutput(result);
      }
    `}};function Tx(r){let{inputs:t,backend:e}=r,o=t;if(o.length===1)return Ne({inputs:{x:o[0]},backend:e});if(o.length>P().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(o.length/2),c=Tx({inputs:o.slice(0,l),backend:e}),u=Tx({inputs:o.slice(l),backend:e});return Tx({inputs:[c,u],backend:e})}let n=o.map(l=>l.dtype).reduce((l,c)=>$e(l,c)),s=o.map(l=>l.shape),a=P().getBool("WEBGL_PACK")?new Nx(o[0].shape,s):new Ix(o[0].shape,s);return e.runWebGLProgram(a,o,n)}var KR={kernelName:Vl,backendName:"webgl",kernelFunc:Tx};function y6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o,a=n.shape.length,l=y.parseAxisParam(s,n.shape),c=l,u=S.getAxesPermutation(c,a),p=n;u!=null&&(p=ue({inputs:{x:n},backend:e,attrs:{perm:u}}),c=S.getInnerMostAxes(c.length,a)),S.assertAxesAreInnerMostDims("all",c,a);let[m,f]=S.computeOutAndReduceShapes(p.shape,c),h=y.sizeFromShape(f),d=et({inputs:{x:p},backend:e,attrs:{shape:[-1,h]}}),g=to(d,d.dtype,"all",e),x;if(i){let b=S.expandShapeToKeepDim(m,l);x=et({inputs:{x:g},backend:e,attrs:{shape:b}})}else x=et({inputs:{x:g},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(g),u!=null&&e.disposeIntermediateTensorInfo(p),x}var jR={kernelName:Gl,backendName:"webgl",kernelFunc:y6};function b6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o,a=n.shape.length,l=y.parseAxisParam(s,n.shape),c=l,u=S.getAxesPermutation(c,a),p=n;u!=null&&(p=ue({inputs:{x:n},backend:e,attrs:{perm:u}}),c=S.getInnerMostAxes(c.length,a)),S.assertAxesAreInnerMostDims("any",c,a);let[m,f]=S.computeOutAndReduceShapes(p.shape,c),h=y.sizeFromShape(f),d=et({inputs:{x:p},backend:e,attrs:{shape:[-1,h]}}),g=to(d,d.dtype,"any",e),x;if(i){let b=S.expandShapeToKeepDim(m,l);x=et({inputs:{x:g},backend:e,attrs:{shape:b}})}else x=et({inputs:{x:g},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(g),u!=null&&e.disposeIntermediateTensorInfo(p),x}var XR={kernelName:Ul,backendName:"webgl",kernelFunc:b6};var kx=class{constructor(t,e,o){this.variableNames=["A"];let{windowSize:n,batchSize:s,outSize:i}=t;o||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];let a=e==="max"?">":"<",l=o?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${n}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var Ex=class{constructor(t,e,o,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,y.assert(t.length>2,()=>`Packed arg${o.charAt(0).toUpperCase()+o.slice(1)} supports only inputs with rank above 2.`);let s=t[t.length-1],i=Math.ceil(s/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),n||this.variableNames.push("bestIndicesA");let a=this.outputShape,l=a.length,c=At(l),u=Ie("coords",l),p,m;if(i===1){m=l+1;let $=At(m);p=`
        ${$} sourceLocR = ${$}(${u.join()}, 0);
        ++${u[l-1]};
        ${$} sourceLocG = ${$}(${u.join()}, 0);
        ++${u[l-2]};
        ${$} sourceLocA = ${$}(${u.join()}, 0);
        --${u[l-1]};
        ${$} sourceLocB = ${$}(${u.join()}, 0);
        --${u[l-2]};`}else m=l,p=`
        ${c} sourceLocR = coords;
        ++${u[l-1]};
        ${c} sourceLocG = coords;
        ++${u[l-2]};
        ${c} sourceLocA = coords;
        --${u[l-1]};
        ${c} sourceLocB = coords;
        --${u[l-2]};`;let f=["x","y","z","w","u","v"].slice(0,m),h="."+f[m-1],d=f.map($=>"int "+$),g=Ie("sourceLocR",m-1).concat("inIdx.r"),x=Ie("sourceLocG",m-1).concat("inIdx.g"),b=Ie("sourceLocB",m-1).concat("inIdx.b"),C=Ie("sourceLocA",m-1).concat("inIdx.a"),w=o==="max"?"greaterThan":"lessThan",v=n?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${C.join()})));`,E=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${x.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${C.join()}) : 0.)`,A=n?"":`
      float getBestIndicesAChannel(${d.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${d.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${A}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${u[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${u[l-2]} < ${a[l-2]-1};
        ${p}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${E};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${v}
          vec4 candidate = ${E};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function YR(r,t,e,o=null){let n=t.shape[0],s=t.shape[1];o!=null&&(n=o.shape[0],s=o.shape[1]);let i=S.computeOptimalWindowSize(s),a={windowSize:i,inSize:s,batchSize:n,outSize:Math.ceil(s/i)},l=new kx(a,e,o==null),c=[t];o!=null&&c.push(o);let u=r.runWebGLProgram(l,c,"int32");if(u.shape[1]===1)return u;let p=YR(r,t,e,u);return r.disposeIntermediateTensorInfo(u),p}function ZR(r,t,e,o=null){let n=o!=null?o.shape:t.shape,s=n[n.length-1],i=S.computeOptimalWindowSize(s),a=new Ex(n,i,e,o==null),l=o==null?[t]:[t,o],c=r.runWebGLProgram(a,l,"int32");if(c.shape.length===t.shape.length){let u=ZR(r,t,e,c);return r.disposeIntermediateTensorInfo(c),u}return c}function Ax(r,t,e,o){let n=[e];if(S.assertAxesAreInnerMostDims("arg"+o.charAt(0).toUpperCase()+o.slice(1),n,t.shape.length),!P().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let s=[],i=r.texData.get(t.dataId),a=i!==null&&i.isPacked,l=t;a&&(l=r.unpackTensor(t),s.push(l));let[c,u]=S.computeOutAndReduceShapes(l.shape,n),p=y.sizeFromShape(u),m=et({inputs:{x:l},backend:r,attrs:{shape:[-1,p]}});s.push(m);let f=YR(r,m,o);s.push(f);let h=et({inputs:{x:f},backend:r,attrs:{shape:c}});return s.forEach(d=>r.disposeIntermediateTensorInfo(d)),h}return ZR(r,t,o)}function w6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s}=o,i=y.parseAxisParam(s,n.shape),a=S.getAxesPermutation(i,n.shape.length),l=n,c=[];a!=null&&(l=ue({inputs:{x:n},backend:e,attrs:{perm:a}}),c.push(l),i=S.getInnerMostAxes(i.length,l.shape.length)),S.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let u=Ax(e,l,i[0],"max");return c.forEach(p=>e.disposeIntermediateTensorInfo(p)),u}var JR={kernelName:si,backendName:"webgl",kernelFunc:w6};function C6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s}=o,i=y.parseAxisParam(s,n.shape),a=S.getAxesPermutation(i,n.shape.length),l=n,c=[];a!=null&&(l=ue({inputs:{x:n},backend:e,attrs:{perm:a}}),c.push(l),i=S.getInnerMostAxes(i.length,l.shape.length)),S.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let u=Ax(e,l,i[0],"min");return c.forEach(p=>e.disposeIntermediateTensorInfo(p)),u}var QR={kernelName:ii,backendName:"webgl",kernelFunc:C6};var v6=Le+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,S6=ht({opSnippet:v6}),t_={kernelName:Ln,backendName:"webgl",kernelFunc:S6};var I6=Le+"return log(x + sqrt(x * x + 1.0));",N6=ht({opSnippet:I6}),e_={kernelName:Pn,backendName:"webgl",kernelFunc:N6};var T6=Le+`
  return atan(x);
`,k6=ht({opSnippet:T6}),r_={kernelName:zn,backendName:"webgl",kernelFunc:k6};var E6=Zu+`
  return atan(a, b);
`,A6=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Qr+`
  return result;
`,$6=qt({opSnippet:E6,packedOpSnippet:A6}),o_={kernelName:Mn,backendName:"webgl",kernelFunc:$6};var D6=Le+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,R6=ht({opSnippet:D6}),n_={kernelName:Bn,backendName:"webgl",kernelFunc:R6};var tn=class{constructor(t,e,o,n=!1,s=!1){if(this.variableNames=["x"],e==="avg"&&o)throw new Error("Cannot compute positions for average pool.");let i=t.filterWidth,a=t.strideHeight,l=t.strideWidth,c=t.dilationHeight,u=t.dilationWidth,p=t.effectiveFilterHeight,m=t.effectiveFilterWidth,f=t.padInfo.top,h=t.padInfo.left;this.outputShape=t.outShape;let d=e==="avg",g=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,x=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`,b="0.0";if(d||(b="-1.0 / 1e-20"),o){let $=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${f}, ${h});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${p};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${$} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${n?s?g:x:`wR * ${m} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let C="max",w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(w="avgValue / max(count, 1.0)");let v=Math.floor(i/4)*4,E=i%4,A=`
      if (${d}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${C}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${f}, ${h});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${p};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${v}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${A}
          }

          int xC = xCCorner + ${v};
          if (${E===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${A}
          } else if (${E===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${A}
          } else if (${E===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${A}
          }
        }
        setOutput(${w});
      }
    `}},ba=class{constructor(t,e,o,n=!1,s=!1){if(this.variableNames=["x"],e==="avg"&&o)throw new Error("Cannot compute positions for average pool.");let i=t.filterWidth,a=t.strideDepth,l=t.strideHeight,c=t.strideWidth,u=t.dilationDepth,p=t.dilationHeight,m=t.dilationWidth,f=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,g=t.padInfo.front,x=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;let C=e==="avg",w="0.0";if(C||(w="-1.0 / 1e-20"),o){let L=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${c});
        const ivec3 pads = ivec3(${g}, ${x}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${h};
                wR += ${p}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${d};
                  wC += ${m}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${L} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${n?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${h} * ${d} +
                      wR * ${d} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let v="max",E=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(E="avgValue / max(count, 1.0)");let A=Math.floor(i/4)*4,$=i%4,F=`
      if (${C}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${c});
      const ivec3 pads = ivec3(${g}, ${x}, ${b});
      const float initializationValue = ${w};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${w});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h};
            wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${A}; wC += 4) {
              int xC = xCCorner + wC * ${m};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                getValue(batch, xD, xR, xC + 3 * ${m}, ch)
              );

              ${F}
            }

            int xC = xCCorner + ${A};
            if (${$===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${F}
            } else if (${$===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                initializationValue,
                initializationValue
              );

              ${F}
            } else if (${$===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                initializationValue
              );

              ${F}
            }
          }
        }
        setOutput(${E});
      }
    `}};function _6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t;En(n,"avgPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:l}=o,c=1;y.assert(S.eitherStridesOrDilationsAreOne(i,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let u=S.computePool2DInfo(n.shape,s,i,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&y.arraysEqual(u.inShape,u.outShape))return Ne({inputs:{x:n},backend:e});let p=new tn(u,"avg",!1);return e.runWebGLProgram(p,[n],"float32")}var s_={kernelName:ai,backendName:"webgl",kernelFunc:_6};function F6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:s,strides:i,pad:a,dimRoundingMode:l,dataFormat:c}=o,u=[1,1,1],p=S.computePool3DInfo(n.shape,s,i,u,a,l,c),m=new ba(p,"avg",!1);return e.runWebGLProgram(m,[n],"float32")}var i_={kernelName:li,backendName:"webgl",kernelFunc:F6};var $x=class{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;let e=t.filterHeight,o=t.filterWidth,n=t.strideHeight,s=t.strideWidth,i=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterHeight,c=t.effectiveFilterWidth,u=l-1-t.padInfo.top,p=c-1-t.padInfo.left,m=1/(e*o);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${p});
      const float avgMultiplier = float(${m});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},Dx=class{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;let e=t.filterDepth,o=t.filterHeight,n=t.filterWidth,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,p=t.effectiveFilterDepth,m=t.effectiveFilterHeight,f=t.effectiveFilterWidth,h=p-1-t.padInfo.front,d=m-1-t.padInfo.top,g=f-1-t.padInfo.left,x=1/(e*o*n);this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${g});
      const float avgMultiplier = float(${x});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${m};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function O6(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:s}=t,i=s,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=o,p=[1,1,1],m=S.computePool3DInfo(i.shape,a,l,p,c,u),f=new Dx(m);return e.runWebGLProgram(f,[n],i.dtype)}var a_={kernelName:Hl,backendName:"webgl",kernelFunc:O6};function L6(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:s}=t,i=s;En([n,s],"avgPoolGrad");let{filterSize:a,strides:l,pad:c}=o,u=S.computePool2DInfo(i.shape,a,l,1,c),p=new $x(u);return e.runWebGLProgram(p,[n],i.dtype)}var l_={kernelName:Wl,backendName:"webgl",kernelFunc:L6};function P6(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:s}=t,{transposeA:i,transposeB:a}=o;return Dl({a:n,b:s,transposeA:i,transposeB:a,backend:e})}var c_={kernelName:ci,backendName:"webgl",kernelFunc:P6};var Rx=class{constructor(t,e,o,n,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],S.assertAndGetBroadcastShape(t,e),S.assertAndGetBroadcastShape(t,o);let a="0.0";n!=null&&(S.assertAndGetBroadcastShape(t,n),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";s!=null&&(S.assertAndGetBroadcastShape(t,s),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var _x=class{constructor(t,e,o,n,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],S.assertAndGetBroadcastShape(t,e),S.assertAndGetBroadcastShape(t,o);let a="vec4(0.0)";n!=null&&(S.assertAndGetBroadcastShape(t,n),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";s!=null&&(S.assertAndGetBroadcastShape(t,s),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var z6=({inputs:r,backend:t,attrs:e})=>{let{x:o,mean:n,variance:s,offset:i,scale:a}=r;y.assert(n.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),y.assert(i==null||n.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),y.assert(a==null||n.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=e;l==null&&(l=.001);let c=[o,n,s],u=null;i!=null&&(u=i.shape,c.push(i));let p=null;a!=null&&(p=a.shape,c.push(a));let m=P().getBool("WEBGL_PACK_NORMALIZATION")?new _x(o.shape,n.shape,s.shape,u,p,l):new Rx(o.shape,n.shape,s.shape,u,p,l);return t.runWebGLProgram(m,c,c[0].dtype)},u_={kernelName:wi,backendName:"webgl",kernelFunc:z6};var Fx=class{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;let e=At(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let o=B6(this.rank),n,s=t.map((i,a)=>`sourceLoc.${sv[a]} = start[${a}] + coords.${sv[a]};`);n=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      void main() {
        ${n}
        setOutput(getSource(${o}));
      }
    `}},sv=["x","y","z","w","u","v"];function B6(r){if(r===1)return"sourceLoc";if(r<=6)return sv.slice(0,r).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var Ox=class{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let e=At(this.rank),o=Ie("coords",this.rank),n=Ie("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${n.slice(-2).join()})`,i=`getChannel(getSource(${n.join()}), ${s})`,a=`
      result.x = ${i};
      if (++${o[this.rank-1]} < ${t[this.rank-1]}) {
        ++${n[this.rank-1]};
        result.y = ${i};
        --${n[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${o[this.rank-1]};
      if (++${o[this.rank-2]} < ${t[this.rank-2]}) {
        ++${n[this.rank-2]};
        result.z = ${i};
        if (++${o[this.rank-1]} < ${t[this.rank-1]}) {
          ++${n[this.rank-1]};
          result.w = ${i};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((u,p)=>`start[${p}]`).join()});`:t.map((u,p)=>`${n[p]} = ${o[p]} + start[${p}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}};function M6(r,t,e,o){let n=o.texData.get(r.dataId),s=o.makeTensorInfo(e,r.dtype),i=o.texData.get(s.dataId);Object.assign(i,n),i.refCount=1,i.shape=e,i.dtype=r.dtype;let a=Ue.computeFlatOffset(t,y.computeStrides(r.shape));n.slice&&(a+=n.slice.flatOffset),i.slice={flatOffset:a,origDataId:n.slice&&n.slice.origDataId||r.dataId};let l=o.dataRefCount.get(i.slice.origDataId)||1;return o.dataRefCount.set(i.slice.origDataId,l+1),s}function en(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:s,size:i}=o,[a,l]=Ue.parseSliceParams(n,s,i);if(Ue.assertParamsValid(n,a,l),y.sizeFromShape(l)===0)return e.makeTensorInfo(l,n.dtype,[]);if(e.shouldExecuteOnCPU([n])||n.dtype==="string"){let p=e.texData.get(n.dataId),m=eR(p.values,a,l,n.shape,n.dtype);return e.makeTensorInfo(l,n.dtype,m)}let{isPacked:c}=e.texData.get(n.dataId),u=Ue.isSliceContinous(n.shape,a,l);if(c||!u){let p=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ox(l):new Fx(l),m=[a];return e.runWebGLProgram(p,[n],n.dtype,m)}return e.uploadToGPU(n.dataId),M6(n,a,l,e)}var p_={kernelName:Gi,backendName:"webgl",kernelFunc:en};var V6=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:s,crops:i}=o;y.assert(n.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let a=s.reduce((b,C)=>b*C),l=S.getReshaped(n.shape,s,a),c=S.getPermuted(l.length,s.length),u=S.getReshapedPermuted(n.shape,s,a),p=S.getSliceBeginCoords(i,s.length),m=S.getSliceSize(u,i,s.length),f=[],h=et({inputs:{x:n},backend:e,attrs:{shape:l}}),d=ue({inputs:{x:h},backend:e,attrs:{perm:c}}),g=et({inputs:{x:d},backend:e,attrs:{shape:u}}),x=en({inputs:{x:g},backend:e,attrs:{begin:p,size:m}});return f.push(h),f.push(d),f.push(g),f.forEach(b=>e.disposeIntermediateTensorInfo(b)),x},m_={kernelName:ui,backendName:"webgl",kernelFunc:V6};function G6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:s}=t,{size:i}=o,a=e.readSync(n.dataId),l=e.readSync(s.dataId),c=hx(a,l,s.dtype,s.shape,i);return e.makeTensorInfo([i],s.dtype,c)}var f_={kernelName:ql,backendName:"webgl",kernelFunc:G6};var U6=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,W6=`
  return float(int(a.r) & int(b.r));
`;function H6(r){let{inputs:t,backend:e}=r,{a:o,b:n}=t,s=P().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=P().getNumber("WEBGL_VERSION");if(e.shouldExecuteOnCPU([o,n])||i===1){let l=e.texData.get(o.dataId).values,c=e.texData.get(n.dataId).values,[u,p]=ND(o.shape,n.shape,l,c,o.dtype),m=e.makeTensorInfo(p,o.dtype),f=e.texData.get(m.dataId);return f.values=u,m}let a;return s?a=new Jr(U6,o.shape,n.shape,!1):a=new Pr(W6,o.shape,n.shape),e.runWebGLProgram(a,[o,n],o.dtype)}var h_={kernelName:mp,backendName:"webgl",kernelFunc:H6};function q6(r){let{inputs:t,backend:e}=r,{s0:o,s1:n}=t,s=e.readSync(o.dataId),i=e.readSync(n.dataId),a=S.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}var d_={kernelName:ch,backendName:"webgl",kernelFunc:q6};var K6="return float(a != b);",iv=qt({opSnippet:K6,cpuKernelImpl:qD,dtype:"bool"}),g_={kernelName:_a,backendName:"webgl",kernelFunc:iv};function Ks(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.texData.get(o.dataId);return Ne({inputs:{x:n.complexTensorInfos.real},backend:e})}var x_={kernelName:xc,backendName:"webgl",kernelFunc:Ks};var j6="return float(int(x));";function y_(r,t){let e=new rr(r.shape,j6),o=t.runWebGLProgram(e,[r],"int32");return{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}function av(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dtype:s}=o;if(s==="complex64"){if(n.dtype==="complex64")return Ne({inputs:{x:n},backend:e});let i=ie(n.shape),a=av({inputs:{x:n},backend:e,attrs:{dtype:"float32"}}),l=zr({inputs:{real:a,imag:i},backend:e});return i.dispose(),e.disposeIntermediateTensorInfo(a),l}if(n.dtype==="complex64"){let i=Ks({inputs:{input:n},backend:e}),a=av({inputs:{x:i},backend:e,attrs:{dtype:s}});return e.disposeIntermediateTensorInfo(i),a}if(!y.hasEncodingLoss(n.dtype,s)){let i=Ne({inputs:{x:n},backend:e});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(e.shouldExecuteOnCPU([n])){let i=e.texData.get(n.dataId).values,[a,l,c]=TD(i,n.shape,n.dtype,s);return e.makeTensorInfo(a,l,c)}if(s==="int32")return y_(n,e);if(s==="bool"){let i=e.makeTensorInfo([],"bool",y.getTypedArrayFromDType("bool",1)),l=iv({inputs:{a:n,b:i},backend:e});return e.disposeIntermediateTensorInfo(i),l}throw new Error(`Error in Cast: failed to cast ${n.dtype} to ${s}`)}var b_={kernelName:nn,backendName:"webgl",kernelFunc:av};var w_="return ceil(x);",X6=ht({opSnippet:w_,packedOpSnippet:w_,cpuKernelImpl:kD}),C_={kernelName:Vn,backendName:"webgl",kernelFunc:X6};var Lx=class{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};var Px=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function Y6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{clipValueMin:s,clipValueMax:i}=o,a;P().getBool("WEBGL_PACK_CLIP")?a=new Px(n.shape):a=new Lx(n.shape);let l=[[s],[i]];return e.runWebGLProgram(a,[n],n.dtype,l)}var v_={kernelName:Gn,backendName:"webgl",kernelFunc:Y6};var zx=class{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function S_(r,t){return{dataId:t.dataId,dtype:t.dtype,shape:r.shape}}function Z6(r){let{inputs:t,backend:e}=r,{x:o}=t,n=e.texData.get(o.dataId),s=new zx(o.shape),i=[S_(o,n.complexTensorInfos.real),S_(o,n.complexTensorInfos.imag)];return e.runWebGLProgram(s,i,i[0].dtype)}var I_={kernelName:pi,backendName:"webgl",kernelFunc:Z6};var Bx=class{constructor(t){this.outputShape=[],this.outputShape=S.computeOutShape(t,1),this.variableNames=t.map((i,a)=>`T${a}`);let e=new Array(t.length-1);e[0]=t[0][1];for(let i=1;i<e.length;i++)e[i]=e[i-1]+t[i][1];let o=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<e.length;i++){let a=e[i-1];o.push(`else if (yC < ${e[i]}) setOutput(getT${i}(yR, yC-${a}));`)}let n=e.length,s=e[e.length-1];o.push(`else setOutput(getT${n}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${o.join(`
        `)}
      }
    `}};var Vx=class{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=S.computeOutShape(t,e);let o=this.outputShape,n=o.length,s=At(n),i=Ie("coords",n),a=["x","y","z","w","u","v"].slice(0,n);this.variableNames=t.map((d,g)=>`T${g}`);let l=new Array(t.length-1);l[0]=t[0][e];for(let d=1;d<l.length;d++)l[d]=l[d-1]+t[d][e];let c=a[e],u=a.slice(-2),p=a.join(),m=`if (${c} < ${l[0]}) {
        return getChannel(
            getT0(${p}), vec2(${u.join()}));
        }`;for(let d=1;d<l.length;d++){let g=l[d-1];m+=`
        if (${c} < ${l[d]}  && ${c} >= ${l[d-1]}) {
          return getChannel(
            getT${d}(${Mx(a,c,g)}),
            vec2(${Mx(u,c,g)}));
        }`}let f=l.length,h=l[l.length-1];m+=`
        return getChannel(
          getT${f}(${Mx(a,c,h)}),
          vec2(${Mx(u,c,h)}));`,this.userCode=`
      float getValue(${a.map(d=>"int "+d)}) {
        ${m}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[n-1]} = ${i[n-1]} + 1;
        if (${i[n-1]} < ${o[n-1]}) {
          result.g = getValue(${i});
        }

        ${i[n-2]} = ${i[n-2]} + 1;
        if (${i[n-2]} < ${o[n-2]}) {
          result.a = getValue(${i});
        }

        ${i[n-1]} = ${i[n-1]} - 1;
        if (${i[n-2]} < ${o[n-2]} &&
            ${i[n-1]} < ${o[n-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}};function Mx(r,t,e){let o=r.indexOf(t);return r.map((s,i)=>i===o?`${s} - ${e}`:s).join()}function Rl(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.texData.get(o.dataId);return Ne({inputs:{x:n.complexTensorInfos.imag},backend:e})}var N_={kernelName:cc,backendName:"webgl",kernelFunc:Rl};function Qu(r,t,e){let o=r[0].dtype;if(o==="complex64"){let f=r.map(b=>Ks({inputs:{input:b},backend:e})),h=r.map(b=>Rl({inputs:{input:b},backend:e})),d=Qu(f,t,e),g=Qu(h,t,e),x=zr({inputs:{real:d,imag:g},backend:e});return f.forEach(b=>e.disposeIntermediateTensorInfo(b)),h.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(g),x}let n=e.shouldExecuteOnCPU(r);if(o==="string"&&(n=!0),n){let f=r.map(w=>{let E=[-1,y.sizeFromShape(w.shape.slice(t))];return et({inputs:{x:w},backend:e,attrs:{shape:E}})}),h=f.map(w=>({vals:e.readSync(w.dataId),shape:w.shape})),d=S.computeOutShape(f.map(w=>w.shape),1),g=f[0].shape[0]===1,x=ED(h,d,o,g),b=S.computeOutShape(r.map(w=>w.shape),t),C=e.makeTensorInfo(b,o,x);return f.forEach(w=>e.disposeIntermediateTensorInfo(w)),C}let s=r.filter(f=>y.sizeFromShape(f.shape)>0),i=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(s.length===1){let f=i?new rr(r[0].shape,An):new Lr(r[0].shape,An);return e.runWebGLProgram(f,r,o)}let a=P().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>a){let f=[];for(let d=0;d<s.length;d+=a){let g=s.slice(d,d+a);f.push(Qu(g,t,e))}let h=Qu(f,t,e);for(let d of f)e.disposeIntermediateTensorInfo(d);return h}if(i){let f=new Vx(s.map(h=>h.shape),t);return e.runWebGLProgram(f,s,o)}let{tensors2D:l,outShape:c}=J6(s,t,e),u=new Bx(l.map(f=>f.shape)),p=e.runWebGLProgram(u,l,o);l.forEach(f=>e.disposeIntermediateTensorInfo(f));let m=et({inputs:{x:p},attrs:{shape:c},backend:e});return e.disposeIntermediateTensorInfo(p),m}function J6(r,t,e){let o=S.computeOutShape(r.map(s=>s.shape),t);return{tensors2D:r.map(s=>et({inputs:{x:s},attrs:{shape:[-1,y.sizeFromShape(s.shape.slice(t))]},backend:e})),outShape:o}}function lv(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o,s=y.parseAxisParam(n,t[0].shape)[0],i=t.map(c=>c.shape);S.assertParamsConsistent(i,s);let a=S.computeOutShape(t.map(c=>c.shape),s);if(y.sizeFromShape(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);let l=t.filter(c=>y.sizeFromShape(c.shape)>0);return l.length===1?Ne({inputs:{x:l[0]},backend:e}):Qu(l,s,e)}var T_={kernelName:mi,backendName:"webgl",kernelFunc:lv};var tp=class{constructor(t,e=!1,o=null,n=!1,s=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;let i=t.padInfo.top,a=t.padInfo.left,l=t.strideHeight,c=t.strideWidth,u=t.dilationHeight,p=t.dilationWidth,m=t.filterHeight,f=t.filterWidth,h=Math.floor(t.inChannels/4)*4,d=t.inChannels%4,g=t.dataFormat==="channelsLast",x=g?1:2,b=g?2:3,C=g?3:1,w="",v="";o&&(n?w=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:s?w=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:w=`
          float activation(float x) {
            ${o}
          }
        `,v="result = activation(result);");let E=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${w}

      const ivec2 strides = ivec2(${l}, ${c});
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${C}];

        ivec2 xRCCorner =
            ivec2(coords[${x}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${m}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${h}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${d===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${h}) *
                    getW(wR, wC, ${h}, d2);
              } else {
                dotProd +=
                    getX(batch, ${h}, xR, xC) *
                    getW(wR, wC, ${h}, d2);
              }

            } else if (${d===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${d===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2),
                getW(wR, wC, ${h} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1),
                  getX(batch, xR, xC, ${h} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC),
                  getX(batch, ${h} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${E}
        ${v}
        setOutput(result);
      }
    `}},Gx=class{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;let e=t.padInfo.front,o=t.padInfo.top,n=t.padInfo.left,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,p=t.filterDepth,m=t.filterHeight,f=t.filterWidth,h=Math.floor(t.inChannels/4)*4,d=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${i}, ${a});
      const ivec3 pads = ivec3(${e}, ${o}, ${n});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${p}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${h}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${d===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${h}) *
                  getW(wF, wR, wC, ${h}, d2);
              } else if (${d===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${d===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1),
                  getX(batch, xF, xR, xC, ${h} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2),
                  getW(wF, wR, wC, ${h} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var ep=class{constructor(t,e=!1,o=null,n=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Xt(this.outputShape.length);let i=t.padInfo.left,a=t.strideWidth,l=t.dilationWidth,c=t.filterHeight,u=t.filterWidth,p=u,m=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<u;g++)m+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;m+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let g=0;g<u;g++)m+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;m+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(p+1)/2;g++){let x=g*2;if(m+=`
           xC = xCCorner + ${x*l};
           `,a===1){if(x<u&&(i%2===1?(m+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }
               `,l===1&&x>0?m+=`
                 xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                 `:m+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                   } else {
                     xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                   }
                   `):m+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xC${x} = xTexelC${x};
                 `,x+1<u)){let b=i%2===0?y.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(m+=`
                   xCOffset = xC + imod(pads[1], 2) + ${b};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                     xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${x+1}.zw = vec2(0.0);
                     }
                     xTexelC${x+1}Ready = 1;
                   }
                   `,l>1?m+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                     } else {
                      xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                     }
                     `:m+=`
                     xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                     `):b===1?m+=`
                     xC${x+1} = xTexelC${x};
                     `:m+=`
                     xCOffset = xC + ${b};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                       xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${x+1}.zw = vec2(0.0);
                       }
                       xTexelC${x+1}Ready = 1;
                     }

                     xC${x+1} = xTexelC${x+1};
                     `}}else x<u&&(i%2===1?(m+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.0);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
               `,x+1<u&&(m+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                 `)):(m+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(
                   xTexelC${x}.xy, xTexelC${x+1}.xy);
               `,x+1<u&&(m+=`
                   xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                 `)));x<u&&(m+=`
             wTexel = getW(r, ${x}, d1, d2);
             dotProd += xC${x}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${x}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,x+1<u&&(m+=`
               wTexel = getW(r, ${x+1}, d1, d2);
               dotProd += xC${x+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${x+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}m+=`
     }
   `,m+=`
     }
   `,m+=`
     }
   `;let f="",h="";o&&(n?f=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${o}
         }`:s?f=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${o}
         }`:f=`vec4 activation(vec4 x) {
           ${o}
         }`,h="result = activation(result);");let d=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${f}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${m}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${d}
         ${h}
         setOutput(result);
       }
     `}};var Ux=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=Xt(this.outputShape.length);let{dataFormat:o}=e,n=xe(),s=o==="channelsLast",i=s?1:2,a=s?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`,c="";for(let u=0;u<=1;u++)for(let p=0;p<=1;p++)c+=`
          blockIndex = rc.z + ${p};
          pos = rc.y + ${u};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${s}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+p}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+p}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${n.output} = result;
      }
    `}};function Wx(r,t){let e=r.length;return e>=3?t?[...r.slice(0,-3),r[e-3]*r[e-2],r[e-1]]:[...r.slice(0,-3),r[e-3],r[e-2]*r[e-1]]:!t&&e===1&&r[0]>1?[r[0],1]:null}function Hx({x:r,filter:t,convInfo:e,backend:o,bias:n=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let l=r.shape,c=o.texData.get(r.dataId),u=e.inChannels,p=l[0]*l[1]*l[2],m=e.outChannels,f=e.dataFormat==="channelsLast",h=!1,d=!1,g,x=[];if(s!=null){let w=Wx(s.shape,f);w!=null&&(s=et({inputs:{x:s},backend:o,attrs:{shape:w}}),x.push(s))}if(n!=null){let w=Wx(n.shape,f);w!=null&&(n=et({inputs:{x:n},backend:o,attrs:{shape:w}}),x.push(n))}if(!((p===1||m===1)&&u>nv)&&c.isPacked&&f&&c.texture!=null&&l[2]%2!==0&&y.arraysEqual(c.shape.slice(-3),l.slice(-3))){let w=l[0]*l[1]*(l[2]+1),v={dataId:r.dataId,shape:[1,w,e.inChannels],dtype:r.dtype},E=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,y.assert(Tl(c.shape,v.shape),()=>`packed reshape ${c.shape} to ${v.shape} isn't free`);let A=et({inputs:{x:t},backend:o,attrs:{shape:[1,e.inChannels,e.outChannels]}});x.push(A);let $=Dl({a:v,b:A,backend:o,transposeA:h,transposeB:d,bias:n,activation:a,preluActivationWeights:s,leakyreluAlpha:i}),F=o.texData.get($.dataId);y.assert(F.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=E,F.shape=e.outShape,g=Ne({inputs:{x:$},backend:o}),g.shape=e.outShape,x.push($)}else{let w=e.outHeight*e.outWidth,v=et({inputs:{x:r},backend:o,attrs:{shape:f?[e.batchSize,w,e.inChannels]:[e.batchSize,e.inChannels,w]}}),E=et({inputs:{x:t},backend:o,attrs:{shape:[1,e.inChannels,e.outChannels]}}),A=Dl({a:f?v:E,b:f?E:v,transposeA:!f,transposeB:d,backend:o,bias:n,activation:a,preluActivationWeights:s,leakyreluAlpha:i});g=et({inputs:{x:A},backend:o,attrs:{shape:e.outShape}}),x.push(v),x.push(E),x.push(A)}for(let w of x)o.disposeIntermediateTensorInfo(w);return g}function qx({x:r,filter:t,convInfo:e,backend:o,bias:n=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let{filterWidth:l,filterHeight:c,inChannels:u,outWidth:p,outHeight:m,dataFormat:f}=e,h=f==="channelsLast",d=l*c*u,g=m*p,x=[e.batchSize,d,g],b=!0,C=!1,w=[];if(s!=null){let q=Wx(s.shape,h);q!=null&&(s=et({inputs:{x:s},backend:o,attrs:{shape:q}}),w.push(s))}if(n!=null){let q=Wx(n.shape,h);q!=null&&(n=et({inputs:{x:n},backend:o,attrs:{shape:q}}),w.push(n))}let v=et({inputs:{x:t},backend:o,attrs:{shape:[1,d,y.sizeFromShape(t.shape)/d]}});w.push(v);let E=new Ux(x,e),A=[r.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],$=o.runWebGLProgram(E,[r],"float32",A),F=et({inputs:{x:$},backend:o,attrs:{shape:x}});w.push($),w.push(F);let L=n!=null,M=s!=null,V=a==="leakyrelu",G=a?qs(a,!0):null,W=new Ju(h?F.shape:v.shape,h?v.shape:F.shape,h?[e.batchSize,g,e.outChannels]:[e.batchSize,e.outChannels,g],b,C,L,G,M,V),U=h?[F,v]:[v,F];if(n&&U.push(n),M&&U.push(s),V){let q=o.makeTensorInfo([],"float32",y.createScalarValue(i,"float32"));U.push(q),w.push(q)}let K=o.runWebGLProgram(W,U,"float32"),J=et({inputs:{x:K},backend:o,attrs:{shape:e.outShape}});w.push(K);for(let q of w)o.disposeIntermediateTensorInfo(q);return J}function Q6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s}=t,{strides:i,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=o,p=S.convertConv2DDataFormat(l),m=S.computeConv2DInfo(n.shape,s.shape,i,c,a,u,!1,p),f;if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))f=Hx({x:n,filter:s,convInfo:m,backend:e});else if(m.strideWidth<=2&&p==="channelsLast"&&P().getBool("WEBGL_EXP_CONV")){let d=new ep(m),g=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]];f=e.runWebGLProgram(d,[n,s],"float32",g)}else if(P().getBool("WEBGL_CONV_IM2COL"))f=qx({x:n,filter:s,convInfo:m,backend:e});else{let d=new tp(m);f=e.runWebGLProgram(d,[n,s],"float32")}let h=et({inputs:{x:f},backend:e,attrs:{shape:m.outShape}});return e.disposeIntermediateTensorInfo(f),h}var k_={kernelName:fi,backendName:"webgl",kernelFunc:Q6};var Kx=class{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideHeight,o=t.strideWidth,n=t.padInfo.top,s=t.padInfo.left,i=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${n};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${o} - ${s};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              ${i?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}},jx=class{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterHeight,o=t.filterWidth,n=t.strideHeight,s=t.strideWidth,i=t.dataFormat==="channelsLast",a=e-1-t.padInfo.top,l=o-1-t.padInfo.left,c=i?1:2,u=i?2:3,p=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${p}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${o} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Xx=class{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideDepth,o=t.strideHeight,n=t.strideWidth,s=t.padInfo.front,i=t.padInfo.top,a=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${s};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${o} - ${i};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${n} - ${a};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Yx=class{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterDepth,o=t.filterHeight,n=t.filterWidth,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,l=e-1-t.padInfo.front,c=o-1-t.padInfo.top,u=n-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${c}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${o}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${o} - 1 - wR;

            for (int wC = 0; wC < ${n}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${n} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function tX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:s}=t,{strides:i,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=o,p=S.convertConv2DDataFormat(l),m=S.computeConv2DInfo(n.shape,u,i,1,a,c,!1,p),f=new Kx(m);return e.runWebGLProgram(f,[n,s],"float32")}var E_={kernelName:jl,backendName:"webgl",kernelFunc:tX};var Zx=class{constructor(t){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=t.inShape,this.enableShapeUniforms=Xt(this.outputShape.length);let e=t.filterHeight,o=t.filterWidth,n=e-1-t.padInfo.top,s=o-1-t.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${n}, ${s});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${o}; wC++) {
            int wCPerm = ${o} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${t.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${t.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}};function eX(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:s}=t,{inputShape:i,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=o,p=S.convertConv2DDataFormat(c),m=S.computeConv2DInfo(i,s.shape,a,1,l,u,!1,p);if(P().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&p==="channelsLast"){let f=[[m.strideHeight,m.strideWidth]],h=new Zx(m);return e.runWebGLProgram(h,[n,s],"float32",f)}else{let f=new jx(m);return e.runWebGLProgram(f,[n,s],"float32")}}var A_={kernelName:hi,backendName:"webgl",kernelFunc:eX};function rX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s}=t,{strides:i,pad:a,dilations:l}=o,c=S.computeConv3DInfo(n.shape,s.shape,i,l,a),u=new Gx(c);return e.runWebGLProgram(u,[n,s],"float32")}var $_={kernelName:di,backendName:"webgl",kernelFunc:rX};function oX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:s}=t,{strides:i,pad:a,filterShape:l}=o,c=S.computeConv3DInfo(n.shape,l,i,1,a),u=new Xx(c);return e.runWebGLProgram(u,[n,s],"float32")}var D_={kernelName:Xl,backendName:"webgl",kernelFunc:oX};function nX(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:s}=t,{pad:i,strides:a,inputShape:l}=o,c=S.computeConv3DInfo(l,s.shape,a,1,i),u=new Yx(c);return e.runWebGLProgram(u,[n,s],"float32")}var R_={kernelName:Yl,backendName:"webgl",kernelFunc:nX};var sX=Fo+`
  return cos(x);
`,iX=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Qr}
  return result;
`,aX=ht({opSnippet:sX,packedOpSnippet:iX}),__={kernelName:Un,backendName:"webgl",kernelFunc:aX};var lX=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,cX=ht({opSnippet:lX}),F_={kernelName:Wn,backendName:"webgl",kernelFunc:cX};var Jx=class{constructor(t,e,o,n,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[i,a,l,c]=t,[u]=e,[p,m]=o;this.outputShape=[u,p,m,c];let f=n==="bilinear"?1:0,[h,d]=[`${a-1}.0`,`${l-1}.0`],[g,x,b]=p>1?[`${(a-1)/(p-1)}`,"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[C,w,v]=m>1?[`${(l-1)/(m-1)}`,"(x2-x1) * width_ratio",`x1*${d} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${d}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${C});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${w};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${h} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${v};
        if( in_x < 0.0 || in_x > ${d} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var uX=r=>{let{inputs:t,backend:e,attrs:o}=r,{image:n,boxes:s,boxInd:i}=t,{cropSize:a,method:l,extrapolationValue:c}=o,u=new Jx(n.shape,s.shape,a,l,c);return e.runWebGLProgram(u,[n,s,i],"float32")},O_={kernelName:Jl,backendName:"webgl",kernelFunc:uX};var _l;(function(r){r.Prod="*",r.Sum="+"})(_l||(_l={}));var th=class{constructor(t,e,o,n){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let s=this.outputShape.length,i=this.op===_l.Prod?"1.0":"0.0",a=o?i:`getX(${L_(s,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1],c="",u="";o?(c=n?`end != ${l-1}`:"end != 0",u=n?"end + 1":"end - 1"):(c=n?`end + pow2 < ${l}`:"end >= pow2",u=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${At(s)} coords = getOutputCoords();
        int end = ${P_(s,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${u};
          ${P_(s,"coords",this.op)} = idx;
          val ${this.op}= getX(${L_(s,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function L_(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.x, ${t}.y`;if(r===3)return`${t}.x, ${t}.y, ${t}.z`;if(r===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function P_(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.y`;if(r===3)return`${t}.z`;if(r===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function Qx(r,t,e,o,n,s){let i=t.shape.length,a=S.getAxesPermutation([o],i),l=t;a!=null&&(l=ue({inputs:{x:t},backend:e,attrs:{perm:a}}));let c=S.getInnerMostAxes(1,i)[0];if(c!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${o}`);let u=l.shape[c],p=Ne({inputs:{x:l},backend:e});for(let m=0;m<=Math.ceil(Math.log2(u))-1;m++){let f=new th(r,l.shape,!1,s),h=[[m]],d=p;p=e.runWebGLProgram(f,[p],p.dtype,h),e.disposeIntermediateTensorInfo(d)}if(n){let m=new th(r,l.shape,n,s),f=p;p=e.runWebGLProgram(m,[p],p.dtype),e.disposeIntermediateTensorInfo(f)}if(a!=null){let m=S.getUndoAxesPermutation(a),f=ue({inputs:{x:p},backend:e,attrs:{perm:m}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(l),f}return p}function pX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,exclusive:i,reverse:a}=o;return Qx(_l.Prod,n,e,s,i,a)}var z_={kernelName:Zl,backendName:"webgl",kernelFunc:pX};function mX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,exclusive:i,reverse:a}=o;return Qx(_l.Sum,n,e,s,i,a)}var B_={kernelName:gi,backendName:"webgl",kernelFunc:mX};function fX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:s}=t,{size:i,binaryOutput:a}=o;if(n.shape.length===1){let l=e.readSync(n.dataId),c=e.readSync(s.dataId),u=hx(l,c,s.dtype,s.shape,i);return e.makeTensorInfo([i],s.dtype,u)}else if(n.shape.length===2){let l=e.bufferSync(n),c=e.bufferSync(s),u=ID(l,c,i,a);return e.makeTensorInfo(u.shape,s.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${n.shape.length}.`)}var M_={kernelName:Ql,backendName:"webgl",kernelFunc:fX};var ty=class{constructor(t,e,o){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=o,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function hX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockSize:s,dataFormat:i}=o,a=n.shape[0],l=i==="NHWC"?n.shape[1]:n.shape[2],c=i==="NHWC"?n.shape[2]:n.shape[3],u=i==="NHWC"?n.shape[3]:n.shape[1],p=l*s,m=c*s,f=u/(s*s),h=i==="NHWC"?[a,p,m,f]:[a,f,p,m],d=new ty(h,s,i);return e.runWebGLProgram(d,[n],n.dtype)}var V_={kernelName:tc,backendName:"webgl",kernelFunc:hX};var rp=class{constructor(t,e=!1,o=null,n=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Xt(this.outputShape.length);let i=t.filterHeight,a=t.filterWidth,l=t.outChannels/t.inChannels,c="",u="";o&&(n?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:s?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:c=`
          float activation(float x) {
            ${o}
          }
        `,u="result = activation(result);");let p=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${p}
        ${u}
        setOutput(result);
      }
    `}};var op=class{constructor(t,e=!1,o=null,n=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Xt(this.outputShape.length);let i=t.outChannels/t.inChannels,a=t.padInfo.left,l=t.strideWidth,c=t.dilationWidth,u=t.filterHeight,p=t.filterWidth,m=p,f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<p;x++)f+=`
          vec4 xTexelC${x*2};
          int xTexelC${x*2}Ready;
          vec4 xTexelC${x*2+1};
          int xTexelC${x*2+1}Ready;
          vec4 xC${x};`;f+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let x=0;x<p;x++)f+=`
          xTexelC${x*2} = vec4(0.0);
          xTexelC${x*2}Ready = 0;
          xTexelC${x*2+1} = vec4(0.0);
          xTexelC${x*2+1}Ready = 0;
          xC${x} = vec4(0.0);`;f+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let x=0;x<(m+1)/2;x++){let b=x*2;if(f+=`
          xC = xCCorner + ${b*c};
          `,l===1){if(b<p&&(a%2===1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,c===1&&b>0?f+=`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<p)){let C=a%2===0?y.nearestLargerEven(c):c;c%2===0&&a%2===1||c%2!==0&&a%2!==1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${C};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,c>1?f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                    } else {
                     xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                    }
                    `:f+=`
                    xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                    `):C===1?f+=`
                    xC${b+1} = xTexelC${b};
                    `:f+=`
                    xCOffset = xC + ${C};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<p&&(a%2===1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<p&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<p&&(f+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<p&&(f+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<p&&(f+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
    }
  `,f+=`
      }
    `;let h="",d="";o&&(n?h=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:s?h=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:h=`vec4 activation(vec4 x) {
          ${o}
        }`,d="result = activation(result);");let g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${h}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${d}
        setOutput(result);
      }
    `}};function dX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s}=t,{strides:i,pad:a,dilations:l,dimRoundingMode:c}=o,u=l;u==null&&(u=[1,1]),y.assert(S.eitherStridesOrDilationsAreOne(i,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let p=S.computeConv2DInfo(n.shape,s.shape,i,u,a,c,!0),m;P().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?m=new op(p):m=new rp(p);let f=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return e.runWebGLProgram(m,[n,s],"float32",f)}var G_={kernelName:xi,backendName:"webgl",kernelFunc:dX};var ey=class{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideHeight,o=t.strideWidth,n=t.padInfo.top,s=t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${n};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${o} - ${s};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},ry=class{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterHeight,o=t.filterWidth,n=t.strideHeight,s=t.strideWidth,i=e-1-t.padInfo.top,a=o-1-t.padInfo.left,l=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${o} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function gX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:s}=t,{strides:i,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=o,p=S.computeConv2DInfo(n.shape,u,i,a,l,c,!0),m=new ey(p);return e.runWebGLProgram(m,[n,s],"float32")}var U_={kernelName:ec,backendName:"webgl",kernelFunc:gX};function xX(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:s}=t,{strides:i,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=o,p=S.computeConv2DInfo(u,s.shape,i,a,l,c,!0),m=new ry(p);return e.runWebGLProgram(m,[n,s],"float32")}var W_={kernelName:rc,backendName:"webgl",kernelFunc:xX};var oy=class{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function yX(r){let{inputs:t,backend:e}=r,{x:o}=t,n=[...o.shape,...o.shape],s=y.sizeFromShape(o.shape),i=et({inputs:{x:o},backend:e,attrs:{shape:[s]}}),a=new oy(s),l=e.runWebGLProgram(a,[i],i.dtype),c=et({inputs:{x:l},backend:e,attrs:{shape:n}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),c}var H_={kernelName:uh,backendName:"webgl",kernelFunc:yX};var ny=class{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;let{inHeight:e,inWidth:o,padInfo:n,strideHeight:s,strideWidth:i,filterHeight:a,filterWidth:l,dilationHeight:c,dilationWidth:u}=t,{top:p,left:m}=n;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${i});
      const ivec2 pads = ivec2(${p}, ${m});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${o}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function bX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s}=t,{strides:i,pad:a,dilations:l}=o,c=S.computeDilation2DInfo(n.shape,s.shape,i,a,"NHWC",l),u,p=new ny(c);u=e.runWebGLProgram(p,[n,s],"float32");let m=et({inputs:{x:u},backend:e,attrs:{shape:c.outShape}});return e.disposeIntermediateTensorInfo(u),m}var q_={kernelName:yi,backendName:"webgl",kernelFunc:bX};function wX(r){let{inputs:t,backend:e,attrs:o}=r,{equation:n}=o,s=t,{allDims:i,summedDims:a,idDims:l}=S.decodeEinsumEquation(n,s.length);S.checkEinsumDimSizes(i.length,l,s);let{path:c,steps:u}=S.getEinsumComputePath(a,l),p=u.length,m=null,f=i.length,h=[];for(let d=0;d<p;++d){for(let g of u[d]){let{permutationIndices:x,expandDims:b}=S.getEinsumPermutation(f,l[g]),C;S.isIdentityPermutation(x)?C=s[g]:(C=ue({inputs:{x:s[g]},backend:e,attrs:{perm:x}}),h.push(C));let w=C.shape.slice();for(let v=0;v<b.length;++v)w.splice(b[v],0,1);y.arraysEqual(C.shape,w)||(C=et({inputs:{x:C},backend:e,attrs:{shape:w}}),h.push(C)),m===null?m=C:(m=Jf({inputs:{a:C,b:m},backend:e}),h.push(m))}d<p-1&&(c[d]>=0&&(m=$l({inputs:{x:m},backend:e,attrs:{axis:c[d]-(i.length-f),keepDims:!1}}),h.push(m)),f--)}for(let d of h)d!==m&&e.disposeIntermediateTensorInfo(d);return m}var K_={kernelName:oc,backendName:"webgl",kernelFunc:wX};var CX="return (x >= 0.0) ? x : (exp(x) - 1.0);",vX=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,SX=ht({opSnippet:CX,packedOpSnippet:vX}),j_={kernelName:qn,backendName:"webgl",kernelFunc:SX};var IX="return (b >= 0.0) ? a : a * (b + 1.0);",NX=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,TX=r=>{let{inputs:t,backend:e}=r,{dy:o,y:n}=t,s=P().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jr(NX,o.shape,n.shape):new Pr(IX,o.shape,n.shape);return e.runWebGLProgram(s,[o,n],o.dtype)},X_={kernelName:nc,backendName:"webgl",kernelFunc:TX};var kX=`
  return vec4(equal(a, b));
`,EX="return float(a == b);",AX=qt({opSnippet:EX,packedOpSnippet:kX,dtype:"bool",cpuKernelImpl:AD}),Y_={kernelName:Ta,backendName:"webgl",kernelFunc:AX};var $X=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${S.ERF_P};
  float a1 = ${S.ERF_A1};
  float a2 = ${S.ERF_A2};
  float a3 = ${S.ERF_A3};
  float a4 = ${S.ERF_A4};
  float a5 = ${S.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,DX=ht({opSnippet:$X}),Z_={kernelName:Kn,backendName:"webgl",kernelFunc:DX};var RX=Fo+`
  return exp(x);
`,_X=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cv=ht({opSnippet:RX,packedOpSnippet:_X,cpuKernelImpl:$D,dtype:"float32"}),J_={kernelName:jn,backendName:"webgl",kernelFunc:cv};function sy(r){let{inputs:t,attrs:e,backend:o}=r,{dim:n}=e,{input:s}=t,i=s.shape.length,a=s.shape.slice(),l=n;return n<0&&(y.assert(-(i+1)<=n,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+n+1),a.splice(l,0,1),et({inputs:{x:s},backend:o,attrs:{shape:a}})}var Q_={kernelName:bi,backendName:"webgl",kernelFunc:sy};var tF="return exp(x) - 1.0;",FX=ht({opSnippet:tF,packedOpSnippet:tF,cpuKernelImpl:DD}),eF={kernelName:Xn,backendName:"webgl",kernelFunc:FX};var eh=class{constructor(t,e,o){this.variableNames=["real","imag"];let n=e[1];this.outputShape=e;let s=o?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=o?`${n}.0`:"1.0",a;if(t==="real")a="return real * expR - imag * expI;";else if(t==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${n});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${n}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function iy(r,t,e){let o=e.texData.get(r.dataId),n=y.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=n/s,a=et({inputs:{x:r},backend:e,attrs:{shape:[i,s]}}),l=a.shape,c=new eh("real",l,t),u=new eh("imag",l,t),p=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:l},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:l}],m=e.runWebGLProgram(c,p,"float32"),f=e.runWebGLProgram(u,p,"float32"),h=zr({inputs:{real:m,imag:f},backend:e});e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f);let d=et({inputs:{x:h},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(h),d}function OX(r){let{inputs:t,backend:e}=r,{input:o}=t;return iy(o,!1,e)}var rF={kernelName:sc,backendName:"webgl",kernelFunc:OX};var ay=class{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function js(r){let{backend:t,attrs:e}=r,{shape:o,value:n}=e,{dtype:s}=e;if(s=s||y.inferDtype(n),s==="string"){let i=y.getArrayFromDType(s,y.sizeFromShape(o));return i.fill(n),t.makeTensorInfo(o,s,i)}else{let i=new ay(o,n),a=[[n]];return t.runWebGLProgram(i,[],s,a)}}var oF={kernelName:ic,backendName:"webgl",kernelFunc:js};var ly=class{constructor(t){this.variableNames=["Image"],this.outputShape=[];let e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var nF={kernelName:ac,backendName:"webgl",kernelFunc:({inputs:r,backend:t})=>{let{image:e}=r,o=t,n=new ly(e.shape);return o.runWebGLProgram(n,[e],e.dtype)}};var sF="return floor(x);",LX=ht({opSnippet:sF,packedOpSnippet:sF,cpuKernelImpl:RD}),iF={kernelName:Yn,backendName:"webgl",kernelFunc:LX};var PX=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,zX=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,BX=qt({opSnippet:PX,packedOpSnippet:zX,dtype:"int32"}),aF={kernelName:Zn,backendName:"webgl",kernelFunc:BX};var cy=class{constructor(t){this.variableNames=["A"];let e=xe(),[o,n]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}.0, ${o}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var uy=class{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let e=xe(),[o,n]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${n}.0, ${o}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}};var lF={kernelName:Jv,backendName:"webgl",kernelFunc:MX},np,uv=P().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function MX(r){let{inputs:t,backend:e,attrs:o}=r,{pixels:n}=t,{numChannels:s}=o,i=typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement,[l,c]=i?[n.videoWidth,n.videoHeight]:[n.width,n.height],u=[c,l],p=[c,l,s];if(a||i){let d=P().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(np==null||d!==uv)&&(uv=d,np=document.createElement("canvas").getContext("2d",{willReadFrequently:uv})),np.canvas.width=l,np.canvas.height=c,np.drawImage(n,0,0,l,c),n=np.canvas}let m=e.makeTensorInfo(u,"int32");e.texData.get(m.dataId).usage=ur.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(m.dataId),n);let f=P().getBool("WEBGL_PACK")?new uy(p):new cy(p),h=e.runWebGLProgram(f,[m],"int32");return e.disposeData(m.dataId),h}function VX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s,bias:i,preluActivationWeights:a}=t,{strides:l,pad:c,dataFormat:u,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:h}=o,d=S.convertConv2DDataFormat(u),g=S.computeConv2DInfo(n.shape,s.shape,l,p,c,m,!1,d),x,b=[],C=i!=null,w=a!=null,v=f==="leakyrelu",E=()=>{let $=[n,s],F=(L,M)=>{if(M==="NCHW"&&L.shape.length===1&&L.shape[0]!==1){let V=et({inputs:{x:L},backend:e,attrs:{shape:[L.shape[0],1,1]}});return b.push(V),V}return L};if(C&&$.push(F(i,u)),w&&$.push(F(a,u)),v){let L=e.makeTensorInfo([],"float32",y.createScalarValue(h,"float32"));$.push(L),b.push(L)}return $};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))x=Hx({x:n,filter:s,convInfo:g,backend:e,bias:i,activation:f,preluActivationWeights:a,leakyreluAlpha:h});else if(g.strideWidth<=2&&d==="channelsLast"&&P().getBool("WEBGL_EXP_CONV")){let $=f?qs(f,!0):null,F=new ep(g,C,$,w,v),L=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],M=E();x=e.runWebGLProgram(F,M,"float32",L)}else if(P().getBool("WEBGL_CONV_IM2COL"))x=qx({x:n,filter:s,convInfo:g,backend:e,bias:i,activation:f,preluActivationWeights:a,leakyreluAlpha:h});else{let $=f?qs(f,!1):null,F=new tp(g,C,$,w,v),L=E();x=e.runWebGLProgram(F,L,"float32")}let A=et({inputs:{x},backend:e,attrs:{shape:g.outShape}});return b.push(x),b.forEach($=>e.disposeIntermediateTensorInfo($)),A}var cF={kernelName:Oa,backendName:"webgl",kernelFunc:VX};function GX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s,bias:i,preluActivationWeights:a}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:p,activation:m,leakyreluAlpha:f}=o,h=[],d=u;d==null&&(d=[1,1]),y.assert(S.eitherStridesOrDilationsAreOne(l,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${d}'`);let g=S.computeConv2DInfo(n.shape,s.shape,l,d,c,p,!0),x=P().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=m?qs(m,x):null,C=[n,s],w=i!=null,v=a!=null,E=m==="leakyrelu";if(w&&C.push(i),v&&C.push(a),E){let L=e.makeTensorInfo([],"float32",y.createScalarValue(f,"float32"));C.push(L),h.push(L)}let A;x?A=new op(g,w,b,v,E):A=new rp(g,w,b,v,E);let $=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],F=e.runWebGLProgram(A,C,"float32",$);return h.forEach(L=>e.disposeIntermediateTensorInfo(L)),F}var uF={kernelName:La,backendName:"webgl",kernelFunc:GX};var py=class{constructor(t,e,o,n){this.sliceDim=t,this.strides=e,this.paramsShape=n,this.variableNames=["x","indices"],this.outputShape=o;let s=At(o.length),i=`
    int index;`;for(let a=0;a<this.sliceDim;a++)i+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function UX(r){let{inputs:t,backend:e}=r,{params:o,indices:n}=t,s=n.shape,i=s[s.length-1],a=y.sizeFromShape(o.shape),[l,c,u,p]=S.prepareAndValidate(o,n),m=et({inputs:{x:n},backend:e,attrs:{shape:[c,i]}}),f=et({inputs:{x:o},backend:e,attrs:{shape:[y.sizeFromShape(o.shape)/u,u]}});if(e.shouldExecuteOnCPU([o,n])||o.dtype==="string"){let x=e.readSync(n.dataId),b=e.bufferSync(o),C=_D(x,b,o.dtype,c,i,u,p,o.shape,a);return e.makeTensorInfo(l,o.dtype,C.values)}let h=new py(i,p,[c,u],o.shape),d=e.runWebGLProgram(h,[f,m],f.dtype),g=et({inputs:{x:d},backend:e,attrs:{shape:l}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(d),g}var pF={kernelName:ph,backendName:"webgl",kernelFunc:UX};var my=class{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;let o=At(this.rank),n=WX(t,2);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${n}));
      }
    `}};function WX(r,t){let e=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[];for(let n=0;n<r.length;n++)n===2?o.push("index"):o.push(`${e[n]}`);return o.join()}function pv(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,indices:s}=t,{axis:i,batchDims:a}=o,l=y.parseAxisParam(i,n.shape)[0];if(P().get("DEBUG")){let b=e.readSync(s.dataId),C=n.shape[l];for(let w=0;w<b.length;++w){let v=b[w];y.assert(v<=C-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${C-1}]`)}}let c=S.segment_util.collectGatherOpShapeInfo(n,s,l,a),u=y.sizeFromShape(s.shape),p=[],m=et({inputs:{x:n},backend:e,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=et({inputs:{x:s},backend:e,attrs:{shape:[c.batchSize,u/c.batchSize]}});p.push(m),p.push(f);let h=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(e.shouldExecuteOnCPU([n,s])||n.dtype==="string"){let b=e.bufferSync(f),C=e.bufferSync(m),w=FD(C,b,h);return p.forEach(v=>e.disposeIntermediateTensorInfo(v)),e.makeTensorInfo(c.outputShape,w.dtype,w.values)}let d=new my(m.shape,h),g=e.runWebGLProgram(d,[m,f],m.dtype);p.push(g);let x=et({inputs:{x:g},backend:e,attrs:{shape:c.outputShape}});return p.forEach(b=>e.disposeIntermediateTensorInfo(b)),x}var mF={kernelName:Ci,backendName:"webgl",kernelFunc:pv};var HX="return float(a > b);",qX=`
  return vec4(greaterThan(a, b));
`,KX=qt({opSnippet:HX,packedOpSnippet:qX,cpuKernelImpl:OD,dtype:"bool"}),fF={kernelName:ka,backendName:"webgl",kernelFunc:KX};var jX="return float(a >= b);",XX=`
  return vec4(greaterThanEqual(a, b));
`,YX=qt({opSnippet:jX,packedOpSnippet:XX,dtype:"bool",cpuKernelImpl:LD}),hF={kernelName:Jn,backendName:"webgl",kernelFunc:YX};function ZX(r){let{inputs:t,backend:e}=r,{input:o}=t;return iy(o,!0,e)}var dF={kernelName:lc,backendName:"webgl",kernelFunc:ZX};var JX="return float(!isnan(x) && !isinf(x));",QX=ht({opSnippet:JX,dtype:"bool"}),gF={kernelName:Qn,backendName:"webgl",kernelFunc:QX};var t8="return float(isinf(x));",e8=ht({opSnippet:t8,dtype:"bool"}),xF={kernelName:ts,backendName:"webgl",kernelFunc:e8};var r8="return float(isnan(x));",o8=ht({opSnippet:r8,dtype:"bool"}),yF={kernelName:es,backendName:"webgl",kernelFunc:o8};var n8="return float(a < b);",s8=`
  return vec4(lessThan(a, b));
`,i8=qt({opSnippet:n8,packedOpSnippet:s8,cpuKernelImpl:PD,dtype:"bool"}),bF={kernelName:Ea,backendName:"webgl",kernelFunc:i8};var a8="return float(a <= b);",l8=`
  return vec4(lessThanEqual(a, b));
`,c8=qt({opSnippet:a8,packedOpSnippet:l8,cpuKernelImpl:zD,dtype:"bool"}),wF={kernelName:Aa,backendName:"webgl",kernelFunc:c8};function u8(r){let{backend:t,attrs:e}=r,{start:o,stop:n,num:s}=e,i=BD(o,n,s);return t.makeTensorInfo([i.length],"float32",i)}var CF={kernelName:mh,backendName:"webgl",kernelFunc:u8};var p8=Fo+`
  return x < 0.0 ? 0./0. : log(x);
`,m8=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,f8=ht({opSnippet:p8,packedOpSnippet:m8,cpuKernelImpl:MD}),vF={kernelName:rs,backendName:"webgl",kernelFunc:f8};var h8=Fo+`
  return log(1.0 + x);
`,d8=ht({opSnippet:h8}),SF={kernelName:os,backendName:"webgl",kernelFunc:d8};var g8="return float(a >= 1.0 && b >= 1.0);",x8=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,y8=qt({opSnippet:g8,packedOpSnippet:x8,dtype:"bool"}),IF={kernelName:$a,backendName:"webgl",kernelFunc:y8};var b8="return float(!(x >= 1.0));",w8=ht({opSnippet:b8}),NF={kernelName:Da,backendName:"webgl",kernelFunc:w8};var C8="return float(a >= 1.0 || b >= 1.0);",v8=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,S8=qt({opSnippet:C8,packedOpSnippet:v8,dtype:"bool"}),TF={kernelName:Ra,backendName:"webgl",kernelFunc:S8};var fy=class{constructor(t,e,o,n,s){this.variableNames=["x"],this.outputShape=[];let i=e,a=t[3]-1;this.outputShape=t;let l,c=`float(${o}) + float(${n}) * sum`;s===.5?l=`inversesqrt(${c})`:s===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}};var hy=class{constructor(t,e,o,n,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let i=e,a=t[3]-1;this.outputShape=t;let l,c=`float(${o}) + float(${n}) * sum`;s===.5?l=`inversesqrt(${c})`:s===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}};var I8=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{depthRadius:s,bias:i,alpha:a,beta:l}=o,c=P().getBool("WEBGL_PACK_NORMALIZATION")?new hy(n.shape,s,i,a,l):new fy(n.shape,s,i,a,l);return e.runWebGLProgram(c,[n],n.dtype)},kF={kernelName:Si,backendName:"webgl",kernelFunc:I8};var dy=class{constructor(t,e,o,n,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=o,this.alpha=n,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${n}) * norm + float(${o});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${n})
                * float(${s})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var N8=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n,y:s,dy:i}=t,{depthRadius:a,bias:l,alpha:c,beta:u}=o,p=new dy(n.shape,a,l,c,u);return e.runWebGLProgram(p,[n,s,i],n.dtype)},EF={kernelName:uc,backendName:"webgl",kernelFunc:N8};function AF(r,t,e,o){let n=y.sizeFromShape(t),i=y.sizeFromShape(r.shape)/n,a=et({inputs:{x:r},attrs:{shape:[i,n]},backend:o}),l=to(a,r.dtype,"max",o),c=et({inputs:{x:l},attrs:{shape:e},backend:o});return o.disposeIntermediateTensorInfo(a),o.disposeIntermediateTensorInfo(l),c}function mv(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reductionIndices:s,keepDims:i}=o,a=n.shape.length,l=y.parseAxisParam(s,n.shape),c=l,u=S.getAxesPermutation(c,a),p=u!=null,m=e.shouldExecuteOnCPU([n]),f=n;if(p){if(m){let C=e.texData.get(f.dataId).values,w=new Array(a);for(let A=0;A<w.length;A++)w[A]=n.shape[u[A]];let v=Al(C,n.shape,n.dtype,u,w);f=e.makeTensorInfo(w,n.dtype);let E=e.texData.get(f.dataId);E.values=v}else f=ya(n,u,e);c=S.getInnerMostAxes(c.length,a)}S.assertAxesAreInnerMostDims("max",c,a);let[h,d]=S.computeOutAndReduceShapes(f.shape,c),g=h;i&&(g=S.expandShapeToKeepDim(h,l));let x;if(m){let C=e.texData.get(f.dataId).values,w=VD(C,y.sizeFromShape(d),g,n.dtype);x=e.makeTensorInfo(g,n.dtype);let v=e.texData.get(x.dataId);v.values=w}else x=AF(f,d,g,e);return p&&e.disposeIntermediateTensorInfo(f),x}var $F={kernelName:Ii,backendName:"webgl",kernelFunc:mv};var T8=Zu+`
  return max(a, b);
`,k8=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Qr+`
  return result;
`,E8=qt({opSnippet:T8,packedOpSnippet:k8,cpuKernelImpl:GD}),DF={kernelName:ns,backendName:"webgl",kernelFunc:E8};function A8(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t;En(n,"maxPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:l}=o,c=1;y.assert(S.eitherStridesOrDilationsAreOne(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let u=S.computePool2DInfo(n.shape,s,i,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&y.arraysEqual(u.inShape,u.outShape))return Ne({inputs:{x:n},backend:e});let p=new tn(u,"max",!1);return e.runWebGLProgram(p,[n],n.dtype)}var RF={kernelName:Ni,backendName:"webgl",kernelFunc:A8};function $8(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:s,strides:i,pad:a,dataFormat:l,dimRoundingMode:c}=o,u=[1,1,1],p=S.computePool3DInfo(n.shape,s,i,u,a,c,l),m=new ba(p,"max",!1);return e.runWebGLProgram(m,[n],n.dtype)}var _F={kernelName:Ti,backendName:"webgl",kernelFunc:$8};var gy=class{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;let e=t.strideHeight,o=t.strideWidth,n=t.dilationHeight,s=t.effectiveFilterHeight,i=t.effectiveFilterWidth,a=s-1-t.padInfo.top,l=i-1-t.padInfo.left,c=s*i-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${n}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},xy=class{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;let e=t.strideDepth,o=t.strideHeight,n=t.strideWidth,s=t.dilationDepth,i=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,u=t.effectiveFilterWidth,p=l-1-t.padInfo.front,m=c-1-t.padInfo.top,f=u-1-t.padInfo.left,h=l*c*u-1;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${m}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${n}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${h} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function D8(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:s}=t,i=s,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=o,p=[1,1,1],m=S.computePool3DInfo(i.shape,a,l,p,c,u),f=new ba(m,"max",!0),h=e.runWebGLProgram(f,[i],i.dtype),d=new xy(m),g=e.runWebGLProgram(d,[n,h],i.dtype);return e.disposeIntermediateTensorInfo(h),g}var FF={kernelName:mc,backendName:"webgl",kernelFunc:D8};function R8(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:s,output:i}=t,a=s;En([s,i],"maxPoolGrad");let{filterSize:l,strides:c,pad:u,dimRoundingMode:p}=o,m=S.computePool2DInfo(a.shape,l,c,1,u,p),f=!0,h=new tn(m,"max",f),d=e.runWebGLProgram(h,[a],a.dtype),g=new gy(m),x=e.runWebGLProgram(g,[n,d],a.dtype);return e.disposeIntermediateTensorInfo(d),x}var OF={kernelName:pc,backendName:"webgl",kernelFunc:R8};function LF(r,t,e,o){let n=new tn(e,"max",!1),s=o.runWebGLProgram(n,[r],"float32");n=new tn(e,"max",!0,!0,t);let i=o.runWebGLProgram(n,[r],"float32");return[s,i]}var PF={kernelName:fh,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:o}=r,{filterSize:n,strides:s,pad:i,includeBatchInIndex:a}=t,l=e;y.assert(o.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.shape.length}.`);let c=[1,1];y.assert(S.eitherStridesOrDilationsAreOne(s,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${c}'`);let u=S.computePool2DInfo(o.shape,n,s,c,i),[p,m]=LF(o,a,u,l);return[p,m]}};function zF(r,t,e,o){let n=y.sizeFromShape(t),i=y.sizeFromShape(r.shape)/n,a=et({inputs:{x:r},attrs:{shape:[i,n]},backend:o}),l=to(a,"float32","mean",o),c=et({inputs:{x:l},attrs:{shape:e},backend:o});return o.disposeIntermediateTensorInfo(a),o.disposeIntermediateTensorInfo(l),c}var BF={kernelName:ki,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:o}=r,{keepDims:n,axis:s}=t,i=e,a=o.shape.length,l=y.parseAxisParam(s,o.shape),c=l,u=S.getAxesPermutation(c,a),p=u!=null,m=i.shouldExecuteOnCPU([o]),f=[],h=o;if(p){if(m){let w=i.texData.get(h.dataId).values,v=new Array(a);for(let $=0;$<v.length;$++)v[$]=o.shape[u[$]];let E=Al(w,o.shape,o.dtype,u,v);h=i.makeTensorInfo(v,o.dtype);let A=i.texData.get(h.dataId);A.values=E}else h=ya(o,u,i);f.push(h),c=S.getInnerMostAxes(c.length,a)}S.assertAxesAreInnerMostDims("sum",c,a);let[d,g]=S.computeOutAndReduceShapes(h.shape,c),x=d;n&&(x=S.expandShapeToKeepDim(d,l));let b=zF(h,g,x,i);for(let C of f)i.disposeIntermediateTensorInfo(C);return b}};function _8(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o,a=n.shape.length,l=y.parseAxisParam(s,n.shape),c=l,u=S.getAxesPermutation(c,a),p=n;u!=null&&(p=ue({inputs:{x:n},backend:e,attrs:{perm:u}}),c=S.getInnerMostAxes(c.length,n.shape.length)),S.assertAxesAreInnerMostDims("min",c,a);let[m,f]=S.computeOutAndReduceShapes(p.shape,c),h=y.sizeFromShape(f),d=et({inputs:{x:p},backend:e,attrs:{shape:[-1,h]}}),g=to(d,d.dtype,"min",e),x;if(i){let b=S.expandShapeToKeepDim(m,l);x=et({inputs:{x:g},backend:e,attrs:{shape:b}})}else x=et({inputs:{x:g},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(g),u!=null&&e.disposeIntermediateTensorInfo(p),x}var MF={kernelName:Ei,backendName:"webgl",kernelFunc:_8};var F8=Zu+`
  return min(a, b);
`,O8=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Qr+`
  return result;
`,L8=qt({opSnippet:F8,packedOpSnippet:O8,cpuKernelImpl:UD}),VF={kernelName:ss,backendName:"webgl",kernelFunc:L8};var yy=class{constructor(t,e,o){this.variableNames=["x"],this.outputShape=e.map((u,p)=>u[0]+t[p]+u[1]);let n=t.length,s=At(n),i=e.map(u=>u[0]).join(","),a=e.map((u,p)=>u[0]+t[p]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n),c=o==="reflect"?0:1;if(n===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${i});
      ${s} end = ${s}(${a});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${n}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}};var by=class{constructor(t,e,o){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((h,d)=>h[0]+t[d]+h[1]);let n=t.length,s=At(n),i=e.map(h=>h[0]).join(","),a=e.map((h,d)=>h[0]+t[d]).join(","),l=Ie("rc",n),c=Ie("source",n),u=`${l[n-1]} < ${this.outputShape[n-1]}`,p=n===1?"source":`vec2(${c.slice(-2).join()})`,m=o==="reflect"?0:1,f="";if(n===1){let h=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${m};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${m};
        }
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${c.join()}), ${p});
        ${l[n-1]} += 1;
        if(${u}) {
          ${h}
          result[1] = getChannel(getX(${c.join()}), ${p});
        }
      `}else{let h=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${m}) +
                gte * ((end - 1) * 2 - source + ${m});
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${c.join()}), ${p});
        ${l[n-1]} += 1;
        if(${u}) {
          ${h}
          result[1] = getChannel(getX(${c.join()}), ${p});
        }
        rc = outputLoc;
        ${l[n-2]} += 1;
        if(${l[n-2]} < ${this.outputShape[n-2]}) {
          ${h}
          result[2] = getChannel(getX(${c.join()}), ${p});
          ${l[n-1]} += 1;
          if(${u}) {
            ${h}
            result[3] = getChannel(getX(${c.join()}), ${p});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${i});
      const ${s} end = ${s}(${a});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var P8=({inputs:r,backend:t,attrs:e})=>{let{x:o}=r,{paddings:n,mode:s}=e,i=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new by(o.shape,n,s):new yy(o.shape,n,s);return t.runWebGLProgram(i,[o],o.dtype)},GF={kernelName:Ai,backendName:"webgl",kernelFunc:P8};var z8=`if (b == 0.0) return NAN;
  return mod(a, b);`,B8=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Qr+`
  return result;
`,M8=qt({opSnippet:z8,packedOpSnippet:B8}),UF={kernelName:is,backendName:"webgl",kernelFunc:M8};var wy=class{constructor(t,e,o){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,o],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}};var V8=`
if (a == b) {
  return 1.0;
};
return a / b;`,G8=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,fv=qt({opSnippet:V8,packedOpSnippet:G8,checkOutOfBounds:!0}),WF={kernelName:Hn,backendName:"webgl",kernelFunc:fv};var HF="return a - b;",hv=qt({opSnippet:HF,packedOpSnippet:HF,supportsComplex:!0,cpuKernelImpl:uR}),qF={kernelName:vs,backendName:"webgl",kernelFunc:hv};function dv(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{dim:s}=o,i=y.parseAxisParam([s],n.shape),a=mv({inputs:{x:n},backend:e,attrs:{reductionIndices:i,keepDims:!1}}),l=S.expandShapeToKeepDim(a.shape,i),c=et({inputs:{x:a},backend:e,attrs:{shape:l}}),u=hv({inputs:{a:n,b:c},backend:e}),p=cv({inputs:{x:u},backend:e}),m=$l({inputs:{x:p},backend:e,attrs:{axis:i,keepDims:!1}}),f=et({inputs:{x:m},backend:e,attrs:{shape:l}}),h=fv({inputs:{a:p,b:f},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),h}var KF={kernelName:qi,backendName:"webgl",kernelFunc:dv};function U8(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{numSamples:s,seed:i,normalized:a}=o,l=a?n:dv({inputs:{logits:n},backend:e,attrs:{dim:n.shape.length-1}}),c=l.shape[0],u=l.shape[1],p=new wy(c,u,s),m=[[i]],f=e.runWebGLProgram(p,[l],"int32",m);return a||e.disposeIntermediateTensorInfo(l),f}var jF={kernelName:hh,backendName:"webgl",kernelFunc:U8};var W8=Le+`
  return -x;
`,H8=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function q8(r){let{inputs:t,backend:e}=r,{x:o}=t;if(e.shouldExecuteOnCPU([o])){let s=e.texData.get(o.dataId),[i,a]=HD(s.values,o.shape,o.dtype);return e.makeTensorInfo(a,o.dtype,i)}let n;return P().getBool("WEBGL_PACK_UNARY_OPERATIONS")?n=new Lr(o.shape,H8):n=new rr(o.shape,W8),e.runWebGLProgram(n,[o],o.dtype)}var XF={kernelName:$i,backendName:"webgl",kernelFunc:q8};var K8=ar.nonMaxSuppressionV3Impl;function j8(r){S.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=o,c=e.readSync(n.dataId),u=e.readSync(s.dataId),{selectedIndices:p}=K8(c,u,i,a,l);return e.makeTensorInfo([p.length],"int32",new Int32Array(p))}var YF={kernelName:fc,backendName:"webgl",kernelFunc:j8};var X8=ar.nonMaxSuppressionV4Impl;function Y8(r){S.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=o,u=e.readSync(n.dataId),p=e.readSync(s.dataId),{selectedIndices:m,validOutputs:f}=X8(u,p,i,a,l,c);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([],"int32",new Int32Array([f]))]}var ZF={kernelName:hc,backendName:"webgl",kernelFunc:Y8};var Z8=ar.nonMaxSuppressionV5Impl;function J8(r){S.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=o,u=e.readSync(n.dataId),p=e.readSync(s.dataId),m=i,f=a,h=l,d=c,{selectedIndices:g,selectedScores:x}=Z8(u,p,m,f,h,d);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([x.length],"float32",new Float32Array(x))]}var JF={kernelName:dc,backendName:"webgl",kernelFunc:J8};var Cy=class{constructor(t,e,o,n){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${n}), float(${o}),
                      float(index == coords.y)));
      }
    `}};var Q8=r=>{let{inputs:t,backend:e,attrs:o}=r,{indices:n}=t,{dtype:s,depth:i,onValue:a,offValue:l}=o,c=y.sizeFromShape(n.shape),u=new Cy(c,i,a,l),p=et({inputs:{x:n},backend:e,attrs:{shape:[c]}}),m=e.runWebGLProgram(u,[p],s);e.disposeIntermediateTensorInfo(p);let f=[...n.shape,i],h=et({inputs:{x:m},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(m),h},QF={kernelName:Ri,backendName:"webgl",kernelFunc:Q8};function rh(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="complex64"){let n=Ks({inputs:{input:o},backend:e}),s=rh({inputs:{x:n},backend:e}),i=Rl({inputs:{input:o},backend:e}),a=rh({inputs:{x:i},backend:e}),l=zr({inputs:{real:s,imag:a},backend:e});return e.disposeIntermediateTensorInfo(n),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),l}else return js({attrs:{shape:o.shape,dtype:o.dtype,value:o.dtype==="string"?"":0},backend:e})}var tO={kernelName:Xi,backendName:"webgl",kernelFunc:rh};function eO(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(o.dtype==="complex64"){let n=Ks({inputs:{input:o},backend:e}),s=eO({inputs:{x:n},backend:e}),i=Rl({inputs:{input:o},backend:e}),a=rh({inputs:{x:i},backend:e}),l=zr({inputs:{real:s,imag:a},backend:e});return e.disposeIntermediateTensorInfo(n),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),l}else return js({attrs:{shape:o.shape,dtype:o.dtype,value:1},backend:e})}var rO={kernelName:Di,backendName:"webgl",kernelFunc:eO};function t5(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o;if(t.length===1)return sy({inputs:{input:t[0]},backend:e,attrs:{dim:n}});let s=t[0].shape,i=t[0].dtype;t.forEach(u=>{y.assertShapesMatch(s,u.shape,"All tensors passed to stack must have matching shapes"),y.assert(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],l=t.map(u=>{let p=sy({inputs:{input:u},backend:e,attrs:{dim:n}});return a.push(p),p}),c=lv({inputs:l,backend:e,attrs:{axis:n}});return a.forEach(u=>e.disposeIntermediateTensorInfo(u)),c}var oO={kernelName:_i,backendName:"webgl",kernelFunc:t5};var vy=class{constructor(t,e,o){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((c,u)=>c[0]+t[u]+c[1]);let n=t.length,s=At(n),i=e.map(c=>c[0]).join(","),a=e.map((c,u)=>c[0]+t[u]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n);if(n===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${i});
      ${s} end = ${s}(${a});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}};var Sy=class{constructor(t,e,o){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((d,g)=>d[0]+t[g]+d[1]);let n=t.length,s=At(n),i=e.map(d=>d[0]).join(","),a=e.map((d,g)=>d[0]+t[g]).join(","),l=Ie("rc",n),c=Ie("source",n),u=`${l[n-1]} < ${this.outputShape[n-1]}`,p=n===1?"source":`vec2(${c.slice(-2).join()})`,m=[`${s} rc = outputLoc;`,`${l[n-1]} += 1;
       if(${u}) {
      `,n===1?"":`}
       rc = outputLoc;
       ${l[n-2]} += 1;
       if(${l[n-2]} < ${this.outputShape[n-2]}) {`,n===1?"":`  ${l[n-1]} += 1;
         if(${u}) {`],f=n===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",h="";for(let d=0,g=n===1?2:4;d<g;d++)h+=`
        ${m[d]}
        if (${f}) {
          result[${d}] = float(value);
        } else {
          ${s} source = rc - start;
          result[${d}] = getChannel(getX(${c.join()}), ${p});
        }
      `;h+=n===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${i});
      const ${s} end = ${s}(${a});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}};var gv=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{paddings:s,constantValue:i}=o;if(y.sizeFromShape(n.shape)===0){let c=s.map((u,p)=>u[0]+n.shape[p]+u[1]);return js({backend:e,attrs:{shape:c,value:i,dtype:n.dtype}})}let a=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Sy(n.shape,s,i):new vy(n.shape,s,i),l=[[i]];return e.runWebGLProgram(a,[n],n.dtype,l)},nO={kernelName:Fi,backendName:"webgl",kernelFunc:gv};var e5=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,r5=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Qr+`
  return result;
`,o5=qt({opSnippet:e5,packedOpSnippet:r5}),sO={kernelName:ls,backendName:"webgl",kernelFunc:o5};function n5(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o,a=n.shape.length,l=[],c=y.parseAxisParam(s,n.shape),u=c,p=S.getAxesPermutation(u,a),m=n;p!=null&&(m=ue({inputs:{x:n},backend:e,attrs:{perm:p}}),u=S.getInnerMostAxes(u.length,a),l.push(m)),S.assertAxesAreInnerMostDims("prod",u,a);let f;if(e.shouldExecuteOnCPU([m])){let h=e.texData.get(m.dataId).values,{outVals:d,outShape:g,outDtype:x}=KD(m.shape,m.dtype,h,u);f=e.makeTensorInfo(g,x,d)}else{let[h,d]=S.computeOutAndReduceShapes(m.shape,u),g=y.sizeFromShape(d),x=et({inputs:{x:m},backend:e,attrs:{shape:[-1,g]}}),b=Ga(n.dtype),C=to(x,b,"prod",e);f=et({inputs:{x:C},backend:e,attrs:{shape:h}}),l.push(x),l.push(C)}if(i){l.push(f);let h=S.expandShapeToKeepDim(f.shape,c);f=et({inputs:{x:f},backend:e,attrs:{shape:h}})}return l.forEach(h=>e.disposeIntermediateTensorInfo(h)),f}var iO={kernelName:Li,backendName:"webgl",kernelFunc:n5};function s5(r){let{inputs:t,backend:e,attrs:o}=r,{paramsNestedSplits:n,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:a}=o,l=n.map(x=>e.readSync(x.dataId)),c=n.map(x=>x.shape),u=e.readSync(s.dataId),p=e.readSync(i.dataId),[m,f,h]=jD(l,c,u,s.shape,s.dtype,p,i.shape,a),d=m.map(x=>e.makeTensorInfo([x.length],"int32",x)),g=e.makeTensorInfo(h,s.dtype,f);return d.concat([g])}var aO={kernelName:dh,backendName:"webgl",kernelFunc:s5};function i5(r){let{inputs:t,backend:e}=r,{starts:o,limits:n,deltas:s}=t,i=e.readSync(o.dataId),a=e.readSync(n.dataId),l=e.readSync(s.dataId),[c,u]=XD(i,o.shape,o.dtype,a,n.shape,l,s.shape),p=e.makeTensorInfo([c.length],"int32",c),m=e.makeTensorInfo([u.length],o.dtype,u);return[p,m]}var lO={kernelName:gh,backendName:"webgl",kernelFunc:i5};function a5(r){let{inputs:t,backend:e,attrs:o}=r,{shape:n,values:s,defaultValue:i,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=o,c=e.readSync(n.dataId),u=e.readSync(s.dataId),p=e.readSync(i.dataId),m=a.map(g=>e.readSync(g.dataId)),f=a.map(g=>g.shape),[h,d]=YD(c,n.shape,u,s.shape,s.dtype,p,i.shape,m,f,l);return e.makeTensorInfo(h,s.dtype,d)}var cO={kernelName:xh,backendName:"webgl",kernelFunc:a5};var xv=r=>{let{backend:t,attrs:e}=r,{start:o,stop:n,step:s,dtype:i}=e,a=ZD(o,n,s,i);return t.makeTensorInfo([a.length],i,a)},uO={kernelName:gc,backendName:"webgl",kernelFunc:xv};var l5="return 1.0 / x;",c5=ht({opSnippet:l5}),pO={kernelName:cs,backendName:"webgl",kernelFunc:c5};var u5=Le+`
  return (x < 0.0) ? 0.0 : x;
`,p5=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,m5=ht({opSnippet:u5,packedOpSnippet:p5}),mO={kernelName:us,backendName:"webgl",kernelFunc:m5};var f5=Le+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,h5=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,d5=ht({opSnippet:f5,packedOpSnippet:h5}),fO={kernelName:ps,backendName:"webgl",kernelFunc:d5};var Iy=class{constructor(t,e,o,n,s){this.variableNames=["A"],this.outputShape=[];let[i,a,l,c]=t;this.outputShape=[i,e,o,c];let u=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],m;s?m="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/p[0]},
          ${u[1]/p[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var Ny=class{constructor(t,e,o,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[i,a,l,c]=t;this.outputShape=[i,e,o,c];let u=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],m;s?m="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":m="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/p[0]},
          ${u[1]/p[1]},
          ${u[1]/p[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${o-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function g5(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:s,halfPixelCenters:i,size:a}=o,[l,c]=a,u=P().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Ny(n.shape,l,c,s,i):new Iy(n.shape,l,c,s,i);return e.runWebGLProgram(u,[n],"float32")}var hO={kernelName:Bi,backendName:"webgl",kernelFunc:g5};var Ty=class{constructor(t,e,o){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;let[,n,s]=e,[,i,a]=t,l=[o&&i>1?n-1:n,o&&a>1?s-1:s],c=[o&&i>1?i-1:i,o&&a>1?a-1:a],u=l[0]/c[0],p=l[1]/c[1],m=1/u,f=1/p,h=Math.ceil(m)*2+2,d=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${h});
        const int winWidth = int(${d});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${n-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function x5(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:s}=t,{alignCorners:i}=o,a=new Ty(s.shape,n.shape,i);return e.runWebGLProgram(a,[s],s.dtype)}var dO={kernelName:bc,backendName:"webgl",kernelFunc:x5};var ky=class{constructor(t,e,o,n,s){this.variableNames=["A"],this.outputShape=[];let[i,a,l,c]=t;this.outputShape=[i,e,o,c];let u=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],m=n?"0.5":"0.0",f;s?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/p[0]},
          ${u[1]/p[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};var Ey=class{constructor(t,e,o,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[i,a,l,c]=t;this.outputShape=[i,e,o,c];let u=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],m=n?"0.5":"0.0",f;s?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/p[0]},
          ${u[1]/p[1]},
          ${u[1]/p[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${o-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function y5(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:s,halfPixelCenters:i,size:a}=o,[l,c]=a,u=P().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Ey(n.shape,l,c,s,i):new ky(n.shape,l,c,s,i);return e.runWebGLProgram(u,[n],n.dtype)}var gO={kernelName:zi,backendName:"webgl",kernelFunc:y5};var Ay=class{constructor(t,e,o){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;let[,n,s]=e,[,i,a]=t,l=[o&&i>1?n-1:n,o&&a>1?s-1:s],c=[o&&i>1?i-1:i,o&&a>1?a-1:a],u=l[0]/c[0],p=l[1]/c[1],m=1/u,f=1/p,h=Math.ceil(m)*2+2,d=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${h});
        const int winWidth = int(${d});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${n}) - 1),
                ${o} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${o} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function b5(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:s}=t,{alignCorners:i}=o,a=new Ay(s.shape,n.shape,i);return e.runWebGLProgram(a,[s],s.dtype)}var xO={kernelName:yc,backendName:"webgl",kernelFunc:b5};var $y=class{constructor(t,e){this.variableNames=["x"];let o=t.length;if(o>4)throw new Error(`WebGL backend: Reverse of rank-${o} tensor is not yet supported`);if(this.outputShape=t,o===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}let n=a=>e.indexOf(a)!==-1&&t[a]!==1?`${t[a]} - coords[${a}] - 1`:`coords[${a}]`,s=t.map((a,l)=>n(l)).join(","),i=At(o);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}};var Dy=class{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let o=t.length;if(o>4)throw new Error(`WebGL backend: Reverse of rank-${o} tensor is not yet supported`);this.outputShape=t;let n=Ie("rc",o),s=`${n[o-1]} + 1 < ${this.outputShape[o-1]}`,i=`${n[o-2]} + 1 < ${this.outputShape[o-2]}`,a=At(o);o===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(n.slice())};
          if(${s}){
            result.g = ${c(n.slice())};
          }
          if(${i}) {
            result.b = ${u(n.slice())};
            if(${s}) {
              result.a = ${p(n.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(h){return m(h)}function c(h){return h[o-1]="("+h[o-1]+" + 1)",m(h)}function u(h){return h[o-2]="("+h[o-2]+" + 1)",m(h)}function p(h){return h[o-1]="("+h[o-1]+" + 1)",h[o-2]="("+h[o-2]+" + 1)",m(h)}function m(h){let d=t.map((b,C)=>f(C,h)),g=d.join(","),x=d.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${x}))`}function f(h,d){return e.indexOf(h)!==-1&&t[h]!==1?`${t[h]} - ${d[h]} - 1`:`${d[h]}`}}};function w5(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dims:s}=o,i=n.shape.length,a=y.parseAxisParam(s,n.shape);if(i===0)return Ne({inputs:{x:n},backend:e});let l=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Dy(n.shape,a):new $y(n.shape,a);return e.runWebGLProgram(l,[n],n.dtype)}var yO={kernelName:Mi,backendName:"webgl",kernelFunc:w5};var Ry=class{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let o=t[1],n=t[2];this.outputShape=t;let s="";typeof e=="number"?s=`float outputValue = ${e.toFixed(2)};`:s=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${s}
          if(coordX >= 0 && coordX < ${n} && coordY >= 0 && coordY < ${o}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var bO={kernelName:Nc,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:o}=r,{radians:n,fillValue:s,center:i}=t,a=e,l=new Ry(o.shape,s),[c,u]=S.getImageCenter(i,o.shape[1],o.shape[2]),p=[[c,u,Math.sin(n),Math.cos(n)]];return a.runWebGLProgram(l,[o],o.dtype,p)}};var C5=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,v5=ht({opSnippet:C5}),wO={kernelName:ms,backendName:"webgl",kernelFunc:v5};var S5="return inversesqrt(x);",I5=ht({opSnippet:S5,cpuKernelImpl:JD}),CO={kernelName:fs,backendName:"webgl",kernelFunc:I5};var wa=class{constructor(t,e,o,n,s,i,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;let c=At(s.length),u=At(i.length),p="";o===1?p="i":o===2&&(p="i, j");let m=`getIndices(${p})`,f="";n===1?f="i":n===2&&(f="i, coords[1]");let h=`getUpdates(${f})`,d="";l&&(d="coords[0], coords[1]");let g=`getDefaultValue(${d})`,x=e>1?"strides[j]":"strides";this.userCode=`
        ${c} strides = ${c}(${s});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${m});
              flattenedIndex += index * ${x};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${h};
              found = true;
            }
          }
          setOutput(mix(${g}, sum, float(found)));
        }
      `}};var _y=class{constructor(t,e,o,n,s,i,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;let c=At(s.length),u=At(i.length),p="";o===1?p="i":o===2&&(p="i, j");let m=`getIndices(${p})`,f="";n===1?f="i":n===2&&(f="i, coords[1]");let h=`getUpdates(${f})`,d="";l&&(d="coords[0], coords[1]");let g=`getDefaultValue(${d})`,x=e>1?"strides[j]":"strides",b=e>1?"strides[j + 1]":"strides";this.userCode=`
        ${c} strides = ${c}(${s});

        void main() {
          ${u} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${t}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${e}; j+=2) {
              ivec4 index = round(${m});
              flattenedIndex += index.xz * ${x};
              if (j + 1 < ${e}) {
                flattenedIndex += index.yw * ${b};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${h};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${g}, sum, found));
        }
      `}};function N5(r){let{inputs:t,backend:e,attrs:o}=r,{indices:n,updates:s}=t,{shape:i}=o,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:p}=S.calculateShapes(s,n,i),m=[p/c,c];if(p===0)return e.makeTensorInfo(i,n.dtype);let f=et({inputs:{x:n},backend:e,attrs:{shape:[l,a]}}),h=et({inputs:{x:s},backend:e,attrs:{shape:[l,c]}}),d=e.makeTensorInfo([],"float32",new Float32Array([0])),g;P().getBool("WEBGL_PACK")?g=new _y(l,a,f.shape.length,h.shape.length,u,m):g=new wa(l,a,f.shape.length,h.shape.length,u,m);let x=e.runWebGLProgram(g,[h,f,d],h.dtype),b=et({inputs:{x},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(d),b}var vO={kernelName:yh,backendName:"webgl",kernelFunc:N5};var Fy=class{constructor(t,e,o,n){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,o];let s="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,a=P().getNumber("WEBGL_VERSION")===2?s:i,l=n==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function T5(r){let{inputs:t,backend:e,attrs:o}=r,{sortedSequence:n,values:s}=t,{side:i}=o,a=new Fy(n.shape[0],n.shape[1],s.shape[1],i),l=[[n.shape[1]]];return e.runWebGLProgram(a,[n,s],"int32",l)}var SO={kernelName:wh,backendName:"webgl",kernelFunc:T5};var Oy=class{constructor(t,e,o){this.variableNames=["c","a","b"],this.outputShape=e;let n,s;if(o>4)throw Error(`Where for rank ${o} is not yet supported`);if(o===1)s="resRC",n="resRC";else{let a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],c=[];for(let u=0;u<e.length;u++)c.push(`${a[u]}`),u<t&&l.push(`${a[u]}`);n=l.join(),s=c.join()}let i=At(o);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${n});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function k5(r){let{inputs:t,backend:e}=r,{condition:o,t:n,e:s}=t,i=new Oy(o.shape.length,n.shape,n.shape.length);return e.runWebGLProgram(i,[o,n,s],$e(n.dtype,s.dtype))}var IO={kernelName:Vi,backendName:"webgl",kernelFunc:k5};var E5=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${S.SELU_SCALEALPHA};
  float scale = ${S.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,A5=ht({opSnippet:E5}),NO={kernelName:hs,backendName:"webgl",kernelFunc:A5};var $5=Fo+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,D5=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,R5=ht({opSnippet:$5,packedOpSnippet:D5,cpuKernelImpl:tR}),TO={kernelName:ys,backendName:"webgl",kernelFunc:R5};var _5=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,F5=ht({opSnippet:_5}),kO={kernelName:xs,backendName:"webgl",kernelFunc:F5};var O5=Fo+`
  return sin(x);
`,L5=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Qr}
  return result;
`,P5=ht({opSnippet:O5,packedOpSnippet:L5}),EO={kernelName:ds,backendName:"webgl",kernelFunc:P5};var z5=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,B5=ht({opSnippet:z5}),AO={kernelName:gs,backendName:"webgl",kernelFunc:B5};var M5=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,V5=ht({opSnippet:M5}),$O={kernelName:bs,backendName:"webgl",kernelFunc:V5};var G5=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:s,paddings:i}=o;y.assert(n.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let a=s.reduce((x,b)=>x*b),l=[[0,0]];l.push(...i);for(let x=1+s.length;x<n.shape.length;++x)l.push([0,0]);let c=[],u=gv({inputs:{x:n},backend:e,attrs:{paddings:l,constantValue:0}}),p=S.getReshaped(u.shape,s,a,!1),m=S.getPermuted(p.length,s.length,!1),f=S.getReshapedPermuted(u.shape,s,a,!1),h=et({inputs:{x:u},backend:e,attrs:{shape:p}}),d=ue({inputs:{x:h},backend:e,attrs:{perm:m}}),g=et({inputs:{x:d},backend:e,attrs:{shape:f}});return c.push(u),c.push(h),c.push(d),c.forEach(x=>e.disposeIntermediateTensorInfo(x)),g},DO={kernelName:Wi,backendName:"webgl",kernelFunc:G5};function U5(r){let{inputs:t,backend:e}=r,{indices:o,values:n,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(o.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${o.shape}`);if(n.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${n.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let a=e.readSync(o.dataId),l=e.readSync(n.dataId),c=e.readSync(s.dataId),u=e.readSync(i.dataId)[0],[p,m,f,h,d]=rR(a,o.shape,o.dtype,l,n.dtype,c,u);return[e.makeTensorInfo(m,o.dtype,p),e.makeTensorInfo([m[0]],n.dtype,f),e.makeTensorInfo([h.length],"bool",new Uint8Array(h.map(g=>Number(g)))),e.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}var RO={kernelName:Ch,backendName:"webgl",kernelFunc:U5};function W5(r){let{inputs:t,backend:e}=r,{inputIndices:o,inputShape:n,newShape:s}=t;if(o.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${o.shape}`);if(n.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${n.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(e.readSync(n.dataId)),a=e.readSync(o.dataId),l=Array.from(e.readSync(s.dataId)),[c,u,p]=oR(a,o.shape,o.dtype,i,l);return[e.makeTensorInfo(u,o.dtype,c),e.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}var _O={kernelName:vh,backendName:"webgl",kernelFunc:W5};function H5(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:s}=t;if(o.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${n.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let i=e.readSync(o.dataId),a=e.readSync(n.dataId),l=e.readSync(s.dataId),[c,u]=gx(i,o.shape,o.dtype,a,l,!0);return e.makeTensorInfo(u,o.dtype,c)}var FO={kernelName:Sh,backendName:"webgl",kernelFunc:H5};function q5(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:s}=t;if(o.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${n.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let i=e.readSync(o.dataId),a=e.readSync(n.dataId),l=e.readSync(s.dataId),[c,u]=gx(i,o.shape,o.dtype,a,l);return e.makeTensorInfo(u,o.dtype,c)}var OO={kernelName:Ih,backendName:"webgl",kernelFunc:q5};function K5(r){let{inputs:t,backend:e,attrs:o}=r,{sparseIndices:n,sparseValues:s,defaultValue:i}=t,{outputShape:a}=o,{sliceRank:l,numUpdates:c,sliceSize:u,strides:p,outputSize:m}=S.calculateShapes(s,n,a),f=!1;if(s.dtype==="string"){let x=e.bufferSync(n),b=e.bufferSync(s),C=y.decodeString(e.readSync(i.dataId)[0]),w=QD(x,b,a,m,u,c,l,p,C,f);return e.makeTensorInfo(a,w.dtype,w.values)}let h=new wa(c,l,n.shape.length,s.shape.length,p,[m,1],f),d=e.runWebGLProgram(h,[s,n,i],s.dtype),g=et({inputs:{x:d},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(d),g}var LO={kernelName:Nh,backendName:"webgl",kernelFunc:K5};function j5(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{numOrSizeSplits:s,axis:i}=o,a=y.parseAxisParam(i,n.shape)[0],l=S.prepareSplitSize(n,s,a),c=n.shape.length,u=new Array(c).fill(0),p=n.shape.slice();return l.map(m=>{let f=[...p];f[a]=m;let h=en({inputs:{x:n},backend:e,attrs:{begin:u,size:f}});return u[a]+=m,h})}var PO={kernelName:Hi,backendName:"webgl",kernelFunc:j5};var zO="return sqrt(x);",X5=ht({opSnippet:zO,packedOpSnippet:zO,cpuKernelImpl:nR}),BO={kernelName:ws,backendName:"webgl",kernelFunc:X5};var Y5="return x * x;",Z5=ht({opSnippet:Y5}),MO={kernelName:wc,backendName:"webgl",kernelFunc:Z5};var VO="return (a - b) * (a - b);",J5=qt({opSnippet:VO,packedOpSnippet:VO}),GO={kernelName:Cs,backendName:"webgl",kernelFunc:J5};function Q5(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t;if(n.dtype!=="string")throw new Error("Input must be of datatype string");let s=e.readSync(n.dataId),i=S.fromUint8ToStringArray(s),a=sR(i,"string",o);return e.makeTensorInfo(n.shape,"string",a)}var UO={kernelName:dp,backendName:"webgl",kernelFunc:Q5};function tY({inputs:r,attrs:t,backend:e}){let{x:o}=r,n=Le+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new rr(o.shape,n);return e.runWebGLProgram(s,[o],o.dtype)}var WO={kernelName:Ns,backendName:"webgl",kernelFunc:tY};var Ly=class{constructor(t,e,o){this.variableNames=["x"],this.outputShape=o;let n=o.length,s=At(o.length),i=At(o.length),a="";if(n===1)a="coords * strides + begin";else{let l=0;a=o.map((c,u)=>(l++,o.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${l-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${t});
      ${s} strides = ${s}(${e});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}};function eY(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:s,end:i,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:p,shrinkAxisMask:m}=o,{finalShapeSparse:f,finalShape:h,isIdentity:d,sliceDim0:g,isSimpleSlice:x,begin:b,end:C,strides:w}=Ue.sliceInfo(n.shape,s,i,a,l,c,u,p,m),v;if(d)v=et({inputs:{x:n},backend:e,attrs:{shape:h}});else if(g||x){y.assert(n.shape.length>=1,()=>`Input must have rank at least 1, got: ${n.shape.length}`);let A=Ue.computeOutShape(b,C,w),$=en({inputs:{x:n},backend:e,attrs:{begin:b,size:A}});v=et({inputs:{x:$},backend:e,attrs:{shape:h}}),e.disposeIntermediateTensorInfo($)}else if(e.shouldExecuteOnCPU([n])){let $=e.readSync(n.dataId),F=dt(n.shape,n.dtype,$),L=iR(f,F,w,b);v=e.makeTensorInfo(h,n.dtype,L.values)}else{let $=new Ly(b,w,f);v=e.runWebGLProgram($,[n],n.dtype)}let E=et({inputs:{x:v},backend:e,attrs:{shape:h}});return e.disposeIntermediateTensorInfo(v),E}var HO={kernelName:Cc,backendName:"webgl",kernelFunc:eY};function rY(r){let{inputs:t,backend:e,attrs:o}=r,{separator:n,nGramWidths:s,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:c}=o,{data:u,dataSplits:p}=t,m=e.readSync(u.dataId),f=e.readSync(p.dataId),[h,d]=aR(m,f,n,s,i,a,l,c);return[e.makeTensorInfo([h.length],"string",h),e.makeTensorInfo(p.shape,"int32",d)]}var qO={kernelName:Th,backendName:"webgl",kernelFunc:rY};function oY(r){let{inputs:t,backend:e,attrs:o}=r,{skipEmpty:n}=o,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let a=e.readSync(s.dataId),l=e.readSync(i.dataId)[0],[c,u,p]=lR(a,l,n),m=u.length;return[e.makeTensorInfo([m,2],"int32",c),e.makeTensorInfo([m],"string",u),e.makeTensorInfo([2],"int32",new Int32Array(p))]}var KO={kernelName:kh,backendName:"webgl",kernelFunc:oY};function nY(r){let{inputs:t,backend:e,attrs:o}=r,{numBuckets:n}=o,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(n<=0)throw new Error("Number of buckets must be at least 1");let i=e.readSync(s.dataId),a=cR(i,n);return e.makeTensorInfo(s.shape,"int32",a)}var jO={kernelName:Eh,backendName:"webgl",kernelFunc:nY};var sY="return tan(x);",iY=ht({opSnippet:sY}),XO={kernelName:Ss,backendName:"webgl",kernelFunc:iY};var aY=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,lY=ht({opSnippet:aY}),YO={kernelName:Is,backendName:"webgl",kernelFunc:lY};function cY(r){let{inputs:t,backend:e,attrs:o}=r,{tensor:n,indices:s,updates:i}=t,{}=o,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:p}=S.calculateShapes(i,s,n.shape),m=[p/c,c];if(p===0)return e.makeTensorInfo(n.shape,s.dtype);let f=et({inputs:{x:s},backend:e,attrs:{shape:[l,a]}}),h=et({inputs:{x:i},backend:e,attrs:{shape:[l,c]}}),d=et({inputs:{x:n},backend:e,attrs:{shape:m}}),g=new wa(l,a,f.shape.length,h.shape.length,u,m,!1,!0),x=e.runWebGLProgram(g,[h,f,d],d.dtype),b=et({inputs:{x},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(x),b}var ZO={kernelName:bh,backendName:"webgl",kernelFunc:cY};var Py=class{constructor(t,e){this.variableNames=["A"];let o=new Array(t.length);for(let i=0;i<o.length;i++)o[i]=t[i]*e[i];this.outputShape=o,this.rank=o.length;let n=At(this.rank),s=uY(t);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function uY(r){let t=r.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${r[0]})`;let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],o=[];for(let n=0;n<r.length;n++)o.push(`imod(${e[n]}, ${r[n]})`);return o.join()}function yv(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reps:s}=o;if(n.dtype==="string"||n.shape.length>5){let l=e.readSync(n.dataId),c=n.dtype==="string"?l.map(m=>y.decodeString(m)):l,u=dt(n.shape,n.dtype,c),p=pR(u,s);return e.makeTensorInfo(p.shape,p.dtype,p.values)}let i=new Py(n.shape,s);return e.runWebGLProgram(i,[n],n.dtype)}var JO={kernelName:an,backendName:"webgl",kernelFunc:yv};var zy=class{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},By=class{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Fl(r,t){t!==null&&r.disposeIntermediateTensorInfo(t)}function QO(r){let t=1;for(;t<r;)t*=2;return t}function pY(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{k:s,sorted:i}=o,a=P().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=P().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=n.shape,u=c[c.length-1];if(e.shouldExecuteOnCPU([n])||u<a||s>l){let L=e.readSync(n.dataId),[M,V]=mR(L,c,n.dtype,s,i);return[e.makeTensorInfo(M.shape,M.dtype,M.values),e.makeTensorInfo(V.shape,V.dtype,V.values)]}if(s===0)return c[c.length-1]=0,[e.makeTensorInfo(c,n.dtype,[]),e.makeTensorInfo(c,"int32",[])];if(u===1)return[n,js({attrs:{shape:c,dtype:"int32",value:0},backend:e})];let p=e.texData.get(n.dataId),m=p!==null&&p.isPacked,f=m?e.unpackTensor(n):n,d=y.sizeFromShape(c)/u,g=et({inputs:{x:f},attrs:{shape:[d,u]},backend:e});m&&Fl(e,f);let x=QO(s),b=QO(u),C=null,w=()=>C===null?[g,g]:[g,C],v=(L,M,V)=>{let G=w(),W=new zy(V),K=[[u],[C===null?1:0],[Number.NEGATIVE_INFINITY],[L],[M]],J=C;C=e.runWebGLProgram(W,G,"int32",K),Fl(e,J)};for(let L=1;L<x;L*=2){let M=L*2;for(let V=L;V>=1;V/=2)v(M,V,[d,b])}for(let L=b;L>x;L/=2){let M=w(),V=new By([d,L/2]),W=[[u],[C===null?1:0],[x]],U=C;C=e.runWebGLProgram(V,M,"int32",W),Fl(e,U);let K=x/2,J=K*2;for(let q=K;q>=1;q/=2)v(J,q,C.shape)}let E=C;C=en({inputs:{x:C},backend:e,attrs:{begin:0,size:[d,s]}}),Fl(e,E);let A=pv({inputs:{x:g,indices:C},backend:e,attrs:{axis:1,batchDims:1}});Fl(e,g);let $=c.slice(0,-1);$.push(s),E=C,C=et({inputs:{x:C},attrs:{shape:$},backend:e}),Fl(e,E);let F=A;return A=et({inputs:{x:A},attrs:{shape:$},backend:e}),Fl(e,F),[A,C]}var tL={kernelName:vc,backendName:"webgl",kernelFunc:pY};var My=class{constructor(t,e,o,n,s,i){this.variableNames=["Image","Transforms"],this.outputShape=i;let a=o==="nearest"?1:2,l;switch(n){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${s});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${s});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function mY(r){let{inputs:t,backend:e,attrs:o}=r,{image:n,transforms:s}=t,{interpolation:i,fillMode:a,fillValue:l,outputShape:c}=o,[u,p,m,f]=n.shape,[h,d]=c??[p,m],g=[u,h,d,f],x=new My(p,m,i,a,l,g);return e.runWebGLProgram(x,[n,s],"float32")}var eL={kernelName:Sc,backendName:"webgl",kernelFunc:mY};function fY(r){let{inputs:t,attrs:e,backend:o}=r,{axis:n}=e,{x:s}=t;En(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=o.readSync(s.dataId),{outputValues:a,outputShape:l,indices:c}=fR(i,n,s.shape,s.dtype);return[o.makeTensorInfo(l,s.dtype,a),o.makeTensorInfo([c.length],"int32",c)]}var rL={kernelName:Ic,backendName:"webgl",kernelFunc:fY};function hY(r){let{inputs:t,backend:e,attrs:o}=r,{value:n}=t,{axis:s}=o;s<0&&(s+=n.shape.length);let i=n,a=i.shape.length,l=n.shape[s],c=new Array(a-1),u=0;for(let d=0;d<a;d++)d!==s&&(c[u++]=i.shape[d]);let p=[],m=new Array(a).fill(0),f=i.shape.slice();f[s]=1;let h=new Array(l);for(let d=0;d<h.length;d++){m[s]=d;let g=en({inputs:{x:i},backend:e,attrs:{begin:m,size:f}}),x=et({inputs:{x:g},backend:e,attrs:{shape:c}});h[d]=x,p.push(g)}return p.forEach(d=>e.disposeIntermediateTensorInfo(d)),h}var oL={kernelName:Ki,backendName:"webgl",kernelFunc:hY};var Vy=class{constructor(t,e){this.variableNames=["x","segmentIds"];let o=t.windowSize,n=t.batchSize,s=t.inSize,i=t.numSegments,a=i*Math.ceil(s/o);this.outputShape=[n,a];let l="0.0",c="sumValue",u=Math.floor(o/4)*4,p=o%4,m=`
        sumValue += dot(values, segFilter);
    `,f="";s%o>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let h="";s%o>0&&(h=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${h}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${o}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${m}
        }

        int inIdx = inOffset + ${u};
        if (${p===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${m}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${m}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${m}
        }
        setOutput(${c});
      }
    `}};function dY(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,segmentIds:s}=t,{numSegments:i}=o,a=n.shape.length,l=[],c=0,u=S.getAxesPermutation([c],a),p=n;u!=null&&(p=ue({inputs:{x:n},backend:e,attrs:{perm:u}}),l.push(p),c=S.getInnerMostAxes(1,a)[0]);let m=S.segment_util.computeOutShape(p.shape,c,i),f=y.sizeFromShape([p.shape[c]]),h=et({inputs:{x:p},backend:e,attrs:{shape:[-1,f]}});l.push(h);let d=Ga(n.dtype),g=(w,v,E,A,$)=>{let F=w.shape[0],L=w.shape[1],M=S.segment_util.segOpComputeOptimalWindowSize(L,$),V={windowSize:M,inSize:L,batchSize:F,numSegments:$},G=new Vy(V,v),W=e.compileAndRun(G,[w,E],A);if(l.push(W),W.shape[1]===$)return W;let U=xv({backend:e,attrs:{start:0,stop:$,step:1,dtype:"float32"}}),K=yv({inputs:{x:U},backend:e,attrs:{reps:[L/M]}});return l.push(U),l.push(K),g(W,v,K,A,$)},x=g(h,"unsortedSegmentSum",s,d,i),b=et({inputs:{x},backend:e,attrs:{shape:m}}),C=b;if(u!=null){l.push(b);let w=S.getUndoAxesPermutation(u);C=ue({inputs:{x:C},backend:e,attrs:{perm:w}})}return l.forEach(w=>e.disposeIntermediateTensorInfo(w)),C}var nL={kernelName:ji,backendName:"webgl",kernelFunc:dY};var gY=[MR,GR,UR,WR,qR,KR,jR,XR,JR,QR,t_,e_,r_,o_,n_,s_,i_,a_,l_,c_,u_,m_,f_,h_,d_,b_,C_,v_,$R,I_,T_,k_,E_,A_,$_,D_,R_,__,F_,O_,z_,B_,M_,V_,G_,U_,W_,H_,q_,K_,j_,X_,Y_,Z_,J_,Q_,eF,rF,oF,nF,iF,aF,lF,cF,uF,pF,mF,fF,hF,AR,dF,N_,gF,xF,yF,DR,bF,wF,CF,vF,SF,IF,NF,TF,kF,EF,$F,DF,RF,_F,FF,OF,PF,BF,MF,VF,GF,UF,jF,FR,XF,YF,ZF,JF,g_,QF,rO,oO,nO,sO,RR,iO,aO,lO,cO,uO,x_,WF,pO,mO,fO,LR,hO,dO,gO,xO,yO,bO,wO,CO,vO,SO,IO,NO,TO,kO,EO,AO,p_,KF,$O,DO,RO,_O,FO,OO,LO,PO,BO,MO,GO,UO,WO,HO,qO,KO,jO,qF,zR,XO,YO,ZO,JO,tL,eL,BR,rL,oL,nL,tO];for(let r of gY)$h(r);function sL(r){switch(r){case"small molecule":return"icon icon-conceptual icon-chemical";case"protein":case"peptide":return"icon icon-conceptual icon-structures-3d";case"stable complex":return"icon icon-conceptual icon-systems";case"molecule set":return"icon icon-generic icon-math";case"single stranded deoxyribonucleic acid":case"double stranded deoxyribonucleic acid":case"small nuclear rna":case"small nucleolar rna":case"ribosomal rna":case"messenger rna":case"transfer rna":case"signal recognition particle rna":case"ribonucleic acid":case"nucleic acid":case"long non-coding ribonucleic acid":return"icon icon-conceptual icon-dna"}}function Gy(r){switch(yY(r)){case"Homo sapiens":return"icon icon-species icon-human";case"Mus musculus":return"icon icon-species icon-mouse";case"Schizosaccharomyces pombe":case"Saccharomyces cerevisiae":return"icon icon-species icon-yeast";case"Escherichia coli":case"Pseudomonas aeruginosa":case"Klebsiella pneumoniae":case"Chlamydomonas reinhardtii":return"icon icon-species icon-ecoli";case"Rattus norvegicus":return"icon icon-species icon-rat";case"Caenorhabditis elegans":return"icon icon-species icon-c-elegans";case"Gallus gallus":return"icon icon-species icon-chicken";case"Drosophila melanogaster":return"icon icon-species icon-fly";case"Bos taurus":return"icon icon-species icon-cow";case"Oryctolagus cuniculus":return"icon icon-species icon-rabbit";case"Ovis aries":return"icon icon-species icon-sheep";case"Xenopus laevis":return"icon icon-species icon-frog";case"Canis lupus":case"Canis familiaris":return"icon icon-species icon-dog";case"Vibrio cholerae":return"assets/images/EMBL_Species_Vibrio_cholerae.svg";case"Crotalus durissus":case"Crotalus durissus terrificus":return"assets/images/EMBL_Species_RattleSnake.svg";case"Sus scrofa":return"icon icon-species icon-pig";case"Torpedo marmorata":case"Tetronarce californica":return"icon icon-species icon-ray";case"Lymnaea stagnalis":return"icon icon-species icon-snail";case"Arabidopsis thaliana":return"icon icon-species icon-brassica";case"Danio rerio":return"icon icon-species icon-zebrafish";case"Severe acute":case"Human SARS":case"SARS-CoV-2":case"Middle East":case"Human betacoronavirus":return"icon icon-species icon-virus"}return""}function yY(r){return(r||"?").split(";")[0].split(" ").slice(0,2).join(" ")}function bY(r,t){let e=new Map;return r.forEach(o=>{let n=o[t];e.has(n)||e.set(n,[]),e.get(n).push(o)}),e}function iL(r,t,e){let o=bY(r,t);return Array.from(o.keys()).sort(e).map(s=>o.get(s))}var Uy=class{constructor(t,e){Z(this,"_interactor");Z(this,"_hidden");Z(this,"_isSubComplex");Z(this,"_expanded");Z(this,"_subComponents");Z(this,"_timesAppearing");Z(this,"_indexAppearing");this._interactor=t,this._isSubComplex=e,this._hidden=!1,this._expanded=!1,this._timesAppearing=0,this._indexAppearing=0,this._subComponents=null}get identifier(){return this._interactor.identifier}get name(){return this._interactor.name}get interactorType(){return this._interactor.interactorType}get organismName(){return this._interactor.organismName}get identifierLink(){return this._interactor.identifierLink}get subComponents(){return this._subComponents}get complexComponents(){return this._subComponents}get hidden(){return this._hidden}get expanded(){return this._isSubComplex&&!!this._subComponents&&this._expanded}get hasSubComponents(){return this._isSubComplex&&!!this._subComponents&&this._subComponents.length>0}get expandTooltip(){return this.name+" components"}get expandLabel(){return"Components"}get timesAppearing(){return this._timesAppearing}get indexAppearing(){return this._indexAppearing}set subComponents(t){this._subComponents=t}set hidden(t){this._hidden=t}set expanded(t){this._expanded=t}set timesAppearing(t){this._timesAppearing=t}set indexAppearing(t){this._indexAppearing=t}componentIds(){return[this.identifier]}get orthologsGroup(){for(let t of this._interactor.xrefs)if(t&&t.database==="panther")return t;return null}};var Wy=class{constructor(t,e){Z(this,"_orthologXref");Z(this,"_hidden");Z(this,"_expanded");Z(this,"_subComponents");Z(this,"_timesAppearing");Z(this,"_indexAppearing");this._orthologXref=t,this._subComponents=e,this._hidden=!1,this._expanded=!1,this._timesAppearing=0,this._indexAppearing=0}get identifier(){return this._orthologXref.identifier}get name(){let t;for(let o=0;o<this._subComponents.length;o++){if(this._subComponents[o].organismName.includes("Homo sapiens"))return t=this._subComponents[o].name,"Ortholog Gene: "+t;this._subComponents[o].timesAppearing>0&&(t=this._subComponents[o].name)}return"Ortholog Gene: "+t}get interactorType(){let t=new Set(this._subComponents.map(e=>e.interactorType));return t.size===1?t.values().next().value:"Multiple Types"}get organismName(){let t=new Set(this._subComponents.map(e=>e.organismName));return t.size===1?t.values().next().value:"Multiple Organisms"}get identifierLink(){return"https://www.pantherdb.org/genes/geneList.do?searchType=basic&fieldName=all&listType=1&fieldValue="+this._orthologXref.identifier+"&organism=all"}get subComponents(){return this._subComponents}get complexComponents(){return[]}get hidden(){return this._hidden}get expanded(){return!!this._subComponents&&this._expanded}get hasSubComponents(){return!!this._subComponents&&this._subComponents.length>0}get expandTooltip(){return this.expandLabel}get expandLabel(){return"Ortholog group members"}get timesAppearing(){return this._timesAppearing}get indexAppearing(){return this._indexAppearing}set hidden(t){this._hidden=t}set expanded(t){this._expanded=t}set timesAppearing(t){this._timesAppearing=t}set indexAppearing(t){this._indexAppearing=t}componentIds(){return this.subComponents.map(t=>t.identifier)}get orthologsGroup(){return this._orthologXref}};var wY=function(r,t,e,o){var n=arguments.length,s=n<3?t:o===null?o=Object.getOwnPropertyDescriptor(t,e):o,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")s=Reflect.decorate(r,t,e,o);else for(var a=r.length-1;a>=0;a--)(i=r[a])&&(s=(n<3?i(s):n>3?i(t,e,s):i(t,e))||s);return n>3&&s&&Object.defineProperty(t,e,s),s},Hy,qy=(Hy=class{constructor(t){Z(this,"complexPortalService");Z(this,"complexSearch",Tt());Z(this,"interactors",Tt());Z(this,"componentsSorting",Tt());Z(this,"componentsGrouping",Tt());Z(this,"organismIconDisplay",Tt());Z(this,"interactorTypeDisplay",Tt());Z(this,"idDisplay",Tt());Z(this,"canAddComplexesToBasket",Tt());Z(this,"canRemoveComplexesFromBasket",Tt());Z(this,"onComplexRemovedFromBasket",Qs());Z(this,"navigatorComponentsWithoutGrouping",wr(()=>this.createNavigatorComplexes(this.complexSearch().elements,this.interactors())));Z(this,"navigatorComponentsGroupedByOrthologs",wr(()=>this.createOrthologGroups(this.navigatorComponentsWithoutGrouping())));Z(this,"navigatorComponents",wr(()=>this.componentsGrouping()===ei.ORTHOLOGY?this.navigatorComponentsGroupedByOrthologs():this.navigatorComponentsWithoutGrouping()));Z(this,"sortedComplexes",wr(()=>this.sortComplexBySimilarityClustering(this.complexSearch().elements,this.navigatorComponents())));this.complexPortalService=t}createNavigatorComplexes(t,e){let o=[];for(let n of e){let s=n.interactorType==="stable complex",i=new Uy(n,s);s&&this.loadSubComponents(i,t).subscribe(a=>i.subComponents=a),o.push(i)}return o}createOrthologGroups(t){let e=this.classifyInteractorsByOrthology(t),o=e.filter(a=>!!a.orthologsGroup),n=e.filter(a=>!a.orthologsGroup),s=o.reduce((a,l)=>{let c=l.orthologsGroup;return a[c.identifier]||(a[c.identifier]=[]),a[c.identifier].push(l),a},{}),i=[];for(let[a,l]of Object.entries(s)){let c=l[0].orthologsGroup,u=new Wy(c,l);i.push(u)}return i.push(...n),i}loadSubComponents(t,e){let o=e.find(n=>n.complexAC===t.identifier);return o?Tv(o.interactors):this.complexPortalService.getSimplifiedComplex(t.identifier).pipe(kv(n=>n?.interactors))}classifyInteractorsByOrthology(t){return t.sort((e,o)=>e.orthologsGroup?.identifier<o.orthologsGroup?.identifier?-1:e.orthologsGroup?.identifier>o.orthologsGroup?.identifier?1:0)}calculateSimilarity(t,e,o){if(t===e)return 1;let n=this.getComponents(t,o),s=this.getComponents(e,o);return n.intersection(s).size/n.union(s).size}getComponents(t,e){return(!t.componentAcs||t.componentAcs.size===0)&&(t.componentAcs=new Set(e.filter(o=>Lo(t,o.componentIds(),e)).map(o=>o.identifier))),t.componentAcs}sortComplexBySimilarityClustering(t,e){let o=t;return o.forEach(n=>{n.componentAcs&&n.componentAcs.clear()}),e&&e&&e.length>0&&(o=iL(t,"predictedComplex",(s,i)=>s-i).flatMap(s=>{let i=new Array(s.length).fill(null).map(a=>new Array(s.length).fill(null));return s.forEach((a,l)=>s.forEach((c,u)=>{l>=u&&(i[l][u]=this.calculateSimilarity(a,c,e),i[u][l]=i[l][u])})),this.getSortedIndexFromChainedSimilarity(ia(i)).map(a=>s[a])})),e.forEach(n=>{n.indexAppearing=o.findIndex(s=>s.componentAcs?.has(n.identifier))||0}),o}getSortedIndexFromChainedSimilarity(t){let e=[],o=oo(t.sum(0)).arraySync();e.push(o);let n=new Set;for(let s=1;s<t.shape[0];s++){let i=t.bufferSync();for(let l=0;l<t.shape[0];l++)i.set(-1/0,l,o);t=i.toTensor();let a=t.gather([o]).arraySync()[0];o=oo(a).arraySync(),a.forEach((l,c)=>{l>0&&n.add(c)}),a[o]===0&&(n.size!==0?o=n.values().next().value:o=oo(t.sum(0)).arraySync()),e.push(o),n.delete(o)}return e}},Z(Hy,"ctorParameters",()=>[{type:_v}]),Z(Hy,"propDecorators",{complexSearch:[{type:wt,args:[{isSignal:!0,alias:"complexSearch",required:!1,transform:void 0}]}],interactors:[{type:wt,args:[{isSignal:!0,alias:"interactors",required:!1,transform:void 0}]}],componentsSorting:[{type:wt,args:[{isSignal:!0,alias:"componentsSorting",required:!1,transform:void 0}]}],componentsGrouping:[{type:wt,args:[{isSignal:!0,alias:"componentsGrouping",required:!1,transform:void 0}]}],organismIconDisplay:[{type:wt,args:[{isSignal:!0,alias:"organismIconDisplay",required:!1,transform:void 0}]}],interactorTypeDisplay:[{type:wt,args:[{isSignal:!0,alias:"interactorTypeDisplay",required:!1,transform:void 0}]}],idDisplay:[{type:wt,args:[{isSignal:!0,alias:"idDisplay",required:!1,transform:void 0}]}],canAddComplexesToBasket:[{type:wt,args:[{isSignal:!0,alias:"canAddComplexesToBasket",required:!1,transform:void 0}]}],canRemoveComplexesFromBasket:[{type:wt,args:[{isSignal:!0,alias:"canRemoveComplexesFromBasket",required:!1,transform:void 0}]}],onComplexRemovedFromBasket:[{type:br,args:["onComplexRemovedFromBasket"]}]}),Hy);qy=wY([Fe({selector:"cp-table-structure",template:Vv,styles:[Gv]})],qy);var aL=`<div class="Complex-navigator">
  <table class="table CN-table">
    <!-- When table is not overflowing -->
    @if (complexes().length<=6) {
      <thead class="tableHead">
        <tr>
          @if (isComponentsSortingSet()) {
            <th class="spaceHolderSorting"></th>
          }
          <th class="interactorsHeader horizontal">
            Components
          </th>
          @for (complex of complexes(); track complex.complexAC) {
            <th class="horizontal" [class.predicted]="complex.predictedComplex">
              <div>
                <a [routerLink]="['/complex', complex.complexAC]"
                  target="_blank">
                  <div>
                    <span [matTooltip]="complex.complexName+ ' - '+ complex.complexAC + ' - ' + complex.organismName" class="horizontal-label">
                      <div class="line"></div>
                      <i class="{{iconOrganism(complex.organismName)}}"></i>
                      <i class="icon icon-generic small" data-icon="x"></i>
                      {{ complex.complexName }}
                    </span>
                  </div>
                </a>
              </div>
              <div class="basketButton">
                <a class="button" (click)="toggleBasket(complex)">
                  <i class="icon icon-common" [attr.data-icon]="isInBasket(complex.complexAC) ? '\uF1F8':'\uF217'"></i>
                </a>
              </div>
            </th>
          }
        </tr>
      </thead>
    }
    <!-- When table is overflowing -->
    @if (complexes().length > 6) {
      <thead class="tableHeadOverflow"
        [ngClass]="isComponentsSortingSet() ? 'tableHeadOverflowWithSorting' : 'tableHeadOverflow'">
        <tr [style.--cols]="complexes().length"
          [style.--intHeader]="isComponentsSortingSet() ? '256px':''"
          [style.--sizeSpaceHolder]="'185px'">
          <th class="spaceHolderHeaderOverflow"
            [style]="isComponentsSortingSet() ? 'min-width: 256px; max-width: 256px;':''">
          </th>
          @for (complex of complexes(); track complex.complexAC) {
            <th class="rotate"
              [class.predicted]="complex.predictedComplex"
              [style.--cols]="complexes().length">
              <a [routerLink]="['/complex', complex.complexAC]"
                [matTooltip]="complex.complexName+ ' - '+ complex.complexAC"
                target="_blank">
                <div>
                  <span>
                    <div class="tilted-label">
                      <i class="icon icon-generic small" data-icon="x"></i>
                      {{ complex.complexName }}
                    </div>
                  </span>
                </div>
              </a>
            </th>
          }
          <div class="spaceHolder" [class.predicted]="anyPredictedComplex()"></div>
        </tr>
        <!-- icons row -->
        <tr [style.--cols]="complexes().length"
          [style.--intHeader]="isComponentsSortingSet() ? '256px':''"
          [style.--sizeSpaceHolder]="'185px'">
          <th class="interactorsHeader overflow"
            [style]="isComponentsSortingSet() ? 'min-width: 256px; max-width: 256px;':''">
            Components
          </th>
          @for ( complex of complexes(); track  complex.complexAC) {
            <th class="iconOrganism" [class.predicted]="complex.predictedComplex">
              <div>
                @if (isInBasket(complex.complexAC)) {
                  <a class="button" (click)="toggleBasket(complex)" [matTooltip]="'Remove from basket'">
                    <i class="icon icon-common" data-icon="\uF1F8"></i>
                  </a>
                } @else {
                  <a class="button" (click)="toggleBasket(complex)" [matTooltip]="'Add to basket'">
                    <i class="icon icon-common" data-icon="\uF217"></i>
                  </a>
                }
              </div>
              <div>
                <i class="{{iconOrganism(complex.organismName)}}" [matTooltip]="complex.organismName | species"></i>
              </div>
            </th>
          }
          <div class="spaceHolder" [class.predicted]="anyPredictedComplex()"></div>
        </tr>
      </thead>
    }
  </table>
</div>


`;var lL=`.CN-table{transform:rotateX(180deg)}thead{border:0;background-color:#fff;border-right:0 solid white;overflow:scroll}.CN-table{clip-path:fill-box;overflow:scroll}.spaceHolderSorting{width:3ch;border-bottom:3px solid var(--primary)}.spaceHolderHeaderOverflow{min-width:230px;max-width:230px;position:sticky;left:0;z-index:4;color:var(--primary);background-color:var(--on-primary);padding-top:173px;text-align:right}.iconOrganism{position:sticky;text-align:center;background-color:var(--primary);color:var(--on-primary);border-left:1px solid white;font-size:medium;height:60px}.tilted-label{text-overflow:ellipsis;width:28ch;white-space:nowrap;overflow:hidden}.CN-table .tableHeadOverflow tr{--cols: 1;--intHeader: 230px;--parentWidth: 100%;--sizeSpaceHolder: calc(var(--parentWidth) - 70px * var(--cols) - var(--intHeader));display:grid;grid-template-columns:var(--intHeader) repeat(auto-fit,70px);width:calc(var(--intHeader) + 70px * var(--cols) + var(--sizeSpaceHolder));overflow:hidden}.CN-table .tableHeadOverflowWithSorting tr{--cols: 1;--intHeader: 230px;--parentWidth: 100%;--sizeSpaceHolder: calc(var(--parentWidth) - 70px * var(--cols) - var(--intHeader));display:grid;grid-template-columns:var(--intHeader) repeat(auto-fit,70px);width:calc(var(--intHeader) + 70px * var(--cols) + var(--sizeSpaceHolder) - 3ch);overflow:hidden}.CN-table .tableHeadOverflow th.rotate{position:relative;width:350px;height:51px!important;color:var(--on-primary);font-size:14px;text-align:left;border:1px solid white;top:70px;left:-52px;display:flex;align-items:center;align-content:center;padding:0;transform:rotate(-45deg);border-collapse:collapse}.CN-table .tableHeadOverflow th.rotate a{width:100%;height:100%;align-content:center;background-color:var(--primary);padding:0 0 0 70px;border:none}.spaceHolder{width:183px;background-color:var(--primary);border-left:1px solid white}.interactorsHeader.overflow{min-width:230px;max-width:230px;width:230px;position:sticky;left:0;z-index:4;background-color:var(--on-primary);border-bottom:3px solid var(--primary);height:60px;line-height:70px;text-align:right;color:var(--primary)}.CN-table th.horizontal.interactorsHeader{padding:5px;min-width:130px;max-width:130px;font-size:medium;border-left:none;text-align:right;color:var(--primary);background-color:var(--on-primary);border-bottom:3px solid var(--primary)}.horizontal-label{text-align:center;text-overflow:ellipsis;width:90%;white-space:nowrap;overflow:hidden;margin:auto;display:block}.CN-table th.horizontal{color:#fff;background-color:var(--primary);border-left:1px solid white;min-width:80px;max-width:80px;height:35px;font-size:15px}a:visited,a{color:var(--on-primary)}.basket-icons{margin-left:5px}.button{padding:0;margin:0}.basketButton{text-align:center}
`;var SY=function(r,t,e,o){var n=arguments.length,s=n<3?t:o===null?o=Object.getOwnPropertyDescriptor(t,e):o,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")s=Reflect.decorate(r,t,e,o);else for(var a=r.length-1;a>=0;a--)(i=r[a])&&(s=(n<3?i(s):n>3?i(t,e,s):i(t,e))||s);return n>3&&s&&Object.defineProperty(t,e,s),s},Ky,jy=(Ky=class{constructor(t){Z(this,"basketService");Z(this,"complexes",Tt());Z(this,"componentsSorting",Tt());Z(this,"onComplexRemovedFromBasket",Qs());this.basketService=t}anyPredictedComplex(){return this.complexes().some(t=>t.predictedComplex)}isComponentsSortingSet(){return this.componentsSorting()===mr.TYPE||this.componentsSorting()===mr.ORGANISM}iconOrganism(t){return Gy(t)}toggleBasket(t){this.isInBasket(t.complexAC)?this.removeComplex(t.complexAC):this.saveComplex(t)}saveComplex(t){this.basketService.saveInBasket(t)}removeComplex(t){this.basketService.deleteFromBasket(t),this.onComplexRemovedFromBasket.emit(t)}isInBasket(t){return this.basketService.isInBasket(t)}},Z(Ky,"ctorParameters",()=>[{type:Rv}]),Z(Ky,"propDecorators",{complexes:[{type:wt,args:[{isSignal:!0,alias:"complexes",required:!1,transform:void 0}]}],componentsSorting:[{type:wt,args:[{isSignal:!0,alias:"componentsSorting",required:!1,transform:void 0}]}],onComplexRemovedFromBasket:[{type:br,args:["onComplexRemovedFromBasket"]}]}),Ky);jy=SY([Fe({selector:"cp-table-header",template:aL,styles:[lL]})],jy);var cL=`<div class="Complex-navigator">
  <table class="interactors-table"
         [ngClass]="{'inheritedWidth': complexes().length > 6}"
         [style.--cols]="complexes().length">
    @for (interactor of navigatorComponents(); track i; let i = $index) {
      @if (!interactor.hidden) {
        <tr>
          @for (range of ranges; track range.value) {
            @if (range.start === i) {
              <td [attr.rowspan]="range.length" class="interactorSeparation"
                  [matTooltip]="componentsSorting() === NavigatorComponentSorting.ORGANISM ? (range.value | species) : range.value">
                <div class="interactorNameContainer" [style.--rowspanSize]="range.length">
                  @if (componentsSorting() === NavigatorComponentSorting.ORGANISM) {
                    {{ range.value | species:true }}
                  } @else {
                    {{ range.value }}
                  }
                </div>
              </td>
            }
          }
          <td class="interactorsColumn"
              [ngClass]="complexes().length<=6 ? 'horizontalHeader' : 'interactorsColumnFixedWidth'"
              [style]="ranges.length!=0 ? 'left:3ch':''">
            <cp-table-interactor-name
              [interactorName]="interactor.name"
              [interactorType]="interactor.interactorType"
              [interactorId]="interactor.identifier"
              [interactorOrganism]="interactor.organismName"
              [identifierLink]="interactor.identifierLink"
              [organismIconDisplay]="organismIconDisplay()"
              [interactorTypeDisplay]="interactorTypeDisplay()"
              [idDisplay]="idDisplay()"
            ></cp-table-interactor-name>
            <!-- Icon for the expandable -->
            @if (interactor.hasSubComponents) {
              <div class="container">
                <a (click)="toggleSubcomplexExpandable(i)"
                   [matTooltip]="interactor.expandTooltip">
                  {{ interactor.expandLabel }}
                  <i class="icon icon-common" data-icon="&#xf078;"
                     style="font-size:small;
                "></i>
                </a>
              </div>
            }
          </td>
          <!-- Interactors' stoichiometry -->
          @for (complex of navigatorComplexes; track complex.complex.complexAC) {
            <td class="intStoich" [ngClass]="{'intStoichFixedWidth': complexes().length > 6}"
                [class.predicted]="complex.complex.predictedComplex">
              <cp-table-main-interactor
                [complex]="complex"
                [i]="i"
                [navigatorComponents]="navigatorComponents()"
              ></cp-table-main-interactor>
            </td>
          }
          @if (complexes().length > 6) {
            <div
              [ngClass]="isComponentsSortingSet() ? 'spaceHolderWithSorting' : 'spaceHolder'"></div>
          }
        </tr>
      }
      <!-- Expandable menu for subcomplexes -->
      @if (interactor.expanded) {
        @if (!!interactor.subComponents) {
          @for (subComponent of interactor.subComponents; track subComponent; let j = $index) {
            <tr
              class="expandedRows"
              [ngClass]="getExpandedRowClass(j, interactor.subComponents.length)">
              @if (j === 0 && isComponentsSortingSet()) {
                <td [attr.rowspan]="interactor.subComponents.length" class="interactorSeparation"
                    [matTooltip]="interactor.expandTooltip"
                >
                  <div class="interactorSeparationName"
                       [style.--rowspanSize]="interactor.subComponents.length"> {{ interactor.expandTooltip }}
                  </div>
                </td>
              }
              <td class="subComponentColumn"
                  [ngClass]="complexes().length<=6 ? 'horizontalHeader' : 'interactorsColumnFixedWidth'"
                  [style]="ranges.length!=0 ? 'left:3ch':''">
                <div>
                  <cp-table-interactor-name
                    [interactorName]="subComponent.name"
                    [interactorType]="subComponent.interactorType"
                    [interactorId]="subComponent.identifier"
                    [interactorOrganism]="subComponent.organismName"
                    [identifierLink]="subComponent.identifierLink"
                    [organismIconDisplay]="organismIconDisplay()"
                    [interactorTypeDisplay]="interactorTypeDisplay()"
                    [idDisplay]="idDisplay()"
                  ></cp-table-interactor-name>
                </div>
              </td>
              @for (complex of navigatorComplexes; track complex.complex.complexAC) {
                <td class="intStoich" [ngClass]="{'intStoichFixedWidth': complexes().length > 6}">
                  <cp-table-subcomponent-interactor
                    [complex]="complex"
                    [i]="i"
                    [j]="j"
                    [navigatorComponents]="navigatorComponents()"
                  ></cp-table-subcomponent-interactor>
                </td>
              }
              @if (navigatorComplexes.length > 6) {
                <div class="spaceHolder"></div>
              }
            </tr>
          }
        }
      }
    }
  </table>
</div>
`;var uL=`table{--cols: 1;height:1px;overflow:scroll}.inheritedWidth{width:calc(200px + var(--cols) * 70px + 183px)}.interactorsColumn{position:sticky;left:0;z-index:5;height:45px;min-width:230px;max-width:230px;padding:5px;text-align:end;color:#0e6f76;font-weight:700;background:inherit}.interactorsColumnFixedWidth{width:230px}.interactorsColumn a{font-weight:400}.intStoich{height:100%;max-width:70px;min-width:70px;font-size:medium;text-align:end;z-index:1}.intStoichFixedWidth{width:70px}i:not(.small){font-size:large}tr:nth-child(2n){background-color:#f7f7f7}tr:nth-child(odd){background-color:#fff}a,a:visited{color:#0e6f76}.spaceHolder{width:183px}.spaceHolderWithSorting{width:calc(183px - 3ch)}.subComponentColumn{left:0;z-index:30;height:45px;min-width:230px;max-width:230px;padding:5px;text-align:end;color:#0e6f76;font-weight:700;background:inherit;position:sticky}.expandedRows{color:#0e6f76;position:relative}.firstExpandedRow:after{z-index:40;content:"";position:absolute;inset:-2px -1px;pointer-events:none;background:linear-gradient(180deg,#0e6f7696 0px,transparent 10px)}.lastExpandedRow:after{z-index:40;content:"";position:absolute;inset:-2px -1px;pointer-events:none;background:linear-gradient(0deg,#0e6f7696 0px,transparent 10px)}.singleExpandedRow:after{z-index:40;content:"";position:absolute;inset:-2px -1px;pointer-events:none;background:linear-gradient(180deg,#0e6f7696 0px,transparent 10px),linear-gradient(0deg,#0e6f7696 0px,transparent 10px)}.interactorSeparation{max-width:3ch;min-width:3ch;background-color:#0e6f76;border:1px solid white;overflow:hidden;width:1%;text-align:-webkit-center;position:sticky;z-index:31;left:0}.interactorNameContainer,.interactorSeparationName{--rowspanSize: 1;writing-mode:vertical-rl;transform:rotate(-180deg);font-size:small;color:#fff;line-height:.8;text-align:center;text-overflow:ellipsis;height:calc(var(--rowspanSize) * 48px);white-space:nowrap;overflow:hidden}.container{font-size:14px}.horizontalHeader{min-width:114px;max-width:114px}@supports (-webkit-hyphens:none){.interactorsColumn{height:45px!important}.intStoich{height:45px;overflow-y:visible}}
`;var TY=function(r,t,e,o){var n=arguments.length,s=n<3?t:o===null?o=Object.getOwnPropertyDescriptor(t,e):o,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")s=Reflect.decorate(r,t,e,o);else for(var a=r.length-1;a>=0;a--)(i=r[a])&&(s=(n<3?i(s):n>3?i(t,e,s):i(t,e))||s);return n>3&&s&&Object.defineProperty(t,e,s),s},Xy,Yy=(Xy=class{constructor(){Z(this,"complexes",Tt([]));Z(this,"componentsSorting",Tt());Z(this,"componentsGrouping",Tt());Z(this,"navigatorComponents",Tt());Z(this,"organismIconDisplay",Tt(!0));Z(this,"interactorTypeDisplay",Tt(!0));Z(this,"idDisplay",Tt(!0));Z(this,"navigatorComplexes");Z(this,"ranges",[]);Z(this,"timesAppearingBy",{[mr.TYPE]:new Map,[mr.ORGANISM]:new Map});Z(this,"NavigatorComponentSorting",mr);sb(()=>this.calculateTimesAppearing(this.complexes(),this.navigatorComponents())),sb(()=>this.sortNavigatorComponents(this.navigatorComponents(),this.complexes(),this.componentsSorting()))}sortNavigatorComponents(t,e,o){t&&e&&(this.classifyComponents(o),this.navigatorComplexes=this.createNavigatorComplexes(e))}classifyComponents(t){t&&this.navigatorComponents()&&this.navigatorComponents().length>0&&(t===mr.TYPE||t===mr.ORGANISM?this.classifyBy(t):this.classifyComponentsByOccurrence())}toggleSubcomplexExpandable(t){this.navigatorComponents()[t].expanded=!this.navigatorComponents()[t].expanded,this.navigatorComponents()[t].expanded?(this.collapseAllButOne(t),this.hideRowsDisplayedAsSubcomponents(t)):this.displayAllRows(),this.sortNavigatorComponents(this.navigatorComponents(),this.complexes(),this.componentsSorting())}collapseAllButOne(t){for(let e=0;e<this.navigatorComponents().length;e++)t!==e&&(this.navigatorComponents()[e].expanded=!1)}hideRowsDisplayedAsSubcomponents(t){if(this.navigatorComponents()[t].subComponents){let e=this.navigatorComponents()[t].subComponents.map(o=>o.identifier);for(let o=0;o<this.navigatorComponents().length;o++)t!==o&&(this.navigatorComponents()[o].hidden=!!e.includes(this.navigatorComponents()[o].identifier))}}displayAllRows(){for(let t=0;t<this.navigatorComponents().length;t++)this.navigatorComponents()[t].hidden=!1}createNavigatorComplexes(t){let e=[];for(let o of t)e.push(this.calculateStartAndEndIndexes(o));return e}getMinValue(t,e){return e===null?t:t===null?e:Math.min(t,e)}getMaxValue(t,e){return e===null?t:t===null?e:Math.max(t,e)}calculateStartAndEndIndexes(t){let e={complex:t,startComponentIndex:null,endComponentIndex:null,startSubComponentIndex:null,endSubComponentIndex:null};for(let o=0;o<this.navigatorComponents().length;o++)if(!this.navigatorComponents()[o].hidden){if(Lo(t,this.navigatorComponents()[o].componentIds(),this.navigatorComponents()))this.updateComponentIndexes(e,o);else if(this.navigatorComponents()[o].expanded)for(let n=0;n<this.navigatorComponents()[o].subComponents.length;n++)Lo(t,[this.navigatorComponents()[o].subComponents[n].identifier],this.navigatorComponents())&&this.updateSubcomponentIndexes(e,o,n)}return e}updateComponentIndexes(t,e){t.startComponentIndex=this.getMinValue(t.startComponentIndex,e),t.endComponentIndex=this.getMaxValue(t.endComponentIndex,e),t.startSubComponentIndex=-1;let o=this.navigatorComponents()[e];if(o.expanded)if(o.interactorType==="stable complex")t.endSubComponentIndex=o.subComponents.length-1;else for(let n=0;n<o.subComponents.length;n++)Lo(t.complex,[o.subComponents[n].identifier],this.navigatorComponents())&&this.updateSubcomponentIndexes(t,e,n)}updateSubcomponentIndexes(t,e,o){t.startComponentIndex=this.getMinValue(t.startComponentIndex,e),t.endComponentIndex=this.getMaxValue(t.endComponentIndex,e),t.startSubComponentIndex=this.getMinValue(t.startSubComponentIndex,o),t.endSubComponentIndex=this.getMaxValue(t.endSubComponentIndex,o)}compareFn(t,e){return-(e.indexAppearing-t.indexAppearing)||-(e.timesAppearing-t.timesAppearing)}classifyComponentsByOccurrence(){this.navigatorComponents().sort(this.compareFn.bind(this)),this.ranges=[]}classifyBy(t){let e=t.valueOf();this.navigatorComponents().sort((o,n)=>{let s=this.getValueOfSortingField(o,t),i=this.getValueOfSortingField(n,t);return this.timesAppearingBy[e].get(i)-this.timesAppearingBy[e].get(s)||i.localeCompare(s)||this.compareFn(o,n)}),this.calculateRangesBy(t)}calculateRangesBy(t){let e=[],o=0,n=null;for(let s=0;s<this.navigatorComponents().length;s++){this.navigatorComponents()[s].hidden||(o+=1,n===null&&(n=s));let i=this.getValueOfSortingField(this.navigatorComponents()[s],t);(!this.navigatorComponents()[s+1]||this.navigatorComponents()[s].expanded||i!==this.getValueOfSortingField(this.navigatorComponents()[s+1],t))&&(n!==null&&(e.push({value:i,start:n,length:o}),n=null),o=0)}this.ranges=e}isComponentsSortingSet(){return this.componentsSorting()==="Type"||this.componentsSorting()==="Organism"}getExpandedRowClass(t,e){return t===0?e===1?"singleExpandedRow":"firstExpandedRow":t===e-1?"lastExpandedRow":null}calculateTimesAppearing(t,e){for(let o of Object.values(this.timesAppearingBy))o.clear();for(let o of e){o.timesAppearing=0;for(let n of t)if(Lo(n,o.componentIds(),e)){o.timesAppearing=o.timesAppearing+1;for(let i of Object.keys(this.timesAppearingBy)){let a=this.timesAppearingBy[i],l=this.getValueOfSortingField(o,i);a.set(l,(a.get(l)||0)+1)}}}}getValueOfSortingField(t,e){return e===mr.TYPE?t.interactorType:e===mr.ORGANISM?t.organismName:null}},Z(Xy,"ctorParameters",()=>[]),Z(Xy,"propDecorators",{complexes:[{type:wt,args:[{isSignal:!0,alias:"complexes",required:!1,transform:void 0}]}],componentsSorting:[{type:wt,args:[{isSignal:!0,alias:"componentsSorting",required:!1,transform:void 0}]}],componentsGrouping:[{type:wt,args:[{isSignal:!0,alias:"componentsGrouping",required:!1,transform:void 0}]}],navigatorComponents:[{type:wt,args:[{isSignal:!0,alias:"navigatorComponents",required:!1,transform:void 0}]}],organismIconDisplay:[{type:wt,args:[{isSignal:!0,alias:"organismIconDisplay",required:!1,transform:void 0}]}],interactorTypeDisplay:[{type:wt,args:[{isSignal:!0,alias:"interactorTypeDisplay",required:!1,transform:void 0}]}],idDisplay:[{type:wt,args:[{isSignal:!0,alias:"idDisplay",required:!1,transform:void 0}]}]}),Xy);Yy=TY([Fe({selector:"cp-table-interactor-column",template:cL,styles:[uL]})],Yy);var pL=`<div class="container">
  <div class="nameAndIcons" [ngClass]="{inlineDisplay: interactorType()==='stable complex'}">
    @if (organismIconDisplay()) {
      <i
        class="{{interactorOrganismIcon()}}"
      [matTooltip]="interactorOrganism() | species"></i>
    }

    @if (interactorTypeDisplay()) {
      <i
        class="{{interactorTypeIcon()}}"
      [matTooltip]="interactorType()"></i>
    }

    @if (idDisplay()) {
      <div class="name" [matTooltip]="interactorName()">
        {{ interactorName() }}
      </div>
    }
    @if (idDisplay()) {
      <a
        [routerLink]="['/complex/search']"
        [queryParams]="{query: interactorId(), page: 1}"
        target="_blank">
        <i class="icon icon-functional small" data-icon="1"
        [matTooltip]="'More complexes containing ' + interactorName() "></i>
      </a>
    }

    @if (!idDisplay()) {
      <div class="nameCompact">
        @if (!idDisplay()) {
          <div class="name" [matTooltip]="'More information about ' + interactorName()">
            @if (!!identifierLink()) {
              <a [href]="identifierLink()" target="_blank" class="externalLinkContainer">
                {{ interactorName() }}
              </a>
            }
          </div>
        }
        <a [routerLink]="['/complex/search']"
          [queryParams]="{query: interactorId(), page: 1}"
          target="_blank">
          <i class="icon icon-functional small" data-icon="1"
          [matTooltip]="'More complexes containing ' + interactorName() "></i>
        </a>
      </div>
    }
  </div>
  @if (idDisplay()) {
    <cp-table-interactor-external-link
      [interactorId]="interactorId()"
      [identifierLink]="identifierLink()"
      [interactorType]="interactorType()"
      [isMainInteractor]="isMainInteractor()"
      [idDisplay]="idDisplay()"
      (externalLinkVisible)="externalLinkVisibleHandler($event)">
    </cp-table-interactor-external-link>
  }
</div>
`;var mL=`a{font-weight:700}a,a:visited{color:#0e6f76}i:not(.small){font-size:medium}.nameAndIcons{font-size:14px;display:flex;width:inherit;justify-content:flex-end}.inlineDisplay{display:flex;justify-content:flex-end}.name{width:inherit;text-overflow:ellipsis;overflow:hidden;text-wrap:nowrap;text-align:end;padding-right:5px}.nameCompact{display:inline-flex;width:-webkit-fill-available}
`;var AY=function(r,t,e,o){var n=arguments.length,s=n<3?t:o===null?o=Object.getOwnPropertyDescriptor(t,e):o,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")s=Reflect.decorate(r,t,e,o);else for(var a=r.length-1;a>=0;a--)(i=r[a])&&(s=(n<3?i(s):n>3?i(t,e,s):i(t,e))||s);return n>3&&s&&Object.defineProperty(t,e,s),s},bv,Zy=(bv=class{constructor(){Z(this,"interactorName",Tt());Z(this,"interactorType",Tt());Z(this,"interactorId",Tt());Z(this,"interactorOrganism",Tt());Z(this,"identifierLink",Tt());Z(this,"organismIconDisplay",Tt());Z(this,"interactorTypeDisplay",Tt());Z(this,"idDisplay",Tt());Z(this,"isMainInteractor",Tt());Z(this,"interactorTypeIcon",wr(()=>sL(this.interactorType())));Z(this,"interactorOrganismIcon",wr(()=>Gy(this.interactorOrganism())));Z(this,"externalLinkVisible")}externalLinkVisibleHandler(t){this.externalLinkVisible=t}},Z(bv,"propDecorators",{interactorName:[{type:wt,args:[{isSignal:!0,alias:"interactorName",required:!1,transform:void 0}]}],interactorType:[{type:wt,args:[{isSignal:!0,alias:"interactorType",required:!1,transform:void 0}]}],interactorId:[{type:wt,args:[{isSignal:!0,alias:"interactorId",required:!1,transform:void 0}]}],interactorOrganism:[{type:wt,args:[{isSignal:!0,alias:"interactorOrganism",required:!1,transform:void 0}]}],identifierLink:[{type:wt,args:[{isSignal:!0,alias:"identifierLink",required:!1,transform:void 0}]}],organismIconDisplay:[{type:wt,args:[{isSignal:!0,alias:"organismIconDisplay",required:!1,transform:void 0}]}],interactorTypeDisplay:[{type:wt,args:[{isSignal:!0,alias:"interactorTypeDisplay",required:!1,transform:void 0}]}],idDisplay:[{type:wt,args:[{isSignal:!0,alias:"idDisplay",required:!1,transform:void 0}]}],isMainInteractor:[{type:wt,args:[{isSignal:!0,alias:"isMainInteractor",required:!1,transform:void 0}]}]}),bv);Zy=AY([Fe({selector:"cp-table-interactor-name",template:pL,styles:[mL]})],Zy);var fL=`<div class="externalLinkContainer" [matTooltip]="'More information about ' + interactorId()">
  @if (externalLinkVisible) {
    <a href="{{identifierLink()}}" target="_blank" class="externalLinkContainer">
      {{ interactorId() }}
      <i class="icon icon-generic small" data-icon="x" title="More information about {{ interactorId() }}"></i>
    </a>
  }
</div>
`;var hL=`a{font-weight:400}a,a:visited{color:#0e6f76}i:not(.small){font-size:large}.externalLinkContainer{justify-content:end;grid-gap:5px;font-size:14px;line-break:anywhere;word-break:break-word}
`;var RY=function(r,t,e,o){var n=arguments.length,s=n<3?t:o===null?o=Object.getOwnPropertyDescriptor(t,e):o,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")s=Reflect.decorate(r,t,e,o);else for(var a=r.length-1;a>=0;a--)(i=r[a])&&(s=(n<3?i(s):n>3?i(t,e,s):i(t,e))||s);return n>3&&s&&Object.defineProperty(t,e,s),s},wv,Jy=(wv=class{constructor(){Z(this,"interactorId",Tt());Z(this,"identifierLink",Tt());Z(this,"interactorType",Tt());Z(this,"isMainInteractor",Tt());Z(this,"idDisplay",Tt());Z(this,"externalLinkVisible",Qs())}ngOnInit(){this.showExternalLink()}showExternalLink(){return this.isMainInteractor()&&this.interactorType()==="stable complex"?(this.externalLinkVisible.emit(!1),!1):(this.externalLinkVisible.emit(!!this.identifierLink()),!!this.identifierLink())}},Z(wv,"propDecorators",{interactorId:[{type:wt,args:[{isSignal:!0,alias:"interactorId",required:!1,transform:void 0}]}],identifierLink:[{type:wt,args:[{isSignal:!0,alias:"identifierLink",required:!1,transform:void 0}]}],interactorType:[{type:wt,args:[{isSignal:!0,alias:"interactorType",required:!1,transform:void 0}]}],isMainInteractor:[{type:wt,args:[{isSignal:!0,alias:"isMainInteractor",required:!1,transform:void 0}]}],idDisplay:[{type:wt,args:[{isSignal:!0,alias:"idDisplay",required:!1,transform:void 0}]}],externalLinkVisible:[{type:br,args:["externalLinkVisible"]}]}),wv);Jy=RY([Fe({selector:"cp-table-interactor-external-link",template:fL,styles:[hL]})],Jy);var dL=`<div class="stoichNum" [matTooltip]="stoichiometryText()">
  {{ stoichiometryValue() }}
</div>
`;var gL=`.stoichNum{width:4ch;height:4ch;border-radius:4ch;background-color:var(--primary);text-align:center;padding-top:.5ch;color:var(--on-primary);font-size:small;margin-left:auto;margin-right:auto;position:relative;z-index:1}
`;var OY=function(r,t,e,o){var n=arguments.length,s=n<3?t:o===null?o=Object.getOwnPropertyDescriptor(t,e):o,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")s=Reflect.decorate(r,t,e,o);else for(var a=r.length-1;a>=0;a--)(i=r[a])&&(s=(n<3?i(s):n>3?i(t,e,s):i(t,e))||s);return n>3&&s&&Object.defineProperty(t,e,s),s},Cv,Qy=(Cv=class{constructor(){Z(this,"stoichiometryText",Tt());Z(this,"stoichiometryValue",Tt())}},Z(Cv,"propDecorators",{stoichiometryText:[{type:wt,args:[{isSignal:!0,alias:"stoichiometryText",required:!1,transform:void 0}]}],stoichiometryValue:[{type:wt,args:[{isSignal:!0,alias:"stoichiometryValue",required:!1,transform:void 0}]}]}),Cv);Qy=OY([Fe({selector:"cp-table-interactor-stoichiometry",template:dL,styles:[gL]})],Qy);var xL=`<div [ngClass]="topLineClass()"></div>
@if (!!navigatorComponent()) {
  <cp-table-interactor-stoichiometry
    [stoichiometryText]="navigatorComponent().stochiometryText"
    [stoichiometryValue]="navigatorComponent().stochiometryValueFormatted"
  ></cp-table-interactor-stoichiometry>
}
<div [ngClass]="bottomLineClass()"></div>
`;var yL=`:host{display:flex;flex-direction:column;height:100%;justify-content:center;align-items:center;align-content:center;flex-wrap:nowrap}:host *{flex:1}.verticalLine,.transparentVerticalLine{margin-left:auto;margin-right:auto;min-width:1%;max-width:1%;min-height:50%;z-index:0;position:relative;height:50%}.verticalLine{border-right:3px solid var(--primary)}.transparentVerticalLine{border-right:0}
`;var zY=function(r,t,e,o){var n=arguments.length,s=n<3?t:o===null?o=Object.getOwnPropertyDescriptor(t,e):o,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")s=Reflect.decorate(r,t,e,o);else for(var a=r.length-1;a>=0;a--)(i=r[a])&&(s=(n<3?i(s):n>3?i(t,e,s):i(t,e))||s);return n>3&&s&&Object.defineProperty(t,e,s),s},vv,tb=(vv=class{constructor(){Z(this,"complex",Tt());Z(this,"i",Tt());Z(this,"navigatorComponents",Tt());Z(this,"navigatorComponent",wr(()=>Lo(this.complex().complex,this.component.componentIds(),this.navigatorComponents())));Z(this,"topLineClass",wr(()=>this.displayTopLineClass(this.complex(),this.navigatorComponents(),this.i())));Z(this,"bottomLineClass",wr(()=>this.displayBottomLineClass(this.complex(),this.navigatorComponents(),this.i())))}get component(){return this.navigatorComponents()[this.i()]}displayTopLineClass(t,e,o){return this.doesLineCrossComponentCell(t,e,o)||this.doesLineEndOnComponentCell(t,e,o)&&!this.doesLineStartOnComponentCell(t,e,o)?"verticalLine":"transparentVerticalLine"}displayBottomLineClass(t,e,o){return this.doesLineCrossComponentCell(t,e,o)||this.doesLineStartOnComponentCell(t,e,o)&&!this.doesLineEndOnComponentCell(t,e,o)?"verticalLine":"transparentVerticalLine"}doesLineCrossComponentCell(t,e,o){return!!(t.startComponentIndex!=null&&t.endComponentIndex!=null&&(t.startComponentIndex<o&&t.endComponentIndex>o||t.startComponentIndex<o&&t.endComponentIndex===o&&e[o].expanded&&t.startSubComponentIndex!=null&&t.endSubComponentIndex!=null))}doesLineStartOnComponentCell(t,e,o){return t.startComponentIndex!=null&&t.startComponentIndex===o&&(!e[o].hasSubComponents||t.startSubComponentIndex===-1)}doesLineEndOnComponentCell(t,e,o){return t.endComponentIndex!=null&&t.endComponentIndex===o?!(e[o].expanded&&t.startSubComponentIndex!=null&&t.endSubComponentIndex!=null):!1}},Z(vv,"propDecorators",{complex:[{type:wt,args:[{isSignal:!0,alias:"complex",required:!1,transform:void 0}]}],i:[{type:wt,args:[{isSignal:!0,alias:"i",required:!1,transform:void 0}]}],navigatorComponents:[{type:wt,args:[{isSignal:!0,alias:"navigatorComponents",required:!1,transform:void 0}]}]}),vv);tb=zY([Fe({selector:"cp-table-main-interactor",template:xL,styles:[yL]})],tb);var bL=`<div [ngClass]="displayTopLineClass()"></div>
@if (!!navigatorComponent()) {
  <cp-table-interactor-stoichiometry
    [stoichiometryText]="navigatorComponent().stochiometryText"
    [stoichiometryValue]="navigatorComponent().stochiometryValueFormatted"
  ></cp-table-interactor-stoichiometry>
}
<div [ngClass]="displayBottomLineClass()"></div>
`;var wL=`.verticalLine,.transparentVerticalLine{margin-left:auto;margin-right:auto;min-width:1%;max-width:1%;max-height:50%;min-height:50%;z-index:0}.verticalLine{border-right:3px solid #0e6f76}.transparentVerticalLine{border-right:0}
`;var VY=function(r,t,e,o){var n=arguments.length,s=n<3?t:o===null?o=Object.getOwnPropertyDescriptor(t,e):o,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")s=Reflect.decorate(r,t,e,o);else for(var a=r.length-1;a>=0;a--)(i=r[a])&&(s=(n<3?i(s):n>3?i(t,e,s):i(t,e))||s);return n>3&&s&&Object.defineProperty(t,e,s),s},Sv,eb=(Sv=class{constructor(){Z(this,"complex",Tt());Z(this,"i",Tt());Z(this,"j",Tt());Z(this,"navigatorComponents",Tt());Z(this,"navigatorComponent",wr(()=>Lo(this.complex().complex,[this.subcomponent.identifier],this.navigatorComponents())));Z(this,"displayTopLineClass",wr(()=>this.displayTopLineClassExpanded(this.complex(),this.navigatorComponents(),this.i(),this.j())));Z(this,"displayBottomLineClass",wr(()=>this.displayBottomLineClassExpanded(this.complex(),this.navigatorComponents(),this.i(),this.j())))}get subcomponent(){return this.navigatorComponents()[this.i()].subComponents[this.j()]}displayTopLineClassExpanded(t,e,o,n){return this.doesLineCrossSubcomponentCell(t,o,n)||this.doesLineEndOnSubcomponentCell(t,o,n)&&!this.doesLineStartOnSubcomponentCell(t,e,o,n)?"verticalLine":"transparentVerticalLine"}displayBottomLineClassExpanded(t,e,o,n){return this.doesLineCrossSubcomponentCell(t,o,n)||this.doesLineStartOnSubcomponentCell(t,e,o,n)&&!this.doesLineEndOnSubcomponentCell(t,o,n)?"verticalLine":"transparentVerticalLine"}doesLineCrossSubcomponentCell(t,e,o){return t.startComponentIndex!=null&&t.endComponentIndex!=null&&(t.startComponentIndex<e&&t.endComponentIndex>e||t.startSubComponentIndex!=null&&t.endSubComponentIndex!=null&&(t.startSubComponentIndex<o&&t.endSubComponentIndex>o||t.startComponentIndex<e&&t.endSubComponentIndex>o||t.startSubComponentIndex<o&&t.endComponentIndex>e))}doesLineStartOnSubcomponentCell(t,e,o,n){return t.startComponentIndex!=null&&t.startComponentIndex===o&&t.startSubComponentIndex!=null&&t.startSubComponentIndex===n?!t.complex.interactors.some(s=>e[o].identifier===s.identifier):!1}doesLineEndOnSubcomponentCell(t,e,o){return t.endComponentIndex!=null&&t.endComponentIndex===e&&t.endSubComponentIndex!=null&&t.endSubComponentIndex===o}},Z(Sv,"propDecorators",{complex:[{type:wt,args:[{isSignal:!0,alias:"complex",required:!1,transform:void 0}]}],i:[{type:wt,args:[{isSignal:!0,alias:"i",required:!1,transform:void 0}]}],j:[{type:wt,args:[{isSignal:!0,alias:"j",required:!1,transform:void 0}]}],navigatorComponents:[{type:wt,args:[{isSignal:!0,alias:"navigatorComponents",required:!1,transform:void 0}]}]}),Sv);eb=VY([Fe({selector:"cp-table-subcomponent-interactor",template:bL,styles:[wL]})],eb);var CL=`<div class="filters">
  <div class="sortingInteractors">
    <input type="submit" name="classificationButton" value="Group components" class="button">
    <div class="typeOfSorting">
      <input type="button" name="occurrenceClassification" value="No Grouping" class="button"
             (click)="componentsGroupingChanges(NavigatorComponentGrouping.DEFAULT)">
      <input type="button" name="typeClassification" value="Orthology" class="button"
             (click)="componentsGroupingChanges(NavigatorComponentGrouping.ORTHOLOGY)">
    </div>
  </div>

  <div class="sortingInteractors">
    <input type="submit" name="classificationButton" value="Sort components" class="button">
    <div class="typeOfSorting">
      <input type="button" name="occurrenceClassification" value="Default" class="button"
             (click)="componentsSortingChanges(NavigatorComponentSorting.DEFAULT)">
      <input type="button" name="typeClassification" value="Type" class="button"
             (click)="componentsSortingChanges(NavigatorComponentSorting.TYPE)">
      <input type="button" name="organismClassification" value="Organism" class="button"
             (click)="componentsSortingChanges(NavigatorComponentSorting.ORGANISM)">
    </div>
  </div>

  <div class="dropdown">
    <input type="submit" name="classificationButton" value="Display Options" class="button">
    <ul class="displaySize">
      <li>
        <label>
          <input type="radio" name="displayType" value="Compact" class="checkbox compact"
                 (click)="setDisplayType('compact')" [checked]="typeOfDisplay === 'compact'">
          Compact display
        </label>
      </li>
      <li class="detailedDisplay">
        <label>
          <input type="radio" name="displayType" value="Detailed" class="checkbox detailed"
                 (click)="setDisplayType('detailed')" [checked]="typeOfDisplay === 'detailed'">
          Detailed display
        </label>
        <ul class="detailedDisplayOptions">
          <li>
            <input type="checkbox" name="organism" value="organism" class="checkbox" [checked]="organismIconDisplay()"
                   (change)="toggleOrganism()">
            Organism
          </li>
          <li>
            <input type="checkbox" name="type" value="type" class="checkbox" [checked]="interactorTypeDisplay()"
                   (change)="toggleType()">
            Type
          </li>
          <li>
            <input type="checkbox" name="id" value="id" class="checkbox" [checked]="idDisplay()"
                   (change)="toggleId()">
            Component ID
          </li>
        </ul>
      </li>
    </ul>
  </div>
</div>
`;var vL=`.typeOfSorting{display:none}.sortingInteractors:hover .typeOfSorting{display:flex;margin-top:-15px;flex-direction:row;position:absolute;z-index:5}.typeOfSorting .button{border-right:1px solid white;font-size:14px}.filters{display:flex;justify-content:center;grid-gap:10px;height:67px;z-index:5;text-align:center}.displaySize,.detailedDisplayOptions{display:none}label{color:var(--on-primary)}.dropdown:hover .displaySize{display:flex;list-style:none;width:300px;background-color:var(--primary);color:var(--on-primary);margin-top:-15px;flex-direction:row;position:absolute;height:40px;align-content:center;z-index:5}.dropdown:hover .displaySize li{width:200px;background-color:var(--primary);margin-left:-21px;text-align:left;padding-left:6px;z-index:5}li{text-align:center;align-items:center;font-size:14px;border-left:1px solid white;padding-top:10px;max-width:171px}.detailedDisplay:hover .detailedDisplayOptions{display:flex;list-style:none;align-content:baseline;flex-direction:column;position:absolute;z-index:5;margin-left:14px}.detailedDisplayOptions li{text-align:left;z-index:5}
`;var WY=function(r,t,e,o){var n=arguments.length,s=n<3?t:o===null?o=Object.getOwnPropertyDescriptor(t,e):o,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")s=Reflect.decorate(r,t,e,o);else for(var a=r.length-1;a>=0;a--)(i=r[a])&&(s=(n<3?i(s):n>3?i(t,e,s):i(t,e))||s);return n>3&&s&&Object.defineProperty(t,e,s),s},Iv,rb=(Iv=class{constructor(){Z(this,"componentsSorting",ti());Z(this,"componentsGrouping",ti());Z(this,"organismIconDisplay",ti());Z(this,"interactorTypeDisplay",ti());Z(this,"idDisplay",ti());Z(this,"typeOfDisplay");Z(this,"NavigatorComponentSorting",mr);Z(this,"NavigatorComponentGrouping",ei)}ngOnInit(){this.updateDisplay()}componentsGroupingChanges(t){this.componentsGrouping.set(t)}componentsSortingChanges(t){this.componentsSorting.set(t),this.typeOfDisplay==="detailed"&&(t==="Type"?(this.interactorTypeDisplay.set(!1),this.organismIconDisplay.set(!0)):t==="Organism"&&(this.organismIconDisplay.set(!1),this.interactorTypeDisplay.set(!0)),this.updateDisplay())}toggleOrganism(){this.organismIconDisplay.update(t=>!t),this.updateDisplay()}toggleType(){this.interactorTypeDisplay.update(t=>!t),this.updateDisplay()}toggleId(){this.idDisplay.update(t=>!t),this.updateDisplay()}setDisplayType(t){t==="compact"?this.compactDisplay():t==="detailed"&&this.detailedDisplay()}compactDisplay(){this.organismIconDisplay.set(!1),this.interactorTypeDisplay.set(!1),this.idDisplay.set(!1),this.typeOfDisplay="compact"}detailedDisplay(){this.organismIconDisplay.set(!0),this.interactorTypeDisplay.set(!0),this.idDisplay.set(!0),this.typeOfDisplay="detailed"}updateDisplay(){this.organismIconDisplay()||this.interactorTypeDisplay()||this.idDisplay()?this.typeOfDisplay="detailed":this.typeOfDisplay="compact"}},Z(Iv,"propDecorators",{componentsSorting:[{type:wt,args:[{isSignal:!0,alias:"componentsSorting",required:!1}]},{type:br,args:["componentsSortingChange"]}],componentsGrouping:[{type:wt,args:[{isSignal:!0,alias:"componentsGrouping",required:!1}]},{type:br,args:["componentsGroupingChange"]}],organismIconDisplay:[{type:wt,args:[{isSignal:!0,alias:"organismIconDisplay",required:!1}]},{type:br,args:["organismIconDisplayChange"]}],interactorTypeDisplay:[{type:wt,args:[{isSignal:!0,alias:"interactorTypeDisplay",required:!1}]},{type:br,args:["interactorTypeDisplayChange"]}],idDisplay:[{type:wt,args:[{isSignal:!0,alias:"idDisplay",required:!1}]},{type:br,args:["idDisplayChange"]}]}),Iv);rb=WY([Fe({selector:"cp-complex-navigator-buttons",template:CL,styles:[vL]})],rb);var SL=`<div class="displayButton columns medium-12" [ngClass]="">
  <button class="button view-button"
          (click)="setListView()" [class.selected]="displayType() !== SearchDisplay.navigator">
    View list
  </button>
  <button class="button view-button cnButton"
          (click)="setComplexNavigatorView()" [class.selected]="displayType() === SearchDisplay.navigator">
    View Complex Navigator
    <span class="new-tag">NEW!</span>
  </button>
</div>
`;var IL=`.displayButton{text-align:center}.view-button{width:225px;margin-right:5px;background-color:#fff;color:#555;border:1px dotted var(--primary)}.view-button:hover{color:var(--primary);background-color:#eaeaea;border:transparent;border-bottom:1px dotted var(--primary)}.selected,.selected:hover{background-color:var(--primary);color:#fff}.new-tag{color:red;font-weight:700;font-size:x-small}.selected .new-tag{color:#ff0}.cnButton{outline-offset:0;outline:rgba(0,124,130,.75) solid 1px;animation:animateOutline 4s ease infinite}.cnButton.selected{animation:none}@keyframes animateOutline{0%,50%,to{outline-width:6px;outline-offset:4px;outline-color:#007c8200}10%{outline-color:#007c82bf}}
`;var KY=function(r,t,e,o){var n=arguments.length,s=n<3?t:o===null?o=Object.getOwnPropertyDescriptor(t,e):o,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")s=Reflect.decorate(r,t,e,o);else for(var a=r.length-1;a>=0;a--)(i=r[a])&&(s=(n<3?i(s):n>3?i(t,e,s):i(t,e))||s);return n>3&&s&&Object.defineProperty(t,e,s),s},oh;(function(r){r.list="view_list",r.navigator="view_navigator"})(oh||(oh={}));var Nv,nh=(Nv=class{constructor(){Z(this,"displayType",ti());Z(this,"SearchDisplay",oh)}setListView(){this.displayType.set(oh.list)}setComplexNavigatorView(){this.displayType.set(oh.navigator)}},Z(Nv,"propDecorators",{displayType:[{type:wt,args:[{isSignal:!0,alias:"displayType",required:!1}]},{type:br,args:["displayTypeChange"]}]}),Nv);nh=KY([Fe({selector:"cp-complex-list-display-buttons",template:SL,styles:[IL]})],nh);var jY=function(r,t,e,o){var n=arguments.length,s=n<3?t:o===null?o=Object.getOwnPropertyDescriptor(t,e):o,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")s=Reflect.decorate(r,t,e,o);else for(var a=r.length-1;a>=0;a--)(i=r[a])&&(s=(n<3?i(s):n>3?i(t,e,s):i(t,e))||s);return n>3&&s&&Object.defineProperty(t,e,s),s},NL=class{};NL=jY([Ev({imports:[$v,Av,Fv,Ov,Lv,Pv,Dv],exports:[ap,nh],declarations:[ap,qy,jy,Yy,Zy,Jy,Qy,tb,eb,rb,nh]})],NL);export{oh as a,sL as b,Gy as c,NL as d};
