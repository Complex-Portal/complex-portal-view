"use strict";(self.webpackChunkcomplex_portal_view=self.webpackChunkcomplex_portal_view||[]).push([[141],{82682:function(e,n,t){function i(e){switch(e){case"small molecule":return"icon icon-conceptual icon-chemical";case"protein":case"peptide":return"icon icon-conceptual icon-structures-3d";case"stable complex":return"icon icon-conceptual icon-systems";case"molecule set":return"icon icon-generic icon-math";case"single stranded deoxyribonucleic acid":case"double stranded deoxyribonucleic acid":case"small nuclear rna":case"small nucleolar rna":case"ribosomal rna":case"messenger rna":case"transfer rna":case"signal recognition particle rna":case"ribonucleic acid":case"nucleic acid":case"long non-coding ribonucleic acid":return"icon icon-conceptual icon-dna"}}function r(e){switch(function(e){return(e||"?").split(";")[0].split(" ").slice(0,2).join(" ")}(e)){case"Homo sapiens":return"icon icon-species icon-human";case"Mus musculus":return"icon icon-species icon-mouse";case"Schizosaccharomyces pombe":case"Saccharomyces cerevisiae":return"icon icon-species icon-yeast";case"Escherichia coli":case"Pseudomonas aeruginosa":return"icon icon-species icon-ecoli";case"Rattus norvegicus":return"icon icon-species icon-rat";case"Caenorhabditis elegans":return"icon icon-species icon-c-elegans";case"Gallus gallus":return"icon icon-species icon-chicken";case"Drosophila melanogaster":return"icon icon-species icon-fly";case"Bos taurus":return"icon icon-species icon-cow";case"Oryctolagus cuniculus":return"icon icon-species icon-rabbit";case"Ovis aries":return"icon icon-species icon-sheep";case"Xenopus laevis":return"icon icon-species icon-frog";case"Canis lupus":case"Canis familiaris":return"icon icon-species icon-dog";case"Vibrio cholerae":return"assets/images/EMBL_Species_Vibrio_cholerae.svg";case"Crotalus durissus":return"assets/images/EMBL_Species_RattleSnake.svg";case"Sus scrofa":return"icon icon-species icon-pig";case"Torpedo marmorata":case"Tetronarce californica":return"icon icon-species icon-ray";case"Lymnaea stagnalis":return"icon icon-species icon-snail";case"Arabidopsis thaliana":return"icon icon-species icon-brassica";case"Danio rerio":return"icon icon-species icon-zebrafish";case"Severe acute":case"Human SARS":case"SARS-CoV-2":case"Middle East":case"Human betacoronavirus":return"icon icon-species icon-virus"}return""}t.d(n,{p:function(){return i},N:function(){return r}})},23186:function(e,n,t){t.d(n,{aA:function(){return a},TL:function(){return s},aM:function(){return o}});var i=t(37959),r=t(33018);const o="view_list",a="view_complex_navigator";let s=class{constructor(){this.displayTypeChange=new r.vpe}setListView(){this.displayType=o,this.displayTypeChange.emit(this.displayType)}setComplexNavigatorView(){this.displayType=a,this.displayTypeChange.emit(this.displayType)}isDisplayComplexNavigatorView(){return this.displayType===a}};s.propDecorators={displayType:[{type:r.IIB}],displayTypeChange:[{type:r.r_U}]},s=function(e,n,t,i){var r,o=arguments.length,a=o<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(n,t,a):r(n,t))||a);return o>3&&a&&Object.defineProperty(n,t,a),a}([(0,r.wA2)({selector:"cp-complex-list-display-buttons",template:'<div class="displayButton columns medium-12" [ngClass]="">\n  <button type="submit" name="submit" class="button view-button"\n          (click)="setListView()" [ngClass]="{\'selected\': !isDisplayComplexNavigatorView()}">\n    View list\n  </button>\n  <button type="submit" name="submit" class="button view-button cnButton"\n          (click)="setComplexNavigatorView()" [ngClass]="{\'selected\': isDisplayComplexNavigatorView()}">\n    View Complex Navigator\n    <span class="new-tag" [ngClass]="{\'new-tag-selected\': displayType === isDisplayComplexNavigatorView()}">NEW!</span>\n  </button>\n</div>\n',styles:[i]})],s)},32696:function(e,n,t){t.d(n,{r:function(){return F}});var i=t(33018),r=t(38583),o=t(72987),a=t(64152);let s=class{constructor(){this.onComplexRemovedFromBasket=new i.vpe,this.interactorsSorting="Occurrence",this.organismIconDisplay=!0,this.interactorTypeDisplay=!0,this.IDDisplay=!0}};s.propDecorators={complexSearch:[{type:i.IIB}],interactors:[{type:i.IIB}],canAddComplexesToBasket:[{type:i.IIB}],canRemoveComplexesFromBasket:[{type:i.IIB}],onComplexRemovedFromBasket:[{type:i.r_U}]},s=function(e,n,t,i){var r,o=arguments.length,a=o<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(n,t,a):r(n,t))||a);return o>3&&a&&Object.defineProperty(n,t,a),a}([(0,i.wA2)({selector:"cp-complex-navigator",template:'<div class="ComplexNavigator">\n  <div class="Buttons" [ngClass]="complexSearch.totalNumberOfResults <=6 ? \'smallCNButtons\' : \'\'">\n    <cp-complex-navigator-buttons\n      [(interactorsSorting)]="interactorsSorting"\n      [(organismIconDisplay)]="organismIconDisplay"\n      [(interactorTypeDisplay)]="interactorTypeDisplay"\n      [(IDDisplay)]="IDDisplay">\n    </cp-complex-navigator-buttons>\n  </div>\n  <cp-table-structure [complexSearch]="complexSearch"\n                      [interactors]="interactors"\n                      [interactorsSorting]="interactorsSorting"\n                      [organismIconDisplay]="organismIconDisplay"\n                      [interactorTypeDisplay]="interactorTypeDisplay"\n                      [IDDisplay]="IDDisplay"\n                      [canAddComplexesToBasket]="canAddComplexesToBasket"\n                      [canRemoveComplexesFromBasket]="canRemoveComplexesFromBasket"\n                      (onComplexRemovedFromBasket)="onComplexRemovedFromBasket.emit($event)">\n  </cp-table-structure>\n</div>\n\n',styles:[a]})],s);var c=t(65170);let l=class{constructor(){this.onComplexRemovedFromBasket=new i.vpe,this.sortedComplexes=[]}ngOnChanges(){this.sortedComplexes=this.classifyComplexesSimilaritiesV2(this.complexSearch.elements)}getComponentAsComplex(e){return this.complexSearch.elements.find(n=>n.complexAC===e.identifier)}getAllComponents(e,n=[]){for(const t of e.interactors)if("stable complex"===t.interactorType){const e=this.getComponentAsComplex(t);e?n.push(...this.getAllComponents(e)):n.push(t)}else n.push(t);return n}calculateSimilarity(e,n){if(e===n)return new Set(this.getAllComponents(e)).size;const[t,i]=[e,n].map(e=>new Set(this.getAllComponents(e).map(e=>e.identifier)));return[...t.values()].reduce((e,n)=>i.has(n)?e+1:e,0)}classifyComplexesSimilaritiesV2(e){const n=[];for(const i of e)for(const t of e)i.complexAC>=t.complexAC&&n.push([i,t,this.calculateSimilarity(i,t)]);n.sort((e,n)=>n[2]-e[2]);const t=this.uniqueComplexesListOrderedBySimilarity(n);return Array.from(t)}uniqueComplexesListOrderedBySimilarity(e){const n=new Set;for(let t=0;t<e.length;t++){const[i,r,o]=e[t];if(0!==o){n.add(i),n.add(r);for(let r=t+1;r<e.length;r++){const[t,o,a]=e[r];i===t&&0!==a&&n.add(o)}if(n.size===this.complexSearch.elements.length)return n}if(n.size===this.complexSearch.elements.length)return n}return n}};l.propDecorators={complexSearch:[{type:i.IIB}],interactors:[{type:i.IIB}],interactorsSorting:[{type:i.IIB}],organismIconDisplay:[{type:i.IIB}],interactorTypeDisplay:[{type:i.IIB}],IDDisplay:[{type:i.IIB}],canAddComplexesToBasket:[{type:i.IIB}],canRemoveComplexesFromBasket:[{type:i.IIB}],onComplexRemovedFromBasket:[{type:i.r_U}]},l=function(e,n,t,i){var r,o=arguments.length,a=o<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(n,t,a):r(n,t))||a);return o>3&&a&&Object.defineProperty(n,t,a),a}([(0,i.wA2)({selector:"cp-table-structure",template:'<div class="complexNavigatorTable">\n  <div class="header"\n       (scroll)="body.scrollLeft = header.scrollLeft" #header>\n\n    <cp-table-header [complexes]="sortedComplexes"\n                     [interactorsSorting]="interactorsSorting"\n                     [canAddComplexesToBasket]="canAddComplexesToBasket"\n                     [canRemoveComplexesFromBasket]="canRemoveComplexesFromBasket"\n                     (onComplexRemovedFromBasket)="onComplexRemovedFromBasket.emit($event)">\n    </cp-table-header>\n  </div>\n  <div class="interactors"\n       (scroll)="header.scrollLeft = body.scrollLeft" #body>\n    <cp-table-interactor-column\n      [complexes]="sortedComplexes"\n      [interactors]="interactors"\n      [interactorsSorting]="interactorsSorting"\n      [organismIconDisplay]="organismIconDisplay"\n      [interactorTypeDisplay]="interactorTypeDisplay"\n      [IDDisplay]="IDDisplay">\n    </cp-table-interactor-column>\n  </div>\n  <div class="spaceHolder"></div>\n</div>\n\n',styles:[c]})],l);var p=t(95260),d=t(82682),h=t(65787);let m=class{constructor(e){this.basketService=e,this.onComplexRemovedFromBasket=new i.vpe}isInteractorSortingSet(){return"Type"===this.interactorsSorting||"Organism"===this.interactorsSorting}iconOrganism(e){return(0,d.N)(e)}toggleBasket(e,n,t){this.isInBasket(n)?this.removeComplex(n):this.saveComplex(e,n,t)}saveComplex(e,n,t){this.basketService.saveInBasket(e,n,t)}removeComplex(e){const n=this.basketService.getKey(e);this.basketService.deleteFromBasket(n),this.onComplexRemovedFromBasket.emit(e)}isInBasket(e){return this.basketService.isInBasket(e)}};m.ctorParameters=()=>[{type:h.v}],m.propDecorators={complexes:[{type:i.IIB}],interactorsSorting:[{type:i.IIB}],canAddComplexesToBasket:[{type:i.IIB}],canRemoveComplexesFromBasket:[{type:i.IIB}],onComplexRemovedFromBasket:[{type:i.r_U}]},m=function(e,n,t,i){var r,o=arguments.length,a=o<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(n,t,a):r(n,t))||a);return o>3&&a&&Object.defineProperty(n,t,a),a}([(0,i.wA2)({selector:"cp-table-header",template:'<div class="Complex-navigator">\n  <table class="table CN-table">\n    \x3c!-- When table is not overflowing --\x3e\n    <thead class="tableHead" *ngIf="complexes.length<=6">\n    <tr>\n      <th *ngIf="isInteractorSortingSet()" class="spaceHolderSorting"></th>\n      <th class="interactorsHeader horizontal">\n        Components\n      </th>\n      <th class="horizontal" *ngFor="let complex of complexes">\n        <div class="horizontal-label">\n          <a [routerLink]="[\'/complex\', complex.complexAC]"\n             target="_blank">\n            <div>\n              <span [matTooltip]="complex.complexName+ \' - \'+ complex.complexAC + \' - \' + complex.organismName">\n                <div class="line"></div>\n                <i class="{{iconOrganism(complex.organismName)}}"></i>\n                <i class="icon icon-generic small" data-icon="x"></i>\n                {{ complex.complexName }}\n              </span>\n            </div>\n          </a>\n        </div>\n        <div class="basketButton">\n          <a class="button" (click)="toggleBasket(complex.complexName,complex.complexAC,complex.organismName)">\n            <img class="basket-icons"\n                 [src]="\'assets/images/icons/\' + (isInBasket(complex.complexAC) ? \'remove_from\' : \'add_to\') + \'_basket.svg\'"\n                 width="20" height="20" alt="basket"\n                 [matTooltip]="isInBasket(complex.complexAC) ? \'Remove from basket\' : \'Add to basket\'"/>\n          </a>\n        </div>\n      </th>\n    </tr>\n    </thead>\n    \x3c!-- When table is overflowing --\x3e\n    <thead class="tableHeadOverflow" *ngIf="complexes.length>6"\n           [ngClass]="isInteractorSortingSet() ? \'tableHeadOverflowWithSorting\' : \'tableHeadOverflow\'">\n    <tr [style.--cols]="complexes.length"\n        [style.--intHeader]="isInteractorSortingSet() ? \'156px\':\'\'"\n        [style.--sizeSpaceHolder]="complexes.length>=15 ? \'185px\':\'\'">\n      <th class="spaceHolderHeaderOverflow"\n          [style]="isInteractorSortingSet() ? \'min-width: 156px; max-width: 156px;\':\'\'">\n      </th>\n      <th class="rotate" *ngFor="let complex of complexes"\n          [style.--cols]="complexes.length">\n        <a [routerLink]="[\'/complex\', complex.complexAC]"\n           [matTooltip]="complex.complexName+ \' - \'+ complex.complexAC"\n           target="_blank">\n          <div>\n            <span>\n              <div class="tilted-label">\n                <i class="icon icon-generic small" data-icon="x"></i>\n                {{ complex.complexName }}\n              </div>\n            </span>\n          </div>\n        </a>\n      </th>\n      <div class="spaceHolder" [style]="complexes.length<15 ? \'max-width: inherit;min-width: inherit\':\'\'"></div>\n    </tr>\n    \x3c!-- icons row --\x3e\n    <tr [style.--cols]="complexes.length"\n        [style.--intHeader]="isInteractorSortingSet() ? \'156px\':\'\'"\n        [style.--sizeSpaceHolder]="complexes.length>=15 ? \'185px\':\'\'">\n      <th class="interactorsHeader overflow"\n          [style]="isInteractorSortingSet() ? \'min-width: 156px; max-width: 156px;\':\'\'">\n        Components\n      </th>\n      <ng-container *ngFor=" let complex of complexes;">\n        <th class="iconOrganism">\n          <div>\n            <a class="button" (click)="toggleBasket(complex.complexName,complex.complexAC,complex.organismName)">\n              <img class="basket-icons"\n                   [src]="\'assets/images/icons/\' + (isInBasket(complex.complexAC) ? \'remove_from\' : \'add_to\') + \'_basket.svg\'"\n                   width="20" height="20" alt="basket"\n                   [matTooltip]="isInBasket(complex.complexAC) ? \'Remove from basket\' : \'Add to basket\'"/>\n            </a>\n          </div>\n          <div>\n            <i class="{{iconOrganism(complex.organismName)}}" [matTooltip]="complex.organismName"></i>\n          </div>\n        </th>\n      </ng-container>\n      <div class="spaceHolder" [style]="complexes.length<15 ? \'max-width: inherit;min-width: inherit\':\'\'"></div>\n    </tr>\n    </thead>\n  </table>\n</div>\n\n\n',styles:[p]})],m);var g=t(90303),u=t(25917),x=t(20658),y=t(88002);function f(e,n,t){const i=I(e.interactors,n,t);return i?{identifier:i.identifier,stochiometryValue:i.stochiometryValue,stochiometryText:C(i.stochiometryValue),stochiometryValueFormatted:v(i.stochiometryValue)}:null}function I(e,n,t){let i=!1,r=null;for(const o of e){const e=b(o,n,t);e&&(i=!0,e.stochiometryValue&&(r=r?[r[0]+e.stochiometryValue[0],r[1]+e.stochiometryValue[1]]:[e.stochiometryValue[0],e.stochiometryValue[1]]))}return i?{identifier:n,stochiometryValue:r}:null}function b(e,n,t){const i=function(e){if(e){const n=function(e){const n="minValue: ([0-9+]), maxValue: ([0-9+])";return e.match(n)}(e);if(n){const e=parseInt(n[1],10),t=parseInt(n[2],10);if(!isNaN(e)&&!isNaN(t))return[e,t]}}return null}(e.stochiometry);if(e.identifier===n)return{identifier:n,stochiometryValue:i};if("stable complex"===e.interactorType){const r=t.find(n=>n.interactor.identifier===e.identifier);if(r&&r.subComponents){const e=I(r.subComponents,n,t);if(e)return e.stochiometryValue?i?{identifier:n,stochiometryValue:[i[0]*e.stochiometryValue[0],i[1]*e.stochiometryValue[1]]}:{identifier:n,stochiometryValue:e.stochiometryValue}:{identifier:n,stochiometryValue:i}}}return null}function v(e){if(e){const n=e[0],t=e[1];return n===t?n.toString():`${n}-${t}`}return" "}function C(e){return e?"Stoichiometry values: minValue: "+e[0]+", maxValue: "+e[1]:"No stoichiometry data available"}let w=class{constructor(e){this.complexPortalService=e}ngOnChanges(e){e.interactors&&(this.enrichInteractors(),this.calculateTimesAppearing()),this.classifyInteractors(),this.calculateAllStartAndEndIndexes()}classifyInteractors(){this.interactorsSorting&&this.enrichedInteractors&&this.enrichedInteractors.length>0&&("Type"===this.interactorsSorting?this.classifyInteractorsByType():"Organism"===this.interactorsSorting?this.classifyInteractorsByOrganism():this.classifyInteractorsByOccurrence())}enrichInteractors(){this.enrichedInteractors=[];for(const e of this.interactors){const n="stable complex"===e.interactorType,t={interactor:e,hidden:!1,isSubComplex:n,expanded:!1,subComponents:null,partOfComplex:[],timesAppearing:0};n&&this.loadSubInteractors(t).subscribe(e=>t.subComponents=e),this.enrichedInteractors.push(t)}}toggleSubcomplexExpandable(e){if(this.enrichedInteractors[e].expanded=!this.enrichedInteractors[e].expanded,this.enrichedInteractors[e].expanded){for(let n=0;n<this.enrichedInteractors.length;n++)e!==n&&(this.enrichedInteractors[n].expanded=!1);if(this.enrichedInteractors[e].subComponents){const n=this.enrichedInteractors[e].subComponents.map(e=>e.identifier);for(let t=0;t<this.enrichedInteractors.length;t++)e!==t&&(this.enrichedInteractors[t].hidden=!!n.includes(this.enrichedInteractors[t].interactor.identifier))}}else for(let n=0;n<this.enrichedInteractors.length;n++)this.enrichedInteractors[n].hidden=!1;this.classifyInteractors(),this.calculateAllStartAndEndIndexes()}loadSubInteractors(e){const n=this.complexes.find(n=>n.complexAC===e.interactor.identifier);return n?(0,u.of)(n.interactors):this.complexPortalService.getSimplifiedComplex(e.interactor.identifier).pipe((0,y.U)(e=>null==e?void 0:e.interactors))}calculateAllStartAndEndIndexes(){this.enrichedComplexes=[];for(const e of this.complexes)this.enrichedComplexes.push(this.calculateStartAndEndIndexes(e))}getMinValue(e,n){return null===n?e:null===e?n:Math.min(e,n)}getMaxValue(e,n){return null===n?e:null===e?n:Math.max(e,n)}calculateStartAndEndIndexes(e){const n={complex:e,startInteractorIndex:null,endInteractorIndex:null,startSubComponentIndex:null,endSubComponentIndex:null,startInteractorIncludedWhenExpanded:!0};for(let t=0;t<this.enrichedInteractors.length;t++)if(!this.enrichedInteractors[t].hidden)if(f(e,this.enrichedInteractors[t].interactor.identifier,this.enrichedInteractors))n.startInteractorIndex=this.getMinValue(n.startInteractorIndex,t),n.startInteractorIndex===t&&(n.startInteractorIncludedWhenExpanded=!0),n.endInteractorIndex=this.getMaxValue(n.endInteractorIndex,t),this.enrichedInteractors[t].isSubComplex&&this.enrichedInteractors[t].subComponents&&this.enrichedInteractors[t].expanded&&(n.startSubComponentIndex=-1,n.endSubComponentIndex=this.enrichedInteractors[t].subComponents.length-1);else if(this.enrichedInteractors[t].isSubComplex&&this.enrichedInteractors[t].subComponents&&this.enrichedInteractors[t].expanded)for(let i=0;i<this.enrichedInteractors[t].subComponents.length;i++)f(e,this.enrichedInteractors[t].subComponents[i].identifier,this.enrichedInteractors)&&(n.startInteractorIndex=this.getMinValue(n.startInteractorIndex,t),n.startInteractorIndex===t&&(n.startInteractorIncludedWhenExpanded=!1),n.endInteractorIndex=this.getMaxValue(n.endInteractorIndex,t),n.startSubComponentIndex=this.getMinValue(n.startSubComponentIndex,i),n.endSubComponentIndex=this.getMaxValue(n.endSubComponentIndex,i));return n}classifyInteractorsByOrganism(){this.enrichedInteractors.sort((e,n)=>{if(n.interactor.organismName===e.interactor.organismName)return n.timesAppearing-e.timesAppearing;{const t=this._timesAppearingByOrganism.get(n.interactor.organismName),i=this._timesAppearingByOrganism.get(e.interactor.organismName);return t===i?n.interactor.organismName.localeCompare(e.interactor.organismName):t-i}}),this.rangeOfInteractorOrganism()}classifyInteractorsByType(){this.enrichedInteractors.sort((e,n)=>{if(n.interactor.interactorType===e.interactor.interactorType)return n.timesAppearing-e.timesAppearing;{const t=this._timesAppearingByType.get(n.interactor.interactorType),i=this._timesAppearingByType.get(e.interactor.interactorType);return t===i?n.interactor.interactorType.localeCompare(e.interactor.interactorType):t-i}}),this.rangeOfInteractorType()}classifyInteractorsByOccurrence(){this.enrichedInteractors.sort((e,n)=>n.timesAppearing-e.timesAppearing),this.ranges=[]}rangeOfInteractorType(){const e=[];let n=0,t=null;for(let i=0;i<this.enrichedInteractors.length;i++){const r=[];this.enrichedInteractors[i].hidden||(n+=1,null===t&&(t=i)),(!this.enrichedInteractors[i+1]||this.enrichedInteractors[i].isSubComplex&&this.enrichedInteractors[i].expanded||this.enrichedInteractors[i].interactor.interactorType!==this.enrichedInteractors[i+1].interactor.interactorType)&&(null!==t&&(r.push(this.enrichedInteractors[i].interactor.interactorType,n,t),e.push(r),t=null),n=0)}this.ranges=e}rangeOfInteractorOrganism(){const e=[];let n=0,t=null;for(let i=0;i<this.enrichedInteractors.length;i++){const r=[];this.enrichedInteractors[i].hidden||(n+=1,null===t&&(t=i)),(!this.enrichedInteractors[i+1]||this.enrichedInteractors[i].isSubComplex&&this.enrichedInteractors[i].expanded||this.enrichedInteractors[i].interactor.organismName!==this.enrichedInteractors[i+1].interactor.organismName)&&(null!==t&&(r.push(this.enrichedInteractors[i].interactor.organismName,n,t),e.push(r),t=null),n=0)}this.ranges=e}isInteractorSortingSet(){return"Type"===this.interactorsSorting||"Organism"===this.interactorsSorting}getExpandedRowClass(e,n){return 0===e?1===n?"singleExpandedRow":"firstExpandedRow":e===n-1?"lastExpandedRow":null}calculateTimesAppearing(){this._timesAppearingByType=new Map,this._timesAppearingByOrganism=new Map;for(const e of this.enrichedInteractors){e.timesAppearing=0;for(const n of this.complexes)f(n,e.interactor.identifier,this.enrichedInteractors)&&(e.timesAppearing+=1,this._timesAppearingByType.set(e.interactor.interactorType,(this._timesAppearingByType.get(e.interactor.interactorType)||0)+1),this._timesAppearingByOrganism.set(e.interactor.organismName,(this._timesAppearingByOrganism.get(e.interactor.organismName)||0)+1))}}};w.ctorParameters=()=>[{type:x.H}],w.propDecorators={complexes:[{type:i.IIB}],interactorsSorting:[{type:i.IIB}],interactors:[{type:i.IIB}],organismIconDisplay:[{type:i.IIB}],interactorTypeDisplay:[{type:i.IIB}],IDDisplay:[{type:i.IIB}]},w=function(e,n,t,i){var r,o=arguments.length,a=o<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(n,t,a):r(n,t))||a);return o>3&&a&&Object.defineProperty(n,t,a),a}([(0,i.wA2)({selector:"cp-table-interactor-column",template:'<div class="Complex-navigator">\n  <table class="interactors-table"\n         [ngClass]="{\'inheritedWidth\': complexes.length > 6}"\n         [style.--cols]="complexes.length">\n    <ng-container *ngFor=" let interactor of enrichedInteractors; let i=index">\n      <tr *ngIf="!interactor.hidden">\n        <ng-container *ngFor="let oneType of ranges" class="interactorsOrdering">\n          <td *ngIf="oneType[2]===i" [attr.rowspan]="oneType[1]" class="interactorSeparation"\n              [matTooltip]="oneType[0]">\n            <div class="interactorNameContainer" [style.--rowspanSize]="oneType[1]">\n              {{ oneType[0] }}\n            </div>\n          </td>\n        </ng-container>\n        <td class="interactorsColumn"\n            [ngClass]="complexes.length<=6 ? \'horizontalHeader\' : \'interactorsColumnFixedWidth\'"\n            [style]="ranges.length!=0 ? \'left:3ch\':\'\'">\n          <cp-table-interactor-name\n            [interactorName]="interactor.interactor.name"\n            [interactorType]="interactor.interactor.interactorType"\n            [interactorId]="interactor.interactor.identifier"\n            [interactorOrganism]="interactor.interactor.organismName"\n            [identifierLink]="interactor.interactor.identifierLink"\n            [organismIconDisplay]="organismIconDisplay"\n            [interactorTypeDisplay]="interactorTypeDisplay"\n            [IDDisplay]="IDDisplay"\n          ></cp-table-interactor-name>\n          \x3c!-- Icon for the expandable --\x3e\n          <div class="container" *ngIf="interactor.isSubComplex">\n            <a (click)="toggleSubcomplexExpandable(i)"\n               [matTooltip]="interactor.interactor.name + \' components\'">\n              Components\n              <i class="icon icon-common" data-icon="&#xf078;"\n                 style="font-size:small;\n                "></i>\n            </a>\n          </div>\n        </td>\n        \x3c!-- Interactors\' stoichiometry --\x3e\n        <ng-container *ngFor="let complex of enrichedComplexes">\n          <td class="intStoich" [ngClass]="{\'intStoichFixedWidth\': complexes.length > 6}">\n            <cp-table-main-interactor\n              [complex]="complex"\n              [i]="i"\n              [enrichedInteractors]="enrichedInteractors"\n            ></cp-table-main-interactor>\n          </td>\n        </ng-container>\n        <div *ngIf="complexes.length>6"\n             [ngClass]="isInteractorSortingSet() ? \'spaceHolderWithSorting\' : \'spaceHolder\'"></div>\n      </tr>\n      \x3c!-- Expandable menu for subcomplexes --\x3e\n      <ng-container *ngIf="interactor.expanded">\n        <ng-container *ngIf="!!interactor.subComponents">\n          <tr *ngFor="let el of interactor.subComponents; let j=index"\n              class="expandedRows"\n              [ngClass]="getExpandedRowClass(j, interactor.subComponents.length)">\n            <td [attr.rowspan]="interactor.subComponents.length" class="interactorSeparation"\n                [matTooltip]="interactor.interactor.name + \' components\'"\n                *ngIf="j === 0 && (interactorsSorting === \'Type\' || interactorsSorting === \'Organism\')">\n              <div class="interactorSeparationName"\n                   [style.--rowspanSize]="interactor.subComponents.length"> {{ interactor.interactor.name }} components\n              </div>\n            </td>\n            <td class="subComponentColumn"\n                [ngClass]="complexes.length<=6 ? \'horizontalHeader\' : \'interactorsColumnFixedWidth\'"\n                [style]="ranges.length!=0 ? \'left:3ch\':\'\'">\n              <div>\n                <cp-table-interactor-name\n                  [interactorName]="el.name"\n                  [interactorType]="el.interactorType"\n                  [interactorId]="el.identifier"\n                  [interactorOrganism]="interactor.interactor.organismName"\n                  [identifierLink]="el.identifierLink"\n                  [organismIconDisplay]="organismIconDisplay"\n                  [interactorTypeDisplay]="interactorTypeDisplay"\n                  [IDDisplay]="IDDisplay"\n                ></cp-table-interactor-name>\n              </div>\n            </td>\n            <ng-container *ngFor="let complex of enrichedComplexes">\n              <td class="intStoich" [ngClass]="{\'intStoichFixedWidth\': complexes.length > 6}">\n                <cp-table-subcomponent-interactor\n                  [complex]="complex"\n                  [i]="i"\n                  [j]="j"\n                  [enrichedInteractors]="enrichedInteractors"\n                ></cp-table-subcomponent-interactor>\n              </td>\n            </ng-container>\n            <div class="spaceHolder" *ngIf="enrichedComplexes.length > 6"></div>\n          </tr>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  </table>\n</div>\n',styles:[g]})],w);var D=t(87690);let S=class{ngOnInit(){this.interactorTypeIcon=(0,d.p)(this.interactorType),this.interactorOrganismIcon=(0,d.N)(this.interactorOrganism)}externalLinkVisibleHandler(e){this.externalLinkVisible=e}};S.propDecorators={interactorName:[{type:i.IIB}],interactorType:[{type:i.IIB}],interactorId:[{type:i.IIB}],interactorOrganism:[{type:i.IIB}],identifierLink:[{type:i.IIB}],organismIconDisplay:[{type:i.IIB}],interactorTypeDisplay:[{type:i.IIB}],IDDisplay:[{type:i.IIB}],isMainInteractor:[{type:i.IIB}]},S=function(e,n,t,i){var r,o=arguments.length,a=o<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(n,t,a):r(n,t))||a);return o>3&&a&&Object.defineProperty(n,t,a),a}([(0,i.wA2)({selector:"cp-table-interactor-name",template:'<div class="container">\n  <div class="nameAndIcons" [ngClass]="{inlineDisplay: interactorType===\'stable complex\'}">\n    <i *ngIf="organismIconDisplay"\n       class="{{interactorOrganismIcon}}"\n       [matTooltip]="interactorOrganism"></i>\n\n    <i *ngIf="interactorTypeDisplay"\n       class="{{interactorTypeIcon}}"\n       [matTooltip]="interactorType"></i>\n\n    <div class="name" *ngIf="IDDisplay" [matTooltip]="interactorId"> {{ interactorName }}\n    </div>\n    <a *ngIf="IDDisplay"\n       [routerLink]="[\'/complex/search\']"\n       [queryParams]="{query: interactorId, page: 1}"\n       target="_blank">\n      <i class="icon icon-functional small" data-icon="1"\n         [matTooltip]="\'More complexes containing \' + interactorName "></i>\n    </a>\n\n    <div class="nameCompact" *ngIf="!IDDisplay">\n      <div class="name" *ngIf="!IDDisplay" [matTooltip]="\'More information about \' + interactorName">\n        <a *ngIf="!!identifierLink" href="{{identifierLink}}" target="_blank" class="externalLinkContainer">\n          {{ interactorName }}\n        </a>\n      </div>\n      <a [routerLink]="[\'/complex/search\']"\n         [queryParams]="{query: interactorId, page: 1}"\n         target="_blank">\n        <i class="icon icon-functional small" data-icon="1"\n           [matTooltip]="\'More complexes containing \' + interactorName "></i>\n      </a>\n    </div>\n  </div>\n  <cp-table-interactor-external-link\n    *ngIf="IDDisplay"\n    [interactorId]="interactorId"\n    [identifierLink]="identifierLink"\n    [interactorType]="interactorType"\n    [isMainInteractor]="isMainInteractor"\n    [IDDisplay]="IDDisplay"\n    (externalLinkVisible)="externalLinkVisibleHandler($event)">\n  </cp-table-interactor-external-link>\n</div>\n',styles:[D]})],S);var k=t(89817);let T=class{constructor(){this.externalLinkVisible=new i.vpe}ngOnInit(){this.showExternalLink()}showExternalLink(){return this.isMainInteractor&&"stable complex"===this.interactorType?(this.externalLinkVisible.emit(!1),!1):(this.externalLinkVisible.emit(!!this.identifierLink),!!this.identifierLink)}};T.propDecorators={interactorId:[{type:i.IIB}],identifierLink:[{type:i.IIB}],interactorType:[{type:i.IIB}],isMainInteractor:[{type:i.IIB}],IDDisplay:[{type:i.IIB}],externalLinkVisible:[{type:i.r_U}]},T=function(e,n,t,i){var r,o=arguments.length,a=o<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(n,t,a):r(n,t))||a);return o>3&&a&&Object.defineProperty(n,t,a),a}([(0,i.wA2)({selector:"cp-table-interactor-external-link",template:'<div class="externalLinkContainer" [matTooltip]="\'More information about \' + interactorId">\n  <a *ngIf="externalLinkVisible" href="{{identifierLink}}" target="_blank" class="externalLinkContainer">\n    {{ interactorId }}\n    <i class="icon icon-generic small" data-icon="x" title="More information about {{ interactorId }}"></i>\n  </a>\n</div>\n',styles:[k]})],T);var O=t(51551);let B=class{};B.propDecorators={stoichiometryText:[{type:i.IIB}],stoichiometryValue:[{type:i.IIB}]},B=function(e,n,t,i){var r,o=arguments.length,a=o<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(n,t,a):r(n,t))||a);return o>3&&a&&Object.defineProperty(n,t,a),a}([(0,i.wA2)({selector:"cp-table-interactor-stoichiometry",template:'<ng-container>\n  <div class="stoichNum" [matTooltip]="stoichiometryText">\n    {{ stoichiometryValue }}\n  </div>\n</ng-container>\n',styles:[O]})],B);var L=t(91954);let A=class{ngOnChanges(){this.interactorComponent=f(this.complex.complex,this.interactor.interactor.identifier,this.enrichedInteractors),this.topLineClass=this.displayTopLineClass(this.complex,this.i),this.bottomLineClass=this.displayBottomLineClass(this.complex,this.i)}get interactor(){return this.enrichedInteractors[this.i]}displayTopLineClass(e,n){return this.doesLineCrossInteractorCell(e,n)||this.doesLineEndOnInteractorCell(e,n)&&!this.doesLineStartOnInteractorCell(e,n)?"verticalLine":"transparentVerticalLine"}displayBottomLineClass(e,n){return this.doesLineCrossInteractorCell(e,n)||this.doesLineStartOnInteractorCell(e,n)&&!this.doesLineEndOnInteractorCell(e,n)?"verticalLine":"transparentVerticalLine"}doesLineCrossInteractorCell(e,n){return!(null==e.startInteractorIndex||null==e.endInteractorIndex||!(e.startInteractorIndex<n&&e.endInteractorIndex>n||e.startInteractorIndex<n&&e.endInteractorIndex===n&&this.enrichedInteractors[n].isSubComplex&&this.enrichedInteractors[n].expanded&&null!=e.startSubComponentIndex&&null!=e.endSubComponentIndex))}doesLineStartOnInteractorCell(e,n){return!(null==e.startInteractorIndex||e.startInteractorIndex!==n||this.enrichedInteractors[n].isSubComplex&&!e.startInteractorIncludedWhenExpanded)}doesLineEndOnInteractorCell(e,n){return null!=e.endInteractorIndex&&e.endInteractorIndex===n&&!(this.enrichedInteractors[n].isSubComplex&&this.enrichedInteractors[n].expanded&&null!=e.startSubComponentIndex&&null!=e.endSubComponentIndex)}};A.propDecorators={complex:[{type:i.IIB}],i:[{type:i.IIB}],enrichedInteractors:[{type:i.IIB}]},A=function(e,n,t,i){var r,o=arguments.length,a=o<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(n,t,a):r(n,t))||a);return o>3&&a&&Object.defineProperty(n,t,a),a}([(0,i.wA2)({selector:"cp-table-main-interactor",template:'<div [ngClass]="topLineClass"></div>\n<cp-table-interactor-stoichiometry\n  *ngIf="!!interactorComponent"\n  [stoichiometryText]="interactorComponent.stochiometryText"\n  [stoichiometryValue]="interactorComponent.stochiometryValueFormatted"\n></cp-table-interactor-stoichiometry>\n<div [ngClass]="bottomLineClass"></div>\n',styles:[L]})],A);var R=t(47840);let N=class{ngOnChanges(){this.interactorComponent=f(this.complex.complex,this.el.identifier,this.enrichedInteractors),this.displayTopLineClass=this.displayTopLineClassExpanded(this.complex,this.i,this.j),this.displayBottomLineClass=this.displayBottomLineClassExpanded(this.complex,this.i,this.j)}get interactor(){return this.enrichedInteractors[this.i]}get el(){return this.enrichedInteractors[this.i].subComponents[this.j]}displayTopLineClassExpanded(e,n,t){return this.doesLineCrossSubcomponentCell(e,n,t)||this.doesLineEndOnSubcomponentCell(e,n,t)&&!this.doesLineStartOnSubcomponentCell(e,n,t)?"verticalLine":"transparentVerticalLine"}displayBottomLineClassExpanded(e,n,t){return this.doesLineCrossSubcomponentCell(e,n,t)||this.doesLineStartOnSubcomponentCell(e,n,t)&&!this.doesLineEndOnSubcomponentCell(e,n,t)?"verticalLine":"transparentVerticalLine"}doesLineCrossSubcomponentCell(e,n,t){return null!=e.startInteractorIndex&&null!=e.endInteractorIndex&&(e.startInteractorIndex<n&&e.endInteractorIndex>n||null!=e.startSubComponentIndex&&null!=e.endSubComponentIndex&&(e.startSubComponentIndex<t&&e.endSubComponentIndex>t||e.startInteractorIndex<n&&e.endSubComponentIndex>t||e.startSubComponentIndex<t&&e.endInteractorIndex>n))}doesLineStartOnSubcomponentCell(e,n,t){return null!=e.startInteractorIndex&&e.startInteractorIndex===n&&null!=e.startSubComponentIndex&&e.startSubComponentIndex===t&&!e.complex.interactors.some(e=>this.enrichedInteractors[n].interactor.identifier===e.identifier)}doesLineEndOnSubcomponentCell(e,n,t){return null!=e.endInteractorIndex&&e.endInteractorIndex===n&&null!=e.endSubComponentIndex&&e.endSubComponentIndex===t}};N.propDecorators={complex:[{type:i.IIB}],i:[{type:i.IIB}],j:[{type:i.IIB}],enrichedInteractors:[{type:i.IIB}]},N=function(e,n,t,i){var r,o=arguments.length,a=o<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(n,t,a):r(n,t))||a);return o>3&&a&&Object.defineProperty(n,t,a),a}([(0,i.wA2)({selector:"cp-table-subcomponent-interactor",template:'<div [ngClass]="displayTopLineClass"></div>\n<cp-table-interactor-stoichiometry\n  *ngIf="!!interactorComponent"\n  [stoichiometryText]="interactorComponent.stochiometryText"\n  [stoichiometryValue]="interactorComponent.stochiometryValueFormatted"\n></cp-table-interactor-stoichiometry>\n<div [ngClass]="displayBottomLineClass"></div>\n',styles:[R]})],N);var V=t(52741);let z=class{constructor(){this.interactorsSortingChange=new i.vpe,this.organismIconDisplayChange=new i.vpe,this.interactorTypeDisplayChange=new i.vpe,this.IDDisplayChange=new i.vpe}ngOnInit(){this.updateDisplay()}interactorsSortingChanges(e){this.interactorsSortingChange.emit(e),"detailed"===this.typeOfDisplay&&("Type"===e?(this.interactorTypeDisplay=!1,this.organismIconDisplay=!0):"Organism"===e&&(this.organismIconDisplay=!1,this.interactorTypeDisplay=!0),this.updateDisplay())}DisplayingOrganism(){this.organismIconDisplay=!this.organismIconDisplay,this.updateDisplay()}DisplayingType(){this.interactorTypeDisplay=!this.interactorTypeDisplay,this.updateDisplay()}DisplayingID(){this.IDDisplay=!this.IDDisplay,this.updateDisplay()}setDisplayType(e){"compact"===e?this.compactDisplay():"detailed"===e&&this.detailedDisplay()}compactDisplay(){this.organismIconDisplay=!1,this.interactorTypeDisplay=!1,this.IDDisplay=!1,this.typeOfDisplay="compact",this.changesEmitter()}detailedDisplay(){this.organismIconDisplay=!0,this.interactorTypeDisplay=!0,this.IDDisplay=!0,this.typeOfDisplay="detailed",this.changesEmitter()}updateDisplay(){this.organismIconDisplay||this.interactorTypeDisplay||this.IDDisplay?this.typeOfDisplay="detailed":this.typeOfDisplay="compact",this.changesEmitter()}changesEmitter(){this.organismIconDisplayChange.emit(this.organismIconDisplay),this.interactorTypeDisplayChange.emit(this.interactorTypeDisplay),this.IDDisplayChange.emit(this.IDDisplay)}};z.propDecorators={interactorsSortingChange:[{type:i.r_U}],organismIconDisplayChange:[{type:i.r_U}],interactorTypeDisplayChange:[{type:i.r_U}],IDDisplayChange:[{type:i.r_U}],interactorsSorting:[{type:i.IIB}],organismIconDisplay:[{type:i.IIB}],interactorTypeDisplay:[{type:i.IIB}],IDDisplay:[{type:i.IIB}]},z=function(e,n,t,i){var r,o=arguments.length,a=o<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(n,t,a):r(n,t))||a);return o>3&&a&&Object.defineProperty(n,t,a),a}([(0,i.wA2)({selector:"cp-complex-navigator-buttons",template:'<div class="filters">\n  <div class="sortingInteractors">\n    <input type="submit" name="classificationButton" value="Sort components" class="button">\n    <div class="typeOfSorting">\n      <input type="button" name="occurrenceClassification" value="Occurrence" class="button"\n             (click)="interactorsSortingChanges(\'Occurrence\')">\n      <input type="button" name="typeClassification" value="Type" class="button"\n             (click)="interactorsSortingChanges(\'Type\')">\n      <input type="button" name="organismClassification" value="Organism" class="button"\n             (click)="interactorsSortingChanges(\'Organism\')">\n      \x3c!--      <input type="submit" name="geneClassification" value="Orthology (Not available yet)" class="button"--\x3e\n      \x3c!--             (click)="InteractorsSortingChanges(\'Orthology\')">--\x3e\n    </div>\n  </div>\n\n  <div class="dropdown">\n    <input type="submit" name="classificationButton" value="Display Options" class="button">\n    <ul class="displaySize">\n      <li>\n        <label>\n          <input type="radio" name="displayType" value="Compact" class="checkbox compact"\n                 (click)="setDisplayType(\'compact\')" [checked]="typeOfDisplay === \'compact\'">\n          Compact display\n        </label>\n      </li>\n      <li class="detailedDisplay">\n        <label>\n          <input type="radio" name="displayType" value="Detailed" class="checkbox detailed"\n                 (click)="setDisplayType(\'detailed\')" [checked]="typeOfDisplay === \'detailed\'">\n          Detailed display\n        </label>\n        <ul class="detailedDisplayOptions">\n          <li>\n            <input type="checkbox" name="organism" value="organism" class="checkbox" [checked]="organismIconDisplay"\n                   (change)="DisplayingOrganism()">\n            Organism\n          </li>\n          <li>\n            <input type="checkbox" name="type" value="type" class="checkbox" [checked]="interactorTypeDisplay"\n                   (change)="DisplayingType()">\n            Type\n          </li>\n          <li>\n            <input type="checkbox" name="id" value="id" class="checkbox" [checked]="IDDisplay"\n                   (change)="DisplayingID()">\n            Interactor ID\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </div>\n</div>\n',styles:[V]})],z);var _=t(64356),H=t(18947),j=t(23186),E=t(78168);let F=class{};F=function(e,n,t,i){var r,o=arguments.length,a=o<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,n,t,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(n,t,a):r(n,t))||a);return o>3&&a&&Object.defineProperty(n,t,a),a}([(0,i.LVF)({imports:[H.Bz,r.ez,_.L,o.JP,E.AV],exports:[s,j.TL],declarations:[s,l,m,w,S,T,B,A,N,z,j.TL]})],F)},45178:function(e,n,t){t.d(n,{Q:function(){return i}});class i{constructor(e,n,t,i,r,o){this._identifier=e,this._identifierLink=n,this._name=t,this._description=i,this._interactorType=r,this._organismName=o}get identifier(){return this._identifier}get identifierLink(){return this._identifierLink}get name(){return this._name}get description(){return this._description}get interactorType(){return this._interactorType}get organismName(){return this._organismName}}},52741:function(e){e.exports=".typeOfSorting {\n  display: none;\n}\n\n.sortingInteractors:hover .typeOfSorting {\n  display: flex;\n  margin-top: -15px;\n  flex-direction: row;\n  position: absolute;\n  z-index: 5;\n}\n\n.typeOfSorting .button {\n  border-right: 1px solid white;\n  font-size: 14px;\n}\n\n.filters {\n  /*width: 120.5%;*/\n\n  display: flex;\n  justify-content: center;\n  grid-gap: 10px;\n  height: 67px;\n  z-index: 5;\n  text-align: center;\n}\n\n.displaySize {\n  display: none;\n}\n\n.detailedDisplayOptions {\n  display: none;\n}\n\nlabel {\n  color: white;\n}\n\n.dropdown:hover .displaySize {\n  display: flex;\n  list-style: none;\n  width: 300px;\n  background-color: #007c82;\n  color: white;\n  margin-top: -15px;\n  flex-direction: row;\n  position: absolute;\n  height: 40px;\n  align-content: center;\n  z-index: 5;\n}\n\n.dropdown:hover .displaySize li {\n  width: 200px;\n  background-color: #007c82;\n  margin-left: -21px;\n  text-align: left;\n  padding-left: 6px;\n  z-index: 5;\n}\n\nli {\n  text-align: center;\n  align-items: center;\n  font-size: 14px;\n  border-left: 1px solid white;\n  padding-top: 10px;\n  max-width: 171px;\n}\n\n.detailedDisplay:hover .detailedDisplayOptions {\n  display: flex;\n  list-style: none;\n  align-content: baseline;\n  flex-direction: column;\n  position: absolute;\n  z-index: 5;\n  margin-left: 14px;\n}\n\n.detailedDisplayOptions li {\n  text-align: left;\n  z-index: 5;\n}\n"},37959:function(e){e.exports=".displayButton {\n  text-align: center;\n}\n\n.view-button {\n  width: 225px;\n  margin-right: 5px;\n  background-color: white;\n  color: #555;\n  border: 1px dotted #007c82;\n}\n\n.view-button:hover {\n  color: #007c82;\n  background-color: rgb(234, 234, 234);\n  border: transparent;\n  border-bottom: 1px dotted #007c82;\n}\n\n.selected,\n.selected:hover {\n  background-color: #007c82;\n  color: white;\n}\n\n.new-tag {\n  color: red;\n  font-weight: bold;\n  font-size: x-small;\n}\n\n.new-tag-selected {\n  color: yellow;\n}\n\n.cnButton {\n  outline-offset: 0;\n  outline: rgba(0, 124, 130, 0.75) solid 1px;\n  animation: animateOutline 4s ease infinite;\n}\n\n.cnButton.selected {\n  animation: none;\n}\n\n@keyframes animateOutline {\n  0%,\n  50%,\n  100% {\n    outline-width: 6px;\n    outline-offset: 4px;\n    outline-color: rgba(0, 124, 130, 0);\n  }\n  10% {\n    outline-color: rgba(0, 124, 130, 0.75);\n  }\n}\n"},64152:function(e){e.exports="\n"},95260:function(e){e.exports=".CN-table {\n  transform: rotateX(180deg); /* rotate the header's content to make it it the right sense (when removes, it is upside down) */\n}\n\nthead {\n  border: 0;\n  background-color: white;\n  border-right: 0 solid white;\n  overflow: scroll;\n\n}\n\n.CN-table {\n  -webkit-clip-path: fill-box;\n          clip-path: fill-box;\n  overflow: scroll;\n}\n\n.spaceHolderSorting {\n  width: 3ch;\n  border-bottom: 3px solid #007c82;\n}\n\n/* Rotated complexes names */\n\n.spaceHolderHeaderOverflow {\n  min-width: 130px;\n  max-width: 130px;\n  position: sticky;\n  left: 0;\n  z-index: 4;\n  color: #007c82;\n  background-color: white;\n  padding-top: 173px;\n  text-align: right;\n}\n\n.iconOrganism {\n  position: sticky;\n  text-align: center;\n  background-color: #007c82;\n  color: white;\n  border-left: 1px solid white;\n  font-size: medium;\n  height: 60px;\n}\n\n.tilted-label {\n  text-overflow: ellipsis;\n  width: 28ch;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n.CN-table .tableHeadOverflow tr {\n  --cols: 1;\n  --intHeader: 130px;\n  --parentWidth: 100%;\n  --sizeSpaceHolder: calc(var(--parentWidth) - 70px * var(--cols) - var(--intHeader));\n  display: grid;\n  grid-template-columns: var(--intHeader) repeat(auto-fit, 70px);\n  width: calc(var(--intHeader) + 70px * var(--cols) + var(--sizeSpaceHolder));\n  overflow: hidden;\n}\n\n.CN-table .tableHeadOverflowWithSorting tr {\n  --cols: 1;\n  --intHeader: 130px;\n  --parentWidth: 100%;\n  --sizeSpaceHolder: calc(var(--parentWidth) - 70px * var(--cols) - var(--intHeader));\n  display: grid;\n  grid-template-columns: var(--intHeader) repeat(auto-fit, 70px);\n  width: calc(var(--intHeader) + 70px * var(--cols) + var(--sizeSpaceHolder) - 3ch);\n  overflow: hidden;\n}\n\n.CN-table .tableHeadOverflow th.rotate {\n  position: relative;\n  width: 350px;\n  height: 51px !important;\n  color: white;\n  font-size: 14px;\n  text-align: left;\n  border: 1px solid white;\n  top: 70px;\n  left: -52px;\n  display: flex;\n  align-items: center;\n  align-content: center;\n  padding: 0;\n  transform: rotate(-45deg);\n  border-collapse: collapse;\n}\n\n.CN-table .tableHeadOverflow th.rotate a {\n  width: 100%;\n  height: 100%;\n  align-content: center;\n  background-color: #007c82;\n  padding: 0 0 0 70px;\n  border: none;\n}\n\n.spaceHolder {\n  width: 100vw;\n  background-color: #007c82;\n  border-left: 1px solid white;\n}\n\n.interactorsHeader.overflow {\n  min-width: 130px;\n  max-width: 130px;\n  width: 130px;\n  position: sticky;\n  left: 0;\n  z-index: 4;\n  background-color: white;\n  border-bottom: 3px solid #007c82;\n  height: 60px;\n  line-height: 70px;\n  text-align: right;\n  color: #007c82;\n}\n\n/* Horizontal complexes name */\n\n.CN-table th.horizontal.interactorsHeader {\n  padding: 5px;\n  min-width: 130px;\n  max-width: 130px;\n  font-size: medium;\n  border-left: none;\n  text-align: right;\n  color: #007c82;\n  background-color: white;\n  border-bottom: 3px solid #007c82;\n}\n\n.horizontal-label {\n  text-align: center;\n  text-overflow: ellipsis;\n  width: 90%;\n  white-space: nowrap;\n  overflow: hidden;\n  margin: auto;\n}\n\n.CN-table th.horizontal {\n  color: white;\n  background-color: #007c82;\n  border-left: 1px solid white;\n  min-width: 80px;\n  max-width: 80px;\n  height: 35px;\n  font-size: 15px;\n}\n\na:visited {\n  color: white;\n}\n\na {\n  color: white;\n}\n\n.basket-icons {\n  margin-left: 5px;\n}\n\n.button {\n  padding: 0;\n  margin: 0;\n}\n\n.basketButton {\n  text-align: center;\n}\n"},90303:function(e){e.exports="table {\n  --cols: 1;\n  height: 1px;\n  overflow: scroll;\n}\n\n.inheritedWidth {\n  width: inherit;\n}\n\n/* interactors column */\n\n.interactorsColumn {\n  position: sticky;\n  left: 0;\n  z-index: 5;\n  height: 45px;\n  min-width: 130px;\n  max-width: 130px;\n  padding: 5px;\n  text-align: end;\n  color: #0e6f76;\n  font-weight: bold;\n  background: inherit;\n}\n\n.interactorsColumnFixedWidth {\n  width: 130px;\n}\n\n.interactorsColumn a {\n  font-weight: normal;\n}\n\n.intStoich {\n  height: 100%;\n  max-width: 70px;\n  min-width: 70px;\n  font-size: medium;\n  text-align: end;\n  z-index: 1;\n}\n\n.intStoichFixedWidth {\n  width: 70px;\n}\n\ni:not(.small) {\n  font-size: large;\n}\n\ntr:nth-child(even) {\n  background-color: #dfeced;\n}\n\ntr:nth-child(odd) {\n  background-color: #f7f9fa;\n}\n\na, a:visited {\n  color: #0e6f76;\n}\n\n.spaceHolder {\n  width: 183px;\n}\n\n.spaceHolderWithSorting {\n  width: calc(183px - 3ch);\n}\n\n.subComponentColumn {\n  left: 0;\n  z-index: 30;\n  height: 45px;\n  min-width: 130px;\n  max-width: 130px;\n  padding: 5px;\n  text-align: end;\n  color: #0e6f76;\n  font-weight: bold;\n  background: inherit;\n  position: sticky\n}\n\n.expandedRows {\n  color: #0e6f76;\n  position: relative;\n}\n\n.firstExpandedRow:after {\n  z-index: 40;\n  content: '';\n  position: absolute;\n  inset: -2px -1px -2px -1px;\n  pointer-events: none;\n  background: linear-gradient(180deg, #0e6f7696 0px, transparent 10px);\n}\n\n.lastExpandedRow:after {\n  z-index: 40;\n  content: '';\n  position: absolute;\n  inset: -2px -1px -2px -1px;\n  pointer-events: none;\n  background: linear-gradient(0deg, #0e6f7696 0px, transparent 10px);\n}\n\n.singleExpandedRow:after {\n  z-index: 40;\n  content: '';\n  position: absolute;\n  inset: -2px -1px -2px -1px;\n  pointer-events: none;\n  background: linear-gradient(180deg, #0e6f7696 0px, transparent 10px), linear-gradient(0deg, #0e6f7696 0px, transparent 10px);\n}\n\n/* Interactors sorting label*/\n\n.interactorSeparation {\n  max-width: 3ch;\n  min-width: 3ch;\n  background-color: #0e6f76;\n  border: 1px solid white;\n  overflow: hidden;\n  width: 1%;\n  text-align: -webkit-center;\n  position: sticky;\n  z-index: 31;\n  left: 0;\n}\n\n.interactorNameContainer,\n.interactorSeparationName {\n  --rowspanSize: 1;\n  writing-mode: vertical-rl;\n  transform: rotate(-180deg);\n  font-size: small;\n  color: white;\n  line-height: 0.8;\n  text-align: center;\n\n  text-overflow: ellipsis;\n  height: calc(var(--rowspanSize) * 48px);\n  white-space: nowrap;\n  overflow: hidden;\n\n}\n\n.container {\n  font-size: 14px;\n}\n\n.horizontalHeader {\n  min-width: 114px;\n  max-width: 114px;\n}\n\n/*/* NEEDED FOR SAFARI BROWSER*/\n\n@supports (-webkit-hyphens:none) {\n  .interactorsColumn {\n    height: 45px !important;\n  }\n\n  .intStoich {\n    height: 45px;\n    overflow-y: visible;\n  }\n}\n"},89817:function(e){e.exports="a {\n  font-weight: normal;\n}\n\na, a:visited {\n  color: #0e6f76;\n}\n\ni:not(.small) {\n  font-size: large;\n}\n\n.externalLinkContainer {\n  justify-content: end;\n  grid-gap: 5px;\n  font-size: 14px;\n  line-break: anywhere;\n  word-break: break-word;\n}\n"},87690:function(e){e.exports="a {\n  font-weight: bold;\n}\n\na, a:visited {\n  color: #0e6f76;\n}\n\ni:not(.small) {\n  font-size: medium;\n}\n\n.nameAndIcons {\n  font-size: 14px;\n  display: flex;\n  width: inherit;\n  justify-content: end;\n}\n\n.inlineDisplay {\n  display: flex;\n  justify-content: end;\n}\n\n.name {\n  width: inherit;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-wrap: nowrap;\n  text-align: end;\n  padding-right: 5px;\n}\n\n.nameCompact {\n  display: inline-flex;\n  width: -webkit-fill-available;\n}\n"},51551:function(e){e.exports="\n.stoichNum {\n  width: 4ch;\n  height: 4ch;\n  border-radius: 4ch;\n  background-color: #0e6f76;\n  text-align: center;\n  padding-top: 0.5ch;\n  color: white;\n  font-size: small;\n  margin-left: auto;\n  margin-right: auto;\n  position: relative;\n  z-index: 1;\n}\n"},91954:function(e){e.exports=":host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n  flex-wrap: nowrap;\n\n  * {\n    flex: 1\n  }\n}\n\n.verticalLine, .transparentVerticalLine {\n  margin-left: auto;\n  margin-right: auto;\n  min-width: 1%;\n  max-width: 1%;\n  min-height: 50%;\n  z-index: 0;\n  position: relative;\n  height: 50%;\n}\n\n.verticalLine {\n  border-right: 3px solid #0e6f76;\n}\n\n.transparentVerticalLine {\n  border-right: 0;\n}\n"},47840:function(e){e.exports=".verticalLine, .transparentVerticalLine {\n  margin-left: auto;\n  margin-right: auto;\n  min-width: 1%;\n  max-width: 1%;\n  max-height: 50%;\n  min-height: 50%;\n  z-index: 0;\n}\n\n.verticalLine {\n  border-right: 3px solid #0e6f76;\n}\n\n.transparentVerticalLine {\n  border-right: 0;\n}\n"},65170:function(e){e.exports=".complexNavigatorTable {\n  border-collapse: separate;\n  height: 100%;\n}\n\n.header {\n  position: sticky;\n  top: 20px;\n  z-index: 2;\n  overflow-x: auto;\n  overflow-y: hidden;\n  transform: rotateX(180deg);\n}\n\n.interactors {\n  z-index: 1;\n  position: relative;\n  overflow-y: hidden;\n}\n"}}]);