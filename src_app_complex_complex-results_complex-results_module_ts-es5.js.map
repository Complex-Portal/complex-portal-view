{"version":3,"mappings":"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","names":["ComplexFilterComponent","googleAnalyticsService","_classCallCheck","_angular_core__WEBPACK_IMPORTED_MODULE_4__","_createClass","key","value","filter","status","spicesFilter","push","fireAddedFilterEvent","splice","indexOf","fireRemovedFilterEvent","onSpicesFilterChanged","emit","bioRoleFilter","onBiologicalRoleFilterChanged","interactorTypeFilter","onInteractorTypeFilterChanged","predictedFilter","onPredictedFilterChanged","evidenceTypeFilter","onEvidenceTypeFilterChanged","onResetAllFilters","length","element","facet","facetName","evidenceTypeName","_shared_google_analytics_service_analytics_service__WEBPACK_IMPORTED_MODULE_2__","selector","template","ComplexListComponent","basketService","complex","saveInBasket","deleteFromBasket","complexAC","isInBasket","removeComplexFromBasket","saveComplex","_shared_basket_service_basket_service__WEBPACK_IMPORTED_MODULE_2__","_angular_core__WEBPACK_IMPORTED_MODULE_3__","COMPLEX_NAVIGATOR_RATING","ComplexNavigatorRatingComponent","analyticsService","hidden","localStorage","getItem","rating","selectedRating","rateComplexNavigator","setItem","setTimeout","_this","ComplexPaginatorComponent","_angular_core__WEBPACK_IMPORTED_MODULE_2__","updatePaginatior","changes","start","end","pagination","_lastPageIndex","_currentPageIndex","_pagination","onPageChange","lastPageIndex","pageIndex","currentPageIndex","get","set","ComplexResultsComponent","route","router","complexPortalService","titleService","notificationService","setTitle","allInteractorsInComplexSearch","fragment","subscribe","_complex_navigator_complex_list_display_buttons_complex_list_display_buttons_component__WEBPACK_IMPORTED_MODULE_6__","_this2","DisplayType","queryParams","query","split","Number","requestComplexResults","document","body","scrollTop","findComplex","pageSize","_this3","complexSearch","processSearchResults","totalNumberOfResults","Math","ceil","i","elements","interactors","_step","component","some","interactor","identifier","_loop","_iterator","_shared_loading_indicators_progress_bar_progress_bar_component__WEBPACK_IMPORTED_MODULE_3__","undefined","prepareFiltersForParams","navigate","filterCount","getFilterCount","fireMultiFilterEvent","toString","replace","reloadPage","_navigatorCurrentPage","_listCurrentPage","_navigatorLastPageIndex","_listLastPageIndex","_navigatorPageSize","_listPageSize","displayType","setListView","setComplexNavigatorView","_toast","complexNavigatorAnnouncement","closeAnnouncement","toastId","complexId","routeReuseStrategy","shouldReuseRoute","_angular_router__WEBPACK_IMPORTED_MODULE_7__","_shared_service_complex_portal_service__WEBPACK_IMPORTED_MODULE_2__","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__","_shared_google_analytics_service_analytics_service__WEBPACK_IMPORTED_MODULE_4__","_shared_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_5__","ComplexResultsModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_9__","path","_complex_results_component__WEBPACK_IMPORTED_MODULE_0__","_angular_common__WEBPACK_IMPORTED_MODULE_10__","_shared_loading_indicators_progress_spinner_progress_spinner_module__WEBPACK_IMPORTED_MODULE_4__","ngx_markdown__WEBPACK_IMPORTED_MODULE_11__","_complex_navigator_complex_navigator_module__WEBPACK_IMPORTED_MODULE_5__","_angular_material_tooltip__WEBPACK_IMPORTED_MODULE_12__","_complex_module__WEBPACK_IMPORTED_MODULE_7__","exports","declarations","_complex_list_complex_list_component__WEBPACK_IMPORTED_MODULE_3__","_complex_filter_complex_filter_component__WEBPACK_IMPORTED_MODULE_2__","_complex_paginator_complex_paginator_component__WEBPACK_IMPORTED_MODULE_1__","_complex_navigator_complex_navigator_rating_complex_navigator_rating_component__WEBPACK_IMPORTED_MODULE_6__","__webpack_exports__"],"sources":["webpack:///src/app/complex/complex-results/complex-filter/complex-filter.component.ts","webpack:///src/app/complex/complex-results/complex-list/complex-list.component.ts","webpack:///src/app/complex/complex-results/complex-navigator/complex-navigator-rating/complex-navigator-rating.component.ts","webpack:///src/app/complex/complex-results/complex-paginator/complex-paginator.component.ts","webpack:///src/app/complex/complex-results/complex-results.component.ts","webpack:///src/app/complex/complex-results/complex-results.module.ts","webpack:///src/app/complex/complex-results/complex-filter/complex-filter.component.html","webpack:///src/app/complex/complex-results/complex-list/complex-list.component.html","webpack:///src/app/complex/complex-results/complex-navigator/complex-navigator-rating/complex-navigator-rating.component.html","webpack:///src/app/complex/complex-results/complex-paginator/complex-paginator.component.html","webpack:///src/app/complex/complex-results/complex-results.component.html"],"sourcesContent":["import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Facets} from '../../shared/model/complex-results/facets.model';\nimport {AnalyticsService} from '../../../shared/google-analytics/service/analytics.service';\nimport {ecoCodeName, interactorTypeIcon, organismIcon} from '../../complex-portal-utils';\n\n@Component({\n  selector: 'cp-complex-filter',\n  templateUrl: './complex-filter.component.html',\n  styleUrls: ['./complex-filter.component.css']\n})\nexport class ComplexFilterComponent implements OnInit {\n\n  @Input() facets: Facets;\n  @Input() spicesFilter: string[];\n  @Input() bioRoleFilter: string[];\n  @Input() interactorTypeFilter: string[];\n  @Input() predictedFilter: string[];\n  @Input() evidenceTypeFilter: string[];\n\n  @Output() onSpicesFilterChanged: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() onBiologicalRoleFilterChanged: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() onInteractorTypeFilterChanged: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() onPredictedFilterChanged: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() onEvidenceTypeFilterChanged: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() onResetAllFilters: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  constructor(private googleAnalyticsService: AnalyticsService) {\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   *\n   * @param filter selected filter\n   * @param status status if selected filter has been added or removed\n   */\n  public changeSpeciesFilter(filter: string, status: boolean) {\n    if (status) {\n      this.spicesFilter.push(filter);\n      this.googleAnalyticsService.fireAddedFilterEvent(filter);\n    } else {\n      this.spicesFilter.splice(this.spicesFilter.indexOf(filter), 1);\n      this.googleAnalyticsService.fireRemovedFilterEvent(filter);\n    }\n    this.onSpicesFilterChanged.emit(this.spicesFilter);\n  }\n\n  /**\n   *\n   * @param filter selected filter\n   * @param status status if selected filter has been added or removed\n   */\n  public changeBiologicalRoleFilter(filter: string, status: boolean) {\n    if (status) {\n      this.bioRoleFilter.push(filter);\n      this.googleAnalyticsService.fireAddedFilterEvent(filter);\n    } else {\n      this.bioRoleFilter.splice(this.bioRoleFilter.indexOf(filter), 1);\n      this.googleAnalyticsService.fireRemovedFilterEvent(filter);\n    }\n    this.onBiologicalRoleFilterChanged.emit(this.bioRoleFilter);\n  }\n\n  /**\n   *\n   * @param filter selected filter\n   * @param status status if selected filter has been added or removed\n   */\n  public changeInteractorTypeFilter(filter: string, status: boolean) {\n    if (status) {\n      this.interactorTypeFilter.push(filter);\n      this.googleAnalyticsService.fireAddedFilterEvent(filter);\n    } else {\n      this.interactorTypeFilter.splice(this.interactorTypeFilter.indexOf(filter), 1);\n      this.googleAnalyticsService.fireRemovedFilterEvent(filter);\n    }\n    this.onInteractorTypeFilterChanged.emit(this.interactorTypeFilter);\n  }\n\n  public changePredictedFilter(filter: string, status: boolean) {\n    if (status) {\n      this.predictedFilter.push(filter);\n      this.googleAnalyticsService.fireAddedFilterEvent(filter);\n    } else {\n      this.predictedFilter.splice(this.predictedFilter.indexOf(filter), 1);\n      this.googleAnalyticsService.fireRemovedFilterEvent(filter);\n    }\n    this.onPredictedFilterChanged.emit(this.predictedFilter);\n  }\n\n  public changeEvidenceTypeFilter(filter: string, status: boolean) {\n    if (status) {\n      this.evidenceTypeFilter.push(filter);\n      this.googleAnalyticsService.fireAddedFilterEvent(filter);\n    } else {\n      this.evidenceTypeFilter.splice(this.evidenceTypeFilter.indexOf(filter), 1);\n      this.googleAnalyticsService.fireRemovedFilterEvent(filter);\n    }\n    this.onEvidenceTypeFilterChanged.emit(this.evidenceTypeFilter);\n  }\n\n  /**\n   * Emit event to parent component to remove all filters\n   */\n  public resetAllFilters() {\n    this.onResetAllFilters.emit(true);\n  }\n\n  /**\n   *\n   * @returns {boolean} true is any filter array contains an filter\n   */\n  public anyFiltersSelected() {\n    return this.spicesFilter.length !== 0 || this.bioRoleFilter.length !== 0 || this.interactorTypeFilter.length !== 0 ||\n      this.predictedFilter.length !== 0 || this.evidenceTypeFilter.length !== 0;\n  }\n\n  /**\n   *\n   * @param element filter to check if already selected\n   * @param filter selected filters\n   * @returns {boolean} true if filter is already in selected filters\n   */\n  public isSelected(element: string, filter: string[]): boolean {\n    return filter.indexOf(element) !== -1;\n  }\n\n  public facetTypeIcon(facet: string): string {\n    return interactorTypeIcon(facet);\n  }\n\n  public facetOrganismIcon(facet): string {\n    return organismIcon(facet);\n  }\n\n  formatPredictedFacetValue(facetName: string): string {\n    if (facetName === 'true') {\n      return 'Predicted Complex';\n    } else {\n      return 'Manually curated complex';\n    }\n  }\n\n  formatEvidenceTypeFacetValue(facetName: string): string {\n    const evidenceTypeName = ecoCodeName(facetName);\n    return evidenceTypeName || facetName;\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ComplexSearchResult} from '../../shared/model/complex-results/complex-search.model';\nimport {BasketService} from '../../../shared/basket/service/basket.service';\nimport {Element} from '../../shared/model/complex-results/element.model';\n\n@Component({\n  selector: 'cp-complex-list',\n  templateUrl: './complex-list.component.html',\n  styleUrls: ['./complex-list.component.css']\n})\nexport class ComplexListComponent implements OnInit {\n  @Input() complexSearch: ComplexSearchResult;\n\n  constructor(private basketService: BasketService) {\n  }\n\n  ngOnInit() {\n  }\n\n\n  saveComplex(complex: Element) {\n    this.basketService.saveInBasket(complex);\n  }\n\n  removeComplexFromBasket(complex: Element) {\n    this.basketService.deleteFromBasket(complex.complexAC);\n  }\n\n  isInBasket(complex: Element): boolean {\n    return this.basketService.isInBasket(complex.complexAC);\n  }\n\n  toggleBasket(complex: Element) {\n    if (this.isInBasket(complex)) {\n      this.removeComplexFromBasket(complex);\n    } else {\n      this.saveComplex(complex);\n    }\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {AnalyticsService} from '../../../../shared/google-analytics/service/analytics.service';\n\nconst COMPLEX_NAVIGATOR_RATING = 'already_rated';\n\n@Component({\n  selector: 'cp-complex-navigator-rating',\n  templateUrl: './complex-navigator-rating.component.html',\n  styleUrls: ['./complex-navigator-rating.component.css']\n})\nexport class ComplexNavigatorRatingComponent implements OnInit {\n  selectedRating: number;\n  hidden = false;\n\n  constructor(private analyticsService: AnalyticsService) {\n  }\n\n  ngOnInit(): void {\n    this.hidden = localStorage.getItem(COMPLEX_NAVIGATOR_RATING) === 'true' || false;\n  }\n\n  selectRating(rating: number) {\n    this.selectedRating = rating;\n    this.analyticsService.rateComplexNavigator(this.selectedRating);\n    localStorage.setItem(COMPLEX_NAVIGATOR_RATING, 'true');\n    setTimeout(() => this.hidden = true, 2000);\n  }\n}\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\n\n@Component({\n  selector: 'cp-complex-paginator',\n  templateUrl: './complex-paginator.component.html',\n  styleUrls: ['./complex-paginator.component.css']\n})\nexport class ComplexPaginatorComponent implements OnInit, OnChanges {\n  private _lastPageIndex: number;\n  private _currentPageIndex: number;\n  private _pagination: any;\n\n  @Output() onPageChange: EventEmitter<number> = new EventEmitter<number>();\n\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.updatePaginatior();\n  }\n\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.updatePaginatior();\n  }\n\n  public updatePaginatior(): void {\n    let start: number;\n    let end: number;\n    this.pagination = [];\n    if (this._lastPageIndex < 5) {\n      start = 1;\n      end = this._lastPageIndex;\n\n    } else {\n      if (this._currentPageIndex === 1 || this._currentPageIndex === 2) {\n        start = 1;\n        end = 5;\n      } else if (this._currentPageIndex === this._lastPageIndex || this._currentPageIndex === this._lastPageIndex - 1) {\n        start = this._lastPageIndex - 4;\n        end = this._lastPageIndex;\n      } else {\n        start = this._currentPageIndex - 2;\n        end = this._currentPageIndex + 2;\n      }\n    }\n    while (start <= end) {\n      if (start === this._currentPageIndex) {\n        this._pagination.push([[this._currentPageIndex], [true]]);\n      } else {\n        this._pagination.push([[start], [false]]);\n      }\n      start++;\n    }\n  }\n\n  public getFirstPage(): void {\n    this.onPageChange.emit(1);\n  }\n\n  public getLastPage(): void {\n    this.onPageChange.emit(this.lastPageIndex);\n  }\n\n  public getPage(pageIndex: number) {\n    this.onPageChange.emit(pageIndex);\n  }\n\n  public getPreviousPage(): void {\n    this.onPageChange.emit(this.currentPageIndex - 1);\n  }\n\n  public getNextPage(): void {\n    this.onPageChange.emit(this.currentPageIndex + 1);\n  }\n\n  get lastPageIndex() {\n    return this._lastPageIndex;\n  }\n\n  @Input()\n  set lastPageIndex(value) {\n    this._lastPageIndex = value;\n  }\n\n  get currentPageIndex() {\n    return this._currentPageIndex;\n  }\n\n  @Input()\n  set currentPageIndex(value) {\n    this._currentPageIndex = value;\n  }\n\n  get pagination() {\n    return this._pagination;\n  }\n\n  set pagination(value) {\n    this._pagination = value;\n  }\n}\n","import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, NavigationExtras, Router} from '@angular/router';\nimport {ComplexSearchResult} from '../shared/model/complex-results/complex-search.model';\nimport {ComplexPortalService} from '../shared/service/complex-portal.service';\nimport {ProgressBarComponent} from '../../shared/loading-indicators/progress-bar/progress-bar.component';\nimport {Title} from '@angular/platform-browser';\nimport {AnalyticsService} from '../../shared/google-analytics/service/analytics.service';\nimport {Interactor} from '../shared/model/complex-results/interactor.model';\nimport {NotificationService} from '../../shared/notification/service/notification.service';\nimport {\n  COMPLEX_NAVIGATOR_VIEW,\n  LIST_VIEW\n} from './complex-navigator/complex-list-display-buttons/complex-list-display-buttons.component';\n\n@Component({\n  selector: 'cp-complex-results',\n  templateUrl: './complex-results.component.html',\n  styleUrls: ['./complex-results.component.css'],\n})\nexport class ComplexResultsComponent implements OnInit, AfterViewInit {\n  query: string;\n  complexSearch: ComplexSearchResult;\n  spicesFilter: string[];\n  bioRoleFilter: string[];\n  interactorTypeFilter: string[];\n  predictedFilter: string[];\n  evidenceTypeFilter: string[];\n  allInteractorsInComplexSearch: Interactor[] = [];\n  DisplayType: string;\n\n  private _toast;\n  private _listPageSize = 15; // This is where we set the size of the pages for list view\n  private _navigatorPageSize = 20; // This is where we set the size of the pages for navigator view\n  private _listCurrentPage: number;\n  private _navigatorCurrentPage: number;\n  private _listLastPageIndex;\n  private _navigatorLastPageIndex;\n\n  constructor(private route: ActivatedRoute, private router: Router,\n              private complexPortalService: ComplexPortalService, private titleService: Title,\n              private googleAnalyticsService: AnalyticsService, private notificationService: NotificationService) {\n  }\n\n  ngOnInit() {\n    this.titleService.setTitle('Complex Portal - Results');\n    this.allInteractorsInComplexSearch = [];\n    this.route.fragment.subscribe(fragment => {\n      if (fragment === COMPLEX_NAVIGATOR_VIEW) {\n        this.DisplayType = COMPLEX_NAVIGATOR_VIEW;\n      } else if (fragment === LIST_VIEW) {\n        this.DisplayType = LIST_VIEW;\n      }\n      this.route\n        .queryParams\n        .subscribe(queryParams => {\n          this.query = queryParams['query'];\n          this.spicesFilter = queryParams['species'] ? queryParams['species'].split('+') : [];\n          this.bioRoleFilter = queryParams['bioRole'] ? queryParams['bioRole'].split('+') : [];\n          this.interactorTypeFilter = queryParams['interactorType'] ? queryParams['interactorType'].split('+') : [];\n          this.predictedFilter = queryParams['predicted'] ? queryParams['predicted'].split('+') : [];\n          this.evidenceTypeFilter = queryParams['evidenceType'] ? queryParams['evidenceType'].split('+') : [];\n          this.currentPageIndex = queryParams['page'] ? Number(queryParams['page']) : 1;\n          // TODO This is out for now, but CP-84 (JIRA )should fix that!!\n          // this.pageSize = queryParams['size'] ? Number(queryParams['size']) : 10;\n          this.requestComplexResults();\n          document.body.scrollTop = 0;\n        });\n    });\n  }\n\n  ngAfterViewInit(): void {\n  }\n\n\n  private requestComplexResults() {\n    this.complexPortalService.findComplex(this.query, this.spicesFilter, this.bioRoleFilter,\n      this.interactorTypeFilter, this.predictedFilter, this.evidenceTypeFilter,\n      this.currentPageIndex, this.pageSize).subscribe(complexSearch => {\n      this.complexSearch = complexSearch;\n      this.processSearchResults();\n      this.allInteractorsInComplexSearch = [];\n      if (this.complexSearch.totalNumberOfResults !== 0) {\n        this.lastPageIndex = Math.ceil(complexSearch.totalNumberOfResults / this.pageSize);\n        for (let i = 0; i < complexSearch.elements.length; i++) {\n          for (const component of complexSearch.elements[i].interactors) {\n            if (!this.allInteractorsInComplexSearch.some(interactor => interactor.identifier === component.identifier)) {\n              this.allInteractorsInComplexSearch.push(component);\n            }\n          }\n        }\n      }\n      ProgressBarComponent.hide();\n    });\n  }\n\n  /**\n   * Prepare query params to build new URL after filter or pagination has changed\n   */\n  private reloadPage(): void {\n    const queryParams: NavigationExtras = {};\n    queryParams['query'] = this.query;\n    queryParams['page'] = this.currentPageIndex;\n    if (this.spicesFilter !== undefined && this.spicesFilter.length !== 0) {\n      queryParams['species'] = this.prepareFiltersForParams(this.spicesFilter);\n    }\n    if (this.bioRoleFilter !== undefined && this.bioRoleFilter.length !== 0) {\n      queryParams['bioRole'] = this.prepareFiltersForParams(this.bioRoleFilter);\n    }\n    if (this.interactorTypeFilter !== undefined && this.interactorTypeFilter.length !== 0) {\n      queryParams['interactorType'] = this.prepareFiltersForParams(this.interactorTypeFilter);\n    }\n    if (this.predictedFilter !== undefined && this.predictedFilter.length !== 0) {\n      queryParams['predicted'] = this.prepareFiltersForParams(this.predictedFilter);\n    }\n    if (this.evidenceTypeFilter !== undefined && this.evidenceTypeFilter.length !== 0) {\n      queryParams['evidenceType'] = this.prepareFiltersForParams(this.evidenceTypeFilter);\n    }\n    this.router.navigate([], {\n      queryParams,\n      fragment: this.DisplayType\n    });\n    ProgressBarComponent.hide();\n    // This is a test case event for GA, to monitor if users ever use more then one filter.\n    const filterCount = this.getFilterCount();\n    if (1 < filterCount) {\n      this.googleAnalyticsService.fireMultiFilterEvent(filterCount.toString());\n    }\n  }\n\n  private prepareFiltersForParams(filter: string[]): string {\n    return filter.toString().replace(/,/g, '+');\n  }\n\n  private getFilterCount(): number {\n    return this.spicesFilter.length + this.interactorTypeFilter.length + this.bioRoleFilter.length +\n      this.predictedFilter.length + this.evidenceTypeFilter.length;\n  }\n\n  /**\n   *\n   * @param pageIndex new page index after hitting the paginator to update the URL and reload content\n   */\n  public onPageChange(pageIndex: number): void {\n    this.currentPageIndex = pageIndex;\n    this.reloadPage();\n  }\n\n  public onResetAllFilters(): void {\n    this.spicesFilter = [];\n    this.bioRoleFilter = [];\n    this.interactorTypeFilter = [];\n    this.predictedFilter = [];\n    this.evidenceTypeFilter = [];\n    this.currentPageIndex = 1;\n    this.reloadPage();\n  }\n\n  public onSpicesFilterChanged(filter: string[]): void {\n    this.spicesFilter = filter;\n    this.currentPageIndex = 1;\n    this.reloadPage();\n  }\n\n  public onBiologicalRoleFilterChanged(filter: string[]): void {\n    this.bioRoleFilter = filter;\n    this.currentPageIndex = 1;\n    this.reloadPage();\n  }\n\n  public onInteractorTypeFilterChanged(filter: string[]): void {\n    this.interactorTypeFilter = filter;\n    this.currentPageIndex = 1;\n    this.reloadPage();\n  }\n\n  public onPredictedFilterChanged(filter: string[]): void {\n    this.predictedFilter = filter;\n    this.currentPageIndex = 1;\n    this.reloadPage();\n  }\n\n  public onEvidenceTypeFilterChanged(filter: string[]): void {\n    this.evidenceTypeFilter = filter;\n    this.currentPageIndex = 1;\n    this.reloadPage();\n  }\n\n  get currentPageIndex(): number {\n    if (this.DisplayType === COMPLEX_NAVIGATOR_VIEW) {\n      return this._navigatorCurrentPage;\n    } else {\n      return this._listCurrentPage;\n    }\n  }\n\n  set currentPageIndex(value: number) {\n    if (this.DisplayType === COMPLEX_NAVIGATOR_VIEW) {\n      this._navigatorCurrentPage = value;\n    } else {\n      this._listCurrentPage = value;\n    }\n  }\n\n  get lastPageIndex(): number {\n    if (this.DisplayType === COMPLEX_NAVIGATOR_VIEW) {\n      return this._navigatorLastPageIndex;\n    } else {\n      return this._listLastPageIndex;\n    }\n  }\n\n  set lastPageIndex(value: number) {\n    if (this.DisplayType === COMPLEX_NAVIGATOR_VIEW) {\n      this._navigatorLastPageIndex = value;\n    } else {\n      this._listLastPageIndex = value;\n    }\n  }\n\n  get pageSize(): number {\n    if (this.DisplayType === COMPLEX_NAVIGATOR_VIEW) {\n      return this._navigatorPageSize;\n    } else {\n      return this._listPageSize;\n    }\n  }\n\n  onDisplayTypeChange(displayType: string) {\n    if (this.DisplayType !== displayType) {\n      this.DisplayType = displayType;\n      if (displayType === LIST_VIEW) {\n        this.setListView();\n      } else if (displayType === COMPLEX_NAVIGATOR_VIEW) {\n        this.setComplexNavigatorView();\n      }\n    }\n  }\n\n  isDisplayComplexNavigatorView(): boolean {\n    return this.DisplayType === COMPLEX_NAVIGATOR_VIEW;\n  }\n\n  private setListView() {\n    this._toast = this.notificationService.complexNavigatorAnnouncement();\n    this.reloadPage();\n  }\n\n  private setComplexNavigatorView() {\n    if (!!this._toast) {\n      this.notificationService.closeAnnouncement(this._toast.toastId);\n      this._toast = null;\n    }\n    this.reloadPage();\n  }\n\n  processSearchResults(): void {\n    // No filters and only one result, then we redirect to complex details page\n    // This allows users to enable filters to see even one result without redirecting them out from the results page,\n    // but we ensure redirection of a new search has only one result.\n    if (this.getFilterCount() === 0 && this.complexSearch.totalNumberOfResults === 1) {\n      const complexId = this.complexSearch.elements[0].complexAC;\n      if (!!complexId) {\n        // For some reason this is needed so the navigate call works\n        this.router.routeReuseStrategy.shouldReuseRoute = function () {\n          return false;\n        };\n        this.router.navigate(['/complex', complexId]);\n      }\n    } else if (!this.DisplayType) {\n      // Currently the list view is the default, as we are just launching the navigator view\n      // Later on we can change the default view to be the list or navigator view based on number of results\n      if (this.complexSearch.totalNumberOfResults <= this._navigatorPageSize) {\n        this.setComplexNavigatorView();\n      } else {\n        this.setListView();\n      }\n    }\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ComplexResultsComponent} from './complex-results.component';\nimport {RouterModule} from '@angular/router';\nimport {ComplexPaginatorComponent} from './complex-paginator/complex-paginator.component';\nimport {ComplexFilterComponent} from './complex-filter/complex-filter.component';\nimport {ComplexListComponent} from './complex-list/complex-list.component';\nimport {ProgressSpinnerModule} from '../../shared/loading-indicators/progress-spinner/progress-spinner.module';\nimport {MarkdownModule} from 'ngx-markdown';\nimport {ComplexNavigatorModule} from './complex-navigator/complex-navigator.module';\nimport {ComplexNavigatorRatingComponent} from './complex-navigator/complex-navigator-rating/complex-navigator-rating.component';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {ComplexModule} from '../complex.module';\n\n\n@NgModule({\n  imports: [RouterModule.forChild([\n    {path: '', component: ComplexResultsComponent},\n  ]),\n    CommonModule,\n    ProgressSpinnerModule, MarkdownModule,\n    ComplexNavigatorModule, MatTooltipModule, ComplexModule\n  ],\n  exports: [],\n  declarations: [ComplexResultsComponent,\n    ComplexListComponent,\n    ComplexFilterComponent,\n    ComplexPaginatorComponent,\n    ComplexNavigatorRatingComponent\n  ]\n})\nexport class ComplexResultsModule {\n}\n","export default \"<div class=\\\"filters row\\\">\\n  <div class=\\\"columns medium-6\\\"><h3>Filters</h3></div>\\n  <div class=\\\"columns medium-6\\\">\\n    <div *ngIf=\\\"anyFiltersSelected()\\\">\\n      <a class=\\\"button\\\" (click)=\\\"resetAllFilters()\\\"><i class=\\\"icon icon-common\\\" data-icon=\\\"\\\"></i> Reset filters</a>\\n    </div>\\n  </div>\\n  <div class=\\\"columns medium-12\\\">\\n    <div *ngIf=\\\"facets.species_f\\\">\\n      <b>Species</b>\\n      <ul class=\\\"no-bullet\\\">\\n        <li *ngFor=\\\"let facet of facets.species_f\\\">\\n          <label [matTooltip]=\\\"facet.name\\\">\\n            <input type=\\\"checkbox\\\" #filter value=\\\"{{facet.name}}\\\"\\n                   (change)=\\\"changeSpeciesFilter(filter.value, filter.checked)\\\"\\n                   [checked]=\\\"isSelected(facet.name, spicesFilter)\\\">\\n\\n            <span>\\n              <i *ngIf=\\\"facetOrganismIcon(facet.name).startsWith('icon'); else img\\\"\\n                 [ngClass]=\\\"facetOrganismIcon(facet.name)\\\" style=\\\"font-size: large;\\\"></i>\\n            <ng-template #img>\\n              <img [src]=\\\"facetOrganismIcon(facet.name)\\\" alt=\\\"\\\" width=\\\"18px\\\" height=\\\"18px\\\"/>\\n            </ng-template>\\n            </span>\\n\\n            {{ facet.name | species:true }} ({{ facet.count }})\\n          </label>\\n        </li>\\n      </ul>\\n    </div>\\n\\n    <div *ngIf=\\\"facets.pbiorole_f\\\">\\n      <b>Biological Role</b>\\n      <ul class=\\\"no-bullet\\\">\\n        <li *ngFor=\\\"let facet of facets.pbiorole_f\\\">\\n          <label>\\n            <input type=\\\"checkbox\\\" #filter value=\\\"{{facet.name}}\\\"\\n                   (change)=\\\"changeBiologicalRoleFilter(filter.value, filter.checked)\\\"\\n                   [checked]=\\\"isSelected(facet.name, bioRoleFilter)\\\">\\n\\n            {{ facet.name }} ({{ facet.count }})\\n          </label>\\n        </li>\\n      </ul>\\n    </div>\\n\\n    <div *ngIf=\\\"facets.ptype_f\\\">\\n      <b>Component Type</b>\\n      <ul class=\\\"no-bullet\\\">\\n        <li *ngFor=\\\"let facet of facets.ptype_f\\\">\\n          <label>\\n            <input type=\\\"checkbox\\\" #filter value=\\\"{{facet.name}}\\\"\\n                   (change)=\\\"changeInteractorTypeFilter(filter.value, filter.checked)\\\"\\n                   [checked]=\\\"isSelected(facet.name, interactorTypeFilter)\\\">\\n\\n            <span >\\n              <i [ngClass]=\\\"facetTypeIcon(facet.name)\\\" style=\\\"font-size: large;\\\"></i>\\n            </span>\\n            {{ facet.name }} ({{ facet.count }})\\n          </label>\\n        </li>\\n      </ul>\\n    </div>\\n\\n    <div *ngIf=\\\"facets.predicted_complex_f\\\">\\n      <b>Complex Type</b>\\n      <ul class=\\\"no-bullet\\\">\\n        <li *ngFor=\\\"let facet of facets.predicted_complex_f\\\">\\n          <label>\\n            <input type=\\\"checkbox\\\" #filter value=\\\"{{facet.name}}\\\"\\n                   (change)=\\\"changePredictedFilter(filter.value, filter.checked)\\\"\\n                   [checked]=\\\"isSelected(facet.name, predictedFilter)\\\">\\n\\n            {{ formatPredictedFacetValue(facet.name) }} ({{ facet.count }})\\n          </label>\\n        </li>\\n      </ul>\\n    </div>\\n\\n    <div *ngIf=\\\"facets.evidence_type_f\\\">\\n      <b>Evidence Type</b>\\n      <ul class=\\\"no-bullet\\\">\\n        <li *ngFor=\\\"let facet of facets.evidence_type_f\\\">\\n          <label>\\n            <input type=\\\"checkbox\\\" #filter value=\\\"{{facet.name}}\\\"\\n                   (change)=\\\"changeEvidenceTypeFilter(filter.value, filter.checked)\\\"\\n                   [checked]=\\\"isSelected(facet.name, evidenceTypeFilter)\\\">\\n\\n            {{ formatEvidenceTypeFacetValue(facet.name) }} ({{ facet.count }})\\n          </label>\\n        </li>\\n      </ul>\\n    </div>\\n\\n    <div *ngIf=\\\"!facets.species_f && !facets.pbiorole_f && !facets.ptype_f && !facets.predicted_complex_f && !facets.evidence_type_f\\\">\\n      <h6>No filters available</h6>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<ul class=\\\"no-bullet\\\">\\n  <li *ngFor=\\\"let complex of complexSearch.elements\\\" [class.predicted]=\\\"complex.predictedComplex\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"basketButtonContainer\\\"\\n           [matTooltip]=\\\"isInBasket(complex) ? 'Remove from basket' : 'Add to basket'\\\">\\n        <a class=\\\"button\\\" (click)=\\\"toggleBasket(complex)\\\">\\n          <i class=\\\"icon icon-common\\\" [attr.data-icon]=\\\"isInBasket(complex) ? '':''\\\"></i>\\n        </a>\\n      </div>\\n      <div class=\\\"complexesAndDescription\\\">\\n        <h3>\\n          <a [routerLink]=\\\"['/complex', complex.complexAC]\\\">{{ complex.complexName }}</a></h3>\\n        <div class=\\\"description\\\" style=\\\"background-color: white\\\">\\n          <b>Complex AC:</b> {{ complex.complexAC }} · <b>Organism:</b> {{ complex.organismName | species }}\\n          · <b class=\\\"predictedOrCuratedLabel\\\">{{ !complex.predictedComplex ? 'Curated' : 'Predicted'}} complex</b>\\n          <br>\\n          <ng-container *ngIf=\\\"complex.description\\\">\\n            <b>Description:</b>\\n            <div *ngIf=\\\"complex.description.length <= 250\\\">\\n              {{ complex.description }}<a [routerLink]=\\\"['/complex', complex.complexAC]\\\">...</a>\\n            </div>\\n            <div *ngIf=\\\"complex.description.length > 250\\\">\\n              {{ complex.description.substr(0, 250) }}<a [routerLink]=\\\"['/complex', complex.complexAC]\\\">...</a>\\n            </div>\\n          </ng-container>\\n        </div>\\n      </div>\\n    </div>\\n  </li>\\n</ul>\\n\";","export default \"<div class=\\\"ratingComponent\\\" *ngIf=\\\"!hidden\\\">\\n  <div class=\\\"buttonContainer\\\">\\n    <button class=\\\"close\\\" id=\\\"closePopup\\\" (click)=\\\"hidden = true\\\">&times;</button>\\n  </div>\\n  <div class=\\\"text\\\">\\n    <p>Tell us about your experience with the Complex Navigator!</p>\\n  </div>\\n  <div class=\\\"ratingComponentStars\\\">\\n    <span class=\\\"star\\\" [ngClass]=\\\"{'selected': selectedRating >= 1}\\\" (click)=\\\"selectRating(1)\\\"> &#9733; </span>\\n    <span class=\\\"star\\\" [ngClass]=\\\"{'selected': selectedRating >= 2}\\\" (click)=\\\"selectRating(2)\\\"> &#9733; </span>\\n    <span class=\\\"star\\\" [ngClass]=\\\"{'selected': selectedRating >= 3}\\\" (click)=\\\"selectRating(3)\\\"> &#9733; </span>\\n    <span class=\\\"star\\\" [ngClass]=\\\"{'selected': selectedRating >= 4}\\\" (click)=\\\"selectRating(4)\\\"> &#9733; </span>\\n    <span class=\\\"star\\\" [ngClass]=\\\"{'selected': selectedRating >= 5}\\\" (click)=\\\"selectRating(5)\\\"> &#9733; </span>\\n  </div>\\n</div>\\n\";","export default \"<div>\\n  <h5 class=\\\"text-center\\\">{{ currentPageIndex }} of {{ lastPageIndex }}</h5>\\n  <ul class=\\\"pagination text-center\\\" role=\\\"navigation\\\" aria-label=\\\"Pagination\\\">\\n    <li class=\\\"arrow unavailable\\\" *ngIf=\\\"currentPageIndex != 1\\\" aria-disabled=\\\"true\\\"><a\\n      (click)=\\\"getFirstPage()\\\">&Lang; First</a></li>\\n    <li class=\\\"arrow unavailable\\\" *ngIf=\\\"currentPageIndex != 1\\\" aria-disabled=\\\"true\\\"><a\\n      (click)=\\\"getPreviousPage()\\\">&lang; Previous</a></li>\\n    <ng-container *ngFor=\\\"let index of pagination\\\">\\n      <li *ngIf=\\\"index[1] == 'true'\\\" class=\\\"current\\\"><span class=\\\"show-for-sr\\\">You're on page</span>{{ index[0] }}</li>\\n      <li *ngIf=\\\"index[1] == 'false'\\\"><a (click)=\\\"getPage(index[0])\\\">{{ index[0] }}</a></li>\\n    </ng-container>\\n    <li class=\\\"arrow\\\" *ngIf=\\\"currentPageIndex != lastPageIndex\\\"><a (click)=\\\"getNextPage()\\\">Next &rang;</a></li>\\n    <li class=\\\"arrow\\\" *ngIf=\\\"currentPageIndex != lastPageIndex\\\"><a (click)=\\\"getLastPage()\\\">Last &Rang;</a></li>\\n  </ul>\\n</div>\\n\";","export default \"<div class=\\\"margin-top-large margin-bottom-large row expanded\\\">\\n  <ng-container *ngIf=\\\"complexSearch;else loadingSpinner\\\">\\n    <div class=\\\"columns medium-12\\\" *ngIf=\\\"complexSearch.totalNumberOfResults !== 0\\\">\\n      <h2 class=\\\"padding-left-large\\\">Total number of results: {{ complexSearch.totalNumberOfResults }} </h2>\\n      <div class=\\\"row expanded\\\">\\n        <div class=\\\"columns medium-12\\\">\\n          <cp-complex-navigator-rating *ngIf=\\\"isDisplayComplexNavigatorView()\\\">\\n          </cp-complex-navigator-rating>\\n\\n        </div>\\n\\n        <div class=\\\"columns medium-12 large-2 no-padding\\\">\\n          <cp-complex-filter *ngIf=\\\"spicesFilter && bioRoleFilter && interactorTypeFilter && predictedFilter && evidenceTypeFilter\\\"\\n                             [spicesFilter]=\\\"spicesFilter\\\"\\n                             [bioRoleFilter]=\\\"bioRoleFilter\\\"\\n                             [interactorTypeFilter]=\\\"interactorTypeFilter\\\"\\n                             [predictedFilter]=\\\"predictedFilter\\\"\\n                             [evidenceTypeFilter]=\\\"evidenceTypeFilter\\\"\\n                             [facets]=\\\"complexSearch.facets\\\"\\n                             (onResetAllFilters)=\\\"onResetAllFilters()\\\"\\n                             (onSpicesFilterChanged)=\\\"onSpicesFilterChanged($event)\\\"\\n                             (onBiologicalRoleFilterChanged)=\\\"onBiologicalRoleFilterChanged($event)\\\"\\n                             (onInteractorTypeFilterChanged)=\\\"onInteractorTypeFilterChanged($event)\\\"\\n                             (onPredictedFilterChanged)=\\\"onPredictedFilterChanged($event)\\\"\\n                             (onEvidenceTypeFilterChanged)=\\\"onEvidenceTypeFilterChanged($event)\\\">\\n          </cp-complex-filter>\\n        </div>\\n        <div class=\\\"columns medium-12 large-10\\\">\\n          <div class=\\\"paginatorAndDisplay\\\">\\n            <cp-complex-list-display-buttons\\n              [displayType]=\\\"DisplayType\\\"\\n              (displayTypeChange)=\\\"onDisplayTypeChange($event)\\\">\\n            </cp-complex-list-display-buttons>\\n            <cp-complex-paginator class=\\\"paginator\\\"\\n                                  [currentPageIndex]=\\\"currentPageIndex\\\"\\n                                  [lastPageIndex]=\\\"lastPageIndex\\\"\\n                                  (onPageChange)=\\\"onPageChange($event)\\\">\\n            </cp-complex-paginator>\\n          </div>\\n          <div class=\\\"listOfResults\\\">\\n            <cp-complex-list *ngIf=\\\"!isDisplayComplexNavigatorView()\\\"\\n                             [complexSearch]=\\\"complexSearch\\\">\\n            </cp-complex-list>\\n          </div>\\n          <div class=\\\"ComplexNavigator\\\" *ngIf=\\\"isDisplayComplexNavigatorView()\\\"\\n               [ngClass]=\\\"complexSearch.totalNumberOfResults <=6 ? 'smallCN' : 'largeCN'\\\">\\n            <cp-complex-navigator class=\\\"Complex-navigator\\\"\\n                                  [complexSearch]=\\\"complexSearch\\\"\\n                                  [interactors]=\\\"allInteractorsInComplexSearch\\\"\\n                                  [canAddComplexesToBasket]=\\\"true\\\"\\n                                  [canRemoveComplexesFromBasket]=\\\"false\\\">\\n            </cp-complex-navigator>\\n          </div>\\n          <cp-complex-paginator class=\\\"paginator\\\"\\n                                [currentPageIndex]=\\\"currentPageIndex\\\"\\n                                [lastPageIndex]=\\\"lastPageIndex\\\"\\n                                (onPageChange)=\\\"onPageChange($event)\\\"></cp-complex-paginator>\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n    <div class=\\\"columns medium-12 callout alert\\\" *ngIf=\\\"complexSearch.totalNumberOfResults === 0\\\">\\n      <h2>No Complex Portal results found</h2>\\n      <h3>We're sorry but we couldn't find anything that matched your search for: <b>{{ query }}</b></h3>\\n      <h4>Please consider refining your terms:</h4>\\n      <ul>\\n        <li>Make sure all words are spelled correctly</li>\\n        <li>Try different keywords</li>\\n        <li>Be more precise: use gene or protein IDs, e.g. Ndc80 or Q04571</li>\\n        <li>Remove quotes around phrases to search for each word individually. bike shed will often show more results\\n          than\\n          \\\"bike shed\\\"\\n        </li>\\n      </ul>\\n    </div>\\n  </ng-container>\\n  <ng-template #loadingSpinner>\\n    <cp-progress-spinner [query]=\\\"query\\\"></cp-progress-spinner>\\n  </ng-template>\\n</div>\\n\";"]}